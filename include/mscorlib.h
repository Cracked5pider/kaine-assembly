

/* this ALWAYS GENERATED file contains the definitions for the interfaces */


 /* File created by MIDL compiler version 8.01.0622 */
/* at Tue Jan 19 03:14:07 2038
 */
/* Compiler settings for mscorlib_fixed.IDL:
    Oicf, W1, Zp8, env=Win32 (32b run), target_arch=X86 8.01.0622 
    protocol : dce , ms_ext, c_ext, robust
    error checks: allocation ref bounds_check enum stub_data 
    VC __declspec() decoration level: 
         __declspec(uuid()), __declspec(selectany), __declspec(novtable)
         DECLSPEC_UUID(), MIDL_INTERFACE()
*/
/* @@MIDL_FILE_HEADING(  ) */

#pragma warning( disable: 4049 )  /* more than 64k source lines */


/* verify that the <rpcndr.h> version is high enough to compile this file*/
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif

#include "rpc.h"
#include "rpcndr.h"

#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif /* __RPCNDR_H_VERSION__ */


#ifndef __mscorlib_h__
#define __mscorlib_h__

#if defined(_MSC_VER) && (_MSC_VER >= 1020)
#pragma once
#endif

/* Forward Declarations */ 

#ifndef __ICloneable_FWD_DEFINED__
#define __ICloneable_FWD_DEFINED__
typedef interface ICloneable ICloneable;

#endif 	/* __ICloneable_FWD_DEFINED__ */


#ifndef __IEnumerable_FWD_DEFINED__
#define __IEnumerable_FWD_DEFINED__
typedef interface IEnumerable IEnumerable;

#endif 	/* __IEnumerable_FWD_DEFINED__ */


#ifndef __ICollection_FWD_DEFINED__
#define __ICollection_FWD_DEFINED__
typedef interface ICollection ICollection;

#endif 	/* __ICollection_FWD_DEFINED__ */


#ifndef __IList_FWD_DEFINED__
#define __IList_FWD_DEFINED__
typedef interface IList IList;

#endif 	/* __IList_FWD_DEFINED__ */


#ifndef __IEnumerator_FWD_DEFINED__
#define __IEnumerator_FWD_DEFINED__
typedef interface IEnumerator IEnumerator;

#endif 	/* __IEnumerator_FWD_DEFINED__ */


#ifndef __IDisposable_FWD_DEFINED__
#define __IDisposable_FWD_DEFINED__
typedef interface IDisposable IDisposable;

#endif 	/* __IDisposable_FWD_DEFINED__ */


#ifndef __IComparable_FWD_DEFINED__
#define __IComparable_FWD_DEFINED__
typedef interface IComparable IComparable;

#endif 	/* __IComparable_FWD_DEFINED__ */


#ifndef __IFormattable_FWD_DEFINED__
#define __IFormattable_FWD_DEFINED__
typedef interface IFormattable IFormattable;

#endif 	/* __IFormattable_FWD_DEFINED__ */


#ifndef __IConvertible_FWD_DEFINED__
#define __IConvertible_FWD_DEFINED__
typedef interface IConvertible IConvertible;

#endif 	/* __IConvertible_FWD_DEFINED__ */


#ifndef __IComparer_FWD_DEFINED__
#define __IComparer_FWD_DEFINED__
typedef interface IComparer IComparer;

#endif 	/* __IComparer_FWD_DEFINED__ */


#ifndef __IEqualityComparer_FWD_DEFINED__
#define __IEqualityComparer_FWD_DEFINED__
typedef interface IEqualityComparer IEqualityComparer;

#endif 	/* __IEqualityComparer_FWD_DEFINED__ */


#ifndef __ISerializable_FWD_DEFINED__
#define __ISerializable_FWD_DEFINED__
typedef interface ISerializable ISerializable;

#endif 	/* __ISerializable_FWD_DEFINED__ */


#ifndef ___Exception_FWD_DEFINED__
#define ___Exception_FWD_DEFINED__
typedef interface _Exception _Exception;

#endif 	/* ___Exception_FWD_DEFINED__ */


#ifndef ___Activator_FWD_DEFINED__
#define ___Activator_FWD_DEFINED__
typedef interface _Activator _Activator;

#endif 	/* ___Activator_FWD_DEFINED__ */


#ifndef ___AppDomain_FWD_DEFINED__
#define ___AppDomain_FWD_DEFINED__
typedef interface _AppDomain _AppDomain;

#endif 	/* ___AppDomain_FWD_DEFINED__ */


#ifndef __IEvidenceFactory_FWD_DEFINED__
#define __IEvidenceFactory_FWD_DEFINED__
typedef interface IEvidenceFactory IEvidenceFactory;

#endif 	/* __IEvidenceFactory_FWD_DEFINED__ */


#ifndef __IAppDomainSetup_FWD_DEFINED__
#define __IAppDomainSetup_FWD_DEFINED__
typedef interface IAppDomainSetup IAppDomainSetup;

#endif 	/* __IAppDomainSetup_FWD_DEFINED__ */


#ifndef ___Attribute_FWD_DEFINED__
#define ___Attribute_FWD_DEFINED__
typedef interface _Attribute _Attribute;

#endif 	/* ___Attribute_FWD_DEFINED__ */


#ifndef ___Thread_FWD_DEFINED__
#define ___Thread_FWD_DEFINED__
typedef interface _Thread _Thread;

#endif 	/* ___Thread_FWD_DEFINED__ */


#ifndef __IObjectReference_FWD_DEFINED__
#define __IObjectReference_FWD_DEFINED__
typedef interface IObjectReference IObjectReference;

#endif 	/* __IObjectReference_FWD_DEFINED__ */


#ifndef __IAsyncResult_FWD_DEFINED__
#define __IAsyncResult_FWD_DEFINED__
typedef interface IAsyncResult IAsyncResult;

#endif 	/* __IAsyncResult_FWD_DEFINED__ */


#ifndef __ICustomFormatter_FWD_DEFINED__
#define __ICustomFormatter_FWD_DEFINED__
typedef interface ICustomFormatter ICustomFormatter;

#endif 	/* __ICustomFormatter_FWD_DEFINED__ */


#ifndef __IFormatProvider_FWD_DEFINED__
#define __IFormatProvider_FWD_DEFINED__
typedef interface IFormatProvider IFormatProvider;

#endif 	/* __IFormatProvider_FWD_DEFINED__ */


#ifndef __ICustomAttributeProvider_FWD_DEFINED__
#define __ICustomAttributeProvider_FWD_DEFINED__
typedef interface ICustomAttributeProvider ICustomAttributeProvider;

#endif 	/* __ICustomAttributeProvider_FWD_DEFINED__ */


#ifndef ___MemberInfo_FWD_DEFINED__
#define ___MemberInfo_FWD_DEFINED__
typedef interface _MemberInfo _MemberInfo;

#endif 	/* ___MemberInfo_FWD_DEFINED__ */


#ifndef ___Type_FWD_DEFINED__
#define ___Type_FWD_DEFINED__
typedef interface _Type _Type;

#endif 	/* ___Type_FWD_DEFINED__ */


#ifndef __IReflect_FWD_DEFINED__
#define __IReflect_FWD_DEFINED__
typedef interface IReflect IReflect;

#endif 	/* __IReflect_FWD_DEFINED__ */


#ifndef __IObjectHandle_FWD_DEFINED__
#define __IObjectHandle_FWD_DEFINED__
typedef interface IObjectHandle IObjectHandle;

#endif 	/* __IObjectHandle_FWD_DEFINED__ */


#ifndef __IHashCodeProvider_FWD_DEFINED__
#define __IHashCodeProvider_FWD_DEFINED__
typedef interface IHashCodeProvider IHashCodeProvider;

#endif 	/* __IHashCodeProvider_FWD_DEFINED__ */


#ifndef __IDictionary_FWD_DEFINED__
#define __IDictionary_FWD_DEFINED__
typedef interface IDictionary IDictionary;

#endif 	/* __IDictionary_FWD_DEFINED__ */


#ifndef __IDictionaryEnumerator_FWD_DEFINED__
#define __IDictionaryEnumerator_FWD_DEFINED__
typedef interface IDictionaryEnumerator IDictionaryEnumerator;

#endif 	/* __IDictionaryEnumerator_FWD_DEFINED__ */


#ifndef __IDeserializationCallback_FWD_DEFINED__
#define __IDeserializationCallback_FWD_DEFINED__
typedef interface IDeserializationCallback IDeserializationCallback;

#endif 	/* __IDeserializationCallback_FWD_DEFINED__ */


#ifndef __ISymbolBinder_FWD_DEFINED__
#define __ISymbolBinder_FWD_DEFINED__
typedef interface ISymbolBinder ISymbolBinder;

#endif 	/* __ISymbolBinder_FWD_DEFINED__ */


#ifndef __ISymbolBinder1_FWD_DEFINED__
#define __ISymbolBinder1_FWD_DEFINED__
typedef interface ISymbolBinder1 ISymbolBinder1;

#endif 	/* __ISymbolBinder1_FWD_DEFINED__ */


#ifndef __ISymbolDocument_FWD_DEFINED__
#define __ISymbolDocument_FWD_DEFINED__
typedef interface ISymbolDocument ISymbolDocument;

#endif 	/* __ISymbolDocument_FWD_DEFINED__ */


#ifndef __ISymbolDocumentWriter_FWD_DEFINED__
#define __ISymbolDocumentWriter_FWD_DEFINED__
typedef interface ISymbolDocumentWriter ISymbolDocumentWriter;

#endif 	/* __ISymbolDocumentWriter_FWD_DEFINED__ */


#ifndef __ISymbolMethod_FWD_DEFINED__
#define __ISymbolMethod_FWD_DEFINED__
typedef interface ISymbolMethod ISymbolMethod;

#endif 	/* __ISymbolMethod_FWD_DEFINED__ */


#ifndef __ISymbolNamespace_FWD_DEFINED__
#define __ISymbolNamespace_FWD_DEFINED__
typedef interface ISymbolNamespace ISymbolNamespace;

#endif 	/* __ISymbolNamespace_FWD_DEFINED__ */


#ifndef __ISymbolReader_FWD_DEFINED__
#define __ISymbolReader_FWD_DEFINED__
typedef interface ISymbolReader ISymbolReader;

#endif 	/* __ISymbolReader_FWD_DEFINED__ */


#ifndef __ISymbolScope_FWD_DEFINED__
#define __ISymbolScope_FWD_DEFINED__
typedef interface ISymbolScope ISymbolScope;

#endif 	/* __ISymbolScope_FWD_DEFINED__ */


#ifndef __ISymbolVariable_FWD_DEFINED__
#define __ISymbolVariable_FWD_DEFINED__
typedef interface ISymbolVariable ISymbolVariable;

#endif 	/* __ISymbolVariable_FWD_DEFINED__ */


#ifndef __ISymbolWriter_FWD_DEFINED__
#define __ISymbolWriter_FWD_DEFINED__
typedef interface ISymbolWriter ISymbolWriter;

#endif 	/* __ISymbolWriter_FWD_DEFINED__ */


#ifndef ___Assembly_FWD_DEFINED__
#define ___Assembly_FWD_DEFINED__
typedef interface _Assembly _Assembly;

#endif 	/* ___Assembly_FWD_DEFINED__ */


#ifndef ___AssemblyName_FWD_DEFINED__
#define ___AssemblyName_FWD_DEFINED__
typedef interface _AssemblyName _AssemblyName;

#endif 	/* ___AssemblyName_FWD_DEFINED__ */


#ifndef ___MethodBase_FWD_DEFINED__
#define ___MethodBase_FWD_DEFINED__
typedef interface _MethodBase _MethodBase;

#endif 	/* ___MethodBase_FWD_DEFINED__ */


#ifndef ___MethodInfo_FWD_DEFINED__
#define ___MethodInfo_FWD_DEFINED__
typedef interface _MethodInfo _MethodInfo;

#endif 	/* ___MethodInfo_FWD_DEFINED__ */


#ifndef ___ConstructorInfo_FWD_DEFINED__
#define ___ConstructorInfo_FWD_DEFINED__
typedef interface _ConstructorInfo _ConstructorInfo;

#endif 	/* ___ConstructorInfo_FWD_DEFINED__ */


#ifndef ___FieldInfo_FWD_DEFINED__
#define ___FieldInfo_FWD_DEFINED__
typedef interface _FieldInfo _FieldInfo;

#endif 	/* ___FieldInfo_FWD_DEFINED__ */


#ifndef ___PropertyInfo_FWD_DEFINED__
#define ___PropertyInfo_FWD_DEFINED__
typedef interface _PropertyInfo _PropertyInfo;

#endif 	/* ___PropertyInfo_FWD_DEFINED__ */


#ifndef ___EventInfo_FWD_DEFINED__
#define ___EventInfo_FWD_DEFINED__
typedef interface _EventInfo _EventInfo;

#endif 	/* ___EventInfo_FWD_DEFINED__ */


#ifndef ___ParameterInfo_FWD_DEFINED__
#define ___ParameterInfo_FWD_DEFINED__
typedef interface _ParameterInfo _ParameterInfo;

#endif 	/* ___ParameterInfo_FWD_DEFINED__ */


#ifndef ___Module_FWD_DEFINED__
#define ___Module_FWD_DEFINED__
typedef interface _Module _Module;

#endif 	/* ___Module_FWD_DEFINED__ */


#ifndef __IFormatter_FWD_DEFINED__
#define __IFormatter_FWD_DEFINED__
typedef interface IFormatter IFormatter;

#endif 	/* __IFormatter_FWD_DEFINED__ */


#ifndef __IFormatterConverter_FWD_DEFINED__
#define __IFormatterConverter_FWD_DEFINED__
typedef interface IFormatterConverter IFormatterConverter;

#endif 	/* __IFormatterConverter_FWD_DEFINED__ */


#ifndef __ISerializationSurrogate_FWD_DEFINED__
#define __ISerializationSurrogate_FWD_DEFINED__
typedef interface ISerializationSurrogate ISerializationSurrogate;

#endif 	/* __ISerializationSurrogate_FWD_DEFINED__ */


#ifndef __ISurrogateSelector_FWD_DEFINED__
#define __ISurrogateSelector_FWD_DEFINED__
typedef interface ISurrogateSelector ISurrogateSelector;

#endif 	/* __ISurrogateSelector_FWD_DEFINED__ */


#ifndef __IResourceReader_FWD_DEFINED__
#define __IResourceReader_FWD_DEFINED__
typedef interface IResourceReader IResourceReader;

#endif 	/* __IResourceReader_FWD_DEFINED__ */


#ifndef __IResourceWriter_FWD_DEFINED__
#define __IResourceWriter_FWD_DEFINED__
typedef interface IResourceWriter IResourceWriter;

#endif 	/* __IResourceWriter_FWD_DEFINED__ */


#ifndef __ISecurityEncodable_FWD_DEFINED__
#define __ISecurityEncodable_FWD_DEFINED__
typedef interface ISecurityEncodable ISecurityEncodable;

#endif 	/* __ISecurityEncodable_FWD_DEFINED__ */


#ifndef __ISecurityPolicyEncodable_FWD_DEFINED__
#define __ISecurityPolicyEncodable_FWD_DEFINED__
typedef interface ISecurityPolicyEncodable ISecurityPolicyEncodable;

#endif 	/* __ISecurityPolicyEncodable_FWD_DEFINED__ */


#ifndef __IMembershipCondition_FWD_DEFINED__
#define __IMembershipCondition_FWD_DEFINED__
typedef interface IMembershipCondition IMembershipCondition;

#endif 	/* __IMembershipCondition_FWD_DEFINED__ */


#ifndef __IIdentityPermissionFactory_FWD_DEFINED__
#define __IIdentityPermissionFactory_FWD_DEFINED__
typedef interface IIdentityPermissionFactory IIdentityPermissionFactory;

#endif 	/* __IIdentityPermissionFactory_FWD_DEFINED__ */


#ifndef __IApplicationTrustManager_FWD_DEFINED__
#define __IApplicationTrustManager_FWD_DEFINED__
typedef interface IApplicationTrustManager IApplicationTrustManager;

#endif 	/* __IApplicationTrustManager_FWD_DEFINED__ */


#ifndef __IIdentity_FWD_DEFINED__
#define __IIdentity_FWD_DEFINED__
typedef interface IIdentity IIdentity;

#endif 	/* __IIdentity_FWD_DEFINED__ */


#ifndef __IPrincipal_FWD_DEFINED__
#define __IPrincipal_FWD_DEFINED__
typedef interface IPrincipal IPrincipal;

#endif 	/* __IPrincipal_FWD_DEFINED__ */


#ifndef __ICustomMarshaler_FWD_DEFINED__
#define __ICustomMarshaler_FWD_DEFINED__
typedef interface ICustomMarshaler ICustomMarshaler;

#endif 	/* __ICustomMarshaler_FWD_DEFINED__ */


#ifndef __ITypeLibImporterNotifySink_FWD_DEFINED__
#define __ITypeLibImporterNotifySink_FWD_DEFINED__
typedef interface ITypeLibImporterNotifySink ITypeLibImporterNotifySink;

#endif 	/* __ITypeLibImporterNotifySink_FWD_DEFINED__ */


#ifndef __ICustomAdapter_FWD_DEFINED__
#define __ICustomAdapter_FWD_DEFINED__
typedef interface ICustomAdapter ICustomAdapter;

#endif 	/* __ICustomAdapter_FWD_DEFINED__ */


#ifndef __ICustomFactory_FWD_DEFINED__
#define __ICustomFactory_FWD_DEFINED__
typedef interface ICustomFactory ICustomFactory;

#endif 	/* __ICustomFactory_FWD_DEFINED__ */


#ifndef __IRegistrationServices_FWD_DEFINED__
#define __IRegistrationServices_FWD_DEFINED__
typedef interface IRegistrationServices IRegistrationServices;

#endif 	/* __IRegistrationServices_FWD_DEFINED__ */


#ifndef __ITypeLibExporterNotifySink_FWD_DEFINED__
#define __ITypeLibExporterNotifySink_FWD_DEFINED__
typedef interface ITypeLibExporterNotifySink ITypeLibExporterNotifySink;

#endif 	/* __ITypeLibExporterNotifySink_FWD_DEFINED__ */


#ifndef __ITypeLibConverter_FWD_DEFINED__
#define __ITypeLibConverter_FWD_DEFINED__
typedef interface ITypeLibConverter ITypeLibConverter;

#endif 	/* __ITypeLibConverter_FWD_DEFINED__ */


#ifndef __ITypeLibExporterNameProvider_FWD_DEFINED__
#define __ITypeLibExporterNameProvider_FWD_DEFINED__
typedef interface ITypeLibExporterNameProvider ITypeLibExporterNameProvider;

#endif 	/* __ITypeLibExporterNameProvider_FWD_DEFINED__ */


#ifndef __IExpando_FWD_DEFINED__
#define __IExpando_FWD_DEFINED__
typedef interface IExpando IExpando;

#endif 	/* __IExpando_FWD_DEFINED__ */


#ifndef __IPermission_FWD_DEFINED__
#define __IPermission_FWD_DEFINED__
typedef interface IPermission IPermission;

#endif 	/* __IPermission_FWD_DEFINED__ */


#ifndef __IStackWalk_FWD_DEFINED__
#define __IStackWalk_FWD_DEFINED__
typedef interface IStackWalk IStackWalk;

#endif 	/* __IStackWalk_FWD_DEFINED__ */


#ifndef __IUnrestrictedPermission_FWD_DEFINED__
#define __IUnrestrictedPermission_FWD_DEFINED__
typedef interface IUnrestrictedPermission IUnrestrictedPermission;

#endif 	/* __IUnrestrictedPermission_FWD_DEFINED__ */


#ifndef __IContextAttribute_FWD_DEFINED__
#define __IContextAttribute_FWD_DEFINED__
typedef interface IContextAttribute IContextAttribute;

#endif 	/* __IContextAttribute_FWD_DEFINED__ */


#ifndef __IContextProperty_FWD_DEFINED__
#define __IContextProperty_FWD_DEFINED__
typedef interface IContextProperty IContextProperty;

#endif 	/* __IContextProperty_FWD_DEFINED__ */


#ifndef __IActivator_FWD_DEFINED__
#define __IActivator_FWD_DEFINED__
typedef interface IActivator IActivator;

#endif 	/* __IActivator_FWD_DEFINED__ */


#ifndef __IMessageSink_FWD_DEFINED__
#define __IMessageSink_FWD_DEFINED__
typedef interface IMessageSink IMessageSink;

#endif 	/* __IMessageSink_FWD_DEFINED__ */


#ifndef __ILogicalThreadAffinative_FWD_DEFINED__
#define __ILogicalThreadAffinative_FWD_DEFINED__
typedef interface ILogicalThreadAffinative ILogicalThreadAffinative;

#endif 	/* __ILogicalThreadAffinative_FWD_DEFINED__ */


#ifndef __IClientResponseChannelSinkStack_FWD_DEFINED__
#define __IClientResponseChannelSinkStack_FWD_DEFINED__
typedef interface IClientResponseChannelSinkStack IClientResponseChannelSinkStack;

#endif 	/* __IClientResponseChannelSinkStack_FWD_DEFINED__ */


#ifndef __IClientChannelSinkStack_FWD_DEFINED__
#define __IClientChannelSinkStack_FWD_DEFINED__
typedef interface IClientChannelSinkStack IClientChannelSinkStack;

#endif 	/* __IClientChannelSinkStack_FWD_DEFINED__ */


#ifndef __IServerResponseChannelSinkStack_FWD_DEFINED__
#define __IServerResponseChannelSinkStack_FWD_DEFINED__
typedef interface IServerResponseChannelSinkStack IServerResponseChannelSinkStack;

#endif 	/* __IServerResponseChannelSinkStack_FWD_DEFINED__ */


#ifndef __IServerChannelSinkStack_FWD_DEFINED__
#define __IServerChannelSinkStack_FWD_DEFINED__
typedef interface IServerChannelSinkStack IServerChannelSinkStack;

#endif 	/* __IServerChannelSinkStack_FWD_DEFINED__ */


#ifndef __ISponsor_FWD_DEFINED__
#define __ISponsor_FWD_DEFINED__
typedef interface ISponsor ISponsor;

#endif 	/* __ISponsor_FWD_DEFINED__ */


#ifndef __IContextPropertyActivator_FWD_DEFINED__
#define __IContextPropertyActivator_FWD_DEFINED__
typedef interface IContextPropertyActivator IContextPropertyActivator;

#endif 	/* __IContextPropertyActivator_FWD_DEFINED__ */


#ifndef __IChannel_FWD_DEFINED__
#define __IChannel_FWD_DEFINED__
typedef interface IChannel IChannel;

#endif 	/* __IChannel_FWD_DEFINED__ */


#ifndef __IChannelSender_FWD_DEFINED__
#define __IChannelSender_FWD_DEFINED__
typedef interface IChannelSender IChannelSender;

#endif 	/* __IChannelSender_FWD_DEFINED__ */


#ifndef __IChannelReceiver_FWD_DEFINED__
#define __IChannelReceiver_FWD_DEFINED__
typedef interface IChannelReceiver IChannelReceiver;

#endif 	/* __IChannelReceiver_FWD_DEFINED__ */


#ifndef __IServerChannelSinkProvider_FWD_DEFINED__
#define __IServerChannelSinkProvider_FWD_DEFINED__
typedef interface IServerChannelSinkProvider IServerChannelSinkProvider;

#endif 	/* __IServerChannelSinkProvider_FWD_DEFINED__ */


#ifndef __IChannelSinkBase_FWD_DEFINED__
#define __IChannelSinkBase_FWD_DEFINED__
typedef interface IChannelSinkBase IChannelSinkBase;

#endif 	/* __IChannelSinkBase_FWD_DEFINED__ */


#ifndef __IServerChannelSink_FWD_DEFINED__
#define __IServerChannelSink_FWD_DEFINED__
typedef interface IServerChannelSink IServerChannelSink;

#endif 	/* __IServerChannelSink_FWD_DEFINED__ */


#ifndef __IMessage_FWD_DEFINED__
#define __IMessage_FWD_DEFINED__
typedef interface IMessage IMessage;

#endif 	/* __IMessage_FWD_DEFINED__ */


#ifndef __IMethodMessage_FWD_DEFINED__
#define __IMethodMessage_FWD_DEFINED__
typedef interface IMethodMessage IMethodMessage;

#endif 	/* __IMethodMessage_FWD_DEFINED__ */


#ifndef __IMethodCallMessage_FWD_DEFINED__
#define __IMethodCallMessage_FWD_DEFINED__
typedef interface IMethodCallMessage IMethodCallMessage;

#endif 	/* __IMethodCallMessage_FWD_DEFINED__ */


#ifndef __IConstructionCallMessage_FWD_DEFINED__
#define __IConstructionCallMessage_FWD_DEFINED__
typedef interface IConstructionCallMessage IConstructionCallMessage;

#endif 	/* __IConstructionCallMessage_FWD_DEFINED__ */


#ifndef __IMethodReturnMessage_FWD_DEFINED__
#define __IMethodReturnMessage_FWD_DEFINED__
typedef interface IMethodReturnMessage IMethodReturnMessage;

#endif 	/* __IMethodReturnMessage_FWD_DEFINED__ */


#ifndef __IConstructionReturnMessage_FWD_DEFINED__
#define __IConstructionReturnMessage_FWD_DEFINED__
typedef interface IConstructionReturnMessage IConstructionReturnMessage;

#endif 	/* __IConstructionReturnMessage_FWD_DEFINED__ */


#ifndef __IChannelReceiverHook_FWD_DEFINED__
#define __IChannelReceiverHook_FWD_DEFINED__
typedef interface IChannelReceiverHook IChannelReceiverHook;

#endif 	/* __IChannelReceiverHook_FWD_DEFINED__ */


#ifndef __IClientChannelSinkProvider_FWD_DEFINED__
#define __IClientChannelSinkProvider_FWD_DEFINED__
typedef interface IClientChannelSinkProvider IClientChannelSinkProvider;

#endif 	/* __IClientChannelSinkProvider_FWD_DEFINED__ */


#ifndef __IClientFormatterSinkProvider_FWD_DEFINED__
#define __IClientFormatterSinkProvider_FWD_DEFINED__
typedef interface IClientFormatterSinkProvider IClientFormatterSinkProvider;

#endif 	/* __IClientFormatterSinkProvider_FWD_DEFINED__ */


#ifndef __IServerFormatterSinkProvider_FWD_DEFINED__
#define __IServerFormatterSinkProvider_FWD_DEFINED__
typedef interface IServerFormatterSinkProvider IServerFormatterSinkProvider;

#endif 	/* __IServerFormatterSinkProvider_FWD_DEFINED__ */


#ifndef __IClientChannelSink_FWD_DEFINED__
#define __IClientChannelSink_FWD_DEFINED__
typedef interface IClientChannelSink IClientChannelSink;

#endif 	/* __IClientChannelSink_FWD_DEFINED__ */


#ifndef __IClientFormatterSink_FWD_DEFINED__
#define __IClientFormatterSink_FWD_DEFINED__
typedef interface IClientFormatterSink IClientFormatterSink;

#endif 	/* __IClientFormatterSink_FWD_DEFINED__ */


#ifndef __IChannelDataStore_FWD_DEFINED__
#define __IChannelDataStore_FWD_DEFINED__
typedef interface IChannelDataStore IChannelDataStore;

#endif 	/* __IChannelDataStore_FWD_DEFINED__ */


#ifndef __ITransportHeaders_FWD_DEFINED__
#define __ITransportHeaders_FWD_DEFINED__
typedef interface ITransportHeaders ITransportHeaders;

#endif 	/* __ITransportHeaders_FWD_DEFINED__ */


#ifndef __IContributeClientContextSink_FWD_DEFINED__
#define __IContributeClientContextSink_FWD_DEFINED__
typedef interface IContributeClientContextSink IContributeClientContextSink;

#endif 	/* __IContributeClientContextSink_FWD_DEFINED__ */


#ifndef __IContributeDynamicSink_FWD_DEFINED__
#define __IContributeDynamicSink_FWD_DEFINED__
typedef interface IContributeDynamicSink IContributeDynamicSink;

#endif 	/* __IContributeDynamicSink_FWD_DEFINED__ */


#ifndef __IContributeEnvoySink_FWD_DEFINED__
#define __IContributeEnvoySink_FWD_DEFINED__
typedef interface IContributeEnvoySink IContributeEnvoySink;

#endif 	/* __IContributeEnvoySink_FWD_DEFINED__ */


#ifndef __IContributeObjectSink_FWD_DEFINED__
#define __IContributeObjectSink_FWD_DEFINED__
typedef interface IContributeObjectSink IContributeObjectSink;

#endif 	/* __IContributeObjectSink_FWD_DEFINED__ */


#ifndef __IContributeServerContextSink_FWD_DEFINED__
#define __IContributeServerContextSink_FWD_DEFINED__
typedef interface IContributeServerContextSink IContributeServerContextSink;

#endif 	/* __IContributeServerContextSink_FWD_DEFINED__ */


#ifndef __IDynamicProperty_FWD_DEFINED__
#define __IDynamicProperty_FWD_DEFINED__
typedef interface IDynamicProperty IDynamicProperty;

#endif 	/* __IDynamicProperty_FWD_DEFINED__ */


#ifndef __IDynamicMessageSink_FWD_DEFINED__
#define __IDynamicMessageSink_FWD_DEFINED__
typedef interface IDynamicMessageSink IDynamicMessageSink;

#endif 	/* __IDynamicMessageSink_FWD_DEFINED__ */


#ifndef __ILease_FWD_DEFINED__
#define __ILease_FWD_DEFINED__
typedef interface ILease ILease;

#endif 	/* __ILease_FWD_DEFINED__ */


#ifndef __IMessageCtrl_FWD_DEFINED__
#define __IMessageCtrl_FWD_DEFINED__
typedef interface IMessageCtrl IMessageCtrl;

#endif 	/* __IMessageCtrl_FWD_DEFINED__ */


#ifndef __IRemotingFormatter_FWD_DEFINED__
#define __IRemotingFormatter_FWD_DEFINED__
typedef interface IRemotingFormatter IRemotingFormatter;

#endif 	/* __IRemotingFormatter_FWD_DEFINED__ */


#ifndef __IFieldInfo_FWD_DEFINED__
#define __IFieldInfo_FWD_DEFINED__
typedef interface IFieldInfo IFieldInfo;

#endif 	/* __IFieldInfo_FWD_DEFINED__ */


#ifndef __IRemotingTypeInfo_FWD_DEFINED__
#define __IRemotingTypeInfo_FWD_DEFINED__
typedef interface IRemotingTypeInfo IRemotingTypeInfo;

#endif 	/* __IRemotingTypeInfo_FWD_DEFINED__ */


#ifndef __IChannelInfo_FWD_DEFINED__
#define __IChannelInfo_FWD_DEFINED__
typedef interface IChannelInfo IChannelInfo;

#endif 	/* __IChannelInfo_FWD_DEFINED__ */


#ifndef __IEnvoyInfo_FWD_DEFINED__
#define __IEnvoyInfo_FWD_DEFINED__
typedef interface IEnvoyInfo IEnvoyInfo;

#endif 	/* __IEnvoyInfo_FWD_DEFINED__ */


#ifndef __ISoapXsd_FWD_DEFINED__
#define __ISoapXsd_FWD_DEFINED__
typedef interface ISoapXsd ISoapXsd;

#endif 	/* __ISoapXsd_FWD_DEFINED__ */


#ifndef __ITrackingHandler_FWD_DEFINED__
#define __ITrackingHandler_FWD_DEFINED__
typedef interface ITrackingHandler ITrackingHandler;

#endif 	/* __ITrackingHandler_FWD_DEFINED__ */


#ifndef __INormalizeForIsolatedStorage_FWD_DEFINED__
#define __INormalizeForIsolatedStorage_FWD_DEFINED__
typedef interface INormalizeForIsolatedStorage INormalizeForIsolatedStorage;

#endif 	/* __INormalizeForIsolatedStorage_FWD_DEFINED__ */


#ifndef __ISoapMessage_FWD_DEFINED__
#define __ISoapMessage_FWD_DEFINED__
typedef interface ISoapMessage ISoapMessage;

#endif 	/* __ISoapMessage_FWD_DEFINED__ */


#ifndef ___AssemblyBuilder_FWD_DEFINED__
#define ___AssemblyBuilder_FWD_DEFINED__
typedef interface _AssemblyBuilder _AssemblyBuilder;

#endif 	/* ___AssemblyBuilder_FWD_DEFINED__ */


#ifndef ___ConstructorBuilder_FWD_DEFINED__
#define ___ConstructorBuilder_FWD_DEFINED__
typedef interface _ConstructorBuilder _ConstructorBuilder;

#endif 	/* ___ConstructorBuilder_FWD_DEFINED__ */


#ifndef ___CustomAttributeBuilder_FWD_DEFINED__
#define ___CustomAttributeBuilder_FWD_DEFINED__
typedef interface _CustomAttributeBuilder _CustomAttributeBuilder;

#endif 	/* ___CustomAttributeBuilder_FWD_DEFINED__ */


#ifndef ___EnumBuilder_FWD_DEFINED__
#define ___EnumBuilder_FWD_DEFINED__
typedef interface _EnumBuilder _EnumBuilder;

#endif 	/* ___EnumBuilder_FWD_DEFINED__ */


#ifndef ___EventBuilder_FWD_DEFINED__
#define ___EventBuilder_FWD_DEFINED__
typedef interface _EventBuilder _EventBuilder;

#endif 	/* ___EventBuilder_FWD_DEFINED__ */


#ifndef ___FieldBuilder_FWD_DEFINED__
#define ___FieldBuilder_FWD_DEFINED__
typedef interface _FieldBuilder _FieldBuilder;

#endif 	/* ___FieldBuilder_FWD_DEFINED__ */


#ifndef ___ILGenerator_FWD_DEFINED__
#define ___ILGenerator_FWD_DEFINED__
typedef interface _ILGenerator _ILGenerator;

#endif 	/* ___ILGenerator_FWD_DEFINED__ */


#ifndef ___LocalBuilder_FWD_DEFINED__
#define ___LocalBuilder_FWD_DEFINED__
typedef interface _LocalBuilder _LocalBuilder;

#endif 	/* ___LocalBuilder_FWD_DEFINED__ */


#ifndef ___MethodBuilder_FWD_DEFINED__
#define ___MethodBuilder_FWD_DEFINED__
typedef interface _MethodBuilder _MethodBuilder;

#endif 	/* ___MethodBuilder_FWD_DEFINED__ */


#ifndef ___MethodRental_FWD_DEFINED__
#define ___MethodRental_FWD_DEFINED__
typedef interface _MethodRental _MethodRental;

#endif 	/* ___MethodRental_FWD_DEFINED__ */


#ifndef ___ModuleBuilder_FWD_DEFINED__
#define ___ModuleBuilder_FWD_DEFINED__
typedef interface _ModuleBuilder _ModuleBuilder;

#endif 	/* ___ModuleBuilder_FWD_DEFINED__ */


#ifndef ___ParameterBuilder_FWD_DEFINED__
#define ___ParameterBuilder_FWD_DEFINED__
typedef interface _ParameterBuilder _ParameterBuilder;

#endif 	/* ___ParameterBuilder_FWD_DEFINED__ */


#ifndef ___PropertyBuilder_FWD_DEFINED__
#define ___PropertyBuilder_FWD_DEFINED__
typedef interface _PropertyBuilder _PropertyBuilder;

#endif 	/* ___PropertyBuilder_FWD_DEFINED__ */


#ifndef ___SignatureHelper_FWD_DEFINED__
#define ___SignatureHelper_FWD_DEFINED__
typedef interface _SignatureHelper _SignatureHelper;

#endif 	/* ___SignatureHelper_FWD_DEFINED__ */


#ifndef ___TypeBuilder_FWD_DEFINED__
#define ___TypeBuilder_FWD_DEFINED__
typedef interface _TypeBuilder _TypeBuilder;

#endif 	/* ___TypeBuilder_FWD_DEFINED__ */


#ifndef __ICryptoTransform_FWD_DEFINED__
#define __ICryptoTransform_FWD_DEFINED__
typedef interface ICryptoTransform ICryptoTransform;

#endif 	/* __ICryptoTransform_FWD_DEFINED__ */


#ifndef __ICspAsymmetricAlgorithm_FWD_DEFINED__
#define __ICspAsymmetricAlgorithm_FWD_DEFINED__
typedef interface ICspAsymmetricAlgorithm ICspAsymmetricAlgorithm;

#endif 	/* __ICspAsymmetricAlgorithm_FWD_DEFINED__ */


#ifndef ___Object_FWD_DEFINED__
#define ___Object_FWD_DEFINED__
typedef interface _Object _Object;

#endif 	/* ___Object_FWD_DEFINED__ */


#ifndef ___Array_FWD_DEFINED__
#define ___Array_FWD_DEFINED__
typedef interface _Array _Array;

#endif 	/* ___Array_FWD_DEFINED__ */


#ifndef ___ValueType_FWD_DEFINED__
#define ___ValueType_FWD_DEFINED__
typedef interface _ValueType _ValueType;

#endif 	/* ___ValueType_FWD_DEFINED__ */


#ifndef ___Enum_FWD_DEFINED__
#define ___Enum_FWD_DEFINED__
typedef interface _Enum _Enum;

#endif 	/* ___Enum_FWD_DEFINED__ */


#ifndef ___String_FWD_DEFINED__
#define ___String_FWD_DEFINED__
typedef interface _String _String;

#endif 	/* ___String_FWD_DEFINED__ */


#ifndef ___StringComparer_FWD_DEFINED__
#define ___StringComparer_FWD_DEFINED__
typedef interface _StringComparer _StringComparer;

#endif 	/* ___StringComparer_FWD_DEFINED__ */


#ifndef ___StringBuilder_FWD_DEFINED__
#define ___StringBuilder_FWD_DEFINED__
typedef interface _StringBuilder _StringBuilder;

#endif 	/* ___StringBuilder_FWD_DEFINED__ */


#ifndef ___SystemException_FWD_DEFINED__
#define ___SystemException_FWD_DEFINED__
typedef interface _SystemException _SystemException;

#endif 	/* ___SystemException_FWD_DEFINED__ */


#ifndef ___OutOfMemoryException_FWD_DEFINED__
#define ___OutOfMemoryException_FWD_DEFINED__
typedef interface _OutOfMemoryException _OutOfMemoryException;

#endif 	/* ___OutOfMemoryException_FWD_DEFINED__ */


#ifndef ___StackOverflowException_FWD_DEFINED__
#define ___StackOverflowException_FWD_DEFINED__
typedef interface _StackOverflowException _StackOverflowException;

#endif 	/* ___StackOverflowException_FWD_DEFINED__ */


#ifndef ___DataMisalignedException_FWD_DEFINED__
#define ___DataMisalignedException_FWD_DEFINED__
typedef interface _DataMisalignedException _DataMisalignedException;

#endif 	/* ___DataMisalignedException_FWD_DEFINED__ */


#ifndef ___ExecutionEngineException_FWD_DEFINED__
#define ___ExecutionEngineException_FWD_DEFINED__
typedef interface _ExecutionEngineException _ExecutionEngineException;

#endif 	/* ___ExecutionEngineException_FWD_DEFINED__ */


#ifndef ___Delegate_FWD_DEFINED__
#define ___Delegate_FWD_DEFINED__
typedef interface _Delegate _Delegate;

#endif 	/* ___Delegate_FWD_DEFINED__ */


#ifndef ___MulticastDelegate_FWD_DEFINED__
#define ___MulticastDelegate_FWD_DEFINED__
typedef interface _MulticastDelegate _MulticastDelegate;

#endif 	/* ___MulticastDelegate_FWD_DEFINED__ */


#ifndef ___MemberAccessException_FWD_DEFINED__
#define ___MemberAccessException_FWD_DEFINED__
typedef interface _MemberAccessException _MemberAccessException;

#endif 	/* ___MemberAccessException_FWD_DEFINED__ */


#ifndef ___AccessViolationException_FWD_DEFINED__
#define ___AccessViolationException_FWD_DEFINED__
typedef interface _AccessViolationException _AccessViolationException;

#endif 	/* ___AccessViolationException_FWD_DEFINED__ */


#ifndef ___ApplicationActivator_FWD_DEFINED__
#define ___ApplicationActivator_FWD_DEFINED__
typedef interface _ApplicationActivator _ApplicationActivator;

#endif 	/* ___ApplicationActivator_FWD_DEFINED__ */


#ifndef ___ApplicationException_FWD_DEFINED__
#define ___ApplicationException_FWD_DEFINED__
typedef interface _ApplicationException _ApplicationException;

#endif 	/* ___ApplicationException_FWD_DEFINED__ */


#ifndef ___EventArgs_FWD_DEFINED__
#define ___EventArgs_FWD_DEFINED__
typedef interface _EventArgs _EventArgs;

#endif 	/* ___EventArgs_FWD_DEFINED__ */


#ifndef ___ResolveEventArgs_FWD_DEFINED__
#define ___ResolveEventArgs_FWD_DEFINED__
typedef interface _ResolveEventArgs _ResolveEventArgs;

#endif 	/* ___ResolveEventArgs_FWD_DEFINED__ */


#ifndef ___AssemblyLoadEventArgs_FWD_DEFINED__
#define ___AssemblyLoadEventArgs_FWD_DEFINED__
typedef interface _AssemblyLoadEventArgs _AssemblyLoadEventArgs;

#endif 	/* ___AssemblyLoadEventArgs_FWD_DEFINED__ */


#ifndef ___ResolveEventHandler_FWD_DEFINED__
#define ___ResolveEventHandler_FWD_DEFINED__
typedef interface _ResolveEventHandler _ResolveEventHandler;

#endif 	/* ___ResolveEventHandler_FWD_DEFINED__ */


#ifndef ___AssemblyLoadEventHandler_FWD_DEFINED__
#define ___AssemblyLoadEventHandler_FWD_DEFINED__
typedef interface _AssemblyLoadEventHandler _AssemblyLoadEventHandler;

#endif 	/* ___AssemblyLoadEventHandler_FWD_DEFINED__ */


#ifndef ___AppDomainInitializer_FWD_DEFINED__
#define ___AppDomainInitializer_FWD_DEFINED__
typedef interface _AppDomainInitializer _AppDomainInitializer;

#endif 	/* ___AppDomainInitializer_FWD_DEFINED__ */


#ifndef ___MarshalByRefObject_FWD_DEFINED__
#define ___MarshalByRefObject_FWD_DEFINED__
typedef interface _MarshalByRefObject _MarshalByRefObject;

#endif 	/* ___MarshalByRefObject_FWD_DEFINED__ */


#ifndef ___CrossAppDomainDelegate_FWD_DEFINED__
#define ___CrossAppDomainDelegate_FWD_DEFINED__
typedef interface _CrossAppDomainDelegate _CrossAppDomainDelegate;

#endif 	/* ___CrossAppDomainDelegate_FWD_DEFINED__ */


#ifndef ___AppDomainManager_FWD_DEFINED__
#define ___AppDomainManager_FWD_DEFINED__
typedef interface _AppDomainManager _AppDomainManager;

#endif 	/* ___AppDomainManager_FWD_DEFINED__ */


#ifndef ___LoaderOptimizationAttribute_FWD_DEFINED__
#define ___LoaderOptimizationAttribute_FWD_DEFINED__
typedef interface _LoaderOptimizationAttribute _LoaderOptimizationAttribute;

#endif 	/* ___LoaderOptimizationAttribute_FWD_DEFINED__ */


#ifndef ___AppDomainUnloadedException_FWD_DEFINED__
#define ___AppDomainUnloadedException_FWD_DEFINED__
typedef interface _AppDomainUnloadedException _AppDomainUnloadedException;

#endif 	/* ___AppDomainUnloadedException_FWD_DEFINED__ */


#ifndef ___ActivationArguments_FWD_DEFINED__
#define ___ActivationArguments_FWD_DEFINED__
typedef interface _ActivationArguments _ActivationArguments;

#endif 	/* ___ActivationArguments_FWD_DEFINED__ */


#ifndef ___ApplicationId_FWD_DEFINED__
#define ___ApplicationId_FWD_DEFINED__
typedef interface _ApplicationId _ApplicationId;

#endif 	/* ___ApplicationId_FWD_DEFINED__ */


#ifndef ___ArgumentException_FWD_DEFINED__
#define ___ArgumentException_FWD_DEFINED__
typedef interface _ArgumentException _ArgumentException;

#endif 	/* ___ArgumentException_FWD_DEFINED__ */


#ifndef ___ArgumentNullException_FWD_DEFINED__
#define ___ArgumentNullException_FWD_DEFINED__
typedef interface _ArgumentNullException _ArgumentNullException;

#endif 	/* ___ArgumentNullException_FWD_DEFINED__ */


#ifndef ___ArgumentOutOfRangeException_FWD_DEFINED__
#define ___ArgumentOutOfRangeException_FWD_DEFINED__
typedef interface _ArgumentOutOfRangeException _ArgumentOutOfRangeException;

#endif 	/* ___ArgumentOutOfRangeException_FWD_DEFINED__ */


#ifndef ___ArithmeticException_FWD_DEFINED__
#define ___ArithmeticException_FWD_DEFINED__
typedef interface _ArithmeticException _ArithmeticException;

#endif 	/* ___ArithmeticException_FWD_DEFINED__ */


#ifndef ___ArrayTypeMismatchException_FWD_DEFINED__
#define ___ArrayTypeMismatchException_FWD_DEFINED__
typedef interface _ArrayTypeMismatchException _ArrayTypeMismatchException;

#endif 	/* ___ArrayTypeMismatchException_FWD_DEFINED__ */


#ifndef ___AsyncCallback_FWD_DEFINED__
#define ___AsyncCallback_FWD_DEFINED__
typedef interface _AsyncCallback _AsyncCallback;

#endif 	/* ___AsyncCallback_FWD_DEFINED__ */


#ifndef ___AttributeUsageAttribute_FWD_DEFINED__
#define ___AttributeUsageAttribute_FWD_DEFINED__
typedef interface _AttributeUsageAttribute _AttributeUsageAttribute;

#endif 	/* ___AttributeUsageAttribute_FWD_DEFINED__ */


#ifndef ___BadImageFormatException_FWD_DEFINED__
#define ___BadImageFormatException_FWD_DEFINED__
typedef interface _BadImageFormatException _BadImageFormatException;

#endif 	/* ___BadImageFormatException_FWD_DEFINED__ */


#ifndef ___Buffer_FWD_DEFINED__
#define ___Buffer_FWD_DEFINED__
typedef interface _Buffer _Buffer;

#endif 	/* ___Buffer_FWD_DEFINED__ */


#ifndef ___CannotUnloadAppDomainException_FWD_DEFINED__
#define ___CannotUnloadAppDomainException_FWD_DEFINED__
typedef interface _CannotUnloadAppDomainException _CannotUnloadAppDomainException;

#endif 	/* ___CannotUnloadAppDomainException_FWD_DEFINED__ */


#ifndef ___CharEnumerator_FWD_DEFINED__
#define ___CharEnumerator_FWD_DEFINED__
typedef interface _CharEnumerator _CharEnumerator;

#endif 	/* ___CharEnumerator_FWD_DEFINED__ */


#ifndef ___CLSCompliantAttribute_FWD_DEFINED__
#define ___CLSCompliantAttribute_FWD_DEFINED__
typedef interface _CLSCompliantAttribute _CLSCompliantAttribute;

#endif 	/* ___CLSCompliantAttribute_FWD_DEFINED__ */


#ifndef ___TypeUnloadedException_FWD_DEFINED__
#define ___TypeUnloadedException_FWD_DEFINED__
typedef interface _TypeUnloadedException _TypeUnloadedException;

#endif 	/* ___TypeUnloadedException_FWD_DEFINED__ */


#ifndef ___CriticalFinalizerObject_FWD_DEFINED__
#define ___CriticalFinalizerObject_FWD_DEFINED__
typedef interface _CriticalFinalizerObject _CriticalFinalizerObject;

#endif 	/* ___CriticalFinalizerObject_FWD_DEFINED__ */


#ifndef ___ContextMarshalException_FWD_DEFINED__
#define ___ContextMarshalException_FWD_DEFINED__
typedef interface _ContextMarshalException _ContextMarshalException;

#endif 	/* ___ContextMarshalException_FWD_DEFINED__ */


#ifndef ___ContextBoundObject_FWD_DEFINED__
#define ___ContextBoundObject_FWD_DEFINED__
typedef interface _ContextBoundObject _ContextBoundObject;

#endif 	/* ___ContextBoundObject_FWD_DEFINED__ */


#ifndef ___ContextStaticAttribute_FWD_DEFINED__
#define ___ContextStaticAttribute_FWD_DEFINED__
typedef interface _ContextStaticAttribute _ContextStaticAttribute;

#endif 	/* ___ContextStaticAttribute_FWD_DEFINED__ */


#ifndef ___TimeZone_FWD_DEFINED__
#define ___TimeZone_FWD_DEFINED__
typedef interface _TimeZone _TimeZone;

#endif 	/* ___TimeZone_FWD_DEFINED__ */


#ifndef ___DBNull_FWD_DEFINED__
#define ___DBNull_FWD_DEFINED__
typedef interface _DBNull _DBNull;

#endif 	/* ___DBNull_FWD_DEFINED__ */


#ifndef ___Binder_FWD_DEFINED__
#define ___Binder_FWD_DEFINED__
typedef interface _Binder _Binder;

#endif 	/* ___Binder_FWD_DEFINED__ */


#ifndef ___DivideByZeroException_FWD_DEFINED__
#define ___DivideByZeroException_FWD_DEFINED__
typedef interface _DivideByZeroException _DivideByZeroException;

#endif 	/* ___DivideByZeroException_FWD_DEFINED__ */


#ifndef ___DuplicateWaitObjectException_FWD_DEFINED__
#define ___DuplicateWaitObjectException_FWD_DEFINED__
typedef interface _DuplicateWaitObjectException _DuplicateWaitObjectException;

#endif 	/* ___DuplicateWaitObjectException_FWD_DEFINED__ */


#ifndef ___TypeLoadException_FWD_DEFINED__
#define ___TypeLoadException_FWD_DEFINED__
typedef interface _TypeLoadException _TypeLoadException;

#endif 	/* ___TypeLoadException_FWD_DEFINED__ */


#ifndef ___EntryPointNotFoundException_FWD_DEFINED__
#define ___EntryPointNotFoundException_FWD_DEFINED__
typedef interface _EntryPointNotFoundException _EntryPointNotFoundException;

#endif 	/* ___EntryPointNotFoundException_FWD_DEFINED__ */


#ifndef ___DllNotFoundException_FWD_DEFINED__
#define ___DllNotFoundException_FWD_DEFINED__
typedef interface _DllNotFoundException _DllNotFoundException;

#endif 	/* ___DllNotFoundException_FWD_DEFINED__ */


#ifndef ___Environment_FWD_DEFINED__
#define ___Environment_FWD_DEFINED__
typedef interface _Environment _Environment;

#endif 	/* ___Environment_FWD_DEFINED__ */


#ifndef ___EventHandler_FWD_DEFINED__
#define ___EventHandler_FWD_DEFINED__
typedef interface _EventHandler _EventHandler;

#endif 	/* ___EventHandler_FWD_DEFINED__ */


#ifndef ___FieldAccessException_FWD_DEFINED__
#define ___FieldAccessException_FWD_DEFINED__
typedef interface _FieldAccessException _FieldAccessException;

#endif 	/* ___FieldAccessException_FWD_DEFINED__ */


#ifndef ___FlagsAttribute_FWD_DEFINED__
#define ___FlagsAttribute_FWD_DEFINED__
typedef interface _FlagsAttribute _FlagsAttribute;

#endif 	/* ___FlagsAttribute_FWD_DEFINED__ */


#ifndef ___FormatException_FWD_DEFINED__
#define ___FormatException_FWD_DEFINED__
typedef interface _FormatException _FormatException;

#endif 	/* ___FormatException_FWD_DEFINED__ */


#ifndef ___IndexOutOfRangeException_FWD_DEFINED__
#define ___IndexOutOfRangeException_FWD_DEFINED__
typedef interface _IndexOutOfRangeException _IndexOutOfRangeException;

#endif 	/* ___IndexOutOfRangeException_FWD_DEFINED__ */


#ifndef ___InvalidCastException_FWD_DEFINED__
#define ___InvalidCastException_FWD_DEFINED__
typedef interface _InvalidCastException _InvalidCastException;

#endif 	/* ___InvalidCastException_FWD_DEFINED__ */


#ifndef ___InvalidOperationException_FWD_DEFINED__
#define ___InvalidOperationException_FWD_DEFINED__
typedef interface _InvalidOperationException _InvalidOperationException;

#endif 	/* ___InvalidOperationException_FWD_DEFINED__ */


#ifndef ___InvalidProgramException_FWD_DEFINED__
#define ___InvalidProgramException_FWD_DEFINED__
typedef interface _InvalidProgramException _InvalidProgramException;

#endif 	/* ___InvalidProgramException_FWD_DEFINED__ */


#ifndef ___LocalDataStoreSlot_FWD_DEFINED__
#define ___LocalDataStoreSlot_FWD_DEFINED__
typedef interface _LocalDataStoreSlot _LocalDataStoreSlot;

#endif 	/* ___LocalDataStoreSlot_FWD_DEFINED__ */


#ifndef ___MethodAccessException_FWD_DEFINED__
#define ___MethodAccessException_FWD_DEFINED__
typedef interface _MethodAccessException _MethodAccessException;

#endif 	/* ___MethodAccessException_FWD_DEFINED__ */


#ifndef ___MissingMemberException_FWD_DEFINED__
#define ___MissingMemberException_FWD_DEFINED__
typedef interface _MissingMemberException _MissingMemberException;

#endif 	/* ___MissingMemberException_FWD_DEFINED__ */


#ifndef ___MissingFieldException_FWD_DEFINED__
#define ___MissingFieldException_FWD_DEFINED__
typedef interface _MissingFieldException _MissingFieldException;

#endif 	/* ___MissingFieldException_FWD_DEFINED__ */


#ifndef ___MissingMethodException_FWD_DEFINED__
#define ___MissingMethodException_FWD_DEFINED__
typedef interface _MissingMethodException _MissingMethodException;

#endif 	/* ___MissingMethodException_FWD_DEFINED__ */


#ifndef ___MulticastNotSupportedException_FWD_DEFINED__
#define ___MulticastNotSupportedException_FWD_DEFINED__
typedef interface _MulticastNotSupportedException _MulticastNotSupportedException;

#endif 	/* ___MulticastNotSupportedException_FWD_DEFINED__ */


#ifndef ___NonSerializedAttribute_FWD_DEFINED__
#define ___NonSerializedAttribute_FWD_DEFINED__
typedef interface _NonSerializedAttribute _NonSerializedAttribute;

#endif 	/* ___NonSerializedAttribute_FWD_DEFINED__ */


#ifndef ___NotFiniteNumberException_FWD_DEFINED__
#define ___NotFiniteNumberException_FWD_DEFINED__
typedef interface _NotFiniteNumberException _NotFiniteNumberException;

#endif 	/* ___NotFiniteNumberException_FWD_DEFINED__ */


#ifndef ___NotImplementedException_FWD_DEFINED__
#define ___NotImplementedException_FWD_DEFINED__
typedef interface _NotImplementedException _NotImplementedException;

#endif 	/* ___NotImplementedException_FWD_DEFINED__ */


#ifndef ___NotSupportedException_FWD_DEFINED__
#define ___NotSupportedException_FWD_DEFINED__
typedef interface _NotSupportedException _NotSupportedException;

#endif 	/* ___NotSupportedException_FWD_DEFINED__ */


#ifndef ___NullReferenceException_FWD_DEFINED__
#define ___NullReferenceException_FWD_DEFINED__
typedef interface _NullReferenceException _NullReferenceException;

#endif 	/* ___NullReferenceException_FWD_DEFINED__ */


#ifndef ___ObjectDisposedException_FWD_DEFINED__
#define ___ObjectDisposedException_FWD_DEFINED__
typedef interface _ObjectDisposedException _ObjectDisposedException;

#endif 	/* ___ObjectDisposedException_FWD_DEFINED__ */


#ifndef ___ObsoleteAttribute_FWD_DEFINED__
#define ___ObsoleteAttribute_FWD_DEFINED__
typedef interface _ObsoleteAttribute _ObsoleteAttribute;

#endif 	/* ___ObsoleteAttribute_FWD_DEFINED__ */


#ifndef ___OperatingSystem_FWD_DEFINED__
#define ___OperatingSystem_FWD_DEFINED__
typedef interface _OperatingSystem _OperatingSystem;

#endif 	/* ___OperatingSystem_FWD_DEFINED__ */


#ifndef ___OperationCanceledException_FWD_DEFINED__
#define ___OperationCanceledException_FWD_DEFINED__
typedef interface _OperationCanceledException _OperationCanceledException;

#endif 	/* ___OperationCanceledException_FWD_DEFINED__ */


#ifndef ___OverflowException_FWD_DEFINED__
#define ___OverflowException_FWD_DEFINED__
typedef interface _OverflowException _OverflowException;

#endif 	/* ___OverflowException_FWD_DEFINED__ */


#ifndef ___ParamArrayAttribute_FWD_DEFINED__
#define ___ParamArrayAttribute_FWD_DEFINED__
typedef interface _ParamArrayAttribute _ParamArrayAttribute;

#endif 	/* ___ParamArrayAttribute_FWD_DEFINED__ */


#ifndef ___PlatformNotSupportedException_FWD_DEFINED__
#define ___PlatformNotSupportedException_FWD_DEFINED__
typedef interface _PlatformNotSupportedException _PlatformNotSupportedException;

#endif 	/* ___PlatformNotSupportedException_FWD_DEFINED__ */


#ifndef ___Random_FWD_DEFINED__
#define ___Random_FWD_DEFINED__
typedef interface _Random _Random;

#endif 	/* ___Random_FWD_DEFINED__ */


#ifndef ___RankException_FWD_DEFINED__
#define ___RankException_FWD_DEFINED__
typedef interface _RankException _RankException;

#endif 	/* ___RankException_FWD_DEFINED__ */


#ifndef ___SerializableAttribute_FWD_DEFINED__
#define ___SerializableAttribute_FWD_DEFINED__
typedef interface _SerializableAttribute _SerializableAttribute;

#endif 	/* ___SerializableAttribute_FWD_DEFINED__ */


#ifndef ___TimeoutException_FWD_DEFINED__
#define ___TimeoutException_FWD_DEFINED__
typedef interface _TimeoutException _TimeoutException;

#endif 	/* ___TimeoutException_FWD_DEFINED__ */


#ifndef ___TypeInitializationException_FWD_DEFINED__
#define ___TypeInitializationException_FWD_DEFINED__
typedef interface _TypeInitializationException _TypeInitializationException;

#endif 	/* ___TypeInitializationException_FWD_DEFINED__ */


#ifndef ___UnauthorizedAccessException_FWD_DEFINED__
#define ___UnauthorizedAccessException_FWD_DEFINED__
typedef interface _UnauthorizedAccessException _UnauthorizedAccessException;

#endif 	/* ___UnauthorizedAccessException_FWD_DEFINED__ */


#ifndef ___UnhandledExceptionEventArgs_FWD_DEFINED__
#define ___UnhandledExceptionEventArgs_FWD_DEFINED__
typedef interface _UnhandledExceptionEventArgs _UnhandledExceptionEventArgs;

#endif 	/* ___UnhandledExceptionEventArgs_FWD_DEFINED__ */


#ifndef ___UnhandledExceptionEventHandler_FWD_DEFINED__
#define ___UnhandledExceptionEventHandler_FWD_DEFINED__
typedef interface _UnhandledExceptionEventHandler _UnhandledExceptionEventHandler;

#endif 	/* ___UnhandledExceptionEventHandler_FWD_DEFINED__ */


#ifndef ___Version_FWD_DEFINED__
#define ___Version_FWD_DEFINED__
typedef interface _Version _Version;

#endif 	/* ___Version_FWD_DEFINED__ */


#ifndef ___WeakReference_FWD_DEFINED__
#define ___WeakReference_FWD_DEFINED__
typedef interface _WeakReference _WeakReference;

#endif 	/* ___WeakReference_FWD_DEFINED__ */


#ifndef ___WaitHandle_FWD_DEFINED__
#define ___WaitHandle_FWD_DEFINED__
typedef interface _WaitHandle _WaitHandle;

#endif 	/* ___WaitHandle_FWD_DEFINED__ */


#ifndef ___EventWaitHandle_FWD_DEFINED__
#define ___EventWaitHandle_FWD_DEFINED__
typedef interface _EventWaitHandle _EventWaitHandle;

#endif 	/* ___EventWaitHandle_FWD_DEFINED__ */


#ifndef ___AutoResetEvent_FWD_DEFINED__
#define ___AutoResetEvent_FWD_DEFINED__
typedef interface _AutoResetEvent _AutoResetEvent;

#endif 	/* ___AutoResetEvent_FWD_DEFINED__ */


#ifndef ___ContextCallback_FWD_DEFINED__
#define ___ContextCallback_FWD_DEFINED__
typedef interface _ContextCallback _ContextCallback;

#endif 	/* ___ContextCallback_FWD_DEFINED__ */


#ifndef ___ManualResetEvent_FWD_DEFINED__
#define ___ManualResetEvent_FWD_DEFINED__
typedef interface _ManualResetEvent _ManualResetEvent;

#endif 	/* ___ManualResetEvent_FWD_DEFINED__ */


#ifndef ___Monitor_FWD_DEFINED__
#define ___Monitor_FWD_DEFINED__
typedef interface _Monitor _Monitor;

#endif 	/* ___Monitor_FWD_DEFINED__ */


#ifndef ___Mutex_FWD_DEFINED__
#define ___Mutex_FWD_DEFINED__
typedef interface _Mutex _Mutex;

#endif 	/* ___Mutex_FWD_DEFINED__ */


#ifndef ___Overlapped_FWD_DEFINED__
#define ___Overlapped_FWD_DEFINED__
typedef interface _Overlapped _Overlapped;

#endif 	/* ___Overlapped_FWD_DEFINED__ */


#ifndef ___ReaderWriterLock_FWD_DEFINED__
#define ___ReaderWriterLock_FWD_DEFINED__
typedef interface _ReaderWriterLock _ReaderWriterLock;

#endif 	/* ___ReaderWriterLock_FWD_DEFINED__ */


#ifndef ___SynchronizationLockException_FWD_DEFINED__
#define ___SynchronizationLockException_FWD_DEFINED__
typedef interface _SynchronizationLockException _SynchronizationLockException;

#endif 	/* ___SynchronizationLockException_FWD_DEFINED__ */


#ifndef ___ThreadAbortException_FWD_DEFINED__
#define ___ThreadAbortException_FWD_DEFINED__
typedef interface _ThreadAbortException _ThreadAbortException;

#endif 	/* ___ThreadAbortException_FWD_DEFINED__ */


#ifndef ___ThreadInterruptedException_FWD_DEFINED__
#define ___ThreadInterruptedException_FWD_DEFINED__
typedef interface _ThreadInterruptedException _ThreadInterruptedException;

#endif 	/* ___ThreadInterruptedException_FWD_DEFINED__ */


#ifndef ___RegisteredWaitHandle_FWD_DEFINED__
#define ___RegisteredWaitHandle_FWD_DEFINED__
typedef interface _RegisteredWaitHandle _RegisteredWaitHandle;

#endif 	/* ___RegisteredWaitHandle_FWD_DEFINED__ */


#ifndef ___WaitCallback_FWD_DEFINED__
#define ___WaitCallback_FWD_DEFINED__
typedef interface _WaitCallback _WaitCallback;

#endif 	/* ___WaitCallback_FWD_DEFINED__ */


#ifndef ___WaitOrTimerCallback_FWD_DEFINED__
#define ___WaitOrTimerCallback_FWD_DEFINED__
typedef interface _WaitOrTimerCallback _WaitOrTimerCallback;

#endif 	/* ___WaitOrTimerCallback_FWD_DEFINED__ */


#ifndef ___IOCompletionCallback_FWD_DEFINED__
#define ___IOCompletionCallback_FWD_DEFINED__
typedef interface _IOCompletionCallback _IOCompletionCallback;

#endif 	/* ___IOCompletionCallback_FWD_DEFINED__ */


#ifndef ___ThreadStart_FWD_DEFINED__
#define ___ThreadStart_FWD_DEFINED__
typedef interface _ThreadStart _ThreadStart;

#endif 	/* ___ThreadStart_FWD_DEFINED__ */


#ifndef ___ThreadStateException_FWD_DEFINED__
#define ___ThreadStateException_FWD_DEFINED__
typedef interface _ThreadStateException _ThreadStateException;

#endif 	/* ___ThreadStateException_FWD_DEFINED__ */


#ifndef ___ThreadStaticAttribute_FWD_DEFINED__
#define ___ThreadStaticAttribute_FWD_DEFINED__
typedef interface _ThreadStaticAttribute _ThreadStaticAttribute;

#endif 	/* ___ThreadStaticAttribute_FWD_DEFINED__ */


#ifndef ___Timeout_FWD_DEFINED__
#define ___Timeout_FWD_DEFINED__
typedef interface _Timeout _Timeout;

#endif 	/* ___Timeout_FWD_DEFINED__ */


#ifndef ___TimerCallback_FWD_DEFINED__
#define ___TimerCallback_FWD_DEFINED__
typedef interface _TimerCallback _TimerCallback;

#endif 	/* ___TimerCallback_FWD_DEFINED__ */


#ifndef ___Timer_FWD_DEFINED__
#define ___Timer_FWD_DEFINED__
typedef interface _Timer _Timer;

#endif 	/* ___Timer_FWD_DEFINED__ */


#ifndef ___STAThreadAttribute_FWD_DEFINED__
#define ___STAThreadAttribute_FWD_DEFINED__
typedef interface _STAThreadAttribute _STAThreadAttribute;

#endif 	/* ___STAThreadAttribute_FWD_DEFINED__ */


#ifndef ___MTAThreadAttribute_FWD_DEFINED__
#define ___MTAThreadAttribute_FWD_DEFINED__
typedef interface _MTAThreadAttribute _MTAThreadAttribute;

#endif 	/* ___MTAThreadAttribute_FWD_DEFINED__ */


#ifndef ___ArrayList_FWD_DEFINED__
#define ___ArrayList_FWD_DEFINED__
typedef interface _ArrayList _ArrayList;

#endif 	/* ___ArrayList_FWD_DEFINED__ */


#ifndef ___BitArray_FWD_DEFINED__
#define ___BitArray_FWD_DEFINED__
typedef interface _BitArray _BitArray;

#endif 	/* ___BitArray_FWD_DEFINED__ */


#ifndef ___CaseInsensitiveComparer_FWD_DEFINED__
#define ___CaseInsensitiveComparer_FWD_DEFINED__
typedef interface _CaseInsensitiveComparer _CaseInsensitiveComparer;

#endif 	/* ___CaseInsensitiveComparer_FWD_DEFINED__ */


#ifndef ___CaseInsensitiveHashCodeProvider_FWD_DEFINED__
#define ___CaseInsensitiveHashCodeProvider_FWD_DEFINED__
typedef interface _CaseInsensitiveHashCodeProvider _CaseInsensitiveHashCodeProvider;

#endif 	/* ___CaseInsensitiveHashCodeProvider_FWD_DEFINED__ */


#ifndef ___CollectionBase_FWD_DEFINED__
#define ___CollectionBase_FWD_DEFINED__
typedef interface _CollectionBase _CollectionBase;

#endif 	/* ___CollectionBase_FWD_DEFINED__ */


#ifndef ___Comparer_FWD_DEFINED__
#define ___Comparer_FWD_DEFINED__
typedef interface _Comparer _Comparer;

#endif 	/* ___Comparer_FWD_DEFINED__ */


#ifndef ___DictionaryBase_FWD_DEFINED__
#define ___DictionaryBase_FWD_DEFINED__
typedef interface _DictionaryBase _DictionaryBase;

#endif 	/* ___DictionaryBase_FWD_DEFINED__ */


#ifndef ___Hashtable_FWD_DEFINED__
#define ___Hashtable_FWD_DEFINED__
typedef interface _Hashtable _Hashtable;

#endif 	/* ___Hashtable_FWD_DEFINED__ */


#ifndef ___Queue_FWD_DEFINED__
#define ___Queue_FWD_DEFINED__
typedef interface _Queue _Queue;

#endif 	/* ___Queue_FWD_DEFINED__ */


#ifndef ___ReadOnlyCollectionBase_FWD_DEFINED__
#define ___ReadOnlyCollectionBase_FWD_DEFINED__
typedef interface _ReadOnlyCollectionBase _ReadOnlyCollectionBase;

#endif 	/* ___ReadOnlyCollectionBase_FWD_DEFINED__ */


#ifndef ___SortedList_FWD_DEFINED__
#define ___SortedList_FWD_DEFINED__
typedef interface _SortedList _SortedList;

#endif 	/* ___SortedList_FWD_DEFINED__ */


#ifndef ___Stack_FWD_DEFINED__
#define ___Stack_FWD_DEFINED__
typedef interface _Stack _Stack;

#endif 	/* ___Stack_FWD_DEFINED__ */


#ifndef ___Nullable_FWD_DEFINED__
#define ___Nullable_FWD_DEFINED__
typedef interface _Nullable _Nullable;

#endif 	/* ___Nullable_FWD_DEFINED__ */


#ifndef ___KeyNotFoundException_FWD_DEFINED__
#define ___KeyNotFoundException_FWD_DEFINED__
typedef interface _KeyNotFoundException _KeyNotFoundException;

#endif 	/* ___KeyNotFoundException_FWD_DEFINED__ */


#ifndef ___ConditionalAttribute_FWD_DEFINED__
#define ___ConditionalAttribute_FWD_DEFINED__
typedef interface _ConditionalAttribute _ConditionalAttribute;

#endif 	/* ___ConditionalAttribute_FWD_DEFINED__ */


#ifndef ___Debugger_FWD_DEFINED__
#define ___Debugger_FWD_DEFINED__
typedef interface _Debugger _Debugger;

#endif 	/* ___Debugger_FWD_DEFINED__ */


#ifndef ___DebuggerStepThroughAttribute_FWD_DEFINED__
#define ___DebuggerStepThroughAttribute_FWD_DEFINED__
typedef interface _DebuggerStepThroughAttribute _DebuggerStepThroughAttribute;

#endif 	/* ___DebuggerStepThroughAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerStepperBoundaryAttribute_FWD_DEFINED__
#define ___DebuggerStepperBoundaryAttribute_FWD_DEFINED__
typedef interface _DebuggerStepperBoundaryAttribute _DebuggerStepperBoundaryAttribute;

#endif 	/* ___DebuggerStepperBoundaryAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerHiddenAttribute_FWD_DEFINED__
#define ___DebuggerHiddenAttribute_FWD_DEFINED__
typedef interface _DebuggerHiddenAttribute _DebuggerHiddenAttribute;

#endif 	/* ___DebuggerHiddenAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerNonUserCodeAttribute_FWD_DEFINED__
#define ___DebuggerNonUserCodeAttribute_FWD_DEFINED__
typedef interface _DebuggerNonUserCodeAttribute _DebuggerNonUserCodeAttribute;

#endif 	/* ___DebuggerNonUserCodeAttribute_FWD_DEFINED__ */


#ifndef ___DebuggableAttribute_FWD_DEFINED__
#define ___DebuggableAttribute_FWD_DEFINED__
typedef interface _DebuggableAttribute _DebuggableAttribute;

#endif 	/* ___DebuggableAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerBrowsableAttribute_FWD_DEFINED__
#define ___DebuggerBrowsableAttribute_FWD_DEFINED__
typedef interface _DebuggerBrowsableAttribute _DebuggerBrowsableAttribute;

#endif 	/* ___DebuggerBrowsableAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerTypeProxyAttribute_FWD_DEFINED__
#define ___DebuggerTypeProxyAttribute_FWD_DEFINED__
typedef interface _DebuggerTypeProxyAttribute _DebuggerTypeProxyAttribute;

#endif 	/* ___DebuggerTypeProxyAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerDisplayAttribute_FWD_DEFINED__
#define ___DebuggerDisplayAttribute_FWD_DEFINED__
typedef interface _DebuggerDisplayAttribute _DebuggerDisplayAttribute;

#endif 	/* ___DebuggerDisplayAttribute_FWD_DEFINED__ */


#ifndef ___DebuggerVisualizerAttribute_FWD_DEFINED__
#define ___DebuggerVisualizerAttribute_FWD_DEFINED__
typedef interface _DebuggerVisualizerAttribute _DebuggerVisualizerAttribute;

#endif 	/* ___DebuggerVisualizerAttribute_FWD_DEFINED__ */


#ifndef ___StackTrace_FWD_DEFINED__
#define ___StackTrace_FWD_DEFINED__
typedef interface _StackTrace _StackTrace;

#endif 	/* ___StackTrace_FWD_DEFINED__ */


#ifndef ___StackFrame_FWD_DEFINED__
#define ___StackFrame_FWD_DEFINED__
typedef interface _StackFrame _StackFrame;

#endif 	/* ___StackFrame_FWD_DEFINED__ */


#ifndef ___SymDocumentType_FWD_DEFINED__
#define ___SymDocumentType_FWD_DEFINED__
typedef interface _SymDocumentType _SymDocumentType;

#endif 	/* ___SymDocumentType_FWD_DEFINED__ */


#ifndef ___SymLanguageType_FWD_DEFINED__
#define ___SymLanguageType_FWD_DEFINED__
typedef interface _SymLanguageType _SymLanguageType;

#endif 	/* ___SymLanguageType_FWD_DEFINED__ */


#ifndef ___SymLanguageVendor_FWD_DEFINED__
#define ___SymLanguageVendor_FWD_DEFINED__
typedef interface _SymLanguageVendor _SymLanguageVendor;

#endif 	/* ___SymLanguageVendor_FWD_DEFINED__ */


#ifndef ___AmbiguousMatchException_FWD_DEFINED__
#define ___AmbiguousMatchException_FWD_DEFINED__
typedef interface _AmbiguousMatchException _AmbiguousMatchException;

#endif 	/* ___AmbiguousMatchException_FWD_DEFINED__ */


#ifndef ___ModuleResolveEventHandler_FWD_DEFINED__
#define ___ModuleResolveEventHandler_FWD_DEFINED__
typedef interface _ModuleResolveEventHandler _ModuleResolveEventHandler;

#endif 	/* ___ModuleResolveEventHandler_FWD_DEFINED__ */


#ifndef ___AssemblyCopyrightAttribute_FWD_DEFINED__
#define ___AssemblyCopyrightAttribute_FWD_DEFINED__
typedef interface _AssemblyCopyrightAttribute _AssemblyCopyrightAttribute;

#endif 	/* ___AssemblyCopyrightAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyTrademarkAttribute_FWD_DEFINED__
#define ___AssemblyTrademarkAttribute_FWD_DEFINED__
typedef interface _AssemblyTrademarkAttribute _AssemblyTrademarkAttribute;

#endif 	/* ___AssemblyTrademarkAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyProductAttribute_FWD_DEFINED__
#define ___AssemblyProductAttribute_FWD_DEFINED__
typedef interface _AssemblyProductAttribute _AssemblyProductAttribute;

#endif 	/* ___AssemblyProductAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyCompanyAttribute_FWD_DEFINED__
#define ___AssemblyCompanyAttribute_FWD_DEFINED__
typedef interface _AssemblyCompanyAttribute _AssemblyCompanyAttribute;

#endif 	/* ___AssemblyCompanyAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyDescriptionAttribute_FWD_DEFINED__
#define ___AssemblyDescriptionAttribute_FWD_DEFINED__
typedef interface _AssemblyDescriptionAttribute _AssemblyDescriptionAttribute;

#endif 	/* ___AssemblyDescriptionAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyTitleAttribute_FWD_DEFINED__
#define ___AssemblyTitleAttribute_FWD_DEFINED__
typedef interface _AssemblyTitleAttribute _AssemblyTitleAttribute;

#endif 	/* ___AssemblyTitleAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyConfigurationAttribute_FWD_DEFINED__
#define ___AssemblyConfigurationAttribute_FWD_DEFINED__
typedef interface _AssemblyConfigurationAttribute _AssemblyConfigurationAttribute;

#endif 	/* ___AssemblyConfigurationAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyDefaultAliasAttribute_FWD_DEFINED__
#define ___AssemblyDefaultAliasAttribute_FWD_DEFINED__
typedef interface _AssemblyDefaultAliasAttribute _AssemblyDefaultAliasAttribute;

#endif 	/* ___AssemblyDefaultAliasAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyInformationalVersionAttribute_FWD_DEFINED__
#define ___AssemblyInformationalVersionAttribute_FWD_DEFINED__
typedef interface _AssemblyInformationalVersionAttribute _AssemblyInformationalVersionAttribute;

#endif 	/* ___AssemblyInformationalVersionAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyFileVersionAttribute_FWD_DEFINED__
#define ___AssemblyFileVersionAttribute_FWD_DEFINED__
typedef interface _AssemblyFileVersionAttribute _AssemblyFileVersionAttribute;

#endif 	/* ___AssemblyFileVersionAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyCultureAttribute_FWD_DEFINED__
#define ___AssemblyCultureAttribute_FWD_DEFINED__
typedef interface _AssemblyCultureAttribute _AssemblyCultureAttribute;

#endif 	/* ___AssemblyCultureAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyVersionAttribute_FWD_DEFINED__
#define ___AssemblyVersionAttribute_FWD_DEFINED__
typedef interface _AssemblyVersionAttribute _AssemblyVersionAttribute;

#endif 	/* ___AssemblyVersionAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyKeyFileAttribute_FWD_DEFINED__
#define ___AssemblyKeyFileAttribute_FWD_DEFINED__
typedef interface _AssemblyKeyFileAttribute _AssemblyKeyFileAttribute;

#endif 	/* ___AssemblyKeyFileAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyDelaySignAttribute_FWD_DEFINED__
#define ___AssemblyDelaySignAttribute_FWD_DEFINED__
typedef interface _AssemblyDelaySignAttribute _AssemblyDelaySignAttribute;

#endif 	/* ___AssemblyDelaySignAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyAlgorithmIdAttribute_FWD_DEFINED__
#define ___AssemblyAlgorithmIdAttribute_FWD_DEFINED__
typedef interface _AssemblyAlgorithmIdAttribute _AssemblyAlgorithmIdAttribute;

#endif 	/* ___AssemblyAlgorithmIdAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyFlagsAttribute_FWD_DEFINED__
#define ___AssemblyFlagsAttribute_FWD_DEFINED__
typedef interface _AssemblyFlagsAttribute _AssemblyFlagsAttribute;

#endif 	/* ___AssemblyFlagsAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyKeyNameAttribute_FWD_DEFINED__
#define ___AssemblyKeyNameAttribute_FWD_DEFINED__
typedef interface _AssemblyKeyNameAttribute _AssemblyKeyNameAttribute;

#endif 	/* ___AssemblyKeyNameAttribute_FWD_DEFINED__ */


#ifndef ___AssemblyNameProxy_FWD_DEFINED__
#define ___AssemblyNameProxy_FWD_DEFINED__
typedef interface _AssemblyNameProxy _AssemblyNameProxy;

#endif 	/* ___AssemblyNameProxy_FWD_DEFINED__ */


#ifndef ___CustomAttributeFormatException_FWD_DEFINED__
#define ___CustomAttributeFormatException_FWD_DEFINED__
typedef interface _CustomAttributeFormatException _CustomAttributeFormatException;

#endif 	/* ___CustomAttributeFormatException_FWD_DEFINED__ */


#ifndef ___CustomAttributeData_FWD_DEFINED__
#define ___CustomAttributeData_FWD_DEFINED__
typedef interface _CustomAttributeData _CustomAttributeData;

#endif 	/* ___CustomAttributeData_FWD_DEFINED__ */


#ifndef ___DefaultMemberAttribute_FWD_DEFINED__
#define ___DefaultMemberAttribute_FWD_DEFINED__
typedef interface _DefaultMemberAttribute _DefaultMemberAttribute;

#endif 	/* ___DefaultMemberAttribute_FWD_DEFINED__ */


#ifndef ___InvalidFilterCriteriaException_FWD_DEFINED__
#define ___InvalidFilterCriteriaException_FWD_DEFINED__
typedef interface _InvalidFilterCriteriaException _InvalidFilterCriteriaException;

#endif 	/* ___InvalidFilterCriteriaException_FWD_DEFINED__ */


#ifndef ___ManifestResourceInfo_FWD_DEFINED__
#define ___ManifestResourceInfo_FWD_DEFINED__
typedef interface _ManifestResourceInfo _ManifestResourceInfo;

#endif 	/* ___ManifestResourceInfo_FWD_DEFINED__ */


#ifndef ___MemberFilter_FWD_DEFINED__
#define ___MemberFilter_FWD_DEFINED__
typedef interface _MemberFilter _MemberFilter;

#endif 	/* ___MemberFilter_FWD_DEFINED__ */


#ifndef ___Missing_FWD_DEFINED__
#define ___Missing_FWD_DEFINED__
typedef interface _Missing _Missing;

#endif 	/* ___Missing_FWD_DEFINED__ */


#ifndef ___ObfuscateAssemblyAttribute_FWD_DEFINED__
#define ___ObfuscateAssemblyAttribute_FWD_DEFINED__
typedef interface _ObfuscateAssemblyAttribute _ObfuscateAssemblyAttribute;

#endif 	/* ___ObfuscateAssemblyAttribute_FWD_DEFINED__ */


#ifndef ___ObfuscationAttribute_FWD_DEFINED__
#define ___ObfuscationAttribute_FWD_DEFINED__
typedef interface _ObfuscationAttribute _ObfuscationAttribute;

#endif 	/* ___ObfuscationAttribute_FWD_DEFINED__ */


#ifndef ___ExceptionHandlingClause_FWD_DEFINED__
#define ___ExceptionHandlingClause_FWD_DEFINED__
typedef interface _ExceptionHandlingClause _ExceptionHandlingClause;

#endif 	/* ___ExceptionHandlingClause_FWD_DEFINED__ */


#ifndef ___MethodBody_FWD_DEFINED__
#define ___MethodBody_FWD_DEFINED__
typedef interface _MethodBody _MethodBody;

#endif 	/* ___MethodBody_FWD_DEFINED__ */


#ifndef ___LocalVariableInfo_FWD_DEFINED__
#define ___LocalVariableInfo_FWD_DEFINED__
typedef interface _LocalVariableInfo _LocalVariableInfo;

#endif 	/* ___LocalVariableInfo_FWD_DEFINED__ */


#ifndef ___Pointer_FWD_DEFINED__
#define ___Pointer_FWD_DEFINED__
typedef interface _Pointer _Pointer;

#endif 	/* ___Pointer_FWD_DEFINED__ */


#ifndef ___ReflectionTypeLoadException_FWD_DEFINED__
#define ___ReflectionTypeLoadException_FWD_DEFINED__
typedef interface _ReflectionTypeLoadException _ReflectionTypeLoadException;

#endif 	/* ___ReflectionTypeLoadException_FWD_DEFINED__ */


#ifndef ___StrongNameKeyPair_FWD_DEFINED__
#define ___StrongNameKeyPair_FWD_DEFINED__
typedef interface _StrongNameKeyPair _StrongNameKeyPair;

#endif 	/* ___StrongNameKeyPair_FWD_DEFINED__ */


#ifndef ___TargetException_FWD_DEFINED__
#define ___TargetException_FWD_DEFINED__
typedef interface _TargetException _TargetException;

#endif 	/* ___TargetException_FWD_DEFINED__ */


#ifndef ___TargetInvocationException_FWD_DEFINED__
#define ___TargetInvocationException_FWD_DEFINED__
typedef interface _TargetInvocationException _TargetInvocationException;

#endif 	/* ___TargetInvocationException_FWD_DEFINED__ */


#ifndef ___TargetParameterCountException_FWD_DEFINED__
#define ___TargetParameterCountException_FWD_DEFINED__
typedef interface _TargetParameterCountException _TargetParameterCountException;

#endif 	/* ___TargetParameterCountException_FWD_DEFINED__ */


#ifndef ___TypeDelegator_FWD_DEFINED__
#define ___TypeDelegator_FWD_DEFINED__
typedef interface _TypeDelegator _TypeDelegator;

#endif 	/* ___TypeDelegator_FWD_DEFINED__ */


#ifndef ___TypeFilter_FWD_DEFINED__
#define ___TypeFilter_FWD_DEFINED__
typedef interface _TypeFilter _TypeFilter;

#endif 	/* ___TypeFilter_FWD_DEFINED__ */


#ifndef ___Formatter_FWD_DEFINED__
#define ___Formatter_FWD_DEFINED__
typedef interface _Formatter _Formatter;

#endif 	/* ___Formatter_FWD_DEFINED__ */


#ifndef ___FormatterConverter_FWD_DEFINED__
#define ___FormatterConverter_FWD_DEFINED__
typedef interface _FormatterConverter _FormatterConverter;

#endif 	/* ___FormatterConverter_FWD_DEFINED__ */


#ifndef ___FormatterServices_FWD_DEFINED__
#define ___FormatterServices_FWD_DEFINED__
typedef interface _FormatterServices _FormatterServices;

#endif 	/* ___FormatterServices_FWD_DEFINED__ */


#ifndef ___ObjectIDGenerator_FWD_DEFINED__
#define ___ObjectIDGenerator_FWD_DEFINED__
typedef interface _ObjectIDGenerator _ObjectIDGenerator;

#endif 	/* ___ObjectIDGenerator_FWD_DEFINED__ */


#ifndef ___ObjectManager_FWD_DEFINED__
#define ___ObjectManager_FWD_DEFINED__
typedef interface _ObjectManager _ObjectManager;

#endif 	/* ___ObjectManager_FWD_DEFINED__ */


#ifndef ___OptionalFieldAttribute_FWD_DEFINED__
#define ___OptionalFieldAttribute_FWD_DEFINED__
typedef interface _OptionalFieldAttribute _OptionalFieldAttribute;

#endif 	/* ___OptionalFieldAttribute_FWD_DEFINED__ */


#ifndef ___OnSerializingAttribute_FWD_DEFINED__
#define ___OnSerializingAttribute_FWD_DEFINED__
typedef interface _OnSerializingAttribute _OnSerializingAttribute;

#endif 	/* ___OnSerializingAttribute_FWD_DEFINED__ */


#ifndef ___OnSerializedAttribute_FWD_DEFINED__
#define ___OnSerializedAttribute_FWD_DEFINED__
typedef interface _OnSerializedAttribute _OnSerializedAttribute;

#endif 	/* ___OnSerializedAttribute_FWD_DEFINED__ */


#ifndef ___OnDeserializingAttribute_FWD_DEFINED__
#define ___OnDeserializingAttribute_FWD_DEFINED__
typedef interface _OnDeserializingAttribute _OnDeserializingAttribute;

#endif 	/* ___OnDeserializingAttribute_FWD_DEFINED__ */


#ifndef ___OnDeserializedAttribute_FWD_DEFINED__
#define ___OnDeserializedAttribute_FWD_DEFINED__
typedef interface _OnDeserializedAttribute _OnDeserializedAttribute;

#endif 	/* ___OnDeserializedAttribute_FWD_DEFINED__ */


#ifndef ___SerializationBinder_FWD_DEFINED__
#define ___SerializationBinder_FWD_DEFINED__
typedef interface _SerializationBinder _SerializationBinder;

#endif 	/* ___SerializationBinder_FWD_DEFINED__ */


#ifndef ___SerializationInfo_FWD_DEFINED__
#define ___SerializationInfo_FWD_DEFINED__
typedef interface _SerializationInfo _SerializationInfo;

#endif 	/* ___SerializationInfo_FWD_DEFINED__ */


#ifndef ___SerializationInfoEnumerator_FWD_DEFINED__
#define ___SerializationInfoEnumerator_FWD_DEFINED__
typedef interface _SerializationInfoEnumerator _SerializationInfoEnumerator;

#endif 	/* ___SerializationInfoEnumerator_FWD_DEFINED__ */


#ifndef ___SerializationException_FWD_DEFINED__
#define ___SerializationException_FWD_DEFINED__
typedef interface _SerializationException _SerializationException;

#endif 	/* ___SerializationException_FWD_DEFINED__ */


#ifndef ___SurrogateSelector_FWD_DEFINED__
#define ___SurrogateSelector_FWD_DEFINED__
typedef interface _SurrogateSelector _SurrogateSelector;

#endif 	/* ___SurrogateSelector_FWD_DEFINED__ */


#ifndef ___Calendar_FWD_DEFINED__
#define ___Calendar_FWD_DEFINED__
typedef interface _Calendar _Calendar;

#endif 	/* ___Calendar_FWD_DEFINED__ */


#ifndef ___EastAsianLunisolarCalendar_FWD_DEFINED__
#define ___EastAsianLunisolarCalendar_FWD_DEFINED__
typedef interface _EastAsianLunisolarCalendar _EastAsianLunisolarCalendar;

#endif 	/* ___EastAsianLunisolarCalendar_FWD_DEFINED__ */


#ifndef ___CompareInfo_FWD_DEFINED__
#define ___CompareInfo_FWD_DEFINED__
typedef interface _CompareInfo _CompareInfo;

#endif 	/* ___CompareInfo_FWD_DEFINED__ */


#ifndef ___CultureInfo_FWD_DEFINED__
#define ___CultureInfo_FWD_DEFINED__
typedef interface _CultureInfo _CultureInfo;

#endif 	/* ___CultureInfo_FWD_DEFINED__ */


#ifndef ___DateTimeFormatInfo_FWD_DEFINED__
#define ___DateTimeFormatInfo_FWD_DEFINED__
typedef interface _DateTimeFormatInfo _DateTimeFormatInfo;

#endif 	/* ___DateTimeFormatInfo_FWD_DEFINED__ */


#ifndef ___DaylightTime_FWD_DEFINED__
#define ___DaylightTime_FWD_DEFINED__
typedef interface _DaylightTime _DaylightTime;

#endif 	/* ___DaylightTime_FWD_DEFINED__ */


#ifndef ___GregorianCalendar_FWD_DEFINED__
#define ___GregorianCalendar_FWD_DEFINED__
typedef interface _GregorianCalendar _GregorianCalendar;

#endif 	/* ___GregorianCalendar_FWD_DEFINED__ */


#ifndef ___HebrewCalendar_FWD_DEFINED__
#define ___HebrewCalendar_FWD_DEFINED__
typedef interface _HebrewCalendar _HebrewCalendar;

#endif 	/* ___HebrewCalendar_FWD_DEFINED__ */


#ifndef ___HijriCalendar_FWD_DEFINED__
#define ___HijriCalendar_FWD_DEFINED__
typedef interface _HijriCalendar _HijriCalendar;

#endif 	/* ___HijriCalendar_FWD_DEFINED__ */


#ifndef ___JapaneseCalendar_FWD_DEFINED__
#define ___JapaneseCalendar_FWD_DEFINED__
typedef interface _JapaneseCalendar _JapaneseCalendar;

#endif 	/* ___JapaneseCalendar_FWD_DEFINED__ */


#ifndef ___JulianCalendar_FWD_DEFINED__
#define ___JulianCalendar_FWD_DEFINED__
typedef interface _JulianCalendar _JulianCalendar;

#endif 	/* ___JulianCalendar_FWD_DEFINED__ */


#ifndef ___KoreanCalendar_FWD_DEFINED__
#define ___KoreanCalendar_FWD_DEFINED__
typedef interface _KoreanCalendar _KoreanCalendar;

#endif 	/* ___KoreanCalendar_FWD_DEFINED__ */


#ifndef ___RegionInfo_FWD_DEFINED__
#define ___RegionInfo_FWD_DEFINED__
typedef interface _RegionInfo _RegionInfo;

#endif 	/* ___RegionInfo_FWD_DEFINED__ */


#ifndef ___SortKey_FWD_DEFINED__
#define ___SortKey_FWD_DEFINED__
typedef interface _SortKey _SortKey;

#endif 	/* ___SortKey_FWD_DEFINED__ */


#ifndef ___StringInfo_FWD_DEFINED__
#define ___StringInfo_FWD_DEFINED__
typedef interface _StringInfo _StringInfo;

#endif 	/* ___StringInfo_FWD_DEFINED__ */


#ifndef ___TaiwanCalendar_FWD_DEFINED__
#define ___TaiwanCalendar_FWD_DEFINED__
typedef interface _TaiwanCalendar _TaiwanCalendar;

#endif 	/* ___TaiwanCalendar_FWD_DEFINED__ */


#ifndef ___TextElementEnumerator_FWD_DEFINED__
#define ___TextElementEnumerator_FWD_DEFINED__
typedef interface _TextElementEnumerator _TextElementEnumerator;

#endif 	/* ___TextElementEnumerator_FWD_DEFINED__ */


#ifndef ___TextInfo_FWD_DEFINED__
#define ___TextInfo_FWD_DEFINED__
typedef interface _TextInfo _TextInfo;

#endif 	/* ___TextInfo_FWD_DEFINED__ */


#ifndef ___ThaiBuddhistCalendar_FWD_DEFINED__
#define ___ThaiBuddhistCalendar_FWD_DEFINED__
typedef interface _ThaiBuddhistCalendar _ThaiBuddhistCalendar;

#endif 	/* ___ThaiBuddhistCalendar_FWD_DEFINED__ */


#ifndef ___NumberFormatInfo_FWD_DEFINED__
#define ___NumberFormatInfo_FWD_DEFINED__
typedef interface _NumberFormatInfo _NumberFormatInfo;

#endif 	/* ___NumberFormatInfo_FWD_DEFINED__ */


#ifndef ___Encoding_FWD_DEFINED__
#define ___Encoding_FWD_DEFINED__
typedef interface _Encoding _Encoding;

#endif 	/* ___Encoding_FWD_DEFINED__ */


#ifndef ___Encoder_FWD_DEFINED__
#define ___Encoder_FWD_DEFINED__
typedef interface _Encoder _Encoder;

#endif 	/* ___Encoder_FWD_DEFINED__ */


#ifndef ___Decoder_FWD_DEFINED__
#define ___Decoder_FWD_DEFINED__
typedef interface _Decoder _Decoder;

#endif 	/* ___Decoder_FWD_DEFINED__ */


#ifndef ___ASCIIEncoding_FWD_DEFINED__
#define ___ASCIIEncoding_FWD_DEFINED__
typedef interface _ASCIIEncoding _ASCIIEncoding;

#endif 	/* ___ASCIIEncoding_FWD_DEFINED__ */


#ifndef ___UnicodeEncoding_FWD_DEFINED__
#define ___UnicodeEncoding_FWD_DEFINED__
typedef interface _UnicodeEncoding _UnicodeEncoding;

#endif 	/* ___UnicodeEncoding_FWD_DEFINED__ */


#ifndef ___UTF7Encoding_FWD_DEFINED__
#define ___UTF7Encoding_FWD_DEFINED__
typedef interface _UTF7Encoding _UTF7Encoding;

#endif 	/* ___UTF7Encoding_FWD_DEFINED__ */


#ifndef ___UTF8Encoding_FWD_DEFINED__
#define ___UTF8Encoding_FWD_DEFINED__
typedef interface _UTF8Encoding _UTF8Encoding;

#endif 	/* ___UTF8Encoding_FWD_DEFINED__ */


#ifndef ___MissingManifestResourceException_FWD_DEFINED__
#define ___MissingManifestResourceException_FWD_DEFINED__
typedef interface _MissingManifestResourceException _MissingManifestResourceException;

#endif 	/* ___MissingManifestResourceException_FWD_DEFINED__ */


#ifndef ___MissingSatelliteAssemblyException_FWD_DEFINED__
#define ___MissingSatelliteAssemblyException_FWD_DEFINED__
typedef interface _MissingSatelliteAssemblyException _MissingSatelliteAssemblyException;

#endif 	/* ___MissingSatelliteAssemblyException_FWD_DEFINED__ */


#ifndef ___NeutralResourcesLanguageAttribute_FWD_DEFINED__
#define ___NeutralResourcesLanguageAttribute_FWD_DEFINED__
typedef interface _NeutralResourcesLanguageAttribute _NeutralResourcesLanguageAttribute;

#endif 	/* ___NeutralResourcesLanguageAttribute_FWD_DEFINED__ */


#ifndef ___ResourceManager_FWD_DEFINED__
#define ___ResourceManager_FWD_DEFINED__
typedef interface _ResourceManager _ResourceManager;

#endif 	/* ___ResourceManager_FWD_DEFINED__ */


#ifndef ___ResourceReader_FWD_DEFINED__
#define ___ResourceReader_FWD_DEFINED__
typedef interface _ResourceReader _ResourceReader;

#endif 	/* ___ResourceReader_FWD_DEFINED__ */


#ifndef ___ResourceSet_FWD_DEFINED__
#define ___ResourceSet_FWD_DEFINED__
typedef interface _ResourceSet _ResourceSet;

#endif 	/* ___ResourceSet_FWD_DEFINED__ */


#ifndef ___ResourceWriter_FWD_DEFINED__
#define ___ResourceWriter_FWD_DEFINED__
typedef interface _ResourceWriter _ResourceWriter;

#endif 	/* ___ResourceWriter_FWD_DEFINED__ */


#ifndef ___SatelliteContractVersionAttribute_FWD_DEFINED__
#define ___SatelliteContractVersionAttribute_FWD_DEFINED__
typedef interface _SatelliteContractVersionAttribute _SatelliteContractVersionAttribute;

#endif 	/* ___SatelliteContractVersionAttribute_FWD_DEFINED__ */


#ifndef ___Registry_FWD_DEFINED__
#define ___Registry_FWD_DEFINED__
typedef interface _Registry _Registry;

#endif 	/* ___Registry_FWD_DEFINED__ */


#ifndef ___RegistryKey_FWD_DEFINED__
#define ___RegistryKey_FWD_DEFINED__
typedef interface _RegistryKey _RegistryKey;

#endif 	/* ___RegistryKey_FWD_DEFINED__ */


#ifndef ___AllMembershipCondition_FWD_DEFINED__
#define ___AllMembershipCondition_FWD_DEFINED__
typedef interface _AllMembershipCondition _AllMembershipCondition;

#endif 	/* ___AllMembershipCondition_FWD_DEFINED__ */


#ifndef ___ApplicationDirectory_FWD_DEFINED__
#define ___ApplicationDirectory_FWD_DEFINED__
typedef interface _ApplicationDirectory _ApplicationDirectory;

#endif 	/* ___ApplicationDirectory_FWD_DEFINED__ */


#ifndef ___ApplicationDirectoryMembershipCondition_FWD_DEFINED__
#define ___ApplicationDirectoryMembershipCondition_FWD_DEFINED__
typedef interface _ApplicationDirectoryMembershipCondition _ApplicationDirectoryMembershipCondition;

#endif 	/* ___ApplicationDirectoryMembershipCondition_FWD_DEFINED__ */


#ifndef ___ApplicationSecurityInfo_FWD_DEFINED__
#define ___ApplicationSecurityInfo_FWD_DEFINED__
typedef interface _ApplicationSecurityInfo _ApplicationSecurityInfo;

#endif 	/* ___ApplicationSecurityInfo_FWD_DEFINED__ */


#ifndef ___ApplicationSecurityManager_FWD_DEFINED__
#define ___ApplicationSecurityManager_FWD_DEFINED__
typedef interface _ApplicationSecurityManager _ApplicationSecurityManager;

#endif 	/* ___ApplicationSecurityManager_FWD_DEFINED__ */


#ifndef ___ApplicationTrust_FWD_DEFINED__
#define ___ApplicationTrust_FWD_DEFINED__
typedef interface _ApplicationTrust _ApplicationTrust;

#endif 	/* ___ApplicationTrust_FWD_DEFINED__ */


#ifndef ___ApplicationTrustCollection_FWD_DEFINED__
#define ___ApplicationTrustCollection_FWD_DEFINED__
typedef interface _ApplicationTrustCollection _ApplicationTrustCollection;

#endif 	/* ___ApplicationTrustCollection_FWD_DEFINED__ */


#ifndef ___ApplicationTrustEnumerator_FWD_DEFINED__
#define ___ApplicationTrustEnumerator_FWD_DEFINED__
typedef interface _ApplicationTrustEnumerator _ApplicationTrustEnumerator;

#endif 	/* ___ApplicationTrustEnumerator_FWD_DEFINED__ */


#ifndef ___CodeGroup_FWD_DEFINED__
#define ___CodeGroup_FWD_DEFINED__
typedef interface _CodeGroup _CodeGroup;

#endif 	/* ___CodeGroup_FWD_DEFINED__ */


#ifndef ___Evidence_FWD_DEFINED__
#define ___Evidence_FWD_DEFINED__
typedef interface _Evidence _Evidence;

#endif 	/* ___Evidence_FWD_DEFINED__ */


#ifndef ___FileCodeGroup_FWD_DEFINED__
#define ___FileCodeGroup_FWD_DEFINED__
typedef interface _FileCodeGroup _FileCodeGroup;

#endif 	/* ___FileCodeGroup_FWD_DEFINED__ */


#ifndef ___FirstMatchCodeGroup_FWD_DEFINED__
#define ___FirstMatchCodeGroup_FWD_DEFINED__
typedef interface _FirstMatchCodeGroup _FirstMatchCodeGroup;

#endif 	/* ___FirstMatchCodeGroup_FWD_DEFINED__ */


#ifndef ___TrustManagerContext_FWD_DEFINED__
#define ___TrustManagerContext_FWD_DEFINED__
typedef interface _TrustManagerContext _TrustManagerContext;

#endif 	/* ___TrustManagerContext_FWD_DEFINED__ */


#ifndef ___CodeConnectAccess_FWD_DEFINED__
#define ___CodeConnectAccess_FWD_DEFINED__
typedef interface _CodeConnectAccess _CodeConnectAccess;

#endif 	/* ___CodeConnectAccess_FWD_DEFINED__ */


#ifndef ___NetCodeGroup_FWD_DEFINED__
#define ___NetCodeGroup_FWD_DEFINED__
typedef interface _NetCodeGroup _NetCodeGroup;

#endif 	/* ___NetCodeGroup_FWD_DEFINED__ */


#ifndef ___PermissionRequestEvidence_FWD_DEFINED__
#define ___PermissionRequestEvidence_FWD_DEFINED__
typedef interface _PermissionRequestEvidence _PermissionRequestEvidence;

#endif 	/* ___PermissionRequestEvidence_FWD_DEFINED__ */


#ifndef ___PolicyException_FWD_DEFINED__
#define ___PolicyException_FWD_DEFINED__
typedef interface _PolicyException _PolicyException;

#endif 	/* ___PolicyException_FWD_DEFINED__ */


#ifndef ___PolicyLevel_FWD_DEFINED__
#define ___PolicyLevel_FWD_DEFINED__
typedef interface _PolicyLevel _PolicyLevel;

#endif 	/* ___PolicyLevel_FWD_DEFINED__ */


#ifndef ___PolicyStatement_FWD_DEFINED__
#define ___PolicyStatement_FWD_DEFINED__
typedef interface _PolicyStatement _PolicyStatement;

#endif 	/* ___PolicyStatement_FWD_DEFINED__ */


#ifndef ___Site_FWD_DEFINED__
#define ___Site_FWD_DEFINED__
typedef interface _Site _Site;

#endif 	/* ___Site_FWD_DEFINED__ */


#ifndef ___SiteMembershipCondition_FWD_DEFINED__
#define ___SiteMembershipCondition_FWD_DEFINED__
typedef interface _SiteMembershipCondition _SiteMembershipCondition;

#endif 	/* ___SiteMembershipCondition_FWD_DEFINED__ */


#ifndef ___StrongName_FWD_DEFINED__
#define ___StrongName_FWD_DEFINED__
typedef interface _StrongName _StrongName;

#endif 	/* ___StrongName_FWD_DEFINED__ */


#ifndef ___StrongNameMembershipCondition_FWD_DEFINED__
#define ___StrongNameMembershipCondition_FWD_DEFINED__
typedef interface _StrongNameMembershipCondition _StrongNameMembershipCondition;

#endif 	/* ___StrongNameMembershipCondition_FWD_DEFINED__ */


#ifndef ___UnionCodeGroup_FWD_DEFINED__
#define ___UnionCodeGroup_FWD_DEFINED__
typedef interface _UnionCodeGroup _UnionCodeGroup;

#endif 	/* ___UnionCodeGroup_FWD_DEFINED__ */


#ifndef ___Url_FWD_DEFINED__
#define ___Url_FWD_DEFINED__
typedef interface _Url _Url;

#endif 	/* ___Url_FWD_DEFINED__ */


#ifndef ___UrlMembershipCondition_FWD_DEFINED__
#define ___UrlMembershipCondition_FWD_DEFINED__
typedef interface _UrlMembershipCondition _UrlMembershipCondition;

#endif 	/* ___UrlMembershipCondition_FWD_DEFINED__ */


#ifndef ___Zone_FWD_DEFINED__
#define ___Zone_FWD_DEFINED__
typedef interface _Zone _Zone;

#endif 	/* ___Zone_FWD_DEFINED__ */


#ifndef ___ZoneMembershipCondition_FWD_DEFINED__
#define ___ZoneMembershipCondition_FWD_DEFINED__
typedef interface _ZoneMembershipCondition _ZoneMembershipCondition;

#endif 	/* ___ZoneMembershipCondition_FWD_DEFINED__ */


#ifndef ___GacInstalled_FWD_DEFINED__
#define ___GacInstalled_FWD_DEFINED__
typedef interface _GacInstalled _GacInstalled;

#endif 	/* ___GacInstalled_FWD_DEFINED__ */


#ifndef ___GacMembershipCondition_FWD_DEFINED__
#define ___GacMembershipCondition_FWD_DEFINED__
typedef interface _GacMembershipCondition _GacMembershipCondition;

#endif 	/* ___GacMembershipCondition_FWD_DEFINED__ */


#ifndef ___Hash_FWD_DEFINED__
#define ___Hash_FWD_DEFINED__
typedef interface _Hash _Hash;

#endif 	/* ___Hash_FWD_DEFINED__ */


#ifndef ___HashMembershipCondition_FWD_DEFINED__
#define ___HashMembershipCondition_FWD_DEFINED__
typedef interface _HashMembershipCondition _HashMembershipCondition;

#endif 	/* ___HashMembershipCondition_FWD_DEFINED__ */


#ifndef ___Publisher_FWD_DEFINED__
#define ___Publisher_FWD_DEFINED__
typedef interface _Publisher _Publisher;

#endif 	/* ___Publisher_FWD_DEFINED__ */


#ifndef ___PublisherMembershipCondition_FWD_DEFINED__
#define ___PublisherMembershipCondition_FWD_DEFINED__
typedef interface _PublisherMembershipCondition _PublisherMembershipCondition;

#endif 	/* ___PublisherMembershipCondition_FWD_DEFINED__ */


#ifndef ___GenericIdentity_FWD_DEFINED__
#define ___GenericIdentity_FWD_DEFINED__
typedef interface _GenericIdentity _GenericIdentity;

#endif 	/* ___GenericIdentity_FWD_DEFINED__ */


#ifndef ___GenericPrincipal_FWD_DEFINED__
#define ___GenericPrincipal_FWD_DEFINED__
typedef interface _GenericPrincipal _GenericPrincipal;

#endif 	/* ___GenericPrincipal_FWD_DEFINED__ */


#ifndef ___WindowsIdentity_FWD_DEFINED__
#define ___WindowsIdentity_FWD_DEFINED__
typedef interface _WindowsIdentity _WindowsIdentity;

#endif 	/* ___WindowsIdentity_FWD_DEFINED__ */


#ifndef ___WindowsImpersonationContext_FWD_DEFINED__
#define ___WindowsImpersonationContext_FWD_DEFINED__
typedef interface _WindowsImpersonationContext _WindowsImpersonationContext;

#endif 	/* ___WindowsImpersonationContext_FWD_DEFINED__ */


#ifndef ___WindowsPrincipal_FWD_DEFINED__
#define ___WindowsPrincipal_FWD_DEFINED__
typedef interface _WindowsPrincipal _WindowsPrincipal;

#endif 	/* ___WindowsPrincipal_FWD_DEFINED__ */


#ifndef ___UnmanagedFunctionPointerAttribute_FWD_DEFINED__
#define ___UnmanagedFunctionPointerAttribute_FWD_DEFINED__
typedef interface _UnmanagedFunctionPointerAttribute _UnmanagedFunctionPointerAttribute;

#endif 	/* ___UnmanagedFunctionPointerAttribute_FWD_DEFINED__ */


#ifndef ___DispIdAttribute_FWD_DEFINED__
#define ___DispIdAttribute_FWD_DEFINED__
typedef interface _DispIdAttribute _DispIdAttribute;

#endif 	/* ___DispIdAttribute_FWD_DEFINED__ */


#ifndef ___InterfaceTypeAttribute_FWD_DEFINED__
#define ___InterfaceTypeAttribute_FWD_DEFINED__
typedef interface _InterfaceTypeAttribute _InterfaceTypeAttribute;

#endif 	/* ___InterfaceTypeAttribute_FWD_DEFINED__ */


#ifndef ___ComDefaultInterfaceAttribute_FWD_DEFINED__
#define ___ComDefaultInterfaceAttribute_FWD_DEFINED__
typedef interface _ComDefaultInterfaceAttribute _ComDefaultInterfaceAttribute;

#endif 	/* ___ComDefaultInterfaceAttribute_FWD_DEFINED__ */


#ifndef ___ClassInterfaceAttribute_FWD_DEFINED__
#define ___ClassInterfaceAttribute_FWD_DEFINED__
typedef interface _ClassInterfaceAttribute _ClassInterfaceAttribute;

#endif 	/* ___ClassInterfaceAttribute_FWD_DEFINED__ */


#ifndef ___ComVisibleAttribute_FWD_DEFINED__
#define ___ComVisibleAttribute_FWD_DEFINED__
typedef interface _ComVisibleAttribute _ComVisibleAttribute;

#endif 	/* ___ComVisibleAttribute_FWD_DEFINED__ */


#ifndef ___TypeLibImportClassAttribute_FWD_DEFINED__
#define ___TypeLibImportClassAttribute_FWD_DEFINED__
typedef interface _TypeLibImportClassAttribute _TypeLibImportClassAttribute;

#endif 	/* ___TypeLibImportClassAttribute_FWD_DEFINED__ */


#ifndef ___LCIDConversionAttribute_FWD_DEFINED__
#define ___LCIDConversionAttribute_FWD_DEFINED__
typedef interface _LCIDConversionAttribute _LCIDConversionAttribute;

#endif 	/* ___LCIDConversionAttribute_FWD_DEFINED__ */


#ifndef ___ComRegisterFunctionAttribute_FWD_DEFINED__
#define ___ComRegisterFunctionAttribute_FWD_DEFINED__
typedef interface _ComRegisterFunctionAttribute _ComRegisterFunctionAttribute;

#endif 	/* ___ComRegisterFunctionAttribute_FWD_DEFINED__ */


#ifndef ___ComUnregisterFunctionAttribute_FWD_DEFINED__
#define ___ComUnregisterFunctionAttribute_FWD_DEFINED__
typedef interface _ComUnregisterFunctionAttribute _ComUnregisterFunctionAttribute;

#endif 	/* ___ComUnregisterFunctionAttribute_FWD_DEFINED__ */


#ifndef ___ProgIdAttribute_FWD_DEFINED__
#define ___ProgIdAttribute_FWD_DEFINED__
typedef interface _ProgIdAttribute _ProgIdAttribute;

#endif 	/* ___ProgIdAttribute_FWD_DEFINED__ */


#ifndef ___ImportedFromTypeLibAttribute_FWD_DEFINED__
#define ___ImportedFromTypeLibAttribute_FWD_DEFINED__
typedef interface _ImportedFromTypeLibAttribute _ImportedFromTypeLibAttribute;

#endif 	/* ___ImportedFromTypeLibAttribute_FWD_DEFINED__ */


#ifndef ___IDispatchImplAttribute_FWD_DEFINED__
#define ___IDispatchImplAttribute_FWD_DEFINED__
typedef interface _IDispatchImplAttribute _IDispatchImplAttribute;

#endif 	/* ___IDispatchImplAttribute_FWD_DEFINED__ */


#ifndef ___ComSourceInterfacesAttribute_FWD_DEFINED__
#define ___ComSourceInterfacesAttribute_FWD_DEFINED__
typedef interface _ComSourceInterfacesAttribute _ComSourceInterfacesAttribute;

#endif 	/* ___ComSourceInterfacesAttribute_FWD_DEFINED__ */


#ifndef ___ComConversionLossAttribute_FWD_DEFINED__
#define ___ComConversionLossAttribute_FWD_DEFINED__
typedef interface _ComConversionLossAttribute _ComConversionLossAttribute;

#endif 	/* ___ComConversionLossAttribute_FWD_DEFINED__ */


#ifndef ___TypeLibTypeAttribute_FWD_DEFINED__
#define ___TypeLibTypeAttribute_FWD_DEFINED__
typedef interface _TypeLibTypeAttribute _TypeLibTypeAttribute;

#endif 	/* ___TypeLibTypeAttribute_FWD_DEFINED__ */


#ifndef ___TypeLibFuncAttribute_FWD_DEFINED__
#define ___TypeLibFuncAttribute_FWD_DEFINED__
typedef interface _TypeLibFuncAttribute _TypeLibFuncAttribute;

#endif 	/* ___TypeLibFuncAttribute_FWD_DEFINED__ */


#ifndef ___TypeLibVarAttribute_FWD_DEFINED__
#define ___TypeLibVarAttribute_FWD_DEFINED__
typedef interface _TypeLibVarAttribute _TypeLibVarAttribute;

#endif 	/* ___TypeLibVarAttribute_FWD_DEFINED__ */


#ifndef ___MarshalAsAttribute_FWD_DEFINED__
#define ___MarshalAsAttribute_FWD_DEFINED__
typedef interface _MarshalAsAttribute _MarshalAsAttribute;

#endif 	/* ___MarshalAsAttribute_FWD_DEFINED__ */


#ifndef ___ComImportAttribute_FWD_DEFINED__
#define ___ComImportAttribute_FWD_DEFINED__
typedef interface _ComImportAttribute _ComImportAttribute;

#endif 	/* ___ComImportAttribute_FWD_DEFINED__ */


#ifndef ___GuidAttribute_FWD_DEFINED__
#define ___GuidAttribute_FWD_DEFINED__
typedef interface _GuidAttribute _GuidAttribute;

#endif 	/* ___GuidAttribute_FWD_DEFINED__ */


#ifndef ___PreserveSigAttribute_FWD_DEFINED__
#define ___PreserveSigAttribute_FWD_DEFINED__
typedef interface _PreserveSigAttribute _PreserveSigAttribute;

#endif 	/* ___PreserveSigAttribute_FWD_DEFINED__ */


#ifndef ___InAttribute_FWD_DEFINED__
#define ___InAttribute_FWD_DEFINED__
typedef interface _InAttribute _InAttribute;

#endif 	/* ___InAttribute_FWD_DEFINED__ */


#ifndef ___OutAttribute_FWD_DEFINED__
#define ___OutAttribute_FWD_DEFINED__
typedef interface _OutAttribute _OutAttribute;

#endif 	/* ___OutAttribute_FWD_DEFINED__ */


#ifndef ___OptionalAttribute_FWD_DEFINED__
#define ___OptionalAttribute_FWD_DEFINED__
typedef interface _OptionalAttribute _OptionalAttribute;

#endif 	/* ___OptionalAttribute_FWD_DEFINED__ */


#ifndef ___DllImportAttribute_FWD_DEFINED__
#define ___DllImportAttribute_FWD_DEFINED__
typedef interface _DllImportAttribute _DllImportAttribute;

#endif 	/* ___DllImportAttribute_FWD_DEFINED__ */


#ifndef ___StructLayoutAttribute_FWD_DEFINED__
#define ___StructLayoutAttribute_FWD_DEFINED__
typedef interface _StructLayoutAttribute _StructLayoutAttribute;

#endif 	/* ___StructLayoutAttribute_FWD_DEFINED__ */


#ifndef ___FieldOffsetAttribute_FWD_DEFINED__
#define ___FieldOffsetAttribute_FWD_DEFINED__
typedef interface _FieldOffsetAttribute _FieldOffsetAttribute;

#endif 	/* ___FieldOffsetAttribute_FWD_DEFINED__ */


#ifndef ___ComAliasNameAttribute_FWD_DEFINED__
#define ___ComAliasNameAttribute_FWD_DEFINED__
typedef interface _ComAliasNameAttribute _ComAliasNameAttribute;

#endif 	/* ___ComAliasNameAttribute_FWD_DEFINED__ */


#ifndef ___AutomationProxyAttribute_FWD_DEFINED__
#define ___AutomationProxyAttribute_FWD_DEFINED__
typedef interface _AutomationProxyAttribute _AutomationProxyAttribute;

#endif 	/* ___AutomationProxyAttribute_FWD_DEFINED__ */


#ifndef ___PrimaryInteropAssemblyAttribute_FWD_DEFINED__
#define ___PrimaryInteropAssemblyAttribute_FWD_DEFINED__
typedef interface _PrimaryInteropAssemblyAttribute _PrimaryInteropAssemblyAttribute;

#endif 	/* ___PrimaryInteropAssemblyAttribute_FWD_DEFINED__ */


#ifndef ___CoClassAttribute_FWD_DEFINED__
#define ___CoClassAttribute_FWD_DEFINED__
typedef interface _CoClassAttribute _CoClassAttribute;

#endif 	/* ___CoClassAttribute_FWD_DEFINED__ */


#ifndef ___ComEventInterfaceAttribute_FWD_DEFINED__
#define ___ComEventInterfaceAttribute_FWD_DEFINED__
typedef interface _ComEventInterfaceAttribute _ComEventInterfaceAttribute;

#endif 	/* ___ComEventInterfaceAttribute_FWD_DEFINED__ */


#ifndef ___TypeLibVersionAttribute_FWD_DEFINED__
#define ___TypeLibVersionAttribute_FWD_DEFINED__
typedef interface _TypeLibVersionAttribute _TypeLibVersionAttribute;

#endif 	/* ___TypeLibVersionAttribute_FWD_DEFINED__ */


#ifndef ___ComCompatibleVersionAttribute_FWD_DEFINED__
#define ___ComCompatibleVersionAttribute_FWD_DEFINED__
typedef interface _ComCompatibleVersionAttribute _ComCompatibleVersionAttribute;

#endif 	/* ___ComCompatibleVersionAttribute_FWD_DEFINED__ */


#ifndef ___BestFitMappingAttribute_FWD_DEFINED__
#define ___BestFitMappingAttribute_FWD_DEFINED__
typedef interface _BestFitMappingAttribute _BestFitMappingAttribute;

#endif 	/* ___BestFitMappingAttribute_FWD_DEFINED__ */


#ifndef ___DefaultCharSetAttribute_FWD_DEFINED__
#define ___DefaultCharSetAttribute_FWD_DEFINED__
typedef interface _DefaultCharSetAttribute _DefaultCharSetAttribute;

#endif 	/* ___DefaultCharSetAttribute_FWD_DEFINED__ */


#ifndef ___SetWin32ContextInIDispatchAttribute_FWD_DEFINED__
#define ___SetWin32ContextInIDispatchAttribute_FWD_DEFINED__
typedef interface _SetWin32ContextInIDispatchAttribute _SetWin32ContextInIDispatchAttribute;

#endif 	/* ___SetWin32ContextInIDispatchAttribute_FWD_DEFINED__ */


#ifndef ___ExternalException_FWD_DEFINED__
#define ___ExternalException_FWD_DEFINED__
typedef interface _ExternalException _ExternalException;

#endif 	/* ___ExternalException_FWD_DEFINED__ */


#ifndef ___COMException_FWD_DEFINED__
#define ___COMException_FWD_DEFINED__
typedef interface _COMException _COMException;

#endif 	/* ___COMException_FWD_DEFINED__ */


#ifndef ___InvalidOleVariantTypeException_FWD_DEFINED__
#define ___InvalidOleVariantTypeException_FWD_DEFINED__
typedef interface _InvalidOleVariantTypeException _InvalidOleVariantTypeException;

#endif 	/* ___InvalidOleVariantTypeException_FWD_DEFINED__ */


#ifndef ___MarshalDirectiveException_FWD_DEFINED__
#define ___MarshalDirectiveException_FWD_DEFINED__
typedef interface _MarshalDirectiveException _MarshalDirectiveException;

#endif 	/* ___MarshalDirectiveException_FWD_DEFINED__ */


#ifndef ___RuntimeEnvironment_FWD_DEFINED__
#define ___RuntimeEnvironment_FWD_DEFINED__
typedef interface _RuntimeEnvironment _RuntimeEnvironment;

#endif 	/* ___RuntimeEnvironment_FWD_DEFINED__ */


#ifndef ___SEHException_FWD_DEFINED__
#define ___SEHException_FWD_DEFINED__
typedef interface _SEHException _SEHException;

#endif 	/* ___SEHException_FWD_DEFINED__ */


#ifndef ___BStrWrapper_FWD_DEFINED__
#define ___BStrWrapper_FWD_DEFINED__
typedef interface _BStrWrapper _BStrWrapper;

#endif 	/* ___BStrWrapper_FWD_DEFINED__ */


#ifndef ___CurrencyWrapper_FWD_DEFINED__
#define ___CurrencyWrapper_FWD_DEFINED__
typedef interface _CurrencyWrapper _CurrencyWrapper;

#endif 	/* ___CurrencyWrapper_FWD_DEFINED__ */


#ifndef ___DispatchWrapper_FWD_DEFINED__
#define ___DispatchWrapper_FWD_DEFINED__
typedef interface _DispatchWrapper _DispatchWrapper;

#endif 	/* ___DispatchWrapper_FWD_DEFINED__ */


#ifndef ___ErrorWrapper_FWD_DEFINED__
#define ___ErrorWrapper_FWD_DEFINED__
typedef interface _ErrorWrapper _ErrorWrapper;

#endif 	/* ___ErrorWrapper_FWD_DEFINED__ */


#ifndef ___ExtensibleClassFactory_FWD_DEFINED__
#define ___ExtensibleClassFactory_FWD_DEFINED__
typedef interface _ExtensibleClassFactory _ExtensibleClassFactory;

#endif 	/* ___ExtensibleClassFactory_FWD_DEFINED__ */


#ifndef ___InvalidComObjectException_FWD_DEFINED__
#define ___InvalidComObjectException_FWD_DEFINED__
typedef interface _InvalidComObjectException _InvalidComObjectException;

#endif 	/* ___InvalidComObjectException_FWD_DEFINED__ */


#ifndef ___ObjectCreationDelegate_FWD_DEFINED__
#define ___ObjectCreationDelegate_FWD_DEFINED__
typedef interface _ObjectCreationDelegate _ObjectCreationDelegate;

#endif 	/* ___ObjectCreationDelegate_FWD_DEFINED__ */


#ifndef ___SafeArrayRankMismatchException_FWD_DEFINED__
#define ___SafeArrayRankMismatchException_FWD_DEFINED__
typedef interface _SafeArrayRankMismatchException _SafeArrayRankMismatchException;

#endif 	/* ___SafeArrayRankMismatchException_FWD_DEFINED__ */


#ifndef ___SafeArrayTypeMismatchException_FWD_DEFINED__
#define ___SafeArrayTypeMismatchException_FWD_DEFINED__
typedef interface _SafeArrayTypeMismatchException _SafeArrayTypeMismatchException;

#endif 	/* ___SafeArrayTypeMismatchException_FWD_DEFINED__ */


#ifndef ___UnknownWrapper_FWD_DEFINED__
#define ___UnknownWrapper_FWD_DEFINED__
typedef interface _UnknownWrapper _UnknownWrapper;

#endif 	/* ___UnknownWrapper_FWD_DEFINED__ */


#ifndef ___Stream_FWD_DEFINED__
#define ___Stream_FWD_DEFINED__
typedef interface _Stream _Stream;

#endif 	/* ___Stream_FWD_DEFINED__ */


#ifndef ___BinaryReader_FWD_DEFINED__
#define ___BinaryReader_FWD_DEFINED__
typedef interface _BinaryReader _BinaryReader;

#endif 	/* ___BinaryReader_FWD_DEFINED__ */


#ifndef ___BinaryWriter_FWD_DEFINED__
#define ___BinaryWriter_FWD_DEFINED__
typedef interface _BinaryWriter _BinaryWriter;

#endif 	/* ___BinaryWriter_FWD_DEFINED__ */


#ifndef ___BufferedStream_FWD_DEFINED__
#define ___BufferedStream_FWD_DEFINED__
typedef interface _BufferedStream _BufferedStream;

#endif 	/* ___BufferedStream_FWD_DEFINED__ */


#ifndef ___Directory_FWD_DEFINED__
#define ___Directory_FWD_DEFINED__
typedef interface _Directory _Directory;

#endif 	/* ___Directory_FWD_DEFINED__ */


#ifndef ___FileSystemInfo_FWD_DEFINED__
#define ___FileSystemInfo_FWD_DEFINED__
typedef interface _FileSystemInfo _FileSystemInfo;

#endif 	/* ___FileSystemInfo_FWD_DEFINED__ */


#ifndef ___DirectoryInfo_FWD_DEFINED__
#define ___DirectoryInfo_FWD_DEFINED__
typedef interface _DirectoryInfo _DirectoryInfo;

#endif 	/* ___DirectoryInfo_FWD_DEFINED__ */


#ifndef ___IOException_FWD_DEFINED__
#define ___IOException_FWD_DEFINED__
typedef interface _IOException _IOException;

#endif 	/* ___IOException_FWD_DEFINED__ */


#ifndef ___DirectoryNotFoundException_FWD_DEFINED__
#define ___DirectoryNotFoundException_FWD_DEFINED__
typedef interface _DirectoryNotFoundException _DirectoryNotFoundException;

#endif 	/* ___DirectoryNotFoundException_FWD_DEFINED__ */


#ifndef ___DriveInfo_FWD_DEFINED__
#define ___DriveInfo_FWD_DEFINED__
typedef interface _DriveInfo _DriveInfo;

#endif 	/* ___DriveInfo_FWD_DEFINED__ */


#ifndef ___DriveNotFoundException_FWD_DEFINED__
#define ___DriveNotFoundException_FWD_DEFINED__
typedef interface _DriveNotFoundException _DriveNotFoundException;

#endif 	/* ___DriveNotFoundException_FWD_DEFINED__ */


#ifndef ___EndOfStreamException_FWD_DEFINED__
#define ___EndOfStreamException_FWD_DEFINED__
typedef interface _EndOfStreamException _EndOfStreamException;

#endif 	/* ___EndOfStreamException_FWD_DEFINED__ */


#ifndef ___File_FWD_DEFINED__
#define ___File_FWD_DEFINED__
typedef interface _File _File;

#endif 	/* ___File_FWD_DEFINED__ */


#ifndef ___FileInfo_FWD_DEFINED__
#define ___FileInfo_FWD_DEFINED__
typedef interface _FileInfo _FileInfo;

#endif 	/* ___FileInfo_FWD_DEFINED__ */


#ifndef ___FileLoadException_FWD_DEFINED__
#define ___FileLoadException_FWD_DEFINED__
typedef interface _FileLoadException _FileLoadException;

#endif 	/* ___FileLoadException_FWD_DEFINED__ */


#ifndef ___FileNotFoundException_FWD_DEFINED__
#define ___FileNotFoundException_FWD_DEFINED__
typedef interface _FileNotFoundException _FileNotFoundException;

#endif 	/* ___FileNotFoundException_FWD_DEFINED__ */


#ifndef ___FileStream_FWD_DEFINED__
#define ___FileStream_FWD_DEFINED__
typedef interface _FileStream _FileStream;

#endif 	/* ___FileStream_FWD_DEFINED__ */


#ifndef ___MemoryStream_FWD_DEFINED__
#define ___MemoryStream_FWD_DEFINED__
typedef interface _MemoryStream _MemoryStream;

#endif 	/* ___MemoryStream_FWD_DEFINED__ */


#ifndef ___Path_FWD_DEFINED__
#define ___Path_FWD_DEFINED__
typedef interface _Path _Path;

#endif 	/* ___Path_FWD_DEFINED__ */


#ifndef ___PathTooLongException_FWD_DEFINED__
#define ___PathTooLongException_FWD_DEFINED__
typedef interface _PathTooLongException _PathTooLongException;

#endif 	/* ___PathTooLongException_FWD_DEFINED__ */


#ifndef ___TextReader_FWD_DEFINED__
#define ___TextReader_FWD_DEFINED__
typedef interface _TextReader _TextReader;

#endif 	/* ___TextReader_FWD_DEFINED__ */


#ifndef ___StreamReader_FWD_DEFINED__
#define ___StreamReader_FWD_DEFINED__
typedef interface _StreamReader _StreamReader;

#endif 	/* ___StreamReader_FWD_DEFINED__ */


#ifndef ___TextWriter_FWD_DEFINED__
#define ___TextWriter_FWD_DEFINED__
typedef interface _TextWriter _TextWriter;

#endif 	/* ___TextWriter_FWD_DEFINED__ */


#ifndef ___StreamWriter_FWD_DEFINED__
#define ___StreamWriter_FWD_DEFINED__
typedef interface _StreamWriter _StreamWriter;

#endif 	/* ___StreamWriter_FWD_DEFINED__ */


#ifndef ___StringReader_FWD_DEFINED__
#define ___StringReader_FWD_DEFINED__
typedef interface _StringReader _StringReader;

#endif 	/* ___StringReader_FWD_DEFINED__ */


#ifndef ___StringWriter_FWD_DEFINED__
#define ___StringWriter_FWD_DEFINED__
typedef interface _StringWriter _StringWriter;

#endif 	/* ___StringWriter_FWD_DEFINED__ */


#ifndef ___AccessedThroughPropertyAttribute_FWD_DEFINED__
#define ___AccessedThroughPropertyAttribute_FWD_DEFINED__
typedef interface _AccessedThroughPropertyAttribute _AccessedThroughPropertyAttribute;

#endif 	/* ___AccessedThroughPropertyAttribute_FWD_DEFINED__ */


#ifndef ___CallConvCdecl_FWD_DEFINED__
#define ___CallConvCdecl_FWD_DEFINED__
typedef interface _CallConvCdecl _CallConvCdecl;

#endif 	/* ___CallConvCdecl_FWD_DEFINED__ */


#ifndef ___CallConvStdcall_FWD_DEFINED__
#define ___CallConvStdcall_FWD_DEFINED__
typedef interface _CallConvStdcall _CallConvStdcall;

#endif 	/* ___CallConvStdcall_FWD_DEFINED__ */


#ifndef ___CallConvThiscall_FWD_DEFINED__
#define ___CallConvThiscall_FWD_DEFINED__
typedef interface _CallConvThiscall _CallConvThiscall;

#endif 	/* ___CallConvThiscall_FWD_DEFINED__ */


#ifndef ___CallConvFastcall_FWD_DEFINED__
#define ___CallConvFastcall_FWD_DEFINED__
typedef interface _CallConvFastcall _CallConvFastcall;

#endif 	/* ___CallConvFastcall_FWD_DEFINED__ */


#ifndef ___CustomConstantAttribute_FWD_DEFINED__
#define ___CustomConstantAttribute_FWD_DEFINED__
typedef interface _CustomConstantAttribute _CustomConstantAttribute;

#endif 	/* ___CustomConstantAttribute_FWD_DEFINED__ */


#ifndef ___DateTimeConstantAttribute_FWD_DEFINED__
#define ___DateTimeConstantAttribute_FWD_DEFINED__
typedef interface _DateTimeConstantAttribute _DateTimeConstantAttribute;

#endif 	/* ___DateTimeConstantAttribute_FWD_DEFINED__ */


#ifndef ___DiscardableAttribute_FWD_DEFINED__
#define ___DiscardableAttribute_FWD_DEFINED__
typedef interface _DiscardableAttribute _DiscardableAttribute;

#endif 	/* ___DiscardableAttribute_FWD_DEFINED__ */


#ifndef ___DecimalConstantAttribute_FWD_DEFINED__
#define ___DecimalConstantAttribute_FWD_DEFINED__
typedef interface _DecimalConstantAttribute _DecimalConstantAttribute;

#endif 	/* ___DecimalConstantAttribute_FWD_DEFINED__ */


#ifndef ___CompilationRelaxationsAttribute_FWD_DEFINED__
#define ___CompilationRelaxationsAttribute_FWD_DEFINED__
typedef interface _CompilationRelaxationsAttribute _CompilationRelaxationsAttribute;

#endif 	/* ___CompilationRelaxationsAttribute_FWD_DEFINED__ */


#ifndef ___CompilerGlobalScopeAttribute_FWD_DEFINED__
#define ___CompilerGlobalScopeAttribute_FWD_DEFINED__
typedef interface _CompilerGlobalScopeAttribute _CompilerGlobalScopeAttribute;

#endif 	/* ___CompilerGlobalScopeAttribute_FWD_DEFINED__ */


#ifndef ___IndexerNameAttribute_FWD_DEFINED__
#define ___IndexerNameAttribute_FWD_DEFINED__
typedef interface _IndexerNameAttribute _IndexerNameAttribute;

#endif 	/* ___IndexerNameAttribute_FWD_DEFINED__ */


#ifndef ___IsVolatile_FWD_DEFINED__
#define ___IsVolatile_FWD_DEFINED__
typedef interface _IsVolatile _IsVolatile;

#endif 	/* ___IsVolatile_FWD_DEFINED__ */


#ifndef ___MethodImplAttribute_FWD_DEFINED__
#define ___MethodImplAttribute_FWD_DEFINED__
typedef interface _MethodImplAttribute _MethodImplAttribute;

#endif 	/* ___MethodImplAttribute_FWD_DEFINED__ */


#ifndef ___RequiredAttributeAttribute_FWD_DEFINED__
#define ___RequiredAttributeAttribute_FWD_DEFINED__
typedef interface _RequiredAttributeAttribute _RequiredAttributeAttribute;

#endif 	/* ___RequiredAttributeAttribute_FWD_DEFINED__ */


#ifndef ___IsCopyConstructed_FWD_DEFINED__
#define ___IsCopyConstructed_FWD_DEFINED__
typedef interface _IsCopyConstructed _IsCopyConstructed;

#endif 	/* ___IsCopyConstructed_FWD_DEFINED__ */


#ifndef ___NativeCppClassAttribute_FWD_DEFINED__
#define ___NativeCppClassAttribute_FWD_DEFINED__
typedef interface _NativeCppClassAttribute _NativeCppClassAttribute;

#endif 	/* ___NativeCppClassAttribute_FWD_DEFINED__ */


#ifndef ___IDispatchConstantAttribute_FWD_DEFINED__
#define ___IDispatchConstantAttribute_FWD_DEFINED__
typedef interface _IDispatchConstantAttribute _IDispatchConstantAttribute;

#endif 	/* ___IDispatchConstantAttribute_FWD_DEFINED__ */


#ifndef ___IUnknownConstantAttribute_FWD_DEFINED__
#define ___IUnknownConstantAttribute_FWD_DEFINED__
typedef interface _IUnknownConstantAttribute _IUnknownConstantAttribute;

#endif 	/* ___IUnknownConstantAttribute_FWD_DEFINED__ */


#ifndef ___SecurityElement_FWD_DEFINED__
#define ___SecurityElement_FWD_DEFINED__
typedef interface _SecurityElement _SecurityElement;

#endif 	/* ___SecurityElement_FWD_DEFINED__ */


#ifndef ___XmlSyntaxException_FWD_DEFINED__
#define ___XmlSyntaxException_FWD_DEFINED__
typedef interface _XmlSyntaxException _XmlSyntaxException;

#endif 	/* ___XmlSyntaxException_FWD_DEFINED__ */


#ifndef ___CodeAccessPermission_FWD_DEFINED__
#define ___CodeAccessPermission_FWD_DEFINED__
typedef interface _CodeAccessPermission _CodeAccessPermission;

#endif 	/* ___CodeAccessPermission_FWD_DEFINED__ */


#ifndef ___EnvironmentPermission_FWD_DEFINED__
#define ___EnvironmentPermission_FWD_DEFINED__
typedef interface _EnvironmentPermission _EnvironmentPermission;

#endif 	/* ___EnvironmentPermission_FWD_DEFINED__ */


#ifndef ___FileDialogPermission_FWD_DEFINED__
#define ___FileDialogPermission_FWD_DEFINED__
typedef interface _FileDialogPermission _FileDialogPermission;

#endif 	/* ___FileDialogPermission_FWD_DEFINED__ */


#ifndef ___FileIOPermission_FWD_DEFINED__
#define ___FileIOPermission_FWD_DEFINED__
typedef interface _FileIOPermission _FileIOPermission;

#endif 	/* ___FileIOPermission_FWD_DEFINED__ */


#ifndef ___SecurityAttribute_FWD_DEFINED__
#define ___SecurityAttribute_FWD_DEFINED__
typedef interface _SecurityAttribute _SecurityAttribute;

#endif 	/* ___SecurityAttribute_FWD_DEFINED__ */


#ifndef ___CodeAccessSecurityAttribute_FWD_DEFINED__
#define ___CodeAccessSecurityAttribute_FWD_DEFINED__
typedef interface _CodeAccessSecurityAttribute _CodeAccessSecurityAttribute;

#endif 	/* ___CodeAccessSecurityAttribute_FWD_DEFINED__ */


#ifndef ___HostProtectionAttribute_FWD_DEFINED__
#define ___HostProtectionAttribute_FWD_DEFINED__
typedef interface _HostProtectionAttribute _HostProtectionAttribute;

#endif 	/* ___HostProtectionAttribute_FWD_DEFINED__ */


#ifndef ___IsolatedStoragePermission_FWD_DEFINED__
#define ___IsolatedStoragePermission_FWD_DEFINED__
typedef interface _IsolatedStoragePermission _IsolatedStoragePermission;

#endif 	/* ___IsolatedStoragePermission_FWD_DEFINED__ */


#ifndef ___IsolatedStorageFilePermission_FWD_DEFINED__
#define ___IsolatedStorageFilePermission_FWD_DEFINED__
typedef interface _IsolatedStorageFilePermission _IsolatedStorageFilePermission;

#endif 	/* ___IsolatedStorageFilePermission_FWD_DEFINED__ */


#ifndef ___EnvironmentPermissionAttribute_FWD_DEFINED__
#define ___EnvironmentPermissionAttribute_FWD_DEFINED__
typedef interface _EnvironmentPermissionAttribute _EnvironmentPermissionAttribute;

#endif 	/* ___EnvironmentPermissionAttribute_FWD_DEFINED__ */


#ifndef ___FileDialogPermissionAttribute_FWD_DEFINED__
#define ___FileDialogPermissionAttribute_FWD_DEFINED__
typedef interface _FileDialogPermissionAttribute _FileDialogPermissionAttribute;

#endif 	/* ___FileDialogPermissionAttribute_FWD_DEFINED__ */


#ifndef ___FileIOPermissionAttribute_FWD_DEFINED__
#define ___FileIOPermissionAttribute_FWD_DEFINED__
typedef interface _FileIOPermissionAttribute _FileIOPermissionAttribute;

#endif 	/* ___FileIOPermissionAttribute_FWD_DEFINED__ */


#ifndef ___KeyContainerPermissionAttribute_FWD_DEFINED__
#define ___KeyContainerPermissionAttribute_FWD_DEFINED__
typedef interface _KeyContainerPermissionAttribute _KeyContainerPermissionAttribute;

#endif 	/* ___KeyContainerPermissionAttribute_FWD_DEFINED__ */


#ifndef ___PrincipalPermissionAttribute_FWD_DEFINED__
#define ___PrincipalPermissionAttribute_FWD_DEFINED__
typedef interface _PrincipalPermissionAttribute _PrincipalPermissionAttribute;

#endif 	/* ___PrincipalPermissionAttribute_FWD_DEFINED__ */


#ifndef ___ReflectionPermissionAttribute_FWD_DEFINED__
#define ___ReflectionPermissionAttribute_FWD_DEFINED__
typedef interface _ReflectionPermissionAttribute _ReflectionPermissionAttribute;

#endif 	/* ___ReflectionPermissionAttribute_FWD_DEFINED__ */


#ifndef ___RegistryPermissionAttribute_FWD_DEFINED__
#define ___RegistryPermissionAttribute_FWD_DEFINED__
typedef interface _RegistryPermissionAttribute _RegistryPermissionAttribute;

#endif 	/* ___RegistryPermissionAttribute_FWD_DEFINED__ */


#ifndef ___SecurityPermissionAttribute_FWD_DEFINED__
#define ___SecurityPermissionAttribute_FWD_DEFINED__
typedef interface _SecurityPermissionAttribute _SecurityPermissionAttribute;

#endif 	/* ___SecurityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___UIPermissionAttribute_FWD_DEFINED__
#define ___UIPermissionAttribute_FWD_DEFINED__
typedef interface _UIPermissionAttribute _UIPermissionAttribute;

#endif 	/* ___UIPermissionAttribute_FWD_DEFINED__ */


#ifndef ___ZoneIdentityPermissionAttribute_FWD_DEFINED__
#define ___ZoneIdentityPermissionAttribute_FWD_DEFINED__
typedef interface _ZoneIdentityPermissionAttribute _ZoneIdentityPermissionAttribute;

#endif 	/* ___ZoneIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___StrongNameIdentityPermissionAttribute_FWD_DEFINED__
#define ___StrongNameIdentityPermissionAttribute_FWD_DEFINED__
typedef interface _StrongNameIdentityPermissionAttribute _StrongNameIdentityPermissionAttribute;

#endif 	/* ___StrongNameIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___SiteIdentityPermissionAttribute_FWD_DEFINED__
#define ___SiteIdentityPermissionAttribute_FWD_DEFINED__
typedef interface _SiteIdentityPermissionAttribute _SiteIdentityPermissionAttribute;

#endif 	/* ___SiteIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___UrlIdentityPermissionAttribute_FWD_DEFINED__
#define ___UrlIdentityPermissionAttribute_FWD_DEFINED__
typedef interface _UrlIdentityPermissionAttribute _UrlIdentityPermissionAttribute;

#endif 	/* ___UrlIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___PublisherIdentityPermissionAttribute_FWD_DEFINED__
#define ___PublisherIdentityPermissionAttribute_FWD_DEFINED__
typedef interface _PublisherIdentityPermissionAttribute _PublisherIdentityPermissionAttribute;

#endif 	/* ___PublisherIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___IsolatedStoragePermissionAttribute_FWD_DEFINED__
#define ___IsolatedStoragePermissionAttribute_FWD_DEFINED__
typedef interface _IsolatedStoragePermissionAttribute _IsolatedStoragePermissionAttribute;

#endif 	/* ___IsolatedStoragePermissionAttribute_FWD_DEFINED__ */


#ifndef ___IsolatedStorageFilePermissionAttribute_FWD_DEFINED__
#define ___IsolatedStorageFilePermissionAttribute_FWD_DEFINED__
typedef interface _IsolatedStorageFilePermissionAttribute _IsolatedStorageFilePermissionAttribute;

#endif 	/* ___IsolatedStorageFilePermissionAttribute_FWD_DEFINED__ */


#ifndef ___PermissionSetAttribute_FWD_DEFINED__
#define ___PermissionSetAttribute_FWD_DEFINED__
typedef interface _PermissionSetAttribute _PermissionSetAttribute;

#endif 	/* ___PermissionSetAttribute_FWD_DEFINED__ */


#ifndef ___ReflectionPermission_FWD_DEFINED__
#define ___ReflectionPermission_FWD_DEFINED__
typedef interface _ReflectionPermission _ReflectionPermission;

#endif 	/* ___ReflectionPermission_FWD_DEFINED__ */


#ifndef ___PrincipalPermission_FWD_DEFINED__
#define ___PrincipalPermission_FWD_DEFINED__
typedef interface _PrincipalPermission _PrincipalPermission;

#endif 	/* ___PrincipalPermission_FWD_DEFINED__ */


#ifndef ___SecurityPermission_FWD_DEFINED__
#define ___SecurityPermission_FWD_DEFINED__
typedef interface _SecurityPermission _SecurityPermission;

#endif 	/* ___SecurityPermission_FWD_DEFINED__ */


#ifndef ___SiteIdentityPermission_FWD_DEFINED__
#define ___SiteIdentityPermission_FWD_DEFINED__
typedef interface _SiteIdentityPermission _SiteIdentityPermission;

#endif 	/* ___SiteIdentityPermission_FWD_DEFINED__ */


#ifndef ___StrongNameIdentityPermission_FWD_DEFINED__
#define ___StrongNameIdentityPermission_FWD_DEFINED__
typedef interface _StrongNameIdentityPermission _StrongNameIdentityPermission;

#endif 	/* ___StrongNameIdentityPermission_FWD_DEFINED__ */


#ifndef ___StrongNamePublicKeyBlob_FWD_DEFINED__
#define ___StrongNamePublicKeyBlob_FWD_DEFINED__
typedef interface _StrongNamePublicKeyBlob _StrongNamePublicKeyBlob;

#endif 	/* ___StrongNamePublicKeyBlob_FWD_DEFINED__ */


#ifndef ___UIPermission_FWD_DEFINED__
#define ___UIPermission_FWD_DEFINED__
typedef interface _UIPermission _UIPermission;

#endif 	/* ___UIPermission_FWD_DEFINED__ */


#ifndef ___UrlIdentityPermission_FWD_DEFINED__
#define ___UrlIdentityPermission_FWD_DEFINED__
typedef interface _UrlIdentityPermission _UrlIdentityPermission;

#endif 	/* ___UrlIdentityPermission_FWD_DEFINED__ */


#ifndef ___ZoneIdentityPermission_FWD_DEFINED__
#define ___ZoneIdentityPermission_FWD_DEFINED__
typedef interface _ZoneIdentityPermission _ZoneIdentityPermission;

#endif 	/* ___ZoneIdentityPermission_FWD_DEFINED__ */


#ifndef ___GacIdentityPermissionAttribute_FWD_DEFINED__
#define ___GacIdentityPermissionAttribute_FWD_DEFINED__
typedef interface _GacIdentityPermissionAttribute _GacIdentityPermissionAttribute;

#endif 	/* ___GacIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef ___GacIdentityPermission_FWD_DEFINED__
#define ___GacIdentityPermission_FWD_DEFINED__
typedef interface _GacIdentityPermission _GacIdentityPermission;

#endif 	/* ___GacIdentityPermission_FWD_DEFINED__ */


#ifndef ___KeyContainerPermissionAccessEntry_FWD_DEFINED__
#define ___KeyContainerPermissionAccessEntry_FWD_DEFINED__
typedef interface _KeyContainerPermissionAccessEntry _KeyContainerPermissionAccessEntry;

#endif 	/* ___KeyContainerPermissionAccessEntry_FWD_DEFINED__ */


#ifndef ___KeyContainerPermissionAccessEntryCollection_FWD_DEFINED__
#define ___KeyContainerPermissionAccessEntryCollection_FWD_DEFINED__
typedef interface _KeyContainerPermissionAccessEntryCollection _KeyContainerPermissionAccessEntryCollection;

#endif 	/* ___KeyContainerPermissionAccessEntryCollection_FWD_DEFINED__ */


#ifndef ___KeyContainerPermissionAccessEntryEnumerator_FWD_DEFINED__
#define ___KeyContainerPermissionAccessEntryEnumerator_FWD_DEFINED__
typedef interface _KeyContainerPermissionAccessEntryEnumerator _KeyContainerPermissionAccessEntryEnumerator;

#endif 	/* ___KeyContainerPermissionAccessEntryEnumerator_FWD_DEFINED__ */


#ifndef ___KeyContainerPermission_FWD_DEFINED__
#define ___KeyContainerPermission_FWD_DEFINED__
typedef interface _KeyContainerPermission _KeyContainerPermission;

#endif 	/* ___KeyContainerPermission_FWD_DEFINED__ */


#ifndef ___PublisherIdentityPermission_FWD_DEFINED__
#define ___PublisherIdentityPermission_FWD_DEFINED__
typedef interface _PublisherIdentityPermission _PublisherIdentityPermission;

#endif 	/* ___PublisherIdentityPermission_FWD_DEFINED__ */


#ifndef ___RegistryPermission_FWD_DEFINED__
#define ___RegistryPermission_FWD_DEFINED__
typedef interface _RegistryPermission _RegistryPermission;

#endif 	/* ___RegistryPermission_FWD_DEFINED__ */


#ifndef ___SuppressUnmanagedCodeSecurityAttribute_FWD_DEFINED__
#define ___SuppressUnmanagedCodeSecurityAttribute_FWD_DEFINED__
typedef interface _SuppressUnmanagedCodeSecurityAttribute _SuppressUnmanagedCodeSecurityAttribute;

#endif 	/* ___SuppressUnmanagedCodeSecurityAttribute_FWD_DEFINED__ */


#ifndef ___UnverifiableCodeAttribute_FWD_DEFINED__
#define ___UnverifiableCodeAttribute_FWD_DEFINED__
typedef interface _UnverifiableCodeAttribute _UnverifiableCodeAttribute;

#endif 	/* ___UnverifiableCodeAttribute_FWD_DEFINED__ */


#ifndef ___AllowPartiallyTrustedCallersAttribute_FWD_DEFINED__
#define ___AllowPartiallyTrustedCallersAttribute_FWD_DEFINED__
typedef interface _AllowPartiallyTrustedCallersAttribute _AllowPartiallyTrustedCallersAttribute;

#endif 	/* ___AllowPartiallyTrustedCallersAttribute_FWD_DEFINED__ */


#ifndef ___HostSecurityManager_FWD_DEFINED__
#define ___HostSecurityManager_FWD_DEFINED__
typedef interface _HostSecurityManager _HostSecurityManager;

#endif 	/* ___HostSecurityManager_FWD_DEFINED__ */


#ifndef ___PermissionSet_FWD_DEFINED__
#define ___PermissionSet_FWD_DEFINED__
typedef interface _PermissionSet _PermissionSet;

#endif 	/* ___PermissionSet_FWD_DEFINED__ */


#ifndef ___NamedPermissionSet_FWD_DEFINED__
#define ___NamedPermissionSet_FWD_DEFINED__
typedef interface _NamedPermissionSet _NamedPermissionSet;

#endif 	/* ___NamedPermissionSet_FWD_DEFINED__ */


#ifndef ___SecurityException_FWD_DEFINED__
#define ___SecurityException_FWD_DEFINED__
typedef interface _SecurityException _SecurityException;

#endif 	/* ___SecurityException_FWD_DEFINED__ */


#ifndef ___HostProtectionException_FWD_DEFINED__
#define ___HostProtectionException_FWD_DEFINED__
typedef interface _HostProtectionException _HostProtectionException;

#endif 	/* ___HostProtectionException_FWD_DEFINED__ */


#ifndef ___SecurityManager_FWD_DEFINED__
#define ___SecurityManager_FWD_DEFINED__
typedef interface _SecurityManager _SecurityManager;

#endif 	/* ___SecurityManager_FWD_DEFINED__ */


#ifndef ___VerificationException_FWD_DEFINED__
#define ___VerificationException_FWD_DEFINED__
typedef interface _VerificationException _VerificationException;

#endif 	/* ___VerificationException_FWD_DEFINED__ */


#ifndef ___ContextAttribute_FWD_DEFINED__
#define ___ContextAttribute_FWD_DEFINED__
typedef interface _ContextAttribute _ContextAttribute;

#endif 	/* ___ContextAttribute_FWD_DEFINED__ */


#ifndef ___AsyncResult_FWD_DEFINED__
#define ___AsyncResult_FWD_DEFINED__
typedef interface _AsyncResult _AsyncResult;

#endif 	/* ___AsyncResult_FWD_DEFINED__ */


#ifndef ___CallContext_FWD_DEFINED__
#define ___CallContext_FWD_DEFINED__
typedef interface _CallContext _CallContext;

#endif 	/* ___CallContext_FWD_DEFINED__ */


#ifndef ___LogicalCallContext_FWD_DEFINED__
#define ___LogicalCallContext_FWD_DEFINED__
typedef interface _LogicalCallContext _LogicalCallContext;

#endif 	/* ___LogicalCallContext_FWD_DEFINED__ */


#ifndef ___ChannelServices_FWD_DEFINED__
#define ___ChannelServices_FWD_DEFINED__
typedef interface _ChannelServices _ChannelServices;

#endif 	/* ___ChannelServices_FWD_DEFINED__ */


#ifndef ___ClientChannelSinkStack_FWD_DEFINED__
#define ___ClientChannelSinkStack_FWD_DEFINED__
typedef interface _ClientChannelSinkStack _ClientChannelSinkStack;

#endif 	/* ___ClientChannelSinkStack_FWD_DEFINED__ */


#ifndef ___ServerChannelSinkStack_FWD_DEFINED__
#define ___ServerChannelSinkStack_FWD_DEFINED__
typedef interface _ServerChannelSinkStack _ServerChannelSinkStack;

#endif 	/* ___ServerChannelSinkStack_FWD_DEFINED__ */


#ifndef ___ClientSponsor_FWD_DEFINED__
#define ___ClientSponsor_FWD_DEFINED__
typedef interface _ClientSponsor _ClientSponsor;

#endif 	/* ___ClientSponsor_FWD_DEFINED__ */


#ifndef ___CrossContextDelegate_FWD_DEFINED__
#define ___CrossContextDelegate_FWD_DEFINED__
typedef interface _CrossContextDelegate _CrossContextDelegate;

#endif 	/* ___CrossContextDelegate_FWD_DEFINED__ */


#ifndef ___Context_FWD_DEFINED__
#define ___Context_FWD_DEFINED__
typedef interface _Context _Context;

#endif 	/* ___Context_FWD_DEFINED__ */


#ifndef ___ContextProperty_FWD_DEFINED__
#define ___ContextProperty_FWD_DEFINED__
typedef interface _ContextProperty _ContextProperty;

#endif 	/* ___ContextProperty_FWD_DEFINED__ */


#ifndef ___EnterpriseServicesHelper_FWD_DEFINED__
#define ___EnterpriseServicesHelper_FWD_DEFINED__
typedef interface _EnterpriseServicesHelper _EnterpriseServicesHelper;

#endif 	/* ___EnterpriseServicesHelper_FWD_DEFINED__ */


#ifndef ___Header_FWD_DEFINED__
#define ___Header_FWD_DEFINED__
typedef interface _Header _Header;

#endif 	/* ___Header_FWD_DEFINED__ */


#ifndef ___HeaderHandler_FWD_DEFINED__
#define ___HeaderHandler_FWD_DEFINED__
typedef interface _HeaderHandler _HeaderHandler;

#endif 	/* ___HeaderHandler_FWD_DEFINED__ */


#ifndef ___ChannelDataStore_FWD_DEFINED__
#define ___ChannelDataStore_FWD_DEFINED__
typedef interface _ChannelDataStore _ChannelDataStore;

#endif 	/* ___ChannelDataStore_FWD_DEFINED__ */


#ifndef ___TransportHeaders_FWD_DEFINED__
#define ___TransportHeaders_FWD_DEFINED__
typedef interface _TransportHeaders _TransportHeaders;

#endif 	/* ___TransportHeaders_FWD_DEFINED__ */


#ifndef ___SinkProviderData_FWD_DEFINED__
#define ___SinkProviderData_FWD_DEFINED__
typedef interface _SinkProviderData _SinkProviderData;

#endif 	/* ___SinkProviderData_FWD_DEFINED__ */


#ifndef ___BaseChannelObjectWithProperties_FWD_DEFINED__
#define ___BaseChannelObjectWithProperties_FWD_DEFINED__
typedef interface _BaseChannelObjectWithProperties _BaseChannelObjectWithProperties;

#endif 	/* ___BaseChannelObjectWithProperties_FWD_DEFINED__ */


#ifndef ___BaseChannelSinkWithProperties_FWD_DEFINED__
#define ___BaseChannelSinkWithProperties_FWD_DEFINED__
typedef interface _BaseChannelSinkWithProperties _BaseChannelSinkWithProperties;

#endif 	/* ___BaseChannelSinkWithProperties_FWD_DEFINED__ */


#ifndef ___BaseChannelWithProperties_FWD_DEFINED__
#define ___BaseChannelWithProperties_FWD_DEFINED__
typedef interface _BaseChannelWithProperties _BaseChannelWithProperties;

#endif 	/* ___BaseChannelWithProperties_FWD_DEFINED__ */


#ifndef ___LifetimeServices_FWD_DEFINED__
#define ___LifetimeServices_FWD_DEFINED__
typedef interface _LifetimeServices _LifetimeServices;

#endif 	/* ___LifetimeServices_FWD_DEFINED__ */


#ifndef ___ReturnMessage_FWD_DEFINED__
#define ___ReturnMessage_FWD_DEFINED__
typedef interface _ReturnMessage _ReturnMessage;

#endif 	/* ___ReturnMessage_FWD_DEFINED__ */


#ifndef ___MethodCall_FWD_DEFINED__
#define ___MethodCall_FWD_DEFINED__
typedef interface _MethodCall _MethodCall;

#endif 	/* ___MethodCall_FWD_DEFINED__ */


#ifndef ___ConstructionCall_FWD_DEFINED__
#define ___ConstructionCall_FWD_DEFINED__
typedef interface _ConstructionCall _ConstructionCall;

#endif 	/* ___ConstructionCall_FWD_DEFINED__ */


#ifndef ___MethodResponse_FWD_DEFINED__
#define ___MethodResponse_FWD_DEFINED__
typedef interface _MethodResponse _MethodResponse;

#endif 	/* ___MethodResponse_FWD_DEFINED__ */


#ifndef ___ConstructionResponse_FWD_DEFINED__
#define ___ConstructionResponse_FWD_DEFINED__
typedef interface _ConstructionResponse _ConstructionResponse;

#endif 	/* ___ConstructionResponse_FWD_DEFINED__ */


#ifndef ___InternalMessageWrapper_FWD_DEFINED__
#define ___InternalMessageWrapper_FWD_DEFINED__
typedef interface _InternalMessageWrapper _InternalMessageWrapper;

#endif 	/* ___InternalMessageWrapper_FWD_DEFINED__ */


#ifndef ___MethodCallMessageWrapper_FWD_DEFINED__
#define ___MethodCallMessageWrapper_FWD_DEFINED__
typedef interface _MethodCallMessageWrapper _MethodCallMessageWrapper;

#endif 	/* ___MethodCallMessageWrapper_FWD_DEFINED__ */


#ifndef ___MethodReturnMessageWrapper_FWD_DEFINED__
#define ___MethodReturnMessageWrapper_FWD_DEFINED__
typedef interface _MethodReturnMessageWrapper _MethodReturnMessageWrapper;

#endif 	/* ___MethodReturnMessageWrapper_FWD_DEFINED__ */


#ifndef ___ObjectHandle_FWD_DEFINED__
#define ___ObjectHandle_FWD_DEFINED__
typedef interface _ObjectHandle _ObjectHandle;

#endif 	/* ___ObjectHandle_FWD_DEFINED__ */


#ifndef ___ObjRef_FWD_DEFINED__
#define ___ObjRef_FWD_DEFINED__
typedef interface _ObjRef _ObjRef;

#endif 	/* ___ObjRef_FWD_DEFINED__ */


#ifndef ___OneWayAttribute_FWD_DEFINED__
#define ___OneWayAttribute_FWD_DEFINED__
typedef interface _OneWayAttribute _OneWayAttribute;

#endif 	/* ___OneWayAttribute_FWD_DEFINED__ */


#ifndef ___ProxyAttribute_FWD_DEFINED__
#define ___ProxyAttribute_FWD_DEFINED__
typedef interface _ProxyAttribute _ProxyAttribute;

#endif 	/* ___ProxyAttribute_FWD_DEFINED__ */


#ifndef ___RealProxy_FWD_DEFINED__
#define ___RealProxy_FWD_DEFINED__
typedef interface _RealProxy _RealProxy;

#endif 	/* ___RealProxy_FWD_DEFINED__ */


#ifndef ___SoapAttribute_FWD_DEFINED__
#define ___SoapAttribute_FWD_DEFINED__
typedef interface _SoapAttribute _SoapAttribute;

#endif 	/* ___SoapAttribute_FWD_DEFINED__ */


#ifndef ___SoapTypeAttribute_FWD_DEFINED__
#define ___SoapTypeAttribute_FWD_DEFINED__
typedef interface _SoapTypeAttribute _SoapTypeAttribute;

#endif 	/* ___SoapTypeAttribute_FWD_DEFINED__ */


#ifndef ___SoapMethodAttribute_FWD_DEFINED__
#define ___SoapMethodAttribute_FWD_DEFINED__
typedef interface _SoapMethodAttribute _SoapMethodAttribute;

#endif 	/* ___SoapMethodAttribute_FWD_DEFINED__ */


#ifndef ___SoapFieldAttribute_FWD_DEFINED__
#define ___SoapFieldAttribute_FWD_DEFINED__
typedef interface _SoapFieldAttribute _SoapFieldAttribute;

#endif 	/* ___SoapFieldAttribute_FWD_DEFINED__ */


#ifndef ___SoapParameterAttribute_FWD_DEFINED__
#define ___SoapParameterAttribute_FWD_DEFINED__
typedef interface _SoapParameterAttribute _SoapParameterAttribute;

#endif 	/* ___SoapParameterAttribute_FWD_DEFINED__ */


#ifndef ___RemotingConfiguration_FWD_DEFINED__
#define ___RemotingConfiguration_FWD_DEFINED__
typedef interface _RemotingConfiguration _RemotingConfiguration;

#endif 	/* ___RemotingConfiguration_FWD_DEFINED__ */


#ifndef ___TypeEntry_FWD_DEFINED__
#define ___TypeEntry_FWD_DEFINED__
typedef interface _TypeEntry _TypeEntry;

#endif 	/* ___TypeEntry_FWD_DEFINED__ */


#ifndef ___ActivatedClientTypeEntry_FWD_DEFINED__
#define ___ActivatedClientTypeEntry_FWD_DEFINED__
typedef interface _ActivatedClientTypeEntry _ActivatedClientTypeEntry;

#endif 	/* ___ActivatedClientTypeEntry_FWD_DEFINED__ */


#ifndef ___ActivatedServiceTypeEntry_FWD_DEFINED__
#define ___ActivatedServiceTypeEntry_FWD_DEFINED__
typedef interface _ActivatedServiceTypeEntry _ActivatedServiceTypeEntry;

#endif 	/* ___ActivatedServiceTypeEntry_FWD_DEFINED__ */


#ifndef ___WellKnownClientTypeEntry_FWD_DEFINED__
#define ___WellKnownClientTypeEntry_FWD_DEFINED__
typedef interface _WellKnownClientTypeEntry _WellKnownClientTypeEntry;

#endif 	/* ___WellKnownClientTypeEntry_FWD_DEFINED__ */


#ifndef ___WellKnownServiceTypeEntry_FWD_DEFINED__
#define ___WellKnownServiceTypeEntry_FWD_DEFINED__
typedef interface _WellKnownServiceTypeEntry _WellKnownServiceTypeEntry;

#endif 	/* ___WellKnownServiceTypeEntry_FWD_DEFINED__ */


#ifndef ___RemotingException_FWD_DEFINED__
#define ___RemotingException_FWD_DEFINED__
typedef interface _RemotingException _RemotingException;

#endif 	/* ___RemotingException_FWD_DEFINED__ */


#ifndef ___ServerException_FWD_DEFINED__
#define ___ServerException_FWD_DEFINED__
typedef interface _ServerException _ServerException;

#endif 	/* ___ServerException_FWD_DEFINED__ */


#ifndef ___RemotingTimeoutException_FWD_DEFINED__
#define ___RemotingTimeoutException_FWD_DEFINED__
typedef interface _RemotingTimeoutException _RemotingTimeoutException;

#endif 	/* ___RemotingTimeoutException_FWD_DEFINED__ */


#ifndef ___RemotingServices_FWD_DEFINED__
#define ___RemotingServices_FWD_DEFINED__
typedef interface _RemotingServices _RemotingServices;

#endif 	/* ___RemotingServices_FWD_DEFINED__ */


#ifndef ___InternalRemotingServices_FWD_DEFINED__
#define ___InternalRemotingServices_FWD_DEFINED__
typedef interface _InternalRemotingServices _InternalRemotingServices;

#endif 	/* ___InternalRemotingServices_FWD_DEFINED__ */


#ifndef ___MessageSurrogateFilter_FWD_DEFINED__
#define ___MessageSurrogateFilter_FWD_DEFINED__
typedef interface _MessageSurrogateFilter _MessageSurrogateFilter;

#endif 	/* ___MessageSurrogateFilter_FWD_DEFINED__ */


#ifndef ___RemotingSurrogateSelector_FWD_DEFINED__
#define ___RemotingSurrogateSelector_FWD_DEFINED__
typedef interface _RemotingSurrogateSelector _RemotingSurrogateSelector;

#endif 	/* ___RemotingSurrogateSelector_FWD_DEFINED__ */


#ifndef ___SoapServices_FWD_DEFINED__
#define ___SoapServices_FWD_DEFINED__
typedef interface _SoapServices _SoapServices;

#endif 	/* ___SoapServices_FWD_DEFINED__ */


#ifndef ___SoapDateTime_FWD_DEFINED__
#define ___SoapDateTime_FWD_DEFINED__
typedef interface _SoapDateTime _SoapDateTime;

#endif 	/* ___SoapDateTime_FWD_DEFINED__ */


#ifndef ___SoapDuration_FWD_DEFINED__
#define ___SoapDuration_FWD_DEFINED__
typedef interface _SoapDuration _SoapDuration;

#endif 	/* ___SoapDuration_FWD_DEFINED__ */


#ifndef ___SoapTime_FWD_DEFINED__
#define ___SoapTime_FWD_DEFINED__
typedef interface _SoapTime _SoapTime;

#endif 	/* ___SoapTime_FWD_DEFINED__ */


#ifndef ___SoapDate_FWD_DEFINED__
#define ___SoapDate_FWD_DEFINED__
typedef interface _SoapDate _SoapDate;

#endif 	/* ___SoapDate_FWD_DEFINED__ */


#ifndef ___SoapYearMonth_FWD_DEFINED__
#define ___SoapYearMonth_FWD_DEFINED__
typedef interface _SoapYearMonth _SoapYearMonth;

#endif 	/* ___SoapYearMonth_FWD_DEFINED__ */


#ifndef ___SoapYear_FWD_DEFINED__
#define ___SoapYear_FWD_DEFINED__
typedef interface _SoapYear _SoapYear;

#endif 	/* ___SoapYear_FWD_DEFINED__ */


#ifndef ___SoapMonthDay_FWD_DEFINED__
#define ___SoapMonthDay_FWD_DEFINED__
typedef interface _SoapMonthDay _SoapMonthDay;

#endif 	/* ___SoapMonthDay_FWD_DEFINED__ */


#ifndef ___SoapDay_FWD_DEFINED__
#define ___SoapDay_FWD_DEFINED__
typedef interface _SoapDay _SoapDay;

#endif 	/* ___SoapDay_FWD_DEFINED__ */


#ifndef ___SoapMonth_FWD_DEFINED__
#define ___SoapMonth_FWD_DEFINED__
typedef interface _SoapMonth _SoapMonth;

#endif 	/* ___SoapMonth_FWD_DEFINED__ */


#ifndef ___SoapHexBinary_FWD_DEFINED__
#define ___SoapHexBinary_FWD_DEFINED__
typedef interface _SoapHexBinary _SoapHexBinary;

#endif 	/* ___SoapHexBinary_FWD_DEFINED__ */


#ifndef ___SoapBase64Binary_FWD_DEFINED__
#define ___SoapBase64Binary_FWD_DEFINED__
typedef interface _SoapBase64Binary _SoapBase64Binary;

#endif 	/* ___SoapBase64Binary_FWD_DEFINED__ */


#ifndef ___SoapInteger_FWD_DEFINED__
#define ___SoapInteger_FWD_DEFINED__
typedef interface _SoapInteger _SoapInteger;

#endif 	/* ___SoapInteger_FWD_DEFINED__ */


#ifndef ___SoapPositiveInteger_FWD_DEFINED__
#define ___SoapPositiveInteger_FWD_DEFINED__
typedef interface _SoapPositiveInteger _SoapPositiveInteger;

#endif 	/* ___SoapPositiveInteger_FWD_DEFINED__ */


#ifndef ___SoapNonPositiveInteger_FWD_DEFINED__
#define ___SoapNonPositiveInteger_FWD_DEFINED__
typedef interface _SoapNonPositiveInteger _SoapNonPositiveInteger;

#endif 	/* ___SoapNonPositiveInteger_FWD_DEFINED__ */


#ifndef ___SoapNonNegativeInteger_FWD_DEFINED__
#define ___SoapNonNegativeInteger_FWD_DEFINED__
typedef interface _SoapNonNegativeInteger _SoapNonNegativeInteger;

#endif 	/* ___SoapNonNegativeInteger_FWD_DEFINED__ */


#ifndef ___SoapNegativeInteger_FWD_DEFINED__
#define ___SoapNegativeInteger_FWD_DEFINED__
typedef interface _SoapNegativeInteger _SoapNegativeInteger;

#endif 	/* ___SoapNegativeInteger_FWD_DEFINED__ */


#ifndef ___SoapAnyUri_FWD_DEFINED__
#define ___SoapAnyUri_FWD_DEFINED__
typedef interface _SoapAnyUri _SoapAnyUri;

#endif 	/* ___SoapAnyUri_FWD_DEFINED__ */


#ifndef ___SoapQName_FWD_DEFINED__
#define ___SoapQName_FWD_DEFINED__
typedef interface _SoapQName _SoapQName;

#endif 	/* ___SoapQName_FWD_DEFINED__ */


#ifndef ___SoapNotation_FWD_DEFINED__
#define ___SoapNotation_FWD_DEFINED__
typedef interface _SoapNotation _SoapNotation;

#endif 	/* ___SoapNotation_FWD_DEFINED__ */


#ifndef ___SoapNormalizedString_FWD_DEFINED__
#define ___SoapNormalizedString_FWD_DEFINED__
typedef interface _SoapNormalizedString _SoapNormalizedString;

#endif 	/* ___SoapNormalizedString_FWD_DEFINED__ */


#ifndef ___SoapToken_FWD_DEFINED__
#define ___SoapToken_FWD_DEFINED__
typedef interface _SoapToken _SoapToken;

#endif 	/* ___SoapToken_FWD_DEFINED__ */


#ifndef ___SoapLanguage_FWD_DEFINED__
#define ___SoapLanguage_FWD_DEFINED__
typedef interface _SoapLanguage _SoapLanguage;

#endif 	/* ___SoapLanguage_FWD_DEFINED__ */


#ifndef ___SoapName_FWD_DEFINED__
#define ___SoapName_FWD_DEFINED__
typedef interface _SoapName _SoapName;

#endif 	/* ___SoapName_FWD_DEFINED__ */


#ifndef ___SoapIdrefs_FWD_DEFINED__
#define ___SoapIdrefs_FWD_DEFINED__
typedef interface _SoapIdrefs _SoapIdrefs;

#endif 	/* ___SoapIdrefs_FWD_DEFINED__ */


#ifndef ___SoapEntities_FWD_DEFINED__
#define ___SoapEntities_FWD_DEFINED__
typedef interface _SoapEntities _SoapEntities;

#endif 	/* ___SoapEntities_FWD_DEFINED__ */


#ifndef ___SoapNmtoken_FWD_DEFINED__
#define ___SoapNmtoken_FWD_DEFINED__
typedef interface _SoapNmtoken _SoapNmtoken;

#endif 	/* ___SoapNmtoken_FWD_DEFINED__ */


#ifndef ___SoapNmtokens_FWD_DEFINED__
#define ___SoapNmtokens_FWD_DEFINED__
typedef interface _SoapNmtokens _SoapNmtokens;

#endif 	/* ___SoapNmtokens_FWD_DEFINED__ */


#ifndef ___SoapNcName_FWD_DEFINED__
#define ___SoapNcName_FWD_DEFINED__
typedef interface _SoapNcName _SoapNcName;

#endif 	/* ___SoapNcName_FWD_DEFINED__ */


#ifndef ___SoapId_FWD_DEFINED__
#define ___SoapId_FWD_DEFINED__
typedef interface _SoapId _SoapId;

#endif 	/* ___SoapId_FWD_DEFINED__ */


#ifndef ___SoapIdref_FWD_DEFINED__
#define ___SoapIdref_FWD_DEFINED__
typedef interface _SoapIdref _SoapIdref;

#endif 	/* ___SoapIdref_FWD_DEFINED__ */


#ifndef ___SoapEntity_FWD_DEFINED__
#define ___SoapEntity_FWD_DEFINED__
typedef interface _SoapEntity _SoapEntity;

#endif 	/* ___SoapEntity_FWD_DEFINED__ */


#ifndef ___SynchronizationAttribute_FWD_DEFINED__
#define ___SynchronizationAttribute_FWD_DEFINED__
typedef interface _SynchronizationAttribute _SynchronizationAttribute;

#endif 	/* ___SynchronizationAttribute_FWD_DEFINED__ */


#ifndef ___TrackingServices_FWD_DEFINED__
#define ___TrackingServices_FWD_DEFINED__
typedef interface _TrackingServices _TrackingServices;

#endif 	/* ___TrackingServices_FWD_DEFINED__ */


#ifndef ___UrlAttribute_FWD_DEFINED__
#define ___UrlAttribute_FWD_DEFINED__
typedef interface _UrlAttribute _UrlAttribute;

#endif 	/* ___UrlAttribute_FWD_DEFINED__ */


#ifndef ___IsolatedStorage_FWD_DEFINED__
#define ___IsolatedStorage_FWD_DEFINED__
typedef interface _IsolatedStorage _IsolatedStorage;

#endif 	/* ___IsolatedStorage_FWD_DEFINED__ */


#ifndef ___IsolatedStorageFile_FWD_DEFINED__
#define ___IsolatedStorageFile_FWD_DEFINED__
typedef interface _IsolatedStorageFile _IsolatedStorageFile;

#endif 	/* ___IsolatedStorageFile_FWD_DEFINED__ */


#ifndef ___IsolatedStorageFileStream_FWD_DEFINED__
#define ___IsolatedStorageFileStream_FWD_DEFINED__
typedef interface _IsolatedStorageFileStream _IsolatedStorageFileStream;

#endif 	/* ___IsolatedStorageFileStream_FWD_DEFINED__ */


#ifndef ___IsolatedStorageException_FWD_DEFINED__
#define ___IsolatedStorageException_FWD_DEFINED__
typedef interface _IsolatedStorageException _IsolatedStorageException;

#endif 	/* ___IsolatedStorageException_FWD_DEFINED__ */


#ifndef ___InternalRM_FWD_DEFINED__
#define ___InternalRM_FWD_DEFINED__
typedef interface _InternalRM _InternalRM;

#endif 	/* ___InternalRM_FWD_DEFINED__ */


#ifndef ___InternalST_FWD_DEFINED__
#define ___InternalST_FWD_DEFINED__
typedef interface _InternalST _InternalST;

#endif 	/* ___InternalST_FWD_DEFINED__ */


#ifndef ___SoapMessage_FWD_DEFINED__
#define ___SoapMessage_FWD_DEFINED__
typedef interface _SoapMessage _SoapMessage;

#endif 	/* ___SoapMessage_FWD_DEFINED__ */


#ifndef ___SoapFault_FWD_DEFINED__
#define ___SoapFault_FWD_DEFINED__
typedef interface _SoapFault _SoapFault;

#endif 	/* ___SoapFault_FWD_DEFINED__ */


#ifndef ___ServerFault_FWD_DEFINED__
#define ___ServerFault_FWD_DEFINED__
typedef interface _ServerFault _ServerFault;

#endif 	/* ___ServerFault_FWD_DEFINED__ */


#ifndef ___BinaryFormatter_FWD_DEFINED__
#define ___BinaryFormatter_FWD_DEFINED__
typedef interface _BinaryFormatter _BinaryFormatter;

#endif 	/* ___BinaryFormatter_FWD_DEFINED__ */


#ifndef ___DynamicILInfo_FWD_DEFINED__
#define ___DynamicILInfo_FWD_DEFINED__
typedef interface _DynamicILInfo _DynamicILInfo;

#endif 	/* ___DynamicILInfo_FWD_DEFINED__ */


#ifndef ___DynamicMethod_FWD_DEFINED__
#define ___DynamicMethod_FWD_DEFINED__
typedef interface _DynamicMethod _DynamicMethod;

#endif 	/* ___DynamicMethod_FWD_DEFINED__ */


#ifndef ___OpCodes_FWD_DEFINED__
#define ___OpCodes_FWD_DEFINED__
typedef interface _OpCodes _OpCodes;

#endif 	/* ___OpCodes_FWD_DEFINED__ */


#ifndef ___GenericTypeParameterBuilder_FWD_DEFINED__
#define ___GenericTypeParameterBuilder_FWD_DEFINED__
typedef interface _GenericTypeParameterBuilder _GenericTypeParameterBuilder;

#endif 	/* ___GenericTypeParameterBuilder_FWD_DEFINED__ */


#ifndef ___UnmanagedMarshal_FWD_DEFINED__
#define ___UnmanagedMarshal_FWD_DEFINED__
typedef interface _UnmanagedMarshal _UnmanagedMarshal;

#endif 	/* ___UnmanagedMarshal_FWD_DEFINED__ */


#ifndef ___KeySizes_FWD_DEFINED__
#define ___KeySizes_FWD_DEFINED__
typedef interface _KeySizes _KeySizes;

#endif 	/* ___KeySizes_FWD_DEFINED__ */


#ifndef ___CryptographicException_FWD_DEFINED__
#define ___CryptographicException_FWD_DEFINED__
typedef interface _CryptographicException _CryptographicException;

#endif 	/* ___CryptographicException_FWD_DEFINED__ */


#ifndef ___CryptographicUnexpectedOperationException_FWD_DEFINED__
#define ___CryptographicUnexpectedOperationException_FWD_DEFINED__
typedef interface _CryptographicUnexpectedOperationException _CryptographicUnexpectedOperationException;

#endif 	/* ___CryptographicUnexpectedOperationException_FWD_DEFINED__ */


#ifndef ___RandomNumberGenerator_FWD_DEFINED__
#define ___RandomNumberGenerator_FWD_DEFINED__
typedef interface _RandomNumberGenerator _RandomNumberGenerator;

#endif 	/* ___RandomNumberGenerator_FWD_DEFINED__ */


#ifndef ___RNGCryptoServiceProvider_FWD_DEFINED__
#define ___RNGCryptoServiceProvider_FWD_DEFINED__
typedef interface _RNGCryptoServiceProvider _RNGCryptoServiceProvider;

#endif 	/* ___RNGCryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___AsymmetricAlgorithm_FWD_DEFINED__
#define ___AsymmetricAlgorithm_FWD_DEFINED__
typedef interface _AsymmetricAlgorithm _AsymmetricAlgorithm;

#endif 	/* ___AsymmetricAlgorithm_FWD_DEFINED__ */


#ifndef ___AsymmetricKeyExchangeDeformatter_FWD_DEFINED__
#define ___AsymmetricKeyExchangeDeformatter_FWD_DEFINED__
typedef interface _AsymmetricKeyExchangeDeformatter _AsymmetricKeyExchangeDeformatter;

#endif 	/* ___AsymmetricKeyExchangeDeformatter_FWD_DEFINED__ */


#ifndef ___AsymmetricKeyExchangeFormatter_FWD_DEFINED__
#define ___AsymmetricKeyExchangeFormatter_FWD_DEFINED__
typedef interface _AsymmetricKeyExchangeFormatter _AsymmetricKeyExchangeFormatter;

#endif 	/* ___AsymmetricKeyExchangeFormatter_FWD_DEFINED__ */


#ifndef ___AsymmetricSignatureDeformatter_FWD_DEFINED__
#define ___AsymmetricSignatureDeformatter_FWD_DEFINED__
typedef interface _AsymmetricSignatureDeformatter _AsymmetricSignatureDeformatter;

#endif 	/* ___AsymmetricSignatureDeformatter_FWD_DEFINED__ */


#ifndef ___AsymmetricSignatureFormatter_FWD_DEFINED__
#define ___AsymmetricSignatureFormatter_FWD_DEFINED__
typedef interface _AsymmetricSignatureFormatter _AsymmetricSignatureFormatter;

#endif 	/* ___AsymmetricSignatureFormatter_FWD_DEFINED__ */


#ifndef ___ToBase64Transform_FWD_DEFINED__
#define ___ToBase64Transform_FWD_DEFINED__
typedef interface _ToBase64Transform _ToBase64Transform;

#endif 	/* ___ToBase64Transform_FWD_DEFINED__ */


#ifndef ___FromBase64Transform_FWD_DEFINED__
#define ___FromBase64Transform_FWD_DEFINED__
typedef interface _FromBase64Transform _FromBase64Transform;

#endif 	/* ___FromBase64Transform_FWD_DEFINED__ */


#ifndef ___CryptoAPITransform_FWD_DEFINED__
#define ___CryptoAPITransform_FWD_DEFINED__
typedef interface _CryptoAPITransform _CryptoAPITransform;

#endif 	/* ___CryptoAPITransform_FWD_DEFINED__ */


#ifndef ___CspParameters_FWD_DEFINED__
#define ___CspParameters_FWD_DEFINED__
typedef interface _CspParameters _CspParameters;

#endif 	/* ___CspParameters_FWD_DEFINED__ */


#ifndef ___CryptoConfig_FWD_DEFINED__
#define ___CryptoConfig_FWD_DEFINED__
typedef interface _CryptoConfig _CryptoConfig;

#endif 	/* ___CryptoConfig_FWD_DEFINED__ */


#ifndef ___CryptoStream_FWD_DEFINED__
#define ___CryptoStream_FWD_DEFINED__
typedef interface _CryptoStream _CryptoStream;

#endif 	/* ___CryptoStream_FWD_DEFINED__ */


#ifndef ___SymmetricAlgorithm_FWD_DEFINED__
#define ___SymmetricAlgorithm_FWD_DEFINED__
typedef interface _SymmetricAlgorithm _SymmetricAlgorithm;

#endif 	/* ___SymmetricAlgorithm_FWD_DEFINED__ */


#ifndef ___DES_FWD_DEFINED__
#define ___DES_FWD_DEFINED__
typedef interface _DES _DES;

#endif 	/* ___DES_FWD_DEFINED__ */


#ifndef ___DESCryptoServiceProvider_FWD_DEFINED__
#define ___DESCryptoServiceProvider_FWD_DEFINED__
typedef interface _DESCryptoServiceProvider _DESCryptoServiceProvider;

#endif 	/* ___DESCryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___DeriveBytes_FWD_DEFINED__
#define ___DeriveBytes_FWD_DEFINED__
typedef interface _DeriveBytes _DeriveBytes;

#endif 	/* ___DeriveBytes_FWD_DEFINED__ */


#ifndef ___DSA_FWD_DEFINED__
#define ___DSA_FWD_DEFINED__
typedef interface _DSA _DSA;

#endif 	/* ___DSA_FWD_DEFINED__ */


#ifndef ___DSACryptoServiceProvider_FWD_DEFINED__
#define ___DSACryptoServiceProvider_FWD_DEFINED__
typedef interface _DSACryptoServiceProvider _DSACryptoServiceProvider;

#endif 	/* ___DSACryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___DSASignatureDeformatter_FWD_DEFINED__
#define ___DSASignatureDeformatter_FWD_DEFINED__
typedef interface _DSASignatureDeformatter _DSASignatureDeformatter;

#endif 	/* ___DSASignatureDeformatter_FWD_DEFINED__ */


#ifndef ___DSASignatureFormatter_FWD_DEFINED__
#define ___DSASignatureFormatter_FWD_DEFINED__
typedef interface _DSASignatureFormatter _DSASignatureFormatter;

#endif 	/* ___DSASignatureFormatter_FWD_DEFINED__ */


#ifndef ___HashAlgorithm_FWD_DEFINED__
#define ___HashAlgorithm_FWD_DEFINED__
typedef interface _HashAlgorithm _HashAlgorithm;

#endif 	/* ___HashAlgorithm_FWD_DEFINED__ */


#ifndef ___KeyedHashAlgorithm_FWD_DEFINED__
#define ___KeyedHashAlgorithm_FWD_DEFINED__
typedef interface _KeyedHashAlgorithm _KeyedHashAlgorithm;

#endif 	/* ___KeyedHashAlgorithm_FWD_DEFINED__ */


#ifndef ___HMAC_FWD_DEFINED__
#define ___HMAC_FWD_DEFINED__
typedef interface _HMAC _HMAC;

#endif 	/* ___HMAC_FWD_DEFINED__ */


#ifndef ___HMACMD5_FWD_DEFINED__
#define ___HMACMD5_FWD_DEFINED__
typedef interface _HMACMD5 _HMACMD5;

#endif 	/* ___HMACMD5_FWD_DEFINED__ */


#ifndef ___HMACRIPEMD160_FWD_DEFINED__
#define ___HMACRIPEMD160_FWD_DEFINED__
typedef interface _HMACRIPEMD160 _HMACRIPEMD160;

#endif 	/* ___HMACRIPEMD160_FWD_DEFINED__ */


#ifndef ___HMACSHA1_FWD_DEFINED__
#define ___HMACSHA1_FWD_DEFINED__
typedef interface _HMACSHA1 _HMACSHA1;

#endif 	/* ___HMACSHA1_FWD_DEFINED__ */


#ifndef ___HMACSHA256_FWD_DEFINED__
#define ___HMACSHA256_FWD_DEFINED__
typedef interface _HMACSHA256 _HMACSHA256;

#endif 	/* ___HMACSHA256_FWD_DEFINED__ */


#ifndef ___HMACSHA384_FWD_DEFINED__
#define ___HMACSHA384_FWD_DEFINED__
typedef interface _HMACSHA384 _HMACSHA384;

#endif 	/* ___HMACSHA384_FWD_DEFINED__ */


#ifndef ___HMACSHA512_FWD_DEFINED__
#define ___HMACSHA512_FWD_DEFINED__
typedef interface _HMACSHA512 _HMACSHA512;

#endif 	/* ___HMACSHA512_FWD_DEFINED__ */


#ifndef ___CspKeyContainerInfo_FWD_DEFINED__
#define ___CspKeyContainerInfo_FWD_DEFINED__
typedef interface _CspKeyContainerInfo _CspKeyContainerInfo;

#endif 	/* ___CspKeyContainerInfo_FWD_DEFINED__ */


#ifndef ___MACTripleDES_FWD_DEFINED__
#define ___MACTripleDES_FWD_DEFINED__
typedef interface _MACTripleDES _MACTripleDES;

#endif 	/* ___MACTripleDES_FWD_DEFINED__ */


#ifndef ___MD5_FWD_DEFINED__
#define ___MD5_FWD_DEFINED__
typedef interface _MD5 _MD5;

#endif 	/* ___MD5_FWD_DEFINED__ */


#ifndef ___MD5CryptoServiceProvider_FWD_DEFINED__
#define ___MD5CryptoServiceProvider_FWD_DEFINED__
typedef interface _MD5CryptoServiceProvider _MD5CryptoServiceProvider;

#endif 	/* ___MD5CryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___MaskGenerationMethod_FWD_DEFINED__
#define ___MaskGenerationMethod_FWD_DEFINED__
typedef interface _MaskGenerationMethod _MaskGenerationMethod;

#endif 	/* ___MaskGenerationMethod_FWD_DEFINED__ */


#ifndef ___PasswordDeriveBytes_FWD_DEFINED__
#define ___PasswordDeriveBytes_FWD_DEFINED__
typedef interface _PasswordDeriveBytes _PasswordDeriveBytes;

#endif 	/* ___PasswordDeriveBytes_FWD_DEFINED__ */


#ifndef ___PKCS1MaskGenerationMethod_FWD_DEFINED__
#define ___PKCS1MaskGenerationMethod_FWD_DEFINED__
typedef interface _PKCS1MaskGenerationMethod _PKCS1MaskGenerationMethod;

#endif 	/* ___PKCS1MaskGenerationMethod_FWD_DEFINED__ */


#ifndef ___RC2_FWD_DEFINED__
#define ___RC2_FWD_DEFINED__
typedef interface _RC2 _RC2;

#endif 	/* ___RC2_FWD_DEFINED__ */


#ifndef ___RC2CryptoServiceProvider_FWD_DEFINED__
#define ___RC2CryptoServiceProvider_FWD_DEFINED__
typedef interface _RC2CryptoServiceProvider _RC2CryptoServiceProvider;

#endif 	/* ___RC2CryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___Rfc2898DeriveBytes_FWD_DEFINED__
#define ___Rfc2898DeriveBytes_FWD_DEFINED__
typedef interface _Rfc2898DeriveBytes _Rfc2898DeriveBytes;

#endif 	/* ___Rfc2898DeriveBytes_FWD_DEFINED__ */


#ifndef ___RIPEMD160_FWD_DEFINED__
#define ___RIPEMD160_FWD_DEFINED__
typedef interface _RIPEMD160 _RIPEMD160;

#endif 	/* ___RIPEMD160_FWD_DEFINED__ */


#ifndef ___RIPEMD160Managed_FWD_DEFINED__
#define ___RIPEMD160Managed_FWD_DEFINED__
typedef interface _RIPEMD160Managed _RIPEMD160Managed;

#endif 	/* ___RIPEMD160Managed_FWD_DEFINED__ */


#ifndef ___RSA_FWD_DEFINED__
#define ___RSA_FWD_DEFINED__
typedef interface _RSA _RSA;

#endif 	/* ___RSA_FWD_DEFINED__ */


#ifndef ___RSACryptoServiceProvider_FWD_DEFINED__
#define ___RSACryptoServiceProvider_FWD_DEFINED__
typedef interface _RSACryptoServiceProvider _RSACryptoServiceProvider;

#endif 	/* ___RSACryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___RSAOAEPKeyExchangeDeformatter_FWD_DEFINED__
#define ___RSAOAEPKeyExchangeDeformatter_FWD_DEFINED__
typedef interface _RSAOAEPKeyExchangeDeformatter _RSAOAEPKeyExchangeDeformatter;

#endif 	/* ___RSAOAEPKeyExchangeDeformatter_FWD_DEFINED__ */


#ifndef ___RSAOAEPKeyExchangeFormatter_FWD_DEFINED__
#define ___RSAOAEPKeyExchangeFormatter_FWD_DEFINED__
typedef interface _RSAOAEPKeyExchangeFormatter _RSAOAEPKeyExchangeFormatter;

#endif 	/* ___RSAOAEPKeyExchangeFormatter_FWD_DEFINED__ */


#ifndef ___RSAPKCS1KeyExchangeDeformatter_FWD_DEFINED__
#define ___RSAPKCS1KeyExchangeDeformatter_FWD_DEFINED__
typedef interface _RSAPKCS1KeyExchangeDeformatter _RSAPKCS1KeyExchangeDeformatter;

#endif 	/* ___RSAPKCS1KeyExchangeDeformatter_FWD_DEFINED__ */


#ifndef ___RSAPKCS1KeyExchangeFormatter_FWD_DEFINED__
#define ___RSAPKCS1KeyExchangeFormatter_FWD_DEFINED__
typedef interface _RSAPKCS1KeyExchangeFormatter _RSAPKCS1KeyExchangeFormatter;

#endif 	/* ___RSAPKCS1KeyExchangeFormatter_FWD_DEFINED__ */


#ifndef ___RSAPKCS1SignatureDeformatter_FWD_DEFINED__
#define ___RSAPKCS1SignatureDeformatter_FWD_DEFINED__
typedef interface _RSAPKCS1SignatureDeformatter _RSAPKCS1SignatureDeformatter;

#endif 	/* ___RSAPKCS1SignatureDeformatter_FWD_DEFINED__ */


#ifndef ___RSAPKCS1SignatureFormatter_FWD_DEFINED__
#define ___RSAPKCS1SignatureFormatter_FWD_DEFINED__
typedef interface _RSAPKCS1SignatureFormatter _RSAPKCS1SignatureFormatter;

#endif 	/* ___RSAPKCS1SignatureFormatter_FWD_DEFINED__ */


#ifndef ___Rijndael_FWD_DEFINED__
#define ___Rijndael_FWD_DEFINED__
typedef interface _Rijndael _Rijndael;

#endif 	/* ___Rijndael_FWD_DEFINED__ */


#ifndef ___RijndaelManaged_FWD_DEFINED__
#define ___RijndaelManaged_FWD_DEFINED__
typedef interface _RijndaelManaged _RijndaelManaged;

#endif 	/* ___RijndaelManaged_FWD_DEFINED__ */


#ifndef ___RijndaelManagedTransform_FWD_DEFINED__
#define ___RijndaelManagedTransform_FWD_DEFINED__
typedef interface _RijndaelManagedTransform _RijndaelManagedTransform;

#endif 	/* ___RijndaelManagedTransform_FWD_DEFINED__ */


#ifndef ___SHA1_FWD_DEFINED__
#define ___SHA1_FWD_DEFINED__
typedef interface _SHA1 _SHA1;

#endif 	/* ___SHA1_FWD_DEFINED__ */


#ifndef ___SHA1CryptoServiceProvider_FWD_DEFINED__
#define ___SHA1CryptoServiceProvider_FWD_DEFINED__
typedef interface _SHA1CryptoServiceProvider _SHA1CryptoServiceProvider;

#endif 	/* ___SHA1CryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___SHA1Managed_FWD_DEFINED__
#define ___SHA1Managed_FWD_DEFINED__
typedef interface _SHA1Managed _SHA1Managed;

#endif 	/* ___SHA1Managed_FWD_DEFINED__ */


#ifndef ___SHA256_FWD_DEFINED__
#define ___SHA256_FWD_DEFINED__
typedef interface _SHA256 _SHA256;

#endif 	/* ___SHA256_FWD_DEFINED__ */


#ifndef ___SHA256Managed_FWD_DEFINED__
#define ___SHA256Managed_FWD_DEFINED__
typedef interface _SHA256Managed _SHA256Managed;

#endif 	/* ___SHA256Managed_FWD_DEFINED__ */


#ifndef ___SHA384_FWD_DEFINED__
#define ___SHA384_FWD_DEFINED__
typedef interface _SHA384 _SHA384;

#endif 	/* ___SHA384_FWD_DEFINED__ */


#ifndef ___SHA384Managed_FWD_DEFINED__
#define ___SHA384Managed_FWD_DEFINED__
typedef interface _SHA384Managed _SHA384Managed;

#endif 	/* ___SHA384Managed_FWD_DEFINED__ */


#ifndef ___SHA512_FWD_DEFINED__
#define ___SHA512_FWD_DEFINED__
typedef interface _SHA512 _SHA512;

#endif 	/* ___SHA512_FWD_DEFINED__ */


#ifndef ___SHA512Managed_FWD_DEFINED__
#define ___SHA512Managed_FWD_DEFINED__
typedef interface _SHA512Managed _SHA512Managed;

#endif 	/* ___SHA512Managed_FWD_DEFINED__ */


#ifndef ___SignatureDescription_FWD_DEFINED__
#define ___SignatureDescription_FWD_DEFINED__
typedef interface _SignatureDescription _SignatureDescription;

#endif 	/* ___SignatureDescription_FWD_DEFINED__ */


#ifndef ___TripleDES_FWD_DEFINED__
#define ___TripleDES_FWD_DEFINED__
typedef interface _TripleDES _TripleDES;

#endif 	/* ___TripleDES_FWD_DEFINED__ */


#ifndef ___TripleDESCryptoServiceProvider_FWD_DEFINED__
#define ___TripleDESCryptoServiceProvider_FWD_DEFINED__
typedef interface _TripleDESCryptoServiceProvider _TripleDESCryptoServiceProvider;

#endif 	/* ___TripleDESCryptoServiceProvider_FWD_DEFINED__ */


#ifndef ___X509Certificate_FWD_DEFINED__
#define ___X509Certificate_FWD_DEFINED__
typedef interface _X509Certificate _X509Certificate;

#endif 	/* ___X509Certificate_FWD_DEFINED__ */


#ifndef __Object_FWD_DEFINED__
#define __Object_FWD_DEFINED__

#ifdef __cplusplus
typedef class Object Object;
#else
typedef struct Object Object;
#endif /* __cplusplus */

#endif 	/* __Object_FWD_DEFINED__ */


#ifndef __Array_FWD_DEFINED__
#define __Array_FWD_DEFINED__

#ifdef __cplusplus
typedef class Array Array;
#else
typedef struct Array Array;
#endif /* __cplusplus */

#endif 	/* __Array_FWD_DEFINED__ */


#ifndef __ValueType_FWD_DEFINED__
#define __ValueType_FWD_DEFINED__

#ifdef __cplusplus
typedef class ValueType ValueType;
#else
typedef struct ValueType ValueType;
#endif /* __cplusplus */

#endif 	/* __ValueType_FWD_DEFINED__ */


#ifndef __Enum_FWD_DEFINED__
#define __Enum_FWD_DEFINED__

#ifdef __cplusplus
typedef class Enum Enum;
#else
typedef struct Enum Enum;
#endif /* __cplusplus */

#endif 	/* __Enum_FWD_DEFINED__ */


#ifndef __String_FWD_DEFINED__
#define __String_FWD_DEFINED__

#ifdef __cplusplus
typedef class String String;
#else
typedef struct String String;
#endif /* __cplusplus */

#endif 	/* __String_FWD_DEFINED__ */


#ifndef __StringComparer_FWD_DEFINED__
#define __StringComparer_FWD_DEFINED__

#ifdef __cplusplus
typedef class StringComparer StringComparer;
#else
typedef struct StringComparer StringComparer;
#endif /* __cplusplus */

#endif 	/* __StringComparer_FWD_DEFINED__ */


#ifndef __StringBuilder_FWD_DEFINED__
#define __StringBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class StringBuilder StringBuilder;
#else
typedef struct StringBuilder StringBuilder;
#endif /* __cplusplus */

#endif 	/* __StringBuilder_FWD_DEFINED__ */


#ifndef __Exception_FWD_DEFINED__
#define __Exception_FWD_DEFINED__

#ifdef __cplusplus
typedef class Exception Exception;
#else
typedef struct Exception Exception;
#endif /* __cplusplus */

#endif 	/* __Exception_FWD_DEFINED__ */


#ifndef __SystemException_FWD_DEFINED__
#define __SystemException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SystemException SystemException;
#else
typedef struct SystemException SystemException;
#endif /* __cplusplus */

#endif 	/* __SystemException_FWD_DEFINED__ */


#ifndef __OutOfMemoryException_FWD_DEFINED__
#define __OutOfMemoryException_FWD_DEFINED__

#ifdef __cplusplus
typedef class OutOfMemoryException OutOfMemoryException;
#else
typedef struct OutOfMemoryException OutOfMemoryException;
#endif /* __cplusplus */

#endif 	/* __OutOfMemoryException_FWD_DEFINED__ */


#ifndef __StackOverflowException_FWD_DEFINED__
#define __StackOverflowException_FWD_DEFINED__

#ifdef __cplusplus
typedef class StackOverflowException StackOverflowException;
#else
typedef struct StackOverflowException StackOverflowException;
#endif /* __cplusplus */

#endif 	/* __StackOverflowException_FWD_DEFINED__ */


#ifndef __DataMisalignedException_FWD_DEFINED__
#define __DataMisalignedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class DataMisalignedException DataMisalignedException;
#else
typedef struct DataMisalignedException DataMisalignedException;
#endif /* __cplusplus */

#endif 	/* __DataMisalignedException_FWD_DEFINED__ */


#ifndef __ExecutionEngineException_FWD_DEFINED__
#define __ExecutionEngineException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExecutionEngineException ExecutionEngineException;
#else
typedef struct ExecutionEngineException ExecutionEngineException;
#endif /* __cplusplus */

#endif 	/* __ExecutionEngineException_FWD_DEFINED__ */


#ifndef __Delegate_FWD_DEFINED__
#define __Delegate_FWD_DEFINED__

#ifdef __cplusplus
typedef class Delegate Delegate;
#else
typedef struct Delegate Delegate;
#endif /* __cplusplus */

#endif 	/* __Delegate_FWD_DEFINED__ */


#ifndef __MulticastDelegate_FWD_DEFINED__
#define __MulticastDelegate_FWD_DEFINED__

#ifdef __cplusplus
typedef class MulticastDelegate MulticastDelegate;
#else
typedef struct MulticastDelegate MulticastDelegate;
#endif /* __cplusplus */

#endif 	/* __MulticastDelegate_FWD_DEFINED__ */


#ifndef __MemberAccessException_FWD_DEFINED__
#define __MemberAccessException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MemberAccessException MemberAccessException;
#else
typedef struct MemberAccessException MemberAccessException;
#endif /* __cplusplus */

#endif 	/* __MemberAccessException_FWD_DEFINED__ */


#ifndef __Activator_FWD_DEFINED__
#define __Activator_FWD_DEFINED__

#ifdef __cplusplus
typedef class Activator Activator;
#else
typedef struct Activator Activator;
#endif /* __cplusplus */

#endif 	/* __Activator_FWD_DEFINED__ */


#ifndef __AccessViolationException_FWD_DEFINED__
#define __AccessViolationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class AccessViolationException AccessViolationException;
#else
typedef struct AccessViolationException AccessViolationException;
#endif /* __cplusplus */

#endif 	/* __AccessViolationException_FWD_DEFINED__ */


#ifndef __ApplicationActivator_FWD_DEFINED__
#define __ApplicationActivator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationActivator ApplicationActivator;
#else
typedef struct ApplicationActivator ApplicationActivator;
#endif /* __cplusplus */

#endif 	/* __ApplicationActivator_FWD_DEFINED__ */


#ifndef __ApplicationException_FWD_DEFINED__
#define __ApplicationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationException ApplicationException;
#else
typedef struct ApplicationException ApplicationException;
#endif /* __cplusplus */

#endif 	/* __ApplicationException_FWD_DEFINED__ */


#ifndef __EventArgs_FWD_DEFINED__
#define __EventArgs_FWD_DEFINED__

#ifdef __cplusplus
typedef class EventArgs EventArgs;
#else
typedef struct EventArgs EventArgs;
#endif /* __cplusplus */

#endif 	/* __EventArgs_FWD_DEFINED__ */


#ifndef __ResolveEventArgs_FWD_DEFINED__
#define __ResolveEventArgs_FWD_DEFINED__

#ifdef __cplusplus
typedef class ResolveEventArgs ResolveEventArgs;
#else
typedef struct ResolveEventArgs ResolveEventArgs;
#endif /* __cplusplus */

#endif 	/* __ResolveEventArgs_FWD_DEFINED__ */


#ifndef __AssemblyLoadEventArgs_FWD_DEFINED__
#define __AssemblyLoadEventArgs_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyLoadEventArgs AssemblyLoadEventArgs;
#else
typedef struct AssemblyLoadEventArgs AssemblyLoadEventArgs;
#endif /* __cplusplus */

#endif 	/* __AssemblyLoadEventArgs_FWD_DEFINED__ */


#ifndef __ResolveEventHandler_FWD_DEFINED__
#define __ResolveEventHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class ResolveEventHandler ResolveEventHandler;
#else
typedef struct ResolveEventHandler ResolveEventHandler;
#endif /* __cplusplus */

#endif 	/* __ResolveEventHandler_FWD_DEFINED__ */


#ifndef __AssemblyLoadEventHandler_FWD_DEFINED__
#define __AssemblyLoadEventHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyLoadEventHandler AssemblyLoadEventHandler;
#else
typedef struct AssemblyLoadEventHandler AssemblyLoadEventHandler;
#endif /* __cplusplus */

#endif 	/* __AssemblyLoadEventHandler_FWD_DEFINED__ */


#ifndef __AppDomainInitializer_FWD_DEFINED__
#define __AppDomainInitializer_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppDomainInitializer AppDomainInitializer;
#else
typedef struct AppDomainInitializer AppDomainInitializer;
#endif /* __cplusplus */

#endif 	/* __AppDomainInitializer_FWD_DEFINED__ */


#ifndef __MarshalByRefObject_FWD_DEFINED__
#define __MarshalByRefObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class MarshalByRefObject MarshalByRefObject;
#else
typedef struct MarshalByRefObject MarshalByRefObject;
#endif /* __cplusplus */

#endif 	/* __MarshalByRefObject_FWD_DEFINED__ */


#ifndef __AppDomain_FWD_DEFINED__
#define __AppDomain_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppDomain AppDomain;
#else
typedef struct AppDomain AppDomain;
#endif /* __cplusplus */

#endif 	/* __AppDomain_FWD_DEFINED__ */


#ifndef __CrossAppDomainDelegate_FWD_DEFINED__
#define __CrossAppDomainDelegate_FWD_DEFINED__

#ifdef __cplusplus
typedef class CrossAppDomainDelegate CrossAppDomainDelegate;
#else
typedef struct CrossAppDomainDelegate CrossAppDomainDelegate;
#endif /* __cplusplus */

#endif 	/* __CrossAppDomainDelegate_FWD_DEFINED__ */


#ifndef __AppDomainManager_FWD_DEFINED__
#define __AppDomainManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppDomainManager AppDomainManager;
#else
typedef struct AppDomainManager AppDomainManager;
#endif /* __cplusplus */

#endif 	/* __AppDomainManager_FWD_DEFINED__ */


#ifndef __AppDomainSetup_FWD_DEFINED__
#define __AppDomainSetup_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppDomainSetup AppDomainSetup;
#else
typedef struct AppDomainSetup AppDomainSetup;
#endif /* __cplusplus */

#endif 	/* __AppDomainSetup_FWD_DEFINED__ */


#ifndef __Attribute_FWD_DEFINED__
#define __Attribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class Attribute Attribute;
#else
typedef struct Attribute Attribute;
#endif /* __cplusplus */

#endif 	/* __Attribute_FWD_DEFINED__ */


#ifndef __LoaderOptimizationAttribute_FWD_DEFINED__
#define __LoaderOptimizationAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class LoaderOptimizationAttribute LoaderOptimizationAttribute;
#else
typedef struct LoaderOptimizationAttribute LoaderOptimizationAttribute;
#endif /* __cplusplus */

#endif 	/* __LoaderOptimizationAttribute_FWD_DEFINED__ */


#ifndef __AppDomainUnloadedException_FWD_DEFINED__
#define __AppDomainUnloadedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class AppDomainUnloadedException AppDomainUnloadedException;
#else
typedef struct AppDomainUnloadedException AppDomainUnloadedException;
#endif /* __cplusplus */

#endif 	/* __AppDomainUnloadedException_FWD_DEFINED__ */


#ifndef __ActivationArguments_FWD_DEFINED__
#define __ActivationArguments_FWD_DEFINED__

#ifdef __cplusplus
typedef class ActivationArguments ActivationArguments;
#else
typedef struct ActivationArguments ActivationArguments;
#endif /* __cplusplus */

#endif 	/* __ActivationArguments_FWD_DEFINED__ */


#ifndef __ApplicationId_FWD_DEFINED__
#define __ApplicationId_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationId ApplicationId;
#else
typedef struct ApplicationId ApplicationId;
#endif /* __cplusplus */

#endif 	/* __ApplicationId_FWD_DEFINED__ */


#ifndef __ArgumentException_FWD_DEFINED__
#define __ArgumentException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ArgumentException ArgumentException;
#else
typedef struct ArgumentException ArgumentException;
#endif /* __cplusplus */

#endif 	/* __ArgumentException_FWD_DEFINED__ */


#ifndef __ArgumentNullException_FWD_DEFINED__
#define __ArgumentNullException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ArgumentNullException ArgumentNullException;
#else
typedef struct ArgumentNullException ArgumentNullException;
#endif /* __cplusplus */

#endif 	/* __ArgumentNullException_FWD_DEFINED__ */


#ifndef __ArgumentOutOfRangeException_FWD_DEFINED__
#define __ArgumentOutOfRangeException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ArgumentOutOfRangeException ArgumentOutOfRangeException;
#else
typedef struct ArgumentOutOfRangeException ArgumentOutOfRangeException;
#endif /* __cplusplus */

#endif 	/* __ArgumentOutOfRangeException_FWD_DEFINED__ */


#ifndef __ArithmeticException_FWD_DEFINED__
#define __ArithmeticException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ArithmeticException ArithmeticException;
#else
typedef struct ArithmeticException ArithmeticException;
#endif /* __cplusplus */

#endif 	/* __ArithmeticException_FWD_DEFINED__ */


#ifndef __ArrayTypeMismatchException_FWD_DEFINED__
#define __ArrayTypeMismatchException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ArrayTypeMismatchException ArrayTypeMismatchException;
#else
typedef struct ArrayTypeMismatchException ArrayTypeMismatchException;
#endif /* __cplusplus */

#endif 	/* __ArrayTypeMismatchException_FWD_DEFINED__ */


#ifndef __AsyncCallback_FWD_DEFINED__
#define __AsyncCallback_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsyncCallback AsyncCallback;
#else
typedef struct AsyncCallback AsyncCallback;
#endif /* __cplusplus */

#endif 	/* __AsyncCallback_FWD_DEFINED__ */


#ifndef __AttributeUsageAttribute_FWD_DEFINED__
#define __AttributeUsageAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AttributeUsageAttribute AttributeUsageAttribute;
#else
typedef struct AttributeUsageAttribute AttributeUsageAttribute;
#endif /* __cplusplus */

#endif 	/* __AttributeUsageAttribute_FWD_DEFINED__ */


#ifndef __BadImageFormatException_FWD_DEFINED__
#define __BadImageFormatException_FWD_DEFINED__

#ifdef __cplusplus
typedef class BadImageFormatException BadImageFormatException;
#else
typedef struct BadImageFormatException BadImageFormatException;
#endif /* __cplusplus */

#endif 	/* __BadImageFormatException_FWD_DEFINED__ */


#ifndef __Buffer_FWD_DEFINED__
#define __Buffer_FWD_DEFINED__

#ifdef __cplusplus
typedef class Buffer Buffer;
#else
typedef struct Buffer Buffer;
#endif /* __cplusplus */

#endif 	/* __Buffer_FWD_DEFINED__ */


#ifndef __CannotUnloadAppDomainException_FWD_DEFINED__
#define __CannotUnloadAppDomainException_FWD_DEFINED__

#ifdef __cplusplus
typedef class CannotUnloadAppDomainException CannotUnloadAppDomainException;
#else
typedef struct CannotUnloadAppDomainException CannotUnloadAppDomainException;
#endif /* __cplusplus */

#endif 	/* __CannotUnloadAppDomainException_FWD_DEFINED__ */


#ifndef __CharEnumerator_FWD_DEFINED__
#define __CharEnumerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class CharEnumerator CharEnumerator;
#else
typedef struct CharEnumerator CharEnumerator;
#endif /* __cplusplus */

#endif 	/* __CharEnumerator_FWD_DEFINED__ */


#ifndef __CLSCompliantAttribute_FWD_DEFINED__
#define __CLSCompliantAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class CLSCompliantAttribute CLSCompliantAttribute;
#else
typedef struct CLSCompliantAttribute CLSCompliantAttribute;
#endif /* __cplusplus */

#endif 	/* __CLSCompliantAttribute_FWD_DEFINED__ */


#ifndef __TypeUnloadedException_FWD_DEFINED__
#define __TypeUnloadedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeUnloadedException TypeUnloadedException;
#else
typedef struct TypeUnloadedException TypeUnloadedException;
#endif /* __cplusplus */

#endif 	/* __TypeUnloadedException_FWD_DEFINED__ */


#ifndef __CriticalFinalizerObject_FWD_DEFINED__
#define __CriticalFinalizerObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class CriticalFinalizerObject CriticalFinalizerObject;
#else
typedef struct CriticalFinalizerObject CriticalFinalizerObject;
#endif /* __cplusplus */

#endif 	/* __CriticalFinalizerObject_FWD_DEFINED__ */


#ifndef __ContextMarshalException_FWD_DEFINED__
#define __ContextMarshalException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContextMarshalException ContextMarshalException;
#else
typedef struct ContextMarshalException ContextMarshalException;
#endif /* __cplusplus */

#endif 	/* __ContextMarshalException_FWD_DEFINED__ */


#ifndef __ContextBoundObject_FWD_DEFINED__
#define __ContextBoundObject_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContextBoundObject ContextBoundObject;
#else
typedef struct ContextBoundObject ContextBoundObject;
#endif /* __cplusplus */

#endif 	/* __ContextBoundObject_FWD_DEFINED__ */


#ifndef __ContextStaticAttribute_FWD_DEFINED__
#define __ContextStaticAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContextStaticAttribute ContextStaticAttribute;
#else
typedef struct ContextStaticAttribute ContextStaticAttribute;
#endif /* __cplusplus */

#endif 	/* __ContextStaticAttribute_FWD_DEFINED__ */


#ifndef __TimeZone_FWD_DEFINED__
#define __TimeZone_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimeZone TimeZone;
#else
typedef struct TimeZone TimeZone;
#endif /* __cplusplus */

#endif 	/* __TimeZone_FWD_DEFINED__ */


#ifndef __DBNull_FWD_DEFINED__
#define __DBNull_FWD_DEFINED__

#ifdef __cplusplus
typedef class DBNull DBNull;
#else
typedef struct DBNull DBNull;
#endif /* __cplusplus */

#endif 	/* __DBNull_FWD_DEFINED__ */


#ifndef __Binder_FWD_DEFINED__
#define __Binder_FWD_DEFINED__

#ifdef __cplusplus
typedef class Binder Binder;
#else
typedef struct Binder Binder;
#endif /* __cplusplus */

#endif 	/* __Binder_FWD_DEFINED__ */


#ifndef __DivideByZeroException_FWD_DEFINED__
#define __DivideByZeroException_FWD_DEFINED__

#ifdef __cplusplus
typedef class DivideByZeroException DivideByZeroException;
#else
typedef struct DivideByZeroException DivideByZeroException;
#endif /* __cplusplus */

#endif 	/* __DivideByZeroException_FWD_DEFINED__ */


#ifndef __DuplicateWaitObjectException_FWD_DEFINED__
#define __DuplicateWaitObjectException_FWD_DEFINED__

#ifdef __cplusplus
typedef class DuplicateWaitObjectException DuplicateWaitObjectException;
#else
typedef struct DuplicateWaitObjectException DuplicateWaitObjectException;
#endif /* __cplusplus */

#endif 	/* __DuplicateWaitObjectException_FWD_DEFINED__ */


#ifndef __TypeLoadException_FWD_DEFINED__
#define __TypeLoadException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLoadException TypeLoadException;
#else
typedef struct TypeLoadException TypeLoadException;
#endif /* __cplusplus */

#endif 	/* __TypeLoadException_FWD_DEFINED__ */


#ifndef __EntryPointNotFoundException_FWD_DEFINED__
#define __EntryPointNotFoundException_FWD_DEFINED__

#ifdef __cplusplus
typedef class EntryPointNotFoundException EntryPointNotFoundException;
#else
typedef struct EntryPointNotFoundException EntryPointNotFoundException;
#endif /* __cplusplus */

#endif 	/* __EntryPointNotFoundException_FWD_DEFINED__ */


#ifndef __DllNotFoundException_FWD_DEFINED__
#define __DllNotFoundException_FWD_DEFINED__

#ifdef __cplusplus
typedef class DllNotFoundException DllNotFoundException;
#else
typedef struct DllNotFoundException DllNotFoundException;
#endif /* __cplusplus */

#endif 	/* __DllNotFoundException_FWD_DEFINED__ */


#ifndef __Environment_FWD_DEFINED__
#define __Environment_FWD_DEFINED__

#ifdef __cplusplus
typedef class Environment Environment;
#else
typedef struct Environment Environment;
#endif /* __cplusplus */

#endif 	/* __Environment_FWD_DEFINED__ */


#ifndef __EventHandler_FWD_DEFINED__
#define __EventHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class EventHandler EventHandler;
#else
typedef struct EventHandler EventHandler;
#endif /* __cplusplus */

#endif 	/* __EventHandler_FWD_DEFINED__ */


#ifndef __FieldAccessException_FWD_DEFINED__
#define __FieldAccessException_FWD_DEFINED__

#ifdef __cplusplus
typedef class FieldAccessException FieldAccessException;
#else
typedef struct FieldAccessException FieldAccessException;
#endif /* __cplusplus */

#endif 	/* __FieldAccessException_FWD_DEFINED__ */


#ifndef __FlagsAttribute_FWD_DEFINED__
#define __FlagsAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class FlagsAttribute FlagsAttribute;
#else
typedef struct FlagsAttribute FlagsAttribute;
#endif /* __cplusplus */

#endif 	/* __FlagsAttribute_FWD_DEFINED__ */


#ifndef __FormatException_FWD_DEFINED__
#define __FormatException_FWD_DEFINED__

#ifdef __cplusplus
typedef class FormatException FormatException;
#else
typedef struct FormatException FormatException;
#endif /* __cplusplus */

#endif 	/* __FormatException_FWD_DEFINED__ */


#ifndef __IndexOutOfRangeException_FWD_DEFINED__
#define __IndexOutOfRangeException_FWD_DEFINED__

#ifdef __cplusplus
typedef class IndexOutOfRangeException IndexOutOfRangeException;
#else
typedef struct IndexOutOfRangeException IndexOutOfRangeException;
#endif /* __cplusplus */

#endif 	/* __IndexOutOfRangeException_FWD_DEFINED__ */


#ifndef __InvalidCastException_FWD_DEFINED__
#define __InvalidCastException_FWD_DEFINED__

#ifdef __cplusplus
typedef class InvalidCastException InvalidCastException;
#else
typedef struct InvalidCastException InvalidCastException;
#endif /* __cplusplus */

#endif 	/* __InvalidCastException_FWD_DEFINED__ */


#ifndef __InvalidOperationException_FWD_DEFINED__
#define __InvalidOperationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class InvalidOperationException InvalidOperationException;
#else
typedef struct InvalidOperationException InvalidOperationException;
#endif /* __cplusplus */

#endif 	/* __InvalidOperationException_FWD_DEFINED__ */


#ifndef __InvalidProgramException_FWD_DEFINED__
#define __InvalidProgramException_FWD_DEFINED__

#ifdef __cplusplus
typedef class InvalidProgramException InvalidProgramException;
#else
typedef struct InvalidProgramException InvalidProgramException;
#endif /* __cplusplus */

#endif 	/* __InvalidProgramException_FWD_DEFINED__ */


#ifndef __LocalDataStoreSlot_FWD_DEFINED__
#define __LocalDataStoreSlot_FWD_DEFINED__

#ifdef __cplusplus
typedef class LocalDataStoreSlot LocalDataStoreSlot;
#else
typedef struct LocalDataStoreSlot LocalDataStoreSlot;
#endif /* __cplusplus */

#endif 	/* __LocalDataStoreSlot_FWD_DEFINED__ */


#ifndef __MethodAccessException_FWD_DEFINED__
#define __MethodAccessException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodAccessException MethodAccessException;
#else
typedef struct MethodAccessException MethodAccessException;
#endif /* __cplusplus */

#endif 	/* __MethodAccessException_FWD_DEFINED__ */


#ifndef __MissingMemberException_FWD_DEFINED__
#define __MissingMemberException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MissingMemberException MissingMemberException;
#else
typedef struct MissingMemberException MissingMemberException;
#endif /* __cplusplus */

#endif 	/* __MissingMemberException_FWD_DEFINED__ */


#ifndef __MissingFieldException_FWD_DEFINED__
#define __MissingFieldException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MissingFieldException MissingFieldException;
#else
typedef struct MissingFieldException MissingFieldException;
#endif /* __cplusplus */

#endif 	/* __MissingFieldException_FWD_DEFINED__ */


#ifndef __MissingMethodException_FWD_DEFINED__
#define __MissingMethodException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MissingMethodException MissingMethodException;
#else
typedef struct MissingMethodException MissingMethodException;
#endif /* __cplusplus */

#endif 	/* __MissingMethodException_FWD_DEFINED__ */


#ifndef __MulticastNotSupportedException_FWD_DEFINED__
#define __MulticastNotSupportedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MulticastNotSupportedException MulticastNotSupportedException;
#else
typedef struct MulticastNotSupportedException MulticastNotSupportedException;
#endif /* __cplusplus */

#endif 	/* __MulticastNotSupportedException_FWD_DEFINED__ */


#ifndef __NonSerializedAttribute_FWD_DEFINED__
#define __NonSerializedAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class NonSerializedAttribute NonSerializedAttribute;
#else
typedef struct NonSerializedAttribute NonSerializedAttribute;
#endif /* __cplusplus */

#endif 	/* __NonSerializedAttribute_FWD_DEFINED__ */


#ifndef __NotFiniteNumberException_FWD_DEFINED__
#define __NotFiniteNumberException_FWD_DEFINED__

#ifdef __cplusplus
typedef class NotFiniteNumberException NotFiniteNumberException;
#else
typedef struct NotFiniteNumberException NotFiniteNumberException;
#endif /* __cplusplus */

#endif 	/* __NotFiniteNumberException_FWD_DEFINED__ */


#ifndef __NotImplementedException_FWD_DEFINED__
#define __NotImplementedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class NotImplementedException NotImplementedException;
#else
typedef struct NotImplementedException NotImplementedException;
#endif /* __cplusplus */

#endif 	/* __NotImplementedException_FWD_DEFINED__ */


#ifndef __NotSupportedException_FWD_DEFINED__
#define __NotSupportedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class NotSupportedException NotSupportedException;
#else
typedef struct NotSupportedException NotSupportedException;
#endif /* __cplusplus */

#endif 	/* __NotSupportedException_FWD_DEFINED__ */


#ifndef __NullReferenceException_FWD_DEFINED__
#define __NullReferenceException_FWD_DEFINED__

#ifdef __cplusplus
typedef class NullReferenceException NullReferenceException;
#else
typedef struct NullReferenceException NullReferenceException;
#endif /* __cplusplus */

#endif 	/* __NullReferenceException_FWD_DEFINED__ */


#ifndef __ObjectDisposedException_FWD_DEFINED__
#define __ObjectDisposedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObjectDisposedException ObjectDisposedException;
#else
typedef struct ObjectDisposedException ObjectDisposedException;
#endif /* __cplusplus */

#endif 	/* __ObjectDisposedException_FWD_DEFINED__ */


#ifndef __ObsoleteAttribute_FWD_DEFINED__
#define __ObsoleteAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObsoleteAttribute ObsoleteAttribute;
#else
typedef struct ObsoleteAttribute ObsoleteAttribute;
#endif /* __cplusplus */

#endif 	/* __ObsoleteAttribute_FWD_DEFINED__ */


#ifndef __OperatingSystem_FWD_DEFINED__
#define __OperatingSystem_FWD_DEFINED__

#ifdef __cplusplus
typedef class OperatingSystem OperatingSystem;
#else
typedef struct OperatingSystem OperatingSystem;
#endif /* __cplusplus */

#endif 	/* __OperatingSystem_FWD_DEFINED__ */


#ifndef __OperationCanceledException_FWD_DEFINED__
#define __OperationCanceledException_FWD_DEFINED__

#ifdef __cplusplus
typedef class OperationCanceledException OperationCanceledException;
#else
typedef struct OperationCanceledException OperationCanceledException;
#endif /* __cplusplus */

#endif 	/* __OperationCanceledException_FWD_DEFINED__ */


#ifndef __OverflowException_FWD_DEFINED__
#define __OverflowException_FWD_DEFINED__

#ifdef __cplusplus
typedef class OverflowException OverflowException;
#else
typedef struct OverflowException OverflowException;
#endif /* __cplusplus */

#endif 	/* __OverflowException_FWD_DEFINED__ */


#ifndef __ParamArrayAttribute_FWD_DEFINED__
#define __ParamArrayAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ParamArrayAttribute ParamArrayAttribute;
#else
typedef struct ParamArrayAttribute ParamArrayAttribute;
#endif /* __cplusplus */

#endif 	/* __ParamArrayAttribute_FWD_DEFINED__ */


#ifndef __PlatformNotSupportedException_FWD_DEFINED__
#define __PlatformNotSupportedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class PlatformNotSupportedException PlatformNotSupportedException;
#else
typedef struct PlatformNotSupportedException PlatformNotSupportedException;
#endif /* __cplusplus */

#endif 	/* __PlatformNotSupportedException_FWD_DEFINED__ */


#ifndef __Random_FWD_DEFINED__
#define __Random_FWD_DEFINED__

#ifdef __cplusplus
typedef class Random Random;
#else
typedef struct Random Random;
#endif /* __cplusplus */

#endif 	/* __Random_FWD_DEFINED__ */


#ifndef __RankException_FWD_DEFINED__
#define __RankException_FWD_DEFINED__

#ifdef __cplusplus
typedef class RankException RankException;
#else
typedef struct RankException RankException;
#endif /* __cplusplus */

#endif 	/* __RankException_FWD_DEFINED__ */


#ifndef __MemberInfo_FWD_DEFINED__
#define __MemberInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class MemberInfo MemberInfo;
#else
typedef struct MemberInfo MemberInfo;
#endif /* __cplusplus */

#endif 	/* __MemberInfo_FWD_DEFINED__ */


#ifndef __Type_FWD_DEFINED__
#define __Type_FWD_DEFINED__

#ifdef __cplusplus
typedef class Type Type;
#else
typedef struct Type Type;
#endif /* __cplusplus */

#endif 	/* __Type_FWD_DEFINED__ */


#ifndef __SerializableAttribute_FWD_DEFINED__
#define __SerializableAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SerializableAttribute SerializableAttribute;
#else
typedef struct SerializableAttribute SerializableAttribute;
#endif /* __cplusplus */

#endif 	/* __SerializableAttribute_FWD_DEFINED__ */


#ifndef __TimeoutException_FWD_DEFINED__
#define __TimeoutException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimeoutException TimeoutException;
#else
typedef struct TimeoutException TimeoutException;
#endif /* __cplusplus */

#endif 	/* __TimeoutException_FWD_DEFINED__ */


#ifndef __TypeInitializationException_FWD_DEFINED__
#define __TypeInitializationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeInitializationException TypeInitializationException;
#else
typedef struct TypeInitializationException TypeInitializationException;
#endif /* __cplusplus */

#endif 	/* __TypeInitializationException_FWD_DEFINED__ */


#ifndef __UnauthorizedAccessException_FWD_DEFINED__
#define __UnauthorizedAccessException_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnauthorizedAccessException UnauthorizedAccessException;
#else
typedef struct UnauthorizedAccessException UnauthorizedAccessException;
#endif /* __cplusplus */

#endif 	/* __UnauthorizedAccessException_FWD_DEFINED__ */


#ifndef __UnhandledExceptionEventArgs_FWD_DEFINED__
#define __UnhandledExceptionEventArgs_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnhandledExceptionEventArgs UnhandledExceptionEventArgs;
#else
typedef struct UnhandledExceptionEventArgs UnhandledExceptionEventArgs;
#endif /* __cplusplus */

#endif 	/* __UnhandledExceptionEventArgs_FWD_DEFINED__ */


#ifndef __UnhandledExceptionEventHandler_FWD_DEFINED__
#define __UnhandledExceptionEventHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnhandledExceptionEventHandler UnhandledExceptionEventHandler;
#else
typedef struct UnhandledExceptionEventHandler UnhandledExceptionEventHandler;
#endif /* __cplusplus */

#endif 	/* __UnhandledExceptionEventHandler_FWD_DEFINED__ */


#ifndef __Version_FWD_DEFINED__
#define __Version_FWD_DEFINED__

#ifdef __cplusplus
typedef class Version Version;
#else
typedef struct Version Version;
#endif /* __cplusplus */

#endif 	/* __Version_FWD_DEFINED__ */


#ifndef __WeakReference_FWD_DEFINED__
#define __WeakReference_FWD_DEFINED__

#ifdef __cplusplus
typedef class WeakReference WeakReference;
#else
typedef struct WeakReference WeakReference;
#endif /* __cplusplus */

#endif 	/* __WeakReference_FWD_DEFINED__ */


#ifndef __WaitHandle_FWD_DEFINED__
#define __WaitHandle_FWD_DEFINED__

#ifdef __cplusplus
typedef class WaitHandle WaitHandle;
#else
typedef struct WaitHandle WaitHandle;
#endif /* __cplusplus */

#endif 	/* __WaitHandle_FWD_DEFINED__ */


#ifndef __EventWaitHandle_FWD_DEFINED__
#define __EventWaitHandle_FWD_DEFINED__

#ifdef __cplusplus
typedef class EventWaitHandle EventWaitHandle;
#else
typedef struct EventWaitHandle EventWaitHandle;
#endif /* __cplusplus */

#endif 	/* __EventWaitHandle_FWD_DEFINED__ */


#ifndef __AutoResetEvent_FWD_DEFINED__
#define __AutoResetEvent_FWD_DEFINED__

#ifdef __cplusplus
typedef class AutoResetEvent AutoResetEvent;
#else
typedef struct AutoResetEvent AutoResetEvent;
#endif /* __cplusplus */

#endif 	/* __AutoResetEvent_FWD_DEFINED__ */


#ifndef __ContextCallback_FWD_DEFINED__
#define __ContextCallback_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContextCallback ContextCallback;
#else
typedef struct ContextCallback ContextCallback;
#endif /* __cplusplus */

#endif 	/* __ContextCallback_FWD_DEFINED__ */


#ifndef __ManualResetEvent_FWD_DEFINED__
#define __ManualResetEvent_FWD_DEFINED__

#ifdef __cplusplus
typedef class ManualResetEvent ManualResetEvent;
#else
typedef struct ManualResetEvent ManualResetEvent;
#endif /* __cplusplus */

#endif 	/* __ManualResetEvent_FWD_DEFINED__ */


#ifndef __Monitor_FWD_DEFINED__
#define __Monitor_FWD_DEFINED__

#ifdef __cplusplus
typedef class Monitor Monitor;
#else
typedef struct Monitor Monitor;
#endif /* __cplusplus */

#endif 	/* __Monitor_FWD_DEFINED__ */


#ifndef __Mutex_FWD_DEFINED__
#define __Mutex_FWD_DEFINED__

#ifdef __cplusplus
typedef class Mutex Mutex;
#else
typedef struct Mutex Mutex;
#endif /* __cplusplus */

#endif 	/* __Mutex_FWD_DEFINED__ */


#ifndef __Overlapped_FWD_DEFINED__
#define __Overlapped_FWD_DEFINED__

#ifdef __cplusplus
typedef class Overlapped Overlapped;
#else
typedef struct Overlapped Overlapped;
#endif /* __cplusplus */

#endif 	/* __Overlapped_FWD_DEFINED__ */


#ifndef __ReaderWriterLock_FWD_DEFINED__
#define __ReaderWriterLock_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReaderWriterLock ReaderWriterLock;
#else
typedef struct ReaderWriterLock ReaderWriterLock;
#endif /* __cplusplus */

#endif 	/* __ReaderWriterLock_FWD_DEFINED__ */


#ifndef __SynchronizationLockException_FWD_DEFINED__
#define __SynchronizationLockException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SynchronizationLockException SynchronizationLockException;
#else
typedef struct SynchronizationLockException SynchronizationLockException;
#endif /* __cplusplus */

#endif 	/* __SynchronizationLockException_FWD_DEFINED__ */


#ifndef __Thread_FWD_DEFINED__
#define __Thread_FWD_DEFINED__

#ifdef __cplusplus
typedef class Thread Thread;
#else
typedef struct Thread Thread;
#endif /* __cplusplus */

#endif 	/* __Thread_FWD_DEFINED__ */


#ifndef __ThreadAbortException_FWD_DEFINED__
#define __ThreadAbortException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadAbortException ThreadAbortException;
#else
typedef struct ThreadAbortException ThreadAbortException;
#endif /* __cplusplus */

#endif 	/* __ThreadAbortException_FWD_DEFINED__ */


#ifndef __ThreadInterruptedException_FWD_DEFINED__
#define __ThreadInterruptedException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadInterruptedException ThreadInterruptedException;
#else
typedef struct ThreadInterruptedException ThreadInterruptedException;
#endif /* __cplusplus */

#endif 	/* __ThreadInterruptedException_FWD_DEFINED__ */


#ifndef __RegisteredWaitHandle_FWD_DEFINED__
#define __RegisteredWaitHandle_FWD_DEFINED__

#ifdef __cplusplus
typedef class RegisteredWaitHandle RegisteredWaitHandle;
#else
typedef struct RegisteredWaitHandle RegisteredWaitHandle;
#endif /* __cplusplus */

#endif 	/* __RegisteredWaitHandle_FWD_DEFINED__ */


#ifndef __WaitCallback_FWD_DEFINED__
#define __WaitCallback_FWD_DEFINED__

#ifdef __cplusplus
typedef class WaitCallback WaitCallback;
#else
typedef struct WaitCallback WaitCallback;
#endif /* __cplusplus */

#endif 	/* __WaitCallback_FWD_DEFINED__ */


#ifndef __WaitOrTimerCallback_FWD_DEFINED__
#define __WaitOrTimerCallback_FWD_DEFINED__

#ifdef __cplusplus
typedef class WaitOrTimerCallback WaitOrTimerCallback;
#else
typedef struct WaitOrTimerCallback WaitOrTimerCallback;
#endif /* __cplusplus */

#endif 	/* __WaitOrTimerCallback_FWD_DEFINED__ */


#ifndef __IOCompletionCallback_FWD_DEFINED__
#define __IOCompletionCallback_FWD_DEFINED__

#ifdef __cplusplus
typedef class IOCompletionCallback IOCompletionCallback;
#else
typedef struct IOCompletionCallback IOCompletionCallback;
#endif /* __cplusplus */

#endif 	/* __IOCompletionCallback_FWD_DEFINED__ */


#ifndef __ThreadStart_FWD_DEFINED__
#define __ThreadStart_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadStart ThreadStart;
#else
typedef struct ThreadStart ThreadStart;
#endif /* __cplusplus */

#endif 	/* __ThreadStart_FWD_DEFINED__ */


#ifndef __ThreadStateException_FWD_DEFINED__
#define __ThreadStateException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadStateException ThreadStateException;
#else
typedef struct ThreadStateException ThreadStateException;
#endif /* __cplusplus */

#endif 	/* __ThreadStateException_FWD_DEFINED__ */


#ifndef __ThreadStaticAttribute_FWD_DEFINED__
#define __ThreadStaticAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThreadStaticAttribute ThreadStaticAttribute;
#else
typedef struct ThreadStaticAttribute ThreadStaticAttribute;
#endif /* __cplusplus */

#endif 	/* __ThreadStaticAttribute_FWD_DEFINED__ */


#ifndef __Timeout_FWD_DEFINED__
#define __Timeout_FWD_DEFINED__

#ifdef __cplusplus
typedef class Timeout Timeout;
#else
typedef struct Timeout Timeout;
#endif /* __cplusplus */

#endif 	/* __Timeout_FWD_DEFINED__ */


#ifndef __TimerCallback_FWD_DEFINED__
#define __TimerCallback_FWD_DEFINED__

#ifdef __cplusplus
typedef class TimerCallback TimerCallback;
#else
typedef struct TimerCallback TimerCallback;
#endif /* __cplusplus */

#endif 	/* __TimerCallback_FWD_DEFINED__ */


#ifndef __Timer_FWD_DEFINED__
#define __Timer_FWD_DEFINED__

#ifdef __cplusplus
typedef class Timer Timer;
#else
typedef struct Timer Timer;
#endif /* __cplusplus */

#endif 	/* __Timer_FWD_DEFINED__ */


#ifndef __STAThreadAttribute_FWD_DEFINED__
#define __STAThreadAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class STAThreadAttribute STAThreadAttribute;
#else
typedef struct STAThreadAttribute STAThreadAttribute;
#endif /* __cplusplus */

#endif 	/* __STAThreadAttribute_FWD_DEFINED__ */


#ifndef __MTAThreadAttribute_FWD_DEFINED__
#define __MTAThreadAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class MTAThreadAttribute MTAThreadAttribute;
#else
typedef struct MTAThreadAttribute MTAThreadAttribute;
#endif /* __cplusplus */

#endif 	/* __MTAThreadAttribute_FWD_DEFINED__ */


#ifndef __ArrayList_FWD_DEFINED__
#define __ArrayList_FWD_DEFINED__

#ifdef __cplusplus
typedef class ArrayList ArrayList;
#else
typedef struct ArrayList ArrayList;
#endif /* __cplusplus */

#endif 	/* __ArrayList_FWD_DEFINED__ */


#ifndef __BitArray_FWD_DEFINED__
#define __BitArray_FWD_DEFINED__

#ifdef __cplusplus
typedef class BitArray BitArray;
#else
typedef struct BitArray BitArray;
#endif /* __cplusplus */

#endif 	/* __BitArray_FWD_DEFINED__ */


#ifndef __CaseInsensitiveComparer_FWD_DEFINED__
#define __CaseInsensitiveComparer_FWD_DEFINED__

#ifdef __cplusplus
typedef class CaseInsensitiveComparer CaseInsensitiveComparer;
#else
typedef struct CaseInsensitiveComparer CaseInsensitiveComparer;
#endif /* __cplusplus */

#endif 	/* __CaseInsensitiveComparer_FWD_DEFINED__ */


#ifndef __CaseInsensitiveHashCodeProvider_FWD_DEFINED__
#define __CaseInsensitiveHashCodeProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class CaseInsensitiveHashCodeProvider CaseInsensitiveHashCodeProvider;
#else
typedef struct CaseInsensitiveHashCodeProvider CaseInsensitiveHashCodeProvider;
#endif /* __cplusplus */

#endif 	/* __CaseInsensitiveHashCodeProvider_FWD_DEFINED__ */


#ifndef __CollectionBase_FWD_DEFINED__
#define __CollectionBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class CollectionBase CollectionBase;
#else
typedef struct CollectionBase CollectionBase;
#endif /* __cplusplus */

#endif 	/* __CollectionBase_FWD_DEFINED__ */


#ifndef __Comparer_FWD_DEFINED__
#define __Comparer_FWD_DEFINED__

#ifdef __cplusplus
typedef class Comparer Comparer;
#else
typedef struct Comparer Comparer;
#endif /* __cplusplus */

#endif 	/* __Comparer_FWD_DEFINED__ */


#ifndef __DictionaryBase_FWD_DEFINED__
#define __DictionaryBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class DictionaryBase DictionaryBase;
#else
typedef struct DictionaryBase DictionaryBase;
#endif /* __cplusplus */

#endif 	/* __DictionaryBase_FWD_DEFINED__ */


#ifndef __Hashtable_FWD_DEFINED__
#define __Hashtable_FWD_DEFINED__

#ifdef __cplusplus
typedef class Hashtable Hashtable;
#else
typedef struct Hashtable Hashtable;
#endif /* __cplusplus */

#endif 	/* __Hashtable_FWD_DEFINED__ */


#ifndef __Queue_FWD_DEFINED__
#define __Queue_FWD_DEFINED__

#ifdef __cplusplus
typedef class Queue Queue;
#else
typedef struct Queue Queue;
#endif /* __cplusplus */

#endif 	/* __Queue_FWD_DEFINED__ */


#ifndef __ReadOnlyCollectionBase_FWD_DEFINED__
#define __ReadOnlyCollectionBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReadOnlyCollectionBase ReadOnlyCollectionBase;
#else
typedef struct ReadOnlyCollectionBase ReadOnlyCollectionBase;
#endif /* __cplusplus */

#endif 	/* __ReadOnlyCollectionBase_FWD_DEFINED__ */


#ifndef __SortedList_FWD_DEFINED__
#define __SortedList_FWD_DEFINED__

#ifdef __cplusplus
typedef class SortedList SortedList;
#else
typedef struct SortedList SortedList;
#endif /* __cplusplus */

#endif 	/* __SortedList_FWD_DEFINED__ */


#ifndef __Stack_FWD_DEFINED__
#define __Stack_FWD_DEFINED__

#ifdef __cplusplus
typedef class Stack Stack;
#else
typedef struct Stack Stack;
#endif /* __cplusplus */

#endif 	/* __Stack_FWD_DEFINED__ */


#ifndef __Nullable_FWD_DEFINED__
#define __Nullable_FWD_DEFINED__

#ifdef __cplusplus
typedef class Nullable Nullable;
#else
typedef struct Nullable Nullable;
#endif /* __cplusplus */

#endif 	/* __Nullable_FWD_DEFINED__ */


#ifndef __KeyNotFoundException_FWD_DEFINED__
#define __KeyNotFoundException_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyNotFoundException KeyNotFoundException;
#else
typedef struct KeyNotFoundException KeyNotFoundException;
#endif /* __cplusplus */

#endif 	/* __KeyNotFoundException_FWD_DEFINED__ */


#ifndef __ConditionalAttribute_FWD_DEFINED__
#define __ConditionalAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConditionalAttribute ConditionalAttribute;
#else
typedef struct ConditionalAttribute ConditionalAttribute;
#endif /* __cplusplus */

#endif 	/* __ConditionalAttribute_FWD_DEFINED__ */


#ifndef __Debugger_FWD_DEFINED__
#define __Debugger_FWD_DEFINED__

#ifdef __cplusplus
typedef class Debugger Debugger;
#else
typedef struct Debugger Debugger;
#endif /* __cplusplus */

#endif 	/* __Debugger_FWD_DEFINED__ */


#ifndef __DebuggerStepThroughAttribute_FWD_DEFINED__
#define __DebuggerStepThroughAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerStepThroughAttribute DebuggerStepThroughAttribute;
#else
typedef struct DebuggerStepThroughAttribute DebuggerStepThroughAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerStepThroughAttribute_FWD_DEFINED__ */


#ifndef __DebuggerStepperBoundaryAttribute_FWD_DEFINED__
#define __DebuggerStepperBoundaryAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerStepperBoundaryAttribute DebuggerStepperBoundaryAttribute;
#else
typedef struct DebuggerStepperBoundaryAttribute DebuggerStepperBoundaryAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerStepperBoundaryAttribute_FWD_DEFINED__ */


#ifndef __DebuggerHiddenAttribute_FWD_DEFINED__
#define __DebuggerHiddenAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerHiddenAttribute DebuggerHiddenAttribute;
#else
typedef struct DebuggerHiddenAttribute DebuggerHiddenAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerHiddenAttribute_FWD_DEFINED__ */


#ifndef __DebuggerNonUserCodeAttribute_FWD_DEFINED__
#define __DebuggerNonUserCodeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerNonUserCodeAttribute DebuggerNonUserCodeAttribute;
#else
typedef struct DebuggerNonUserCodeAttribute DebuggerNonUserCodeAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerNonUserCodeAttribute_FWD_DEFINED__ */


#ifndef __DebuggableAttribute_FWD_DEFINED__
#define __DebuggableAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggableAttribute DebuggableAttribute;
#else
typedef struct DebuggableAttribute DebuggableAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggableAttribute_FWD_DEFINED__ */


#ifndef __DebuggerBrowsableAttribute_FWD_DEFINED__
#define __DebuggerBrowsableAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerBrowsableAttribute DebuggerBrowsableAttribute;
#else
typedef struct DebuggerBrowsableAttribute DebuggerBrowsableAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerBrowsableAttribute_FWD_DEFINED__ */


#ifndef __DebuggerTypeProxyAttribute_FWD_DEFINED__
#define __DebuggerTypeProxyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerTypeProxyAttribute DebuggerTypeProxyAttribute;
#else
typedef struct DebuggerTypeProxyAttribute DebuggerTypeProxyAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerTypeProxyAttribute_FWD_DEFINED__ */


#ifndef __DebuggerDisplayAttribute_FWD_DEFINED__
#define __DebuggerDisplayAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerDisplayAttribute DebuggerDisplayAttribute;
#else
typedef struct DebuggerDisplayAttribute DebuggerDisplayAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerDisplayAttribute_FWD_DEFINED__ */


#ifndef __DebuggerVisualizerAttribute_FWD_DEFINED__
#define __DebuggerVisualizerAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DebuggerVisualizerAttribute DebuggerVisualizerAttribute;
#else
typedef struct DebuggerVisualizerAttribute DebuggerVisualizerAttribute;
#endif /* __cplusplus */

#endif 	/* __DebuggerVisualizerAttribute_FWD_DEFINED__ */


#ifndef __StackTrace_FWD_DEFINED__
#define __StackTrace_FWD_DEFINED__

#ifdef __cplusplus
typedef class StackTrace StackTrace;
#else
typedef struct StackTrace StackTrace;
#endif /* __cplusplus */

#endif 	/* __StackTrace_FWD_DEFINED__ */


#ifndef __StackFrame_FWD_DEFINED__
#define __StackFrame_FWD_DEFINED__

#ifdef __cplusplus
typedef class StackFrame StackFrame;
#else
typedef struct StackFrame StackFrame;
#endif /* __cplusplus */

#endif 	/* __StackFrame_FWD_DEFINED__ */


#ifndef __SymDocumentType_FWD_DEFINED__
#define __SymDocumentType_FWD_DEFINED__

#ifdef __cplusplus
typedef class SymDocumentType SymDocumentType;
#else
typedef struct SymDocumentType SymDocumentType;
#endif /* __cplusplus */

#endif 	/* __SymDocumentType_FWD_DEFINED__ */


#ifndef __SymLanguageType_FWD_DEFINED__
#define __SymLanguageType_FWD_DEFINED__

#ifdef __cplusplus
typedef class SymLanguageType SymLanguageType;
#else
typedef struct SymLanguageType SymLanguageType;
#endif /* __cplusplus */

#endif 	/* __SymLanguageType_FWD_DEFINED__ */


#ifndef __SymLanguageVendor_FWD_DEFINED__
#define __SymLanguageVendor_FWD_DEFINED__

#ifdef __cplusplus
typedef class SymLanguageVendor SymLanguageVendor;
#else
typedef struct SymLanguageVendor SymLanguageVendor;
#endif /* __cplusplus */

#endif 	/* __SymLanguageVendor_FWD_DEFINED__ */


#ifndef __AmbiguousMatchException_FWD_DEFINED__
#define __AmbiguousMatchException_FWD_DEFINED__

#ifdef __cplusplus
typedef class AmbiguousMatchException AmbiguousMatchException;
#else
typedef struct AmbiguousMatchException AmbiguousMatchException;
#endif /* __cplusplus */

#endif 	/* __AmbiguousMatchException_FWD_DEFINED__ */


#ifndef __ModuleResolveEventHandler_FWD_DEFINED__
#define __ModuleResolveEventHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class ModuleResolveEventHandler ModuleResolveEventHandler;
#else
typedef struct ModuleResolveEventHandler ModuleResolveEventHandler;
#endif /* __cplusplus */

#endif 	/* __ModuleResolveEventHandler_FWD_DEFINED__ */


#ifndef __Assembly_FWD_DEFINED__
#define __Assembly_FWD_DEFINED__

#ifdef __cplusplus
typedef class Assembly Assembly;
#else
typedef struct Assembly Assembly;
#endif /* __cplusplus */

#endif 	/* __Assembly_FWD_DEFINED__ */


#ifndef __AssemblyCopyrightAttribute_FWD_DEFINED__
#define __AssemblyCopyrightAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyCopyrightAttribute AssemblyCopyrightAttribute;
#else
typedef struct AssemblyCopyrightAttribute AssemblyCopyrightAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyCopyrightAttribute_FWD_DEFINED__ */


#ifndef __AssemblyTrademarkAttribute_FWD_DEFINED__
#define __AssemblyTrademarkAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyTrademarkAttribute AssemblyTrademarkAttribute;
#else
typedef struct AssemblyTrademarkAttribute AssemblyTrademarkAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyTrademarkAttribute_FWD_DEFINED__ */


#ifndef __AssemblyProductAttribute_FWD_DEFINED__
#define __AssemblyProductAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyProductAttribute AssemblyProductAttribute;
#else
typedef struct AssemblyProductAttribute AssemblyProductAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyProductAttribute_FWD_DEFINED__ */


#ifndef __AssemblyCompanyAttribute_FWD_DEFINED__
#define __AssemblyCompanyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyCompanyAttribute AssemblyCompanyAttribute;
#else
typedef struct AssemblyCompanyAttribute AssemblyCompanyAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyCompanyAttribute_FWD_DEFINED__ */


#ifndef __AssemblyDescriptionAttribute_FWD_DEFINED__
#define __AssemblyDescriptionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyDescriptionAttribute AssemblyDescriptionAttribute;
#else
typedef struct AssemblyDescriptionAttribute AssemblyDescriptionAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyDescriptionAttribute_FWD_DEFINED__ */


#ifndef __AssemblyTitleAttribute_FWD_DEFINED__
#define __AssemblyTitleAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyTitleAttribute AssemblyTitleAttribute;
#else
typedef struct AssemblyTitleAttribute AssemblyTitleAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyTitleAttribute_FWD_DEFINED__ */


#ifndef __AssemblyConfigurationAttribute_FWD_DEFINED__
#define __AssemblyConfigurationAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyConfigurationAttribute AssemblyConfigurationAttribute;
#else
typedef struct AssemblyConfigurationAttribute AssemblyConfigurationAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyConfigurationAttribute_FWD_DEFINED__ */


#ifndef __AssemblyDefaultAliasAttribute_FWD_DEFINED__
#define __AssemblyDefaultAliasAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyDefaultAliasAttribute AssemblyDefaultAliasAttribute;
#else
typedef struct AssemblyDefaultAliasAttribute AssemblyDefaultAliasAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyDefaultAliasAttribute_FWD_DEFINED__ */


#ifndef __AssemblyInformationalVersionAttribute_FWD_DEFINED__
#define __AssemblyInformationalVersionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyInformationalVersionAttribute AssemblyInformationalVersionAttribute;
#else
typedef struct AssemblyInformationalVersionAttribute AssemblyInformationalVersionAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyInformationalVersionAttribute_FWD_DEFINED__ */


#ifndef __AssemblyFileVersionAttribute_FWD_DEFINED__
#define __AssemblyFileVersionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyFileVersionAttribute AssemblyFileVersionAttribute;
#else
typedef struct AssemblyFileVersionAttribute AssemblyFileVersionAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyFileVersionAttribute_FWD_DEFINED__ */


#ifndef __AssemblyCultureAttribute_FWD_DEFINED__
#define __AssemblyCultureAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyCultureAttribute AssemblyCultureAttribute;
#else
typedef struct AssemblyCultureAttribute AssemblyCultureAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyCultureAttribute_FWD_DEFINED__ */


#ifndef __AssemblyVersionAttribute_FWD_DEFINED__
#define __AssemblyVersionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyVersionAttribute AssemblyVersionAttribute;
#else
typedef struct AssemblyVersionAttribute AssemblyVersionAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyVersionAttribute_FWD_DEFINED__ */


#ifndef __AssemblyKeyFileAttribute_FWD_DEFINED__
#define __AssemblyKeyFileAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyKeyFileAttribute AssemblyKeyFileAttribute;
#else
typedef struct AssemblyKeyFileAttribute AssemblyKeyFileAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyKeyFileAttribute_FWD_DEFINED__ */


#ifndef __AssemblyDelaySignAttribute_FWD_DEFINED__
#define __AssemblyDelaySignAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyDelaySignAttribute AssemblyDelaySignAttribute;
#else
typedef struct AssemblyDelaySignAttribute AssemblyDelaySignAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyDelaySignAttribute_FWD_DEFINED__ */


#ifndef __AssemblyAlgorithmIdAttribute_FWD_DEFINED__
#define __AssemblyAlgorithmIdAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyAlgorithmIdAttribute AssemblyAlgorithmIdAttribute;
#else
typedef struct AssemblyAlgorithmIdAttribute AssemblyAlgorithmIdAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyAlgorithmIdAttribute_FWD_DEFINED__ */


#ifndef __AssemblyFlagsAttribute_FWD_DEFINED__
#define __AssemblyFlagsAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyFlagsAttribute AssemblyFlagsAttribute;
#else
typedef struct AssemblyFlagsAttribute AssemblyFlagsAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyFlagsAttribute_FWD_DEFINED__ */


#ifndef __AssemblyKeyNameAttribute_FWD_DEFINED__
#define __AssemblyKeyNameAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyKeyNameAttribute AssemblyKeyNameAttribute;
#else
typedef struct AssemblyKeyNameAttribute AssemblyKeyNameAttribute;
#endif /* __cplusplus */

#endif 	/* __AssemblyKeyNameAttribute_FWD_DEFINED__ */


#ifndef __AssemblyName_FWD_DEFINED__
#define __AssemblyName_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyName AssemblyName;
#else
typedef struct AssemblyName AssemblyName;
#endif /* __cplusplus */

#endif 	/* __AssemblyName_FWD_DEFINED__ */


#ifndef __AssemblyNameProxy_FWD_DEFINED__
#define __AssemblyNameProxy_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyNameProxy AssemblyNameProxy;
#else
typedef struct AssemblyNameProxy AssemblyNameProxy;
#endif /* __cplusplus */

#endif 	/* __AssemblyNameProxy_FWD_DEFINED__ */


#ifndef __CustomAttributeFormatException_FWD_DEFINED__
#define __CustomAttributeFormatException_FWD_DEFINED__

#ifdef __cplusplus
typedef class CustomAttributeFormatException CustomAttributeFormatException;
#else
typedef struct CustomAttributeFormatException CustomAttributeFormatException;
#endif /* __cplusplus */

#endif 	/* __CustomAttributeFormatException_FWD_DEFINED__ */


#ifndef __CustomAttributeData_FWD_DEFINED__
#define __CustomAttributeData_FWD_DEFINED__

#ifdef __cplusplus
typedef class CustomAttributeData CustomAttributeData;
#else
typedef struct CustomAttributeData CustomAttributeData;
#endif /* __cplusplus */

#endif 	/* __CustomAttributeData_FWD_DEFINED__ */


#ifndef __DefaultMemberAttribute_FWD_DEFINED__
#define __DefaultMemberAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DefaultMemberAttribute DefaultMemberAttribute;
#else
typedef struct DefaultMemberAttribute DefaultMemberAttribute;
#endif /* __cplusplus */

#endif 	/* __DefaultMemberAttribute_FWD_DEFINED__ */


#ifndef __InvalidFilterCriteriaException_FWD_DEFINED__
#define __InvalidFilterCriteriaException_FWD_DEFINED__

#ifdef __cplusplus
typedef class InvalidFilterCriteriaException InvalidFilterCriteriaException;
#else
typedef struct InvalidFilterCriteriaException InvalidFilterCriteriaException;
#endif /* __cplusplus */

#endif 	/* __InvalidFilterCriteriaException_FWD_DEFINED__ */


#ifndef __ManifestResourceInfo_FWD_DEFINED__
#define __ManifestResourceInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ManifestResourceInfo ManifestResourceInfo;
#else
typedef struct ManifestResourceInfo ManifestResourceInfo;
#endif /* __cplusplus */

#endif 	/* __ManifestResourceInfo_FWD_DEFINED__ */


#ifndef __MemberFilter_FWD_DEFINED__
#define __MemberFilter_FWD_DEFINED__

#ifdef __cplusplus
typedef class MemberFilter MemberFilter;
#else
typedef struct MemberFilter MemberFilter;
#endif /* __cplusplus */

#endif 	/* __MemberFilter_FWD_DEFINED__ */


#ifndef __Missing_FWD_DEFINED__
#define __Missing_FWD_DEFINED__

#ifdef __cplusplus
typedef class Missing Missing;
#else
typedef struct Missing Missing;
#endif /* __cplusplus */

#endif 	/* __Missing_FWD_DEFINED__ */


#ifndef __Module_FWD_DEFINED__
#define __Module_FWD_DEFINED__

#ifdef __cplusplus
typedef class Module Module;
#else
typedef struct Module Module;
#endif /* __cplusplus */

#endif 	/* __Module_FWD_DEFINED__ */


#ifndef __ObfuscateAssemblyAttribute_FWD_DEFINED__
#define __ObfuscateAssemblyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObfuscateAssemblyAttribute ObfuscateAssemblyAttribute;
#else
typedef struct ObfuscateAssemblyAttribute ObfuscateAssemblyAttribute;
#endif /* __cplusplus */

#endif 	/* __ObfuscateAssemblyAttribute_FWD_DEFINED__ */


#ifndef __ObfuscationAttribute_FWD_DEFINED__
#define __ObfuscationAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObfuscationAttribute ObfuscationAttribute;
#else
typedef struct ObfuscationAttribute ObfuscationAttribute;
#endif /* __cplusplus */

#endif 	/* __ObfuscationAttribute_FWD_DEFINED__ */


#ifndef __ExceptionHandlingClause_FWD_DEFINED__
#define __ExceptionHandlingClause_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExceptionHandlingClause ExceptionHandlingClause;
#else
typedef struct ExceptionHandlingClause ExceptionHandlingClause;
#endif /* __cplusplus */

#endif 	/* __ExceptionHandlingClause_FWD_DEFINED__ */


#ifndef __MethodBody_FWD_DEFINED__
#define __MethodBody_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodBody MethodBody;
#else
typedef struct MethodBody MethodBody;
#endif /* __cplusplus */

#endif 	/* __MethodBody_FWD_DEFINED__ */


#ifndef __LocalVariableInfo_FWD_DEFINED__
#define __LocalVariableInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class LocalVariableInfo LocalVariableInfo;
#else
typedef struct LocalVariableInfo LocalVariableInfo;
#endif /* __cplusplus */

#endif 	/* __LocalVariableInfo_FWD_DEFINED__ */


#ifndef __Pointer_FWD_DEFINED__
#define __Pointer_FWD_DEFINED__

#ifdef __cplusplus
typedef class Pointer Pointer;
#else
typedef struct Pointer Pointer;
#endif /* __cplusplus */

#endif 	/* __Pointer_FWD_DEFINED__ */


#ifndef __ReflectionTypeLoadException_FWD_DEFINED__
#define __ReflectionTypeLoadException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReflectionTypeLoadException ReflectionTypeLoadException;
#else
typedef struct ReflectionTypeLoadException ReflectionTypeLoadException;
#endif /* __cplusplus */

#endif 	/* __ReflectionTypeLoadException_FWD_DEFINED__ */


#ifndef __StrongNameKeyPair_FWD_DEFINED__
#define __StrongNameKeyPair_FWD_DEFINED__

#ifdef __cplusplus
typedef class StrongNameKeyPair StrongNameKeyPair;
#else
typedef struct StrongNameKeyPair StrongNameKeyPair;
#endif /* __cplusplus */

#endif 	/* __StrongNameKeyPair_FWD_DEFINED__ */


#ifndef __TargetException_FWD_DEFINED__
#define __TargetException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TargetException TargetException;
#else
typedef struct TargetException TargetException;
#endif /* __cplusplus */

#endif 	/* __TargetException_FWD_DEFINED__ */


#ifndef __TargetInvocationException_FWD_DEFINED__
#define __TargetInvocationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TargetInvocationException TargetInvocationException;
#else
typedef struct TargetInvocationException TargetInvocationException;
#endif /* __cplusplus */

#endif 	/* __TargetInvocationException_FWD_DEFINED__ */


#ifndef __TargetParameterCountException_FWD_DEFINED__
#define __TargetParameterCountException_FWD_DEFINED__

#ifdef __cplusplus
typedef class TargetParameterCountException TargetParameterCountException;
#else
typedef struct TargetParameterCountException TargetParameterCountException;
#endif /* __cplusplus */

#endif 	/* __TargetParameterCountException_FWD_DEFINED__ */


#ifndef __TypeDelegator_FWD_DEFINED__
#define __TypeDelegator_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeDelegator TypeDelegator;
#else
typedef struct TypeDelegator TypeDelegator;
#endif /* __cplusplus */

#endif 	/* __TypeDelegator_FWD_DEFINED__ */


#ifndef __TypeFilter_FWD_DEFINED__
#define __TypeFilter_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeFilter TypeFilter;
#else
typedef struct TypeFilter TypeFilter;
#endif /* __cplusplus */

#endif 	/* __TypeFilter_FWD_DEFINED__ */


#ifndef __MethodBase_FWD_DEFINED__
#define __MethodBase_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodBase MethodBase;
#else
typedef struct MethodBase MethodBase;
#endif /* __cplusplus */

#endif 	/* __MethodBase_FWD_DEFINED__ */


#ifndef __ConstructorInfo_FWD_DEFINED__
#define __ConstructorInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConstructorInfo ConstructorInfo;
#else
typedef struct ConstructorInfo ConstructorInfo;
#endif /* __cplusplus */

#endif 	/* __ConstructorInfo_FWD_DEFINED__ */


#ifndef __MethodInfo_FWD_DEFINED__
#define __MethodInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodInfo MethodInfo;
#else
typedef struct MethodInfo MethodInfo;
#endif /* __cplusplus */

#endif 	/* __MethodInfo_FWD_DEFINED__ */


#ifndef __FieldInfo_FWD_DEFINED__
#define __FieldInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class FieldInfo FieldInfo;
#else
typedef struct FieldInfo FieldInfo;
#endif /* __cplusplus */

#endif 	/* __FieldInfo_FWD_DEFINED__ */


#ifndef __EventInfo_FWD_DEFINED__
#define __EventInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class EventInfo EventInfo;
#else
typedef struct EventInfo EventInfo;
#endif /* __cplusplus */

#endif 	/* __EventInfo_FWD_DEFINED__ */


#ifndef __PropertyInfo_FWD_DEFINED__
#define __PropertyInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class PropertyInfo PropertyInfo;
#else
typedef struct PropertyInfo PropertyInfo;
#endif /* __cplusplus */

#endif 	/* __PropertyInfo_FWD_DEFINED__ */


#ifndef __ParameterInfo_FWD_DEFINED__
#define __ParameterInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ParameterInfo ParameterInfo;
#else
typedef struct ParameterInfo ParameterInfo;
#endif /* __cplusplus */

#endif 	/* __ParameterInfo_FWD_DEFINED__ */


#ifndef __Formatter_FWD_DEFINED__
#define __Formatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class Formatter Formatter;
#else
typedef struct Formatter Formatter;
#endif /* __cplusplus */

#endif 	/* __Formatter_FWD_DEFINED__ */


#ifndef __FormatterConverter_FWD_DEFINED__
#define __FormatterConverter_FWD_DEFINED__

#ifdef __cplusplus
typedef class FormatterConverter FormatterConverter;
#else
typedef struct FormatterConverter FormatterConverter;
#endif /* __cplusplus */

#endif 	/* __FormatterConverter_FWD_DEFINED__ */


#ifndef __FormatterServices_FWD_DEFINED__
#define __FormatterServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class FormatterServices FormatterServices;
#else
typedef struct FormatterServices FormatterServices;
#endif /* __cplusplus */

#endif 	/* __FormatterServices_FWD_DEFINED__ */


#ifndef __ObjectIDGenerator_FWD_DEFINED__
#define __ObjectIDGenerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObjectIDGenerator ObjectIDGenerator;
#else
typedef struct ObjectIDGenerator ObjectIDGenerator;
#endif /* __cplusplus */

#endif 	/* __ObjectIDGenerator_FWD_DEFINED__ */


#ifndef __ObjectManager_FWD_DEFINED__
#define __ObjectManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObjectManager ObjectManager;
#else
typedef struct ObjectManager ObjectManager;
#endif /* __cplusplus */

#endif 	/* __ObjectManager_FWD_DEFINED__ */


#ifndef __OptionalFieldAttribute_FWD_DEFINED__
#define __OptionalFieldAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OptionalFieldAttribute OptionalFieldAttribute;
#else
typedef struct OptionalFieldAttribute OptionalFieldAttribute;
#endif /* __cplusplus */

#endif 	/* __OptionalFieldAttribute_FWD_DEFINED__ */


#ifndef __OnSerializingAttribute_FWD_DEFINED__
#define __OnSerializingAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OnSerializingAttribute OnSerializingAttribute;
#else
typedef struct OnSerializingAttribute OnSerializingAttribute;
#endif /* __cplusplus */

#endif 	/* __OnSerializingAttribute_FWD_DEFINED__ */


#ifndef __OnSerializedAttribute_FWD_DEFINED__
#define __OnSerializedAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OnSerializedAttribute OnSerializedAttribute;
#else
typedef struct OnSerializedAttribute OnSerializedAttribute;
#endif /* __cplusplus */

#endif 	/* __OnSerializedAttribute_FWD_DEFINED__ */


#ifndef __OnDeserializingAttribute_FWD_DEFINED__
#define __OnDeserializingAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OnDeserializingAttribute OnDeserializingAttribute;
#else
typedef struct OnDeserializingAttribute OnDeserializingAttribute;
#endif /* __cplusplus */

#endif 	/* __OnDeserializingAttribute_FWD_DEFINED__ */


#ifndef __OnDeserializedAttribute_FWD_DEFINED__
#define __OnDeserializedAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OnDeserializedAttribute OnDeserializedAttribute;
#else
typedef struct OnDeserializedAttribute OnDeserializedAttribute;
#endif /* __cplusplus */

#endif 	/* __OnDeserializedAttribute_FWD_DEFINED__ */


#ifndef __SerializationBinder_FWD_DEFINED__
#define __SerializationBinder_FWD_DEFINED__

#ifdef __cplusplus
typedef class SerializationBinder SerializationBinder;
#else
typedef struct SerializationBinder SerializationBinder;
#endif /* __cplusplus */

#endif 	/* __SerializationBinder_FWD_DEFINED__ */


#ifndef __SerializationInfo_FWD_DEFINED__
#define __SerializationInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class SerializationInfo SerializationInfo;
#else
typedef struct SerializationInfo SerializationInfo;
#endif /* __cplusplus */

#endif 	/* __SerializationInfo_FWD_DEFINED__ */


#ifndef __SerializationInfoEnumerator_FWD_DEFINED__
#define __SerializationInfoEnumerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class SerializationInfoEnumerator SerializationInfoEnumerator;
#else
typedef struct SerializationInfoEnumerator SerializationInfoEnumerator;
#endif /* __cplusplus */

#endif 	/* __SerializationInfoEnumerator_FWD_DEFINED__ */


#ifndef __SerializationException_FWD_DEFINED__
#define __SerializationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SerializationException SerializationException;
#else
typedef struct SerializationException SerializationException;
#endif /* __cplusplus */

#endif 	/* __SerializationException_FWD_DEFINED__ */


#ifndef __SurrogateSelector_FWD_DEFINED__
#define __SurrogateSelector_FWD_DEFINED__

#ifdef __cplusplus
typedef class SurrogateSelector SurrogateSelector;
#else
typedef struct SurrogateSelector SurrogateSelector;
#endif /* __cplusplus */

#endif 	/* __SurrogateSelector_FWD_DEFINED__ */


#ifndef __Calendar_FWD_DEFINED__
#define __Calendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class Calendar Calendar;
#else
typedef struct Calendar Calendar;
#endif /* __cplusplus */

#endif 	/* __Calendar_FWD_DEFINED__ */


#ifndef __EastAsianLunisolarCalendar_FWD_DEFINED__
#define __EastAsianLunisolarCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class EastAsianLunisolarCalendar EastAsianLunisolarCalendar;
#else
typedef struct EastAsianLunisolarCalendar EastAsianLunisolarCalendar;
#endif /* __cplusplus */

#endif 	/* __EastAsianLunisolarCalendar_FWD_DEFINED__ */


#ifndef __CompareInfo_FWD_DEFINED__
#define __CompareInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class CompareInfo CompareInfo;
#else
typedef struct CompareInfo CompareInfo;
#endif /* __cplusplus */

#endif 	/* __CompareInfo_FWD_DEFINED__ */


#ifndef __CultureInfo_FWD_DEFINED__
#define __CultureInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class CultureInfo CultureInfo;
#else
typedef struct CultureInfo CultureInfo;
#endif /* __cplusplus */

#endif 	/* __CultureInfo_FWD_DEFINED__ */


#ifndef __DateTimeFormatInfo_FWD_DEFINED__
#define __DateTimeFormatInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class DateTimeFormatInfo DateTimeFormatInfo;
#else
typedef struct DateTimeFormatInfo DateTimeFormatInfo;
#endif /* __cplusplus */

#endif 	/* __DateTimeFormatInfo_FWD_DEFINED__ */


#ifndef __DaylightTime_FWD_DEFINED__
#define __DaylightTime_FWD_DEFINED__

#ifdef __cplusplus
typedef class DaylightTime DaylightTime;
#else
typedef struct DaylightTime DaylightTime;
#endif /* __cplusplus */

#endif 	/* __DaylightTime_FWD_DEFINED__ */


#ifndef __GregorianCalendar_FWD_DEFINED__
#define __GregorianCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class GregorianCalendar GregorianCalendar;
#else
typedef struct GregorianCalendar GregorianCalendar;
#endif /* __cplusplus */

#endif 	/* __GregorianCalendar_FWD_DEFINED__ */


#ifndef __HebrewCalendar_FWD_DEFINED__
#define __HebrewCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class HebrewCalendar HebrewCalendar;
#else
typedef struct HebrewCalendar HebrewCalendar;
#endif /* __cplusplus */

#endif 	/* __HebrewCalendar_FWD_DEFINED__ */


#ifndef __HijriCalendar_FWD_DEFINED__
#define __HijriCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class HijriCalendar HijriCalendar;
#else
typedef struct HijriCalendar HijriCalendar;
#endif /* __cplusplus */

#endif 	/* __HijriCalendar_FWD_DEFINED__ */


#ifndef __JapaneseCalendar_FWD_DEFINED__
#define __JapaneseCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class JapaneseCalendar JapaneseCalendar;
#else
typedef struct JapaneseCalendar JapaneseCalendar;
#endif /* __cplusplus */

#endif 	/* __JapaneseCalendar_FWD_DEFINED__ */


#ifndef __JulianCalendar_FWD_DEFINED__
#define __JulianCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class JulianCalendar JulianCalendar;
#else
typedef struct JulianCalendar JulianCalendar;
#endif /* __cplusplus */

#endif 	/* __JulianCalendar_FWD_DEFINED__ */


#ifndef __KoreanCalendar_FWD_DEFINED__
#define __KoreanCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class KoreanCalendar KoreanCalendar;
#else
typedef struct KoreanCalendar KoreanCalendar;
#endif /* __cplusplus */

#endif 	/* __KoreanCalendar_FWD_DEFINED__ */


#ifndef __RegionInfo_FWD_DEFINED__
#define __RegionInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class RegionInfo RegionInfo;
#else
typedef struct RegionInfo RegionInfo;
#endif /* __cplusplus */

#endif 	/* __RegionInfo_FWD_DEFINED__ */


#ifndef __SortKey_FWD_DEFINED__
#define __SortKey_FWD_DEFINED__

#ifdef __cplusplus
typedef class SortKey SortKey;
#else
typedef struct SortKey SortKey;
#endif /* __cplusplus */

#endif 	/* __SortKey_FWD_DEFINED__ */


#ifndef __StringInfo_FWD_DEFINED__
#define __StringInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class StringInfo StringInfo;
#else
typedef struct StringInfo StringInfo;
#endif /* __cplusplus */

#endif 	/* __StringInfo_FWD_DEFINED__ */


#ifndef __TaiwanCalendar_FWD_DEFINED__
#define __TaiwanCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class TaiwanCalendar TaiwanCalendar;
#else
typedef struct TaiwanCalendar TaiwanCalendar;
#endif /* __cplusplus */

#endif 	/* __TaiwanCalendar_FWD_DEFINED__ */


#ifndef __TextElementEnumerator_FWD_DEFINED__
#define __TextElementEnumerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextElementEnumerator TextElementEnumerator;
#else
typedef struct TextElementEnumerator TextElementEnumerator;
#endif /* __cplusplus */

#endif 	/* __TextElementEnumerator_FWD_DEFINED__ */


#ifndef __TextInfo_FWD_DEFINED__
#define __TextInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextInfo TextInfo;
#else
typedef struct TextInfo TextInfo;
#endif /* __cplusplus */

#endif 	/* __TextInfo_FWD_DEFINED__ */


#ifndef __ThaiBuddhistCalendar_FWD_DEFINED__
#define __ThaiBuddhistCalendar_FWD_DEFINED__

#ifdef __cplusplus
typedef class ThaiBuddhistCalendar ThaiBuddhistCalendar;
#else
typedef struct ThaiBuddhistCalendar ThaiBuddhistCalendar;
#endif /* __cplusplus */

#endif 	/* __ThaiBuddhistCalendar_FWD_DEFINED__ */


#ifndef __NumberFormatInfo_FWD_DEFINED__
#define __NumberFormatInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class NumberFormatInfo NumberFormatInfo;
#else
typedef struct NumberFormatInfo NumberFormatInfo;
#endif /* __cplusplus */

#endif 	/* __NumberFormatInfo_FWD_DEFINED__ */


#ifndef __Encoding_FWD_DEFINED__
#define __Encoding_FWD_DEFINED__

#ifdef __cplusplus
typedef class Encoding Encoding;
#else
typedef struct Encoding Encoding;
#endif /* __cplusplus */

#endif 	/* __Encoding_FWD_DEFINED__ */


#ifndef __Encoder_FWD_DEFINED__
#define __Encoder_FWD_DEFINED__

#ifdef __cplusplus
typedef class Encoder Encoder;
#else
typedef struct Encoder Encoder;
#endif /* __cplusplus */

#endif 	/* __Encoder_FWD_DEFINED__ */


#ifndef __Decoder_FWD_DEFINED__
#define __Decoder_FWD_DEFINED__

#ifdef __cplusplus
typedef class Decoder Decoder;
#else
typedef struct Decoder Decoder;
#endif /* __cplusplus */

#endif 	/* __Decoder_FWD_DEFINED__ */


#ifndef __ASCIIEncoding_FWD_DEFINED__
#define __ASCIIEncoding_FWD_DEFINED__

#ifdef __cplusplus
typedef class ASCIIEncoding ASCIIEncoding;
#else
typedef struct ASCIIEncoding ASCIIEncoding;
#endif /* __cplusplus */

#endif 	/* __ASCIIEncoding_FWD_DEFINED__ */


#ifndef __UnicodeEncoding_FWD_DEFINED__
#define __UnicodeEncoding_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnicodeEncoding UnicodeEncoding;
#else
typedef struct UnicodeEncoding UnicodeEncoding;
#endif /* __cplusplus */

#endif 	/* __UnicodeEncoding_FWD_DEFINED__ */


#ifndef __UTF7Encoding_FWD_DEFINED__
#define __UTF7Encoding_FWD_DEFINED__

#ifdef __cplusplus
typedef class UTF7Encoding UTF7Encoding;
#else
typedef struct UTF7Encoding UTF7Encoding;
#endif /* __cplusplus */

#endif 	/* __UTF7Encoding_FWD_DEFINED__ */


#ifndef __UTF8Encoding_FWD_DEFINED__
#define __UTF8Encoding_FWD_DEFINED__

#ifdef __cplusplus
typedef class UTF8Encoding UTF8Encoding;
#else
typedef struct UTF8Encoding UTF8Encoding;
#endif /* __cplusplus */

#endif 	/* __UTF8Encoding_FWD_DEFINED__ */


#ifndef __MissingManifestResourceException_FWD_DEFINED__
#define __MissingManifestResourceException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MissingManifestResourceException MissingManifestResourceException;
#else
typedef struct MissingManifestResourceException MissingManifestResourceException;
#endif /* __cplusplus */

#endif 	/* __MissingManifestResourceException_FWD_DEFINED__ */


#ifndef __MissingSatelliteAssemblyException_FWD_DEFINED__
#define __MissingSatelliteAssemblyException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MissingSatelliteAssemblyException MissingSatelliteAssemblyException;
#else
typedef struct MissingSatelliteAssemblyException MissingSatelliteAssemblyException;
#endif /* __cplusplus */

#endif 	/* __MissingSatelliteAssemblyException_FWD_DEFINED__ */


#ifndef __NeutralResourcesLanguageAttribute_FWD_DEFINED__
#define __NeutralResourcesLanguageAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class NeutralResourcesLanguageAttribute NeutralResourcesLanguageAttribute;
#else
typedef struct NeutralResourcesLanguageAttribute NeutralResourcesLanguageAttribute;
#endif /* __cplusplus */

#endif 	/* __NeutralResourcesLanguageAttribute_FWD_DEFINED__ */


#ifndef __ResourceManager_FWD_DEFINED__
#define __ResourceManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class ResourceManager ResourceManager;
#else
typedef struct ResourceManager ResourceManager;
#endif /* __cplusplus */

#endif 	/* __ResourceManager_FWD_DEFINED__ */


#ifndef __ResourceReader_FWD_DEFINED__
#define __ResourceReader_FWD_DEFINED__

#ifdef __cplusplus
typedef class ResourceReader ResourceReader;
#else
typedef struct ResourceReader ResourceReader;
#endif /* __cplusplus */

#endif 	/* __ResourceReader_FWD_DEFINED__ */


#ifndef __ResourceSet_FWD_DEFINED__
#define __ResourceSet_FWD_DEFINED__

#ifdef __cplusplus
typedef class ResourceSet ResourceSet;
#else
typedef struct ResourceSet ResourceSet;
#endif /* __cplusplus */

#endif 	/* __ResourceSet_FWD_DEFINED__ */


#ifndef __ResourceWriter_FWD_DEFINED__
#define __ResourceWriter_FWD_DEFINED__

#ifdef __cplusplus
typedef class ResourceWriter ResourceWriter;
#else
typedef struct ResourceWriter ResourceWriter;
#endif /* __cplusplus */

#endif 	/* __ResourceWriter_FWD_DEFINED__ */


#ifndef __SatelliteContractVersionAttribute_FWD_DEFINED__
#define __SatelliteContractVersionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SatelliteContractVersionAttribute SatelliteContractVersionAttribute;
#else
typedef struct SatelliteContractVersionAttribute SatelliteContractVersionAttribute;
#endif /* __cplusplus */

#endif 	/* __SatelliteContractVersionAttribute_FWD_DEFINED__ */


#ifndef __Registry_FWD_DEFINED__
#define __Registry_FWD_DEFINED__

#ifdef __cplusplus
typedef class Registry Registry;
#else
typedef struct Registry Registry;
#endif /* __cplusplus */

#endif 	/* __Registry_FWD_DEFINED__ */


#ifndef __RegistryKey_FWD_DEFINED__
#define __RegistryKey_FWD_DEFINED__

#ifdef __cplusplus
typedef class RegistryKey RegistryKey;
#else
typedef struct RegistryKey RegistryKey;
#endif /* __cplusplus */

#endif 	/* __RegistryKey_FWD_DEFINED__ */


#ifndef __AllMembershipCondition_FWD_DEFINED__
#define __AllMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class AllMembershipCondition AllMembershipCondition;
#else
typedef struct AllMembershipCondition AllMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __AllMembershipCondition_FWD_DEFINED__ */


#ifndef __ApplicationDirectory_FWD_DEFINED__
#define __ApplicationDirectory_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationDirectory ApplicationDirectory;
#else
typedef struct ApplicationDirectory ApplicationDirectory;
#endif /* __cplusplus */

#endif 	/* __ApplicationDirectory_FWD_DEFINED__ */


#ifndef __ApplicationDirectoryMembershipCondition_FWD_DEFINED__
#define __ApplicationDirectoryMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationDirectoryMembershipCondition ApplicationDirectoryMembershipCondition;
#else
typedef struct ApplicationDirectoryMembershipCondition ApplicationDirectoryMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __ApplicationDirectoryMembershipCondition_FWD_DEFINED__ */


#ifndef __ApplicationSecurityInfo_FWD_DEFINED__
#define __ApplicationSecurityInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationSecurityInfo ApplicationSecurityInfo;
#else
typedef struct ApplicationSecurityInfo ApplicationSecurityInfo;
#endif /* __cplusplus */

#endif 	/* __ApplicationSecurityInfo_FWD_DEFINED__ */


#ifndef __ApplicationSecurityManager_FWD_DEFINED__
#define __ApplicationSecurityManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationSecurityManager ApplicationSecurityManager;
#else
typedef struct ApplicationSecurityManager ApplicationSecurityManager;
#endif /* __cplusplus */

#endif 	/* __ApplicationSecurityManager_FWD_DEFINED__ */


#ifndef __ApplicationTrust_FWD_DEFINED__
#define __ApplicationTrust_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationTrust ApplicationTrust;
#else
typedef struct ApplicationTrust ApplicationTrust;
#endif /* __cplusplus */

#endif 	/* __ApplicationTrust_FWD_DEFINED__ */


#ifndef __ApplicationTrustCollection_FWD_DEFINED__
#define __ApplicationTrustCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationTrustCollection ApplicationTrustCollection;
#else
typedef struct ApplicationTrustCollection ApplicationTrustCollection;
#endif /* __cplusplus */

#endif 	/* __ApplicationTrustCollection_FWD_DEFINED__ */


#ifndef __ApplicationTrustEnumerator_FWD_DEFINED__
#define __ApplicationTrustEnumerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ApplicationTrustEnumerator ApplicationTrustEnumerator;
#else
typedef struct ApplicationTrustEnumerator ApplicationTrustEnumerator;
#endif /* __cplusplus */

#endif 	/* __ApplicationTrustEnumerator_FWD_DEFINED__ */


#ifndef __CodeGroup_FWD_DEFINED__
#define __CodeGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class CodeGroup CodeGroup;
#else
typedef struct CodeGroup CodeGroup;
#endif /* __cplusplus */

#endif 	/* __CodeGroup_FWD_DEFINED__ */


#ifndef __Evidence_FWD_DEFINED__
#define __Evidence_FWD_DEFINED__

#ifdef __cplusplus
typedef class Evidence Evidence;
#else
typedef struct Evidence Evidence;
#endif /* __cplusplus */

#endif 	/* __Evidence_FWD_DEFINED__ */


#ifndef __FileCodeGroup_FWD_DEFINED__
#define __FileCodeGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileCodeGroup FileCodeGroup;
#else
typedef struct FileCodeGroup FileCodeGroup;
#endif /* __cplusplus */

#endif 	/* __FileCodeGroup_FWD_DEFINED__ */


#ifndef __FirstMatchCodeGroup_FWD_DEFINED__
#define __FirstMatchCodeGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class FirstMatchCodeGroup FirstMatchCodeGroup;
#else
typedef struct FirstMatchCodeGroup FirstMatchCodeGroup;
#endif /* __cplusplus */

#endif 	/* __FirstMatchCodeGroup_FWD_DEFINED__ */


#ifndef __TrustManagerContext_FWD_DEFINED__
#define __TrustManagerContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class TrustManagerContext TrustManagerContext;
#else
typedef struct TrustManagerContext TrustManagerContext;
#endif /* __cplusplus */

#endif 	/* __TrustManagerContext_FWD_DEFINED__ */


#ifndef __CodeConnectAccess_FWD_DEFINED__
#define __CodeConnectAccess_FWD_DEFINED__

#ifdef __cplusplus
typedef class CodeConnectAccess CodeConnectAccess;
#else
typedef struct CodeConnectAccess CodeConnectAccess;
#endif /* __cplusplus */

#endif 	/* __CodeConnectAccess_FWD_DEFINED__ */


#ifndef __NetCodeGroup_FWD_DEFINED__
#define __NetCodeGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class NetCodeGroup NetCodeGroup;
#else
typedef struct NetCodeGroup NetCodeGroup;
#endif /* __cplusplus */

#endif 	/* __NetCodeGroup_FWD_DEFINED__ */


#ifndef __PermissionRequestEvidence_FWD_DEFINED__
#define __PermissionRequestEvidence_FWD_DEFINED__

#ifdef __cplusplus
typedef class PermissionRequestEvidence PermissionRequestEvidence;
#else
typedef struct PermissionRequestEvidence PermissionRequestEvidence;
#endif /* __cplusplus */

#endif 	/* __PermissionRequestEvidence_FWD_DEFINED__ */


#ifndef __PolicyException_FWD_DEFINED__
#define __PolicyException_FWD_DEFINED__

#ifdef __cplusplus
typedef class PolicyException PolicyException;
#else
typedef struct PolicyException PolicyException;
#endif /* __cplusplus */

#endif 	/* __PolicyException_FWD_DEFINED__ */


#ifndef __PolicyLevel_FWD_DEFINED__
#define __PolicyLevel_FWD_DEFINED__

#ifdef __cplusplus
typedef class PolicyLevel PolicyLevel;
#else
typedef struct PolicyLevel PolicyLevel;
#endif /* __cplusplus */

#endif 	/* __PolicyLevel_FWD_DEFINED__ */


#ifndef __PolicyStatement_FWD_DEFINED__
#define __PolicyStatement_FWD_DEFINED__

#ifdef __cplusplus
typedef class PolicyStatement PolicyStatement;
#else
typedef struct PolicyStatement PolicyStatement;
#endif /* __cplusplus */

#endif 	/* __PolicyStatement_FWD_DEFINED__ */


#ifndef __Site_FWD_DEFINED__
#define __Site_FWD_DEFINED__

#ifdef __cplusplus
typedef class Site Site;
#else
typedef struct Site Site;
#endif /* __cplusplus */

#endif 	/* __Site_FWD_DEFINED__ */


#ifndef __SiteMembershipCondition_FWD_DEFINED__
#define __SiteMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class SiteMembershipCondition SiteMembershipCondition;
#else
typedef struct SiteMembershipCondition SiteMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __SiteMembershipCondition_FWD_DEFINED__ */


#ifndef __StrongName_FWD_DEFINED__
#define __StrongName_FWD_DEFINED__

#ifdef __cplusplus
typedef class StrongName StrongName;
#else
typedef struct StrongName StrongName;
#endif /* __cplusplus */

#endif 	/* __StrongName_FWD_DEFINED__ */


#ifndef __StrongNameMembershipCondition_FWD_DEFINED__
#define __StrongNameMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class StrongNameMembershipCondition StrongNameMembershipCondition;
#else
typedef struct StrongNameMembershipCondition StrongNameMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __StrongNameMembershipCondition_FWD_DEFINED__ */


#ifndef __UnionCodeGroup_FWD_DEFINED__
#define __UnionCodeGroup_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnionCodeGroup UnionCodeGroup;
#else
typedef struct UnionCodeGroup UnionCodeGroup;
#endif /* __cplusplus */

#endif 	/* __UnionCodeGroup_FWD_DEFINED__ */


#ifndef __Url_FWD_DEFINED__
#define __Url_FWD_DEFINED__

#ifdef __cplusplus
typedef class Url Url;
#else
typedef struct Url Url;
#endif /* __cplusplus */

#endif 	/* __Url_FWD_DEFINED__ */


#ifndef __UrlMembershipCondition_FWD_DEFINED__
#define __UrlMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class UrlMembershipCondition UrlMembershipCondition;
#else
typedef struct UrlMembershipCondition UrlMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __UrlMembershipCondition_FWD_DEFINED__ */


#ifndef __Zone_FWD_DEFINED__
#define __Zone_FWD_DEFINED__

#ifdef __cplusplus
typedef class Zone Zone;
#else
typedef struct Zone Zone;
#endif /* __cplusplus */

#endif 	/* __Zone_FWD_DEFINED__ */


#ifndef __ZoneMembershipCondition_FWD_DEFINED__
#define __ZoneMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZoneMembershipCondition ZoneMembershipCondition;
#else
typedef struct ZoneMembershipCondition ZoneMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __ZoneMembershipCondition_FWD_DEFINED__ */


#ifndef __GacInstalled_FWD_DEFINED__
#define __GacInstalled_FWD_DEFINED__

#ifdef __cplusplus
typedef class GacInstalled GacInstalled;
#else
typedef struct GacInstalled GacInstalled;
#endif /* __cplusplus */

#endif 	/* __GacInstalled_FWD_DEFINED__ */


#ifndef __GacMembershipCondition_FWD_DEFINED__
#define __GacMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class GacMembershipCondition GacMembershipCondition;
#else
typedef struct GacMembershipCondition GacMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __GacMembershipCondition_FWD_DEFINED__ */


#ifndef __Hash_FWD_DEFINED__
#define __Hash_FWD_DEFINED__

#ifdef __cplusplus
typedef class Hash Hash;
#else
typedef struct Hash Hash;
#endif /* __cplusplus */

#endif 	/* __Hash_FWD_DEFINED__ */


#ifndef __HashMembershipCondition_FWD_DEFINED__
#define __HashMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class HashMembershipCondition HashMembershipCondition;
#else
typedef struct HashMembershipCondition HashMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __HashMembershipCondition_FWD_DEFINED__ */


#ifndef __Publisher_FWD_DEFINED__
#define __Publisher_FWD_DEFINED__

#ifdef __cplusplus
typedef class Publisher Publisher;
#else
typedef struct Publisher Publisher;
#endif /* __cplusplus */

#endif 	/* __Publisher_FWD_DEFINED__ */


#ifndef __PublisherMembershipCondition_FWD_DEFINED__
#define __PublisherMembershipCondition_FWD_DEFINED__

#ifdef __cplusplus
typedef class PublisherMembershipCondition PublisherMembershipCondition;
#else
typedef struct PublisherMembershipCondition PublisherMembershipCondition;
#endif /* __cplusplus */

#endif 	/* __PublisherMembershipCondition_FWD_DEFINED__ */


#ifndef __GenericIdentity_FWD_DEFINED__
#define __GenericIdentity_FWD_DEFINED__

#ifdef __cplusplus
typedef class GenericIdentity GenericIdentity;
#else
typedef struct GenericIdentity GenericIdentity;
#endif /* __cplusplus */

#endif 	/* __GenericIdentity_FWD_DEFINED__ */


#ifndef __GenericPrincipal_FWD_DEFINED__
#define __GenericPrincipal_FWD_DEFINED__

#ifdef __cplusplus
typedef class GenericPrincipal GenericPrincipal;
#else
typedef struct GenericPrincipal GenericPrincipal;
#endif /* __cplusplus */

#endif 	/* __GenericPrincipal_FWD_DEFINED__ */


#ifndef __WindowsIdentity_FWD_DEFINED__
#define __WindowsIdentity_FWD_DEFINED__

#ifdef __cplusplus
typedef class WindowsIdentity WindowsIdentity;
#else
typedef struct WindowsIdentity WindowsIdentity;
#endif /* __cplusplus */

#endif 	/* __WindowsIdentity_FWD_DEFINED__ */


#ifndef __WindowsImpersonationContext_FWD_DEFINED__
#define __WindowsImpersonationContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class WindowsImpersonationContext WindowsImpersonationContext;
#else
typedef struct WindowsImpersonationContext WindowsImpersonationContext;
#endif /* __cplusplus */

#endif 	/* __WindowsImpersonationContext_FWD_DEFINED__ */


#ifndef __WindowsPrincipal_FWD_DEFINED__
#define __WindowsPrincipal_FWD_DEFINED__

#ifdef __cplusplus
typedef class WindowsPrincipal WindowsPrincipal;
#else
typedef struct WindowsPrincipal WindowsPrincipal;
#endif /* __cplusplus */

#endif 	/* __WindowsPrincipal_FWD_DEFINED__ */


#ifndef __UnmanagedFunctionPointerAttribute_FWD_DEFINED__
#define __UnmanagedFunctionPointerAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnmanagedFunctionPointerAttribute UnmanagedFunctionPointerAttribute;
#else
typedef struct UnmanagedFunctionPointerAttribute UnmanagedFunctionPointerAttribute;
#endif /* __cplusplus */

#endif 	/* __UnmanagedFunctionPointerAttribute_FWD_DEFINED__ */


#ifndef __DispIdAttribute_FWD_DEFINED__
#define __DispIdAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DispIdAttribute DispIdAttribute;
#else
typedef struct DispIdAttribute DispIdAttribute;
#endif /* __cplusplus */

#endif 	/* __DispIdAttribute_FWD_DEFINED__ */


#ifndef __InterfaceTypeAttribute_FWD_DEFINED__
#define __InterfaceTypeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class InterfaceTypeAttribute InterfaceTypeAttribute;
#else
typedef struct InterfaceTypeAttribute InterfaceTypeAttribute;
#endif /* __cplusplus */

#endif 	/* __InterfaceTypeAttribute_FWD_DEFINED__ */


#ifndef __ComDefaultInterfaceAttribute_FWD_DEFINED__
#define __ComDefaultInterfaceAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComDefaultInterfaceAttribute ComDefaultInterfaceAttribute;
#else
typedef struct ComDefaultInterfaceAttribute ComDefaultInterfaceAttribute;
#endif /* __cplusplus */

#endif 	/* __ComDefaultInterfaceAttribute_FWD_DEFINED__ */


#ifndef __ClassInterfaceAttribute_FWD_DEFINED__
#define __ClassInterfaceAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ClassInterfaceAttribute ClassInterfaceAttribute;
#else
typedef struct ClassInterfaceAttribute ClassInterfaceAttribute;
#endif /* __cplusplus */

#endif 	/* __ClassInterfaceAttribute_FWD_DEFINED__ */


#ifndef __ComVisibleAttribute_FWD_DEFINED__
#define __ComVisibleAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComVisibleAttribute ComVisibleAttribute;
#else
typedef struct ComVisibleAttribute ComVisibleAttribute;
#endif /* __cplusplus */

#endif 	/* __ComVisibleAttribute_FWD_DEFINED__ */


#ifndef __TypeLibImportClassAttribute_FWD_DEFINED__
#define __TypeLibImportClassAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLibImportClassAttribute TypeLibImportClassAttribute;
#else
typedef struct TypeLibImportClassAttribute TypeLibImportClassAttribute;
#endif /* __cplusplus */

#endif 	/* __TypeLibImportClassAttribute_FWD_DEFINED__ */


#ifndef __LCIDConversionAttribute_FWD_DEFINED__
#define __LCIDConversionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class LCIDConversionAttribute LCIDConversionAttribute;
#else
typedef struct LCIDConversionAttribute LCIDConversionAttribute;
#endif /* __cplusplus */

#endif 	/* __LCIDConversionAttribute_FWD_DEFINED__ */


#ifndef __ComRegisterFunctionAttribute_FWD_DEFINED__
#define __ComRegisterFunctionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComRegisterFunctionAttribute ComRegisterFunctionAttribute;
#else
typedef struct ComRegisterFunctionAttribute ComRegisterFunctionAttribute;
#endif /* __cplusplus */

#endif 	/* __ComRegisterFunctionAttribute_FWD_DEFINED__ */


#ifndef __ComUnregisterFunctionAttribute_FWD_DEFINED__
#define __ComUnregisterFunctionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComUnregisterFunctionAttribute ComUnregisterFunctionAttribute;
#else
typedef struct ComUnregisterFunctionAttribute ComUnregisterFunctionAttribute;
#endif /* __cplusplus */

#endif 	/* __ComUnregisterFunctionAttribute_FWD_DEFINED__ */


#ifndef __ProgIdAttribute_FWD_DEFINED__
#define __ProgIdAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ProgIdAttribute ProgIdAttribute;
#else
typedef struct ProgIdAttribute ProgIdAttribute;
#endif /* __cplusplus */

#endif 	/* __ProgIdAttribute_FWD_DEFINED__ */


#ifndef __ImportedFromTypeLibAttribute_FWD_DEFINED__
#define __ImportedFromTypeLibAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ImportedFromTypeLibAttribute ImportedFromTypeLibAttribute;
#else
typedef struct ImportedFromTypeLibAttribute ImportedFromTypeLibAttribute;
#endif /* __cplusplus */

#endif 	/* __ImportedFromTypeLibAttribute_FWD_DEFINED__ */


#ifndef __IDispatchImplAttribute_FWD_DEFINED__
#define __IDispatchImplAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class IDispatchImplAttribute IDispatchImplAttribute;
#else
typedef struct IDispatchImplAttribute IDispatchImplAttribute;
#endif /* __cplusplus */

#endif 	/* __IDispatchImplAttribute_FWD_DEFINED__ */


#ifndef __ComSourceInterfacesAttribute_FWD_DEFINED__
#define __ComSourceInterfacesAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComSourceInterfacesAttribute ComSourceInterfacesAttribute;
#else
typedef struct ComSourceInterfacesAttribute ComSourceInterfacesAttribute;
#endif /* __cplusplus */

#endif 	/* __ComSourceInterfacesAttribute_FWD_DEFINED__ */


#ifndef __ComConversionLossAttribute_FWD_DEFINED__
#define __ComConversionLossAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComConversionLossAttribute ComConversionLossAttribute;
#else
typedef struct ComConversionLossAttribute ComConversionLossAttribute;
#endif /* __cplusplus */

#endif 	/* __ComConversionLossAttribute_FWD_DEFINED__ */


#ifndef __TypeLibTypeAttribute_FWD_DEFINED__
#define __TypeLibTypeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLibTypeAttribute TypeLibTypeAttribute;
#else
typedef struct TypeLibTypeAttribute TypeLibTypeAttribute;
#endif /* __cplusplus */

#endif 	/* __TypeLibTypeAttribute_FWD_DEFINED__ */


#ifndef __TypeLibFuncAttribute_FWD_DEFINED__
#define __TypeLibFuncAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLibFuncAttribute TypeLibFuncAttribute;
#else
typedef struct TypeLibFuncAttribute TypeLibFuncAttribute;
#endif /* __cplusplus */

#endif 	/* __TypeLibFuncAttribute_FWD_DEFINED__ */


#ifndef __TypeLibVarAttribute_FWD_DEFINED__
#define __TypeLibVarAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLibVarAttribute TypeLibVarAttribute;
#else
typedef struct TypeLibVarAttribute TypeLibVarAttribute;
#endif /* __cplusplus */

#endif 	/* __TypeLibVarAttribute_FWD_DEFINED__ */


#ifndef __MarshalAsAttribute_FWD_DEFINED__
#define __MarshalAsAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class MarshalAsAttribute MarshalAsAttribute;
#else
typedef struct MarshalAsAttribute MarshalAsAttribute;
#endif /* __cplusplus */

#endif 	/* __MarshalAsAttribute_FWD_DEFINED__ */


#ifndef __ComImportAttribute_FWD_DEFINED__
#define __ComImportAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComImportAttribute ComImportAttribute;
#else
typedef struct ComImportAttribute ComImportAttribute;
#endif /* __cplusplus */

#endif 	/* __ComImportAttribute_FWD_DEFINED__ */


#ifndef __GuidAttribute_FWD_DEFINED__
#define __GuidAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class GuidAttribute GuidAttribute;
#else
typedef struct GuidAttribute GuidAttribute;
#endif /* __cplusplus */

#endif 	/* __GuidAttribute_FWD_DEFINED__ */


#ifndef __PreserveSigAttribute_FWD_DEFINED__
#define __PreserveSigAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class PreserveSigAttribute PreserveSigAttribute;
#else
typedef struct PreserveSigAttribute PreserveSigAttribute;
#endif /* __cplusplus */

#endif 	/* __PreserveSigAttribute_FWD_DEFINED__ */


#ifndef __InAttribute_FWD_DEFINED__
#define __InAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class InAttribute InAttribute;
#else
typedef struct InAttribute InAttribute;
#endif /* __cplusplus */

#endif 	/* __InAttribute_FWD_DEFINED__ */


#ifndef __OutAttribute_FWD_DEFINED__
#define __OutAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OutAttribute OutAttribute;
#else
typedef struct OutAttribute OutAttribute;
#endif /* __cplusplus */

#endif 	/* __OutAttribute_FWD_DEFINED__ */


#ifndef __OptionalAttribute_FWD_DEFINED__
#define __OptionalAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OptionalAttribute OptionalAttribute;
#else
typedef struct OptionalAttribute OptionalAttribute;
#endif /* __cplusplus */

#endif 	/* __OptionalAttribute_FWD_DEFINED__ */


#ifndef __DllImportAttribute_FWD_DEFINED__
#define __DllImportAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DllImportAttribute DllImportAttribute;
#else
typedef struct DllImportAttribute DllImportAttribute;
#endif /* __cplusplus */

#endif 	/* __DllImportAttribute_FWD_DEFINED__ */


#ifndef __StructLayoutAttribute_FWD_DEFINED__
#define __StructLayoutAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class StructLayoutAttribute StructLayoutAttribute;
#else
typedef struct StructLayoutAttribute StructLayoutAttribute;
#endif /* __cplusplus */

#endif 	/* __StructLayoutAttribute_FWD_DEFINED__ */


#ifndef __FieldOffsetAttribute_FWD_DEFINED__
#define __FieldOffsetAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class FieldOffsetAttribute FieldOffsetAttribute;
#else
typedef struct FieldOffsetAttribute FieldOffsetAttribute;
#endif /* __cplusplus */

#endif 	/* __FieldOffsetAttribute_FWD_DEFINED__ */


#ifndef __ComAliasNameAttribute_FWD_DEFINED__
#define __ComAliasNameAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComAliasNameAttribute ComAliasNameAttribute;
#else
typedef struct ComAliasNameAttribute ComAliasNameAttribute;
#endif /* __cplusplus */

#endif 	/* __ComAliasNameAttribute_FWD_DEFINED__ */


#ifndef __AutomationProxyAttribute_FWD_DEFINED__
#define __AutomationProxyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AutomationProxyAttribute AutomationProxyAttribute;
#else
typedef struct AutomationProxyAttribute AutomationProxyAttribute;
#endif /* __cplusplus */

#endif 	/* __AutomationProxyAttribute_FWD_DEFINED__ */


#ifndef __PrimaryInteropAssemblyAttribute_FWD_DEFINED__
#define __PrimaryInteropAssemblyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class PrimaryInteropAssemblyAttribute PrimaryInteropAssemblyAttribute;
#else
typedef struct PrimaryInteropAssemblyAttribute PrimaryInteropAssemblyAttribute;
#endif /* __cplusplus */

#endif 	/* __PrimaryInteropAssemblyAttribute_FWD_DEFINED__ */


#ifndef __CoClassAttribute_FWD_DEFINED__
#define __CoClassAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class CoClassAttribute CoClassAttribute;
#else
typedef struct CoClassAttribute CoClassAttribute;
#endif /* __cplusplus */

#endif 	/* __CoClassAttribute_FWD_DEFINED__ */


#ifndef __ComEventInterfaceAttribute_FWD_DEFINED__
#define __ComEventInterfaceAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComEventInterfaceAttribute ComEventInterfaceAttribute;
#else
typedef struct ComEventInterfaceAttribute ComEventInterfaceAttribute;
#endif /* __cplusplus */

#endif 	/* __ComEventInterfaceAttribute_FWD_DEFINED__ */


#ifndef __TypeLibVersionAttribute_FWD_DEFINED__
#define __TypeLibVersionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLibVersionAttribute TypeLibVersionAttribute;
#else
typedef struct TypeLibVersionAttribute TypeLibVersionAttribute;
#endif /* __cplusplus */

#endif 	/* __TypeLibVersionAttribute_FWD_DEFINED__ */


#ifndef __ComCompatibleVersionAttribute_FWD_DEFINED__
#define __ComCompatibleVersionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ComCompatibleVersionAttribute ComCompatibleVersionAttribute;
#else
typedef struct ComCompatibleVersionAttribute ComCompatibleVersionAttribute;
#endif /* __cplusplus */

#endif 	/* __ComCompatibleVersionAttribute_FWD_DEFINED__ */


#ifndef __BestFitMappingAttribute_FWD_DEFINED__
#define __BestFitMappingAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class BestFitMappingAttribute BestFitMappingAttribute;
#else
typedef struct BestFitMappingAttribute BestFitMappingAttribute;
#endif /* __cplusplus */

#endif 	/* __BestFitMappingAttribute_FWD_DEFINED__ */


#ifndef __DefaultCharSetAttribute_FWD_DEFINED__
#define __DefaultCharSetAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DefaultCharSetAttribute DefaultCharSetAttribute;
#else
typedef struct DefaultCharSetAttribute DefaultCharSetAttribute;
#endif /* __cplusplus */

#endif 	/* __DefaultCharSetAttribute_FWD_DEFINED__ */


#ifndef __SetWin32ContextInIDispatchAttribute_FWD_DEFINED__
#define __SetWin32ContextInIDispatchAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SetWin32ContextInIDispatchAttribute SetWin32ContextInIDispatchAttribute;
#else
typedef struct SetWin32ContextInIDispatchAttribute SetWin32ContextInIDispatchAttribute;
#endif /* __cplusplus */

#endif 	/* __SetWin32ContextInIDispatchAttribute_FWD_DEFINED__ */


#ifndef __ExternalException_FWD_DEFINED__
#define __ExternalException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExternalException ExternalException;
#else
typedef struct ExternalException ExternalException;
#endif /* __cplusplus */

#endif 	/* __ExternalException_FWD_DEFINED__ */


#ifndef __COMException_FWD_DEFINED__
#define __COMException_FWD_DEFINED__

#ifdef __cplusplus
typedef class COMException COMException;
#else
typedef struct COMException COMException;
#endif /* __cplusplus */

#endif 	/* __COMException_FWD_DEFINED__ */


#ifndef __InvalidOleVariantTypeException_FWD_DEFINED__
#define __InvalidOleVariantTypeException_FWD_DEFINED__

#ifdef __cplusplus
typedef class InvalidOleVariantTypeException InvalidOleVariantTypeException;
#else
typedef struct InvalidOleVariantTypeException InvalidOleVariantTypeException;
#endif /* __cplusplus */

#endif 	/* __InvalidOleVariantTypeException_FWD_DEFINED__ */


#ifndef __MarshalDirectiveException_FWD_DEFINED__
#define __MarshalDirectiveException_FWD_DEFINED__

#ifdef __cplusplus
typedef class MarshalDirectiveException MarshalDirectiveException;
#else
typedef struct MarshalDirectiveException MarshalDirectiveException;
#endif /* __cplusplus */

#endif 	/* __MarshalDirectiveException_FWD_DEFINED__ */


#ifndef __RuntimeEnvironment_FWD_DEFINED__
#define __RuntimeEnvironment_FWD_DEFINED__

#ifdef __cplusplus
typedef class RuntimeEnvironment RuntimeEnvironment;
#else
typedef struct RuntimeEnvironment RuntimeEnvironment;
#endif /* __cplusplus */

#endif 	/* __RuntimeEnvironment_FWD_DEFINED__ */


#ifndef __SEHException_FWD_DEFINED__
#define __SEHException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SEHException SEHException;
#else
typedef struct SEHException SEHException;
#endif /* __cplusplus */

#endif 	/* __SEHException_FWD_DEFINED__ */


#ifndef __BStrWrapper_FWD_DEFINED__
#define __BStrWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class BStrWrapper BStrWrapper;
#else
typedef struct BStrWrapper BStrWrapper;
#endif /* __cplusplus */

#endif 	/* __BStrWrapper_FWD_DEFINED__ */


#ifndef __CurrencyWrapper_FWD_DEFINED__
#define __CurrencyWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class CurrencyWrapper CurrencyWrapper;
#else
typedef struct CurrencyWrapper CurrencyWrapper;
#endif /* __cplusplus */

#endif 	/* __CurrencyWrapper_FWD_DEFINED__ */


#ifndef __DispatchWrapper_FWD_DEFINED__
#define __DispatchWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class DispatchWrapper DispatchWrapper;
#else
typedef struct DispatchWrapper DispatchWrapper;
#endif /* __cplusplus */

#endif 	/* __DispatchWrapper_FWD_DEFINED__ */


#ifndef __ErrorWrapper_FWD_DEFINED__
#define __ErrorWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class ErrorWrapper ErrorWrapper;
#else
typedef struct ErrorWrapper ErrorWrapper;
#endif /* __cplusplus */

#endif 	/* __ErrorWrapper_FWD_DEFINED__ */


#ifndef __ExtensibleClassFactory_FWD_DEFINED__
#define __ExtensibleClassFactory_FWD_DEFINED__

#ifdef __cplusplus
typedef class ExtensibleClassFactory ExtensibleClassFactory;
#else
typedef struct ExtensibleClassFactory ExtensibleClassFactory;
#endif /* __cplusplus */

#endif 	/* __ExtensibleClassFactory_FWD_DEFINED__ */


#ifndef __InvalidComObjectException_FWD_DEFINED__
#define __InvalidComObjectException_FWD_DEFINED__

#ifdef __cplusplus
typedef class InvalidComObjectException InvalidComObjectException;
#else
typedef struct InvalidComObjectException InvalidComObjectException;
#endif /* __cplusplus */

#endif 	/* __InvalidComObjectException_FWD_DEFINED__ */


#ifndef __ObjectCreationDelegate_FWD_DEFINED__
#define __ObjectCreationDelegate_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObjectCreationDelegate ObjectCreationDelegate;
#else
typedef struct ObjectCreationDelegate ObjectCreationDelegate;
#endif /* __cplusplus */

#endif 	/* __ObjectCreationDelegate_FWD_DEFINED__ */


#ifndef __RegistrationServices_FWD_DEFINED__
#define __RegistrationServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class RegistrationServices RegistrationServices;
#else
typedef struct RegistrationServices RegistrationServices;
#endif /* __cplusplus */

#endif 	/* __RegistrationServices_FWD_DEFINED__ */


#ifndef __SafeArrayRankMismatchException_FWD_DEFINED__
#define __SafeArrayRankMismatchException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SafeArrayRankMismatchException SafeArrayRankMismatchException;
#else
typedef struct SafeArrayRankMismatchException SafeArrayRankMismatchException;
#endif /* __cplusplus */

#endif 	/* __SafeArrayRankMismatchException_FWD_DEFINED__ */


#ifndef __SafeArrayTypeMismatchException_FWD_DEFINED__
#define __SafeArrayTypeMismatchException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SafeArrayTypeMismatchException SafeArrayTypeMismatchException;
#else
typedef struct SafeArrayTypeMismatchException SafeArrayTypeMismatchException;
#endif /* __cplusplus */

#endif 	/* __SafeArrayTypeMismatchException_FWD_DEFINED__ */


#ifndef __TypeLibConverter_FWD_DEFINED__
#define __TypeLibConverter_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeLibConverter TypeLibConverter;
#else
typedef struct TypeLibConverter TypeLibConverter;
#endif /* __cplusplus */

#endif 	/* __TypeLibConverter_FWD_DEFINED__ */


#ifndef __UnknownWrapper_FWD_DEFINED__
#define __UnknownWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnknownWrapper UnknownWrapper;
#else
typedef struct UnknownWrapper UnknownWrapper;
#endif /* __cplusplus */

#endif 	/* __UnknownWrapper_FWD_DEFINED__ */


#ifndef __Stream_FWD_DEFINED__
#define __Stream_FWD_DEFINED__

#ifdef __cplusplus
typedef class Stream Stream;
#else
typedef struct Stream Stream;
#endif /* __cplusplus */

#endif 	/* __Stream_FWD_DEFINED__ */


#ifndef __BinaryReader_FWD_DEFINED__
#define __BinaryReader_FWD_DEFINED__

#ifdef __cplusplus
typedef class BinaryReader BinaryReader;
#else
typedef struct BinaryReader BinaryReader;
#endif /* __cplusplus */

#endif 	/* __BinaryReader_FWD_DEFINED__ */


#ifndef __BinaryWriter_FWD_DEFINED__
#define __BinaryWriter_FWD_DEFINED__

#ifdef __cplusplus
typedef class BinaryWriter BinaryWriter;
#else
typedef struct BinaryWriter BinaryWriter;
#endif /* __cplusplus */

#endif 	/* __BinaryWriter_FWD_DEFINED__ */


#ifndef __BufferedStream_FWD_DEFINED__
#define __BufferedStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class BufferedStream BufferedStream;
#else
typedef struct BufferedStream BufferedStream;
#endif /* __cplusplus */

#endif 	/* __BufferedStream_FWD_DEFINED__ */


#ifndef __Directory_FWD_DEFINED__
#define __Directory_FWD_DEFINED__

#ifdef __cplusplus
typedef class Directory Directory;
#else
typedef struct Directory Directory;
#endif /* __cplusplus */

#endif 	/* __Directory_FWD_DEFINED__ */


#ifndef __FileSystemInfo_FWD_DEFINED__
#define __FileSystemInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileSystemInfo FileSystemInfo;
#else
typedef struct FileSystemInfo FileSystemInfo;
#endif /* __cplusplus */

#endif 	/* __FileSystemInfo_FWD_DEFINED__ */


#ifndef __DirectoryInfo_FWD_DEFINED__
#define __DirectoryInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class DirectoryInfo DirectoryInfo;
#else
typedef struct DirectoryInfo DirectoryInfo;
#endif /* __cplusplus */

#endif 	/* __DirectoryInfo_FWD_DEFINED__ */


#ifndef __IOException_FWD_DEFINED__
#define __IOException_FWD_DEFINED__

#ifdef __cplusplus
typedef class IOException IOException;
#else
typedef struct IOException IOException;
#endif /* __cplusplus */

#endif 	/* __IOException_FWD_DEFINED__ */


#ifndef __DirectoryNotFoundException_FWD_DEFINED__
#define __DirectoryNotFoundException_FWD_DEFINED__

#ifdef __cplusplus
typedef class DirectoryNotFoundException DirectoryNotFoundException;
#else
typedef struct DirectoryNotFoundException DirectoryNotFoundException;
#endif /* __cplusplus */

#endif 	/* __DirectoryNotFoundException_FWD_DEFINED__ */


#ifndef __DriveInfo_FWD_DEFINED__
#define __DriveInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class DriveInfo DriveInfo;
#else
typedef struct DriveInfo DriveInfo;
#endif /* __cplusplus */

#endif 	/* __DriveInfo_FWD_DEFINED__ */


#ifndef __DriveNotFoundException_FWD_DEFINED__
#define __DriveNotFoundException_FWD_DEFINED__

#ifdef __cplusplus
typedef class DriveNotFoundException DriveNotFoundException;
#else
typedef struct DriveNotFoundException DriveNotFoundException;
#endif /* __cplusplus */

#endif 	/* __DriveNotFoundException_FWD_DEFINED__ */


#ifndef __EndOfStreamException_FWD_DEFINED__
#define __EndOfStreamException_FWD_DEFINED__

#ifdef __cplusplus
typedef class EndOfStreamException EndOfStreamException;
#else
typedef struct EndOfStreamException EndOfStreamException;
#endif /* __cplusplus */

#endif 	/* __EndOfStreamException_FWD_DEFINED__ */


#ifndef __File_FWD_DEFINED__
#define __File_FWD_DEFINED__

#ifdef __cplusplus
typedef class File File;
#else
typedef struct File File;
#endif /* __cplusplus */

#endif 	/* __File_FWD_DEFINED__ */


#ifndef __FileInfo_FWD_DEFINED__
#define __FileInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileInfo FileInfo;
#else
typedef struct FileInfo FileInfo;
#endif /* __cplusplus */

#endif 	/* __FileInfo_FWD_DEFINED__ */


#ifndef __FileLoadException_FWD_DEFINED__
#define __FileLoadException_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileLoadException FileLoadException;
#else
typedef struct FileLoadException FileLoadException;
#endif /* __cplusplus */

#endif 	/* __FileLoadException_FWD_DEFINED__ */


#ifndef __FileNotFoundException_FWD_DEFINED__
#define __FileNotFoundException_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileNotFoundException FileNotFoundException;
#else
typedef struct FileNotFoundException FileNotFoundException;
#endif /* __cplusplus */

#endif 	/* __FileNotFoundException_FWD_DEFINED__ */


#ifndef __FileStream_FWD_DEFINED__
#define __FileStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileStream FileStream;
#else
typedef struct FileStream FileStream;
#endif /* __cplusplus */

#endif 	/* __FileStream_FWD_DEFINED__ */


#ifndef __MemoryStream_FWD_DEFINED__
#define __MemoryStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class MemoryStream MemoryStream;
#else
typedef struct MemoryStream MemoryStream;
#endif /* __cplusplus */

#endif 	/* __MemoryStream_FWD_DEFINED__ */


#ifndef __Path_FWD_DEFINED__
#define __Path_FWD_DEFINED__

#ifdef __cplusplus
typedef class Path Path;
#else
typedef struct Path Path;
#endif /* __cplusplus */

#endif 	/* __Path_FWD_DEFINED__ */


#ifndef __PathTooLongException_FWD_DEFINED__
#define __PathTooLongException_FWD_DEFINED__

#ifdef __cplusplus
typedef class PathTooLongException PathTooLongException;
#else
typedef struct PathTooLongException PathTooLongException;
#endif /* __cplusplus */

#endif 	/* __PathTooLongException_FWD_DEFINED__ */


#ifndef __TextReader_FWD_DEFINED__
#define __TextReader_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextReader TextReader;
#else
typedef struct TextReader TextReader;
#endif /* __cplusplus */

#endif 	/* __TextReader_FWD_DEFINED__ */


#ifndef __StreamReader_FWD_DEFINED__
#define __StreamReader_FWD_DEFINED__

#ifdef __cplusplus
typedef class StreamReader StreamReader;
#else
typedef struct StreamReader StreamReader;
#endif /* __cplusplus */

#endif 	/* __StreamReader_FWD_DEFINED__ */


#ifndef __TextWriter_FWD_DEFINED__
#define __TextWriter_FWD_DEFINED__

#ifdef __cplusplus
typedef class TextWriter TextWriter;
#else
typedef struct TextWriter TextWriter;
#endif /* __cplusplus */

#endif 	/* __TextWriter_FWD_DEFINED__ */


#ifndef __StreamWriter_FWD_DEFINED__
#define __StreamWriter_FWD_DEFINED__

#ifdef __cplusplus
typedef class StreamWriter StreamWriter;
#else
typedef struct StreamWriter StreamWriter;
#endif /* __cplusplus */

#endif 	/* __StreamWriter_FWD_DEFINED__ */


#ifndef __StringReader_FWD_DEFINED__
#define __StringReader_FWD_DEFINED__

#ifdef __cplusplus
typedef class StringReader StringReader;
#else
typedef struct StringReader StringReader;
#endif /* __cplusplus */

#endif 	/* __StringReader_FWD_DEFINED__ */


#ifndef __StringWriter_FWD_DEFINED__
#define __StringWriter_FWD_DEFINED__

#ifdef __cplusplus
typedef class StringWriter StringWriter;
#else
typedef struct StringWriter StringWriter;
#endif /* __cplusplus */

#endif 	/* __StringWriter_FWD_DEFINED__ */


#ifndef __AccessedThroughPropertyAttribute_FWD_DEFINED__
#define __AccessedThroughPropertyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AccessedThroughPropertyAttribute AccessedThroughPropertyAttribute;
#else
typedef struct AccessedThroughPropertyAttribute AccessedThroughPropertyAttribute;
#endif /* __cplusplus */

#endif 	/* __AccessedThroughPropertyAttribute_FWD_DEFINED__ */


#ifndef __CallConvCdecl_FWD_DEFINED__
#define __CallConvCdecl_FWD_DEFINED__

#ifdef __cplusplus
typedef class CallConvCdecl CallConvCdecl;
#else
typedef struct CallConvCdecl CallConvCdecl;
#endif /* __cplusplus */

#endif 	/* __CallConvCdecl_FWD_DEFINED__ */


#ifndef __CallConvStdcall_FWD_DEFINED__
#define __CallConvStdcall_FWD_DEFINED__

#ifdef __cplusplus
typedef class CallConvStdcall CallConvStdcall;
#else
typedef struct CallConvStdcall CallConvStdcall;
#endif /* __cplusplus */

#endif 	/* __CallConvStdcall_FWD_DEFINED__ */


#ifndef __CallConvThiscall_FWD_DEFINED__
#define __CallConvThiscall_FWD_DEFINED__

#ifdef __cplusplus
typedef class CallConvThiscall CallConvThiscall;
#else
typedef struct CallConvThiscall CallConvThiscall;
#endif /* __cplusplus */

#endif 	/* __CallConvThiscall_FWD_DEFINED__ */


#ifndef __CallConvFastcall_FWD_DEFINED__
#define __CallConvFastcall_FWD_DEFINED__

#ifdef __cplusplus
typedef class CallConvFastcall CallConvFastcall;
#else
typedef struct CallConvFastcall CallConvFastcall;
#endif /* __cplusplus */

#endif 	/* __CallConvFastcall_FWD_DEFINED__ */


#ifndef __CustomConstantAttribute_FWD_DEFINED__
#define __CustomConstantAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class CustomConstantAttribute CustomConstantAttribute;
#else
typedef struct CustomConstantAttribute CustomConstantAttribute;
#endif /* __cplusplus */

#endif 	/* __CustomConstantAttribute_FWD_DEFINED__ */


#ifndef __DateTimeConstantAttribute_FWD_DEFINED__
#define __DateTimeConstantAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DateTimeConstantAttribute DateTimeConstantAttribute;
#else
typedef struct DateTimeConstantAttribute DateTimeConstantAttribute;
#endif /* __cplusplus */

#endif 	/* __DateTimeConstantAttribute_FWD_DEFINED__ */


#ifndef __DiscardableAttribute_FWD_DEFINED__
#define __DiscardableAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DiscardableAttribute DiscardableAttribute;
#else
typedef struct DiscardableAttribute DiscardableAttribute;
#endif /* __cplusplus */

#endif 	/* __DiscardableAttribute_FWD_DEFINED__ */


#ifndef __DecimalConstantAttribute_FWD_DEFINED__
#define __DecimalConstantAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class DecimalConstantAttribute DecimalConstantAttribute;
#else
typedef struct DecimalConstantAttribute DecimalConstantAttribute;
#endif /* __cplusplus */

#endif 	/* __DecimalConstantAttribute_FWD_DEFINED__ */


#ifndef __CompilationRelaxationsAttribute_FWD_DEFINED__
#define __CompilationRelaxationsAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class CompilationRelaxationsAttribute CompilationRelaxationsAttribute;
#else
typedef struct CompilationRelaxationsAttribute CompilationRelaxationsAttribute;
#endif /* __cplusplus */

#endif 	/* __CompilationRelaxationsAttribute_FWD_DEFINED__ */


#ifndef __CompilerGlobalScopeAttribute_FWD_DEFINED__
#define __CompilerGlobalScopeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class CompilerGlobalScopeAttribute CompilerGlobalScopeAttribute;
#else
typedef struct CompilerGlobalScopeAttribute CompilerGlobalScopeAttribute;
#endif /* __cplusplus */

#endif 	/* __CompilerGlobalScopeAttribute_FWD_DEFINED__ */


#ifndef __IndexerNameAttribute_FWD_DEFINED__
#define __IndexerNameAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class IndexerNameAttribute IndexerNameAttribute;
#else
typedef struct IndexerNameAttribute IndexerNameAttribute;
#endif /* __cplusplus */

#endif 	/* __IndexerNameAttribute_FWD_DEFINED__ */


#ifndef __IsVolatile_FWD_DEFINED__
#define __IsVolatile_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsVolatile IsVolatile;
#else
typedef struct IsVolatile IsVolatile;
#endif /* __cplusplus */

#endif 	/* __IsVolatile_FWD_DEFINED__ */


#ifndef __MethodImplAttribute_FWD_DEFINED__
#define __MethodImplAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodImplAttribute MethodImplAttribute;
#else
typedef struct MethodImplAttribute MethodImplAttribute;
#endif /* __cplusplus */

#endif 	/* __MethodImplAttribute_FWD_DEFINED__ */


#ifndef __RequiredAttributeAttribute_FWD_DEFINED__
#define __RequiredAttributeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class RequiredAttributeAttribute RequiredAttributeAttribute;
#else
typedef struct RequiredAttributeAttribute RequiredAttributeAttribute;
#endif /* __cplusplus */

#endif 	/* __RequiredAttributeAttribute_FWD_DEFINED__ */


#ifndef __IsCopyConstructed_FWD_DEFINED__
#define __IsCopyConstructed_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsCopyConstructed IsCopyConstructed;
#else
typedef struct IsCopyConstructed IsCopyConstructed;
#endif /* __cplusplus */

#endif 	/* __IsCopyConstructed_FWD_DEFINED__ */


#ifndef __NativeCppClassAttribute_FWD_DEFINED__
#define __NativeCppClassAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class NativeCppClassAttribute NativeCppClassAttribute;
#else
typedef struct NativeCppClassAttribute NativeCppClassAttribute;
#endif /* __cplusplus */

#endif 	/* __NativeCppClassAttribute_FWD_DEFINED__ */


#ifndef __IDispatchConstantAttribute_FWD_DEFINED__
#define __IDispatchConstantAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class IDispatchConstantAttribute IDispatchConstantAttribute;
#else
typedef struct IDispatchConstantAttribute IDispatchConstantAttribute;
#endif /* __cplusplus */

#endif 	/* __IDispatchConstantAttribute_FWD_DEFINED__ */


#ifndef __IUnknownConstantAttribute_FWD_DEFINED__
#define __IUnknownConstantAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class IUnknownConstantAttribute IUnknownConstantAttribute;
#else
typedef struct IUnknownConstantAttribute IUnknownConstantAttribute;
#endif /* __cplusplus */

#endif 	/* __IUnknownConstantAttribute_FWD_DEFINED__ */


#ifndef __SecurityElement_FWD_DEFINED__
#define __SecurityElement_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecurityElement SecurityElement;
#else
typedef struct SecurityElement SecurityElement;
#endif /* __cplusplus */

#endif 	/* __SecurityElement_FWD_DEFINED__ */


#ifndef __XmlSyntaxException_FWD_DEFINED__
#define __XmlSyntaxException_FWD_DEFINED__

#ifdef __cplusplus
typedef class XmlSyntaxException XmlSyntaxException;
#else
typedef struct XmlSyntaxException XmlSyntaxException;
#endif /* __cplusplus */

#endif 	/* __XmlSyntaxException_FWD_DEFINED__ */


#ifndef __CodeAccessPermission_FWD_DEFINED__
#define __CodeAccessPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class CodeAccessPermission CodeAccessPermission;
#else
typedef struct CodeAccessPermission CodeAccessPermission;
#endif /* __cplusplus */

#endif 	/* __CodeAccessPermission_FWD_DEFINED__ */


#ifndef __EnvironmentPermission_FWD_DEFINED__
#define __EnvironmentPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class EnvironmentPermission EnvironmentPermission;
#else
typedef struct EnvironmentPermission EnvironmentPermission;
#endif /* __cplusplus */

#endif 	/* __EnvironmentPermission_FWD_DEFINED__ */


#ifndef __FileDialogPermission_FWD_DEFINED__
#define __FileDialogPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileDialogPermission FileDialogPermission;
#else
typedef struct FileDialogPermission FileDialogPermission;
#endif /* __cplusplus */

#endif 	/* __FileDialogPermission_FWD_DEFINED__ */


#ifndef __FileIOPermission_FWD_DEFINED__
#define __FileIOPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileIOPermission FileIOPermission;
#else
typedef struct FileIOPermission FileIOPermission;
#endif /* __cplusplus */

#endif 	/* __FileIOPermission_FWD_DEFINED__ */


#ifndef __SecurityAttribute_FWD_DEFINED__
#define __SecurityAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecurityAttribute SecurityAttribute;
#else
typedef struct SecurityAttribute SecurityAttribute;
#endif /* __cplusplus */

#endif 	/* __SecurityAttribute_FWD_DEFINED__ */


#ifndef __CodeAccessSecurityAttribute_FWD_DEFINED__
#define __CodeAccessSecurityAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class CodeAccessSecurityAttribute CodeAccessSecurityAttribute;
#else
typedef struct CodeAccessSecurityAttribute CodeAccessSecurityAttribute;
#endif /* __cplusplus */

#endif 	/* __CodeAccessSecurityAttribute_FWD_DEFINED__ */


#ifndef __HostProtectionAttribute_FWD_DEFINED__
#define __HostProtectionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class HostProtectionAttribute HostProtectionAttribute;
#else
typedef struct HostProtectionAttribute HostProtectionAttribute;
#endif /* __cplusplus */

#endif 	/* __HostProtectionAttribute_FWD_DEFINED__ */


#ifndef __IsolatedStoragePermission_FWD_DEFINED__
#define __IsolatedStoragePermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStoragePermission IsolatedStoragePermission;
#else
typedef struct IsolatedStoragePermission IsolatedStoragePermission;
#endif /* __cplusplus */

#endif 	/* __IsolatedStoragePermission_FWD_DEFINED__ */


#ifndef __IsolatedStorageFilePermission_FWD_DEFINED__
#define __IsolatedStorageFilePermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStorageFilePermission IsolatedStorageFilePermission;
#else
typedef struct IsolatedStorageFilePermission IsolatedStorageFilePermission;
#endif /* __cplusplus */

#endif 	/* __IsolatedStorageFilePermission_FWD_DEFINED__ */


#ifndef __EnvironmentPermissionAttribute_FWD_DEFINED__
#define __EnvironmentPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class EnvironmentPermissionAttribute EnvironmentPermissionAttribute;
#else
typedef struct EnvironmentPermissionAttribute EnvironmentPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __EnvironmentPermissionAttribute_FWD_DEFINED__ */


#ifndef __FileDialogPermissionAttribute_FWD_DEFINED__
#define __FileDialogPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileDialogPermissionAttribute FileDialogPermissionAttribute;
#else
typedef struct FileDialogPermissionAttribute FileDialogPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __FileDialogPermissionAttribute_FWD_DEFINED__ */


#ifndef __FileIOPermissionAttribute_FWD_DEFINED__
#define __FileIOPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class FileIOPermissionAttribute FileIOPermissionAttribute;
#else
typedef struct FileIOPermissionAttribute FileIOPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __FileIOPermissionAttribute_FWD_DEFINED__ */


#ifndef __KeyContainerPermissionAttribute_FWD_DEFINED__
#define __KeyContainerPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyContainerPermissionAttribute KeyContainerPermissionAttribute;
#else
typedef struct KeyContainerPermissionAttribute KeyContainerPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __KeyContainerPermissionAttribute_FWD_DEFINED__ */


#ifndef __PrincipalPermissionAttribute_FWD_DEFINED__
#define __PrincipalPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class PrincipalPermissionAttribute PrincipalPermissionAttribute;
#else
typedef struct PrincipalPermissionAttribute PrincipalPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __PrincipalPermissionAttribute_FWD_DEFINED__ */


#ifndef __ReflectionPermissionAttribute_FWD_DEFINED__
#define __ReflectionPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReflectionPermissionAttribute ReflectionPermissionAttribute;
#else
typedef struct ReflectionPermissionAttribute ReflectionPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __ReflectionPermissionAttribute_FWD_DEFINED__ */


#ifndef __RegistryPermissionAttribute_FWD_DEFINED__
#define __RegistryPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class RegistryPermissionAttribute RegistryPermissionAttribute;
#else
typedef struct RegistryPermissionAttribute RegistryPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __RegistryPermissionAttribute_FWD_DEFINED__ */


#ifndef __SecurityPermissionAttribute_FWD_DEFINED__
#define __SecurityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecurityPermissionAttribute SecurityPermissionAttribute;
#else
typedef struct SecurityPermissionAttribute SecurityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __SecurityPermissionAttribute_FWD_DEFINED__ */


#ifndef __UIPermissionAttribute_FWD_DEFINED__
#define __UIPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class UIPermissionAttribute UIPermissionAttribute;
#else
typedef struct UIPermissionAttribute UIPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __UIPermissionAttribute_FWD_DEFINED__ */


#ifndef __ZoneIdentityPermissionAttribute_FWD_DEFINED__
#define __ZoneIdentityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZoneIdentityPermissionAttribute ZoneIdentityPermissionAttribute;
#else
typedef struct ZoneIdentityPermissionAttribute ZoneIdentityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __ZoneIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef __StrongNameIdentityPermissionAttribute_FWD_DEFINED__
#define __StrongNameIdentityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class StrongNameIdentityPermissionAttribute StrongNameIdentityPermissionAttribute;
#else
typedef struct StrongNameIdentityPermissionAttribute StrongNameIdentityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __StrongNameIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef __SiteIdentityPermissionAttribute_FWD_DEFINED__
#define __SiteIdentityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SiteIdentityPermissionAttribute SiteIdentityPermissionAttribute;
#else
typedef struct SiteIdentityPermissionAttribute SiteIdentityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __SiteIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef __UrlIdentityPermissionAttribute_FWD_DEFINED__
#define __UrlIdentityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class UrlIdentityPermissionAttribute UrlIdentityPermissionAttribute;
#else
typedef struct UrlIdentityPermissionAttribute UrlIdentityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __UrlIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef __PublisherIdentityPermissionAttribute_FWD_DEFINED__
#define __PublisherIdentityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class PublisherIdentityPermissionAttribute PublisherIdentityPermissionAttribute;
#else
typedef struct PublisherIdentityPermissionAttribute PublisherIdentityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __PublisherIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef __IsolatedStoragePermissionAttribute_FWD_DEFINED__
#define __IsolatedStoragePermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStoragePermissionAttribute IsolatedStoragePermissionAttribute;
#else
typedef struct IsolatedStoragePermissionAttribute IsolatedStoragePermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __IsolatedStoragePermissionAttribute_FWD_DEFINED__ */


#ifndef __IsolatedStorageFilePermissionAttribute_FWD_DEFINED__
#define __IsolatedStorageFilePermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStorageFilePermissionAttribute IsolatedStorageFilePermissionAttribute;
#else
typedef struct IsolatedStorageFilePermissionAttribute IsolatedStorageFilePermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __IsolatedStorageFilePermissionAttribute_FWD_DEFINED__ */


#ifndef __PermissionSetAttribute_FWD_DEFINED__
#define __PermissionSetAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class PermissionSetAttribute PermissionSetAttribute;
#else
typedef struct PermissionSetAttribute PermissionSetAttribute;
#endif /* __cplusplus */

#endif 	/* __PermissionSetAttribute_FWD_DEFINED__ */


#ifndef __ReflectionPermission_FWD_DEFINED__
#define __ReflectionPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReflectionPermission ReflectionPermission;
#else
typedef struct ReflectionPermission ReflectionPermission;
#endif /* __cplusplus */

#endif 	/* __ReflectionPermission_FWD_DEFINED__ */


#ifndef __PrincipalPermission_FWD_DEFINED__
#define __PrincipalPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class PrincipalPermission PrincipalPermission;
#else
typedef struct PrincipalPermission PrincipalPermission;
#endif /* __cplusplus */

#endif 	/* __PrincipalPermission_FWD_DEFINED__ */


#ifndef __SecurityPermission_FWD_DEFINED__
#define __SecurityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecurityPermission SecurityPermission;
#else
typedef struct SecurityPermission SecurityPermission;
#endif /* __cplusplus */

#endif 	/* __SecurityPermission_FWD_DEFINED__ */


#ifndef __SiteIdentityPermission_FWD_DEFINED__
#define __SiteIdentityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class SiteIdentityPermission SiteIdentityPermission;
#else
typedef struct SiteIdentityPermission SiteIdentityPermission;
#endif /* __cplusplus */

#endif 	/* __SiteIdentityPermission_FWD_DEFINED__ */


#ifndef __StrongNameIdentityPermission_FWD_DEFINED__
#define __StrongNameIdentityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class StrongNameIdentityPermission StrongNameIdentityPermission;
#else
typedef struct StrongNameIdentityPermission StrongNameIdentityPermission;
#endif /* __cplusplus */

#endif 	/* __StrongNameIdentityPermission_FWD_DEFINED__ */


#ifndef __StrongNamePublicKeyBlob_FWD_DEFINED__
#define __StrongNamePublicKeyBlob_FWD_DEFINED__

#ifdef __cplusplus
typedef class StrongNamePublicKeyBlob StrongNamePublicKeyBlob;
#else
typedef struct StrongNamePublicKeyBlob StrongNamePublicKeyBlob;
#endif /* __cplusplus */

#endif 	/* __StrongNamePublicKeyBlob_FWD_DEFINED__ */


#ifndef __UIPermission_FWD_DEFINED__
#define __UIPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class UIPermission UIPermission;
#else
typedef struct UIPermission UIPermission;
#endif /* __cplusplus */

#endif 	/* __UIPermission_FWD_DEFINED__ */


#ifndef __UrlIdentityPermission_FWD_DEFINED__
#define __UrlIdentityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class UrlIdentityPermission UrlIdentityPermission;
#else
typedef struct UrlIdentityPermission UrlIdentityPermission;
#endif /* __cplusplus */

#endif 	/* __UrlIdentityPermission_FWD_DEFINED__ */


#ifndef __ZoneIdentityPermission_FWD_DEFINED__
#define __ZoneIdentityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class ZoneIdentityPermission ZoneIdentityPermission;
#else
typedef struct ZoneIdentityPermission ZoneIdentityPermission;
#endif /* __cplusplus */

#endif 	/* __ZoneIdentityPermission_FWD_DEFINED__ */


#ifndef __GacIdentityPermissionAttribute_FWD_DEFINED__
#define __GacIdentityPermissionAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class GacIdentityPermissionAttribute GacIdentityPermissionAttribute;
#else
typedef struct GacIdentityPermissionAttribute GacIdentityPermissionAttribute;
#endif /* __cplusplus */

#endif 	/* __GacIdentityPermissionAttribute_FWD_DEFINED__ */


#ifndef __GacIdentityPermission_FWD_DEFINED__
#define __GacIdentityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class GacIdentityPermission GacIdentityPermission;
#else
typedef struct GacIdentityPermission GacIdentityPermission;
#endif /* __cplusplus */

#endif 	/* __GacIdentityPermission_FWD_DEFINED__ */


#ifndef __KeyContainerPermissionAccessEntry_FWD_DEFINED__
#define __KeyContainerPermissionAccessEntry_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyContainerPermissionAccessEntry KeyContainerPermissionAccessEntry;
#else
typedef struct KeyContainerPermissionAccessEntry KeyContainerPermissionAccessEntry;
#endif /* __cplusplus */

#endif 	/* __KeyContainerPermissionAccessEntry_FWD_DEFINED__ */


#ifndef __KeyContainerPermissionAccessEntryCollection_FWD_DEFINED__
#define __KeyContainerPermissionAccessEntryCollection_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyContainerPermissionAccessEntryCollection KeyContainerPermissionAccessEntryCollection;
#else
typedef struct KeyContainerPermissionAccessEntryCollection KeyContainerPermissionAccessEntryCollection;
#endif /* __cplusplus */

#endif 	/* __KeyContainerPermissionAccessEntryCollection_FWD_DEFINED__ */


#ifndef __KeyContainerPermissionAccessEntryEnumerator_FWD_DEFINED__
#define __KeyContainerPermissionAccessEntryEnumerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyContainerPermissionAccessEntryEnumerator KeyContainerPermissionAccessEntryEnumerator;
#else
typedef struct KeyContainerPermissionAccessEntryEnumerator KeyContainerPermissionAccessEntryEnumerator;
#endif /* __cplusplus */

#endif 	/* __KeyContainerPermissionAccessEntryEnumerator_FWD_DEFINED__ */


#ifndef __KeyContainerPermission_FWD_DEFINED__
#define __KeyContainerPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyContainerPermission KeyContainerPermission;
#else
typedef struct KeyContainerPermission KeyContainerPermission;
#endif /* __cplusplus */

#endif 	/* __KeyContainerPermission_FWD_DEFINED__ */


#ifndef __PublisherIdentityPermission_FWD_DEFINED__
#define __PublisherIdentityPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class PublisherIdentityPermission PublisherIdentityPermission;
#else
typedef struct PublisherIdentityPermission PublisherIdentityPermission;
#endif /* __cplusplus */

#endif 	/* __PublisherIdentityPermission_FWD_DEFINED__ */


#ifndef __RegistryPermission_FWD_DEFINED__
#define __RegistryPermission_FWD_DEFINED__

#ifdef __cplusplus
typedef class RegistryPermission RegistryPermission;
#else
typedef struct RegistryPermission RegistryPermission;
#endif /* __cplusplus */

#endif 	/* __RegistryPermission_FWD_DEFINED__ */


#ifndef __SuppressUnmanagedCodeSecurityAttribute_FWD_DEFINED__
#define __SuppressUnmanagedCodeSecurityAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SuppressUnmanagedCodeSecurityAttribute SuppressUnmanagedCodeSecurityAttribute;
#else
typedef struct SuppressUnmanagedCodeSecurityAttribute SuppressUnmanagedCodeSecurityAttribute;
#endif /* __cplusplus */

#endif 	/* __SuppressUnmanagedCodeSecurityAttribute_FWD_DEFINED__ */


#ifndef __UnverifiableCodeAttribute_FWD_DEFINED__
#define __UnverifiableCodeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnverifiableCodeAttribute UnverifiableCodeAttribute;
#else
typedef struct UnverifiableCodeAttribute UnverifiableCodeAttribute;
#endif /* __cplusplus */

#endif 	/* __UnverifiableCodeAttribute_FWD_DEFINED__ */


#ifndef __AllowPartiallyTrustedCallersAttribute_FWD_DEFINED__
#define __AllowPartiallyTrustedCallersAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class AllowPartiallyTrustedCallersAttribute AllowPartiallyTrustedCallersAttribute;
#else
typedef struct AllowPartiallyTrustedCallersAttribute AllowPartiallyTrustedCallersAttribute;
#endif /* __cplusplus */

#endif 	/* __AllowPartiallyTrustedCallersAttribute_FWD_DEFINED__ */


#ifndef __HostSecurityManager_FWD_DEFINED__
#define __HostSecurityManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class HostSecurityManager HostSecurityManager;
#else
typedef struct HostSecurityManager HostSecurityManager;
#endif /* __cplusplus */

#endif 	/* __HostSecurityManager_FWD_DEFINED__ */


#ifndef __PermissionSet_FWD_DEFINED__
#define __PermissionSet_FWD_DEFINED__

#ifdef __cplusplus
typedef class PermissionSet PermissionSet;
#else
typedef struct PermissionSet PermissionSet;
#endif /* __cplusplus */

#endif 	/* __PermissionSet_FWD_DEFINED__ */


#ifndef __NamedPermissionSet_FWD_DEFINED__
#define __NamedPermissionSet_FWD_DEFINED__

#ifdef __cplusplus
typedef class NamedPermissionSet NamedPermissionSet;
#else
typedef struct NamedPermissionSet NamedPermissionSet;
#endif /* __cplusplus */

#endif 	/* __NamedPermissionSet_FWD_DEFINED__ */


#ifndef __SecurityException_FWD_DEFINED__
#define __SecurityException_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecurityException SecurityException;
#else
typedef struct SecurityException SecurityException;
#endif /* __cplusplus */

#endif 	/* __SecurityException_FWD_DEFINED__ */


#ifndef __HostProtectionException_FWD_DEFINED__
#define __HostProtectionException_FWD_DEFINED__

#ifdef __cplusplus
typedef class HostProtectionException HostProtectionException;
#else
typedef struct HostProtectionException HostProtectionException;
#endif /* __cplusplus */

#endif 	/* __HostProtectionException_FWD_DEFINED__ */


#ifndef __SecurityManager_FWD_DEFINED__
#define __SecurityManager_FWD_DEFINED__

#ifdef __cplusplus
typedef class SecurityManager SecurityManager;
#else
typedef struct SecurityManager SecurityManager;
#endif /* __cplusplus */

#endif 	/* __SecurityManager_FWD_DEFINED__ */


#ifndef __VerificationException_FWD_DEFINED__
#define __VerificationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class VerificationException VerificationException;
#else
typedef struct VerificationException VerificationException;
#endif /* __cplusplus */

#endif 	/* __VerificationException_FWD_DEFINED__ */


#ifndef __ContextAttribute_FWD_DEFINED__
#define __ContextAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContextAttribute ContextAttribute;
#else
typedef struct ContextAttribute ContextAttribute;
#endif /* __cplusplus */

#endif 	/* __ContextAttribute_FWD_DEFINED__ */


#ifndef __AsyncResult_FWD_DEFINED__
#define __AsyncResult_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsyncResult AsyncResult;
#else
typedef struct AsyncResult AsyncResult;
#endif /* __cplusplus */

#endif 	/* __AsyncResult_FWD_DEFINED__ */


#ifndef __CallContext_FWD_DEFINED__
#define __CallContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class CallContext CallContext;
#else
typedef struct CallContext CallContext;
#endif /* __cplusplus */

#endif 	/* __CallContext_FWD_DEFINED__ */


#ifndef __LogicalCallContext_FWD_DEFINED__
#define __LogicalCallContext_FWD_DEFINED__

#ifdef __cplusplus
typedef class LogicalCallContext LogicalCallContext;
#else
typedef struct LogicalCallContext LogicalCallContext;
#endif /* __cplusplus */

#endif 	/* __LogicalCallContext_FWD_DEFINED__ */


#ifndef __ChannelServices_FWD_DEFINED__
#define __ChannelServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class ChannelServices ChannelServices;
#else
typedef struct ChannelServices ChannelServices;
#endif /* __cplusplus */

#endif 	/* __ChannelServices_FWD_DEFINED__ */


#ifndef __ClientChannelSinkStack_FWD_DEFINED__
#define __ClientChannelSinkStack_FWD_DEFINED__

#ifdef __cplusplus
typedef class ClientChannelSinkStack ClientChannelSinkStack;
#else
typedef struct ClientChannelSinkStack ClientChannelSinkStack;
#endif /* __cplusplus */

#endif 	/* __ClientChannelSinkStack_FWD_DEFINED__ */


#ifndef __ServerChannelSinkStack_FWD_DEFINED__
#define __ServerChannelSinkStack_FWD_DEFINED__

#ifdef __cplusplus
typedef class ServerChannelSinkStack ServerChannelSinkStack;
#else
typedef struct ServerChannelSinkStack ServerChannelSinkStack;
#endif /* __cplusplus */

#endif 	/* __ServerChannelSinkStack_FWD_DEFINED__ */


#ifndef __ClientSponsor_FWD_DEFINED__
#define __ClientSponsor_FWD_DEFINED__

#ifdef __cplusplus
typedef class ClientSponsor ClientSponsor;
#else
typedef struct ClientSponsor ClientSponsor;
#endif /* __cplusplus */

#endif 	/* __ClientSponsor_FWD_DEFINED__ */


#ifndef __CrossContextDelegate_FWD_DEFINED__
#define __CrossContextDelegate_FWD_DEFINED__

#ifdef __cplusplus
typedef class CrossContextDelegate CrossContextDelegate;
#else
typedef struct CrossContextDelegate CrossContextDelegate;
#endif /* __cplusplus */

#endif 	/* __CrossContextDelegate_FWD_DEFINED__ */


#ifndef __Context_FWD_DEFINED__
#define __Context_FWD_DEFINED__

#ifdef __cplusplus
typedef class Context Context;
#else
typedef struct Context Context;
#endif /* __cplusplus */

#endif 	/* __Context_FWD_DEFINED__ */


#ifndef __ContextProperty_FWD_DEFINED__
#define __ContextProperty_FWD_DEFINED__

#ifdef __cplusplus
typedef class ContextProperty ContextProperty;
#else
typedef struct ContextProperty ContextProperty;
#endif /* __cplusplus */

#endif 	/* __ContextProperty_FWD_DEFINED__ */


#ifndef __EnterpriseServicesHelper_FWD_DEFINED__
#define __EnterpriseServicesHelper_FWD_DEFINED__

#ifdef __cplusplus
typedef class EnterpriseServicesHelper EnterpriseServicesHelper;
#else
typedef struct EnterpriseServicesHelper EnterpriseServicesHelper;
#endif /* __cplusplus */

#endif 	/* __EnterpriseServicesHelper_FWD_DEFINED__ */


#ifndef __Header_FWD_DEFINED__
#define __Header_FWD_DEFINED__

#ifdef __cplusplus
typedef class Header Header;
#else
typedef struct Header Header;
#endif /* __cplusplus */

#endif 	/* __Header_FWD_DEFINED__ */


#ifndef __HeaderHandler_FWD_DEFINED__
#define __HeaderHandler_FWD_DEFINED__

#ifdef __cplusplus
typedef class HeaderHandler HeaderHandler;
#else
typedef struct HeaderHandler HeaderHandler;
#endif /* __cplusplus */

#endif 	/* __HeaderHandler_FWD_DEFINED__ */


#ifndef __ChannelDataStore_FWD_DEFINED__
#define __ChannelDataStore_FWD_DEFINED__

#ifdef __cplusplus
typedef class ChannelDataStore ChannelDataStore;
#else
typedef struct ChannelDataStore ChannelDataStore;
#endif /* __cplusplus */

#endif 	/* __ChannelDataStore_FWD_DEFINED__ */


#ifndef __TransportHeaders_FWD_DEFINED__
#define __TransportHeaders_FWD_DEFINED__

#ifdef __cplusplus
typedef class TransportHeaders TransportHeaders;
#else
typedef struct TransportHeaders TransportHeaders;
#endif /* __cplusplus */

#endif 	/* __TransportHeaders_FWD_DEFINED__ */


#ifndef __SinkProviderData_FWD_DEFINED__
#define __SinkProviderData_FWD_DEFINED__

#ifdef __cplusplus
typedef class SinkProviderData SinkProviderData;
#else
typedef struct SinkProviderData SinkProviderData;
#endif /* __cplusplus */

#endif 	/* __SinkProviderData_FWD_DEFINED__ */


#ifndef __BaseChannelObjectWithProperties_FWD_DEFINED__
#define __BaseChannelObjectWithProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class BaseChannelObjectWithProperties BaseChannelObjectWithProperties;
#else
typedef struct BaseChannelObjectWithProperties BaseChannelObjectWithProperties;
#endif /* __cplusplus */

#endif 	/* __BaseChannelObjectWithProperties_FWD_DEFINED__ */


#ifndef __BaseChannelSinkWithProperties_FWD_DEFINED__
#define __BaseChannelSinkWithProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class BaseChannelSinkWithProperties BaseChannelSinkWithProperties;
#else
typedef struct BaseChannelSinkWithProperties BaseChannelSinkWithProperties;
#endif /* __cplusplus */

#endif 	/* __BaseChannelSinkWithProperties_FWD_DEFINED__ */


#ifndef __BaseChannelWithProperties_FWD_DEFINED__
#define __BaseChannelWithProperties_FWD_DEFINED__

#ifdef __cplusplus
typedef class BaseChannelWithProperties BaseChannelWithProperties;
#else
typedef struct BaseChannelWithProperties BaseChannelWithProperties;
#endif /* __cplusplus */

#endif 	/* __BaseChannelWithProperties_FWD_DEFINED__ */


#ifndef __LifetimeServices_FWD_DEFINED__
#define __LifetimeServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class LifetimeServices LifetimeServices;
#else
typedef struct LifetimeServices LifetimeServices;
#endif /* __cplusplus */

#endif 	/* __LifetimeServices_FWD_DEFINED__ */


#ifndef __ReturnMessage_FWD_DEFINED__
#define __ReturnMessage_FWD_DEFINED__

#ifdef __cplusplus
typedef class ReturnMessage ReturnMessage;
#else
typedef struct ReturnMessage ReturnMessage;
#endif /* __cplusplus */

#endif 	/* __ReturnMessage_FWD_DEFINED__ */


#ifndef __MethodCall_FWD_DEFINED__
#define __MethodCall_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodCall MethodCall;
#else
typedef struct MethodCall MethodCall;
#endif /* __cplusplus */

#endif 	/* __MethodCall_FWD_DEFINED__ */


#ifndef __ConstructionCall_FWD_DEFINED__
#define __ConstructionCall_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConstructionCall ConstructionCall;
#else
typedef struct ConstructionCall ConstructionCall;
#endif /* __cplusplus */

#endif 	/* __ConstructionCall_FWD_DEFINED__ */


#ifndef __MethodResponse_FWD_DEFINED__
#define __MethodResponse_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodResponse MethodResponse;
#else
typedef struct MethodResponse MethodResponse;
#endif /* __cplusplus */

#endif 	/* __MethodResponse_FWD_DEFINED__ */


#ifndef __ConstructionResponse_FWD_DEFINED__
#define __ConstructionResponse_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConstructionResponse ConstructionResponse;
#else
typedef struct ConstructionResponse ConstructionResponse;
#endif /* __cplusplus */

#endif 	/* __ConstructionResponse_FWD_DEFINED__ */


#ifndef __InternalMessageWrapper_FWD_DEFINED__
#define __InternalMessageWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class InternalMessageWrapper InternalMessageWrapper;
#else
typedef struct InternalMessageWrapper InternalMessageWrapper;
#endif /* __cplusplus */

#endif 	/* __InternalMessageWrapper_FWD_DEFINED__ */


#ifndef __MethodCallMessageWrapper_FWD_DEFINED__
#define __MethodCallMessageWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodCallMessageWrapper MethodCallMessageWrapper;
#else
typedef struct MethodCallMessageWrapper MethodCallMessageWrapper;
#endif /* __cplusplus */

#endif 	/* __MethodCallMessageWrapper_FWD_DEFINED__ */


#ifndef __MethodReturnMessageWrapper_FWD_DEFINED__
#define __MethodReturnMessageWrapper_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodReturnMessageWrapper MethodReturnMessageWrapper;
#else
typedef struct MethodReturnMessageWrapper MethodReturnMessageWrapper;
#endif /* __cplusplus */

#endif 	/* __MethodReturnMessageWrapper_FWD_DEFINED__ */


#ifndef __ObjectHandle_FWD_DEFINED__
#define __ObjectHandle_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObjectHandle ObjectHandle;
#else
typedef struct ObjectHandle ObjectHandle;
#endif /* __cplusplus */

#endif 	/* __ObjectHandle_FWD_DEFINED__ */


#ifndef __ObjRef_FWD_DEFINED__
#define __ObjRef_FWD_DEFINED__

#ifdef __cplusplus
typedef class ObjRef ObjRef;
#else
typedef struct ObjRef ObjRef;
#endif /* __cplusplus */

#endif 	/* __ObjRef_FWD_DEFINED__ */


#ifndef __OneWayAttribute_FWD_DEFINED__
#define __OneWayAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class OneWayAttribute OneWayAttribute;
#else
typedef struct OneWayAttribute OneWayAttribute;
#endif /* __cplusplus */

#endif 	/* __OneWayAttribute_FWD_DEFINED__ */


#ifndef __ProxyAttribute_FWD_DEFINED__
#define __ProxyAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class ProxyAttribute ProxyAttribute;
#else
typedef struct ProxyAttribute ProxyAttribute;
#endif /* __cplusplus */

#endif 	/* __ProxyAttribute_FWD_DEFINED__ */


#ifndef __RealProxy_FWD_DEFINED__
#define __RealProxy_FWD_DEFINED__

#ifdef __cplusplus
typedef class RealProxy RealProxy;
#else
typedef struct RealProxy RealProxy;
#endif /* __cplusplus */

#endif 	/* __RealProxy_FWD_DEFINED__ */


#ifndef __SoapAttribute_FWD_DEFINED__
#define __SoapAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapAttribute SoapAttribute;
#else
typedef struct SoapAttribute SoapAttribute;
#endif /* __cplusplus */

#endif 	/* __SoapAttribute_FWD_DEFINED__ */


#ifndef __SoapTypeAttribute_FWD_DEFINED__
#define __SoapTypeAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapTypeAttribute SoapTypeAttribute;
#else
typedef struct SoapTypeAttribute SoapTypeAttribute;
#endif /* __cplusplus */

#endif 	/* __SoapTypeAttribute_FWD_DEFINED__ */


#ifndef __SoapMethodAttribute_FWD_DEFINED__
#define __SoapMethodAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapMethodAttribute SoapMethodAttribute;
#else
typedef struct SoapMethodAttribute SoapMethodAttribute;
#endif /* __cplusplus */

#endif 	/* __SoapMethodAttribute_FWD_DEFINED__ */


#ifndef __SoapFieldAttribute_FWD_DEFINED__
#define __SoapFieldAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapFieldAttribute SoapFieldAttribute;
#else
typedef struct SoapFieldAttribute SoapFieldAttribute;
#endif /* __cplusplus */

#endif 	/* __SoapFieldAttribute_FWD_DEFINED__ */


#ifndef __SoapParameterAttribute_FWD_DEFINED__
#define __SoapParameterAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapParameterAttribute SoapParameterAttribute;
#else
typedef struct SoapParameterAttribute SoapParameterAttribute;
#endif /* __cplusplus */

#endif 	/* __SoapParameterAttribute_FWD_DEFINED__ */


#ifndef __RemotingConfiguration_FWD_DEFINED__
#define __RemotingConfiguration_FWD_DEFINED__

#ifdef __cplusplus
typedef class RemotingConfiguration RemotingConfiguration;
#else
typedef struct RemotingConfiguration RemotingConfiguration;
#endif /* __cplusplus */

#endif 	/* __RemotingConfiguration_FWD_DEFINED__ */


#ifndef __TypeEntry_FWD_DEFINED__
#define __TypeEntry_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeEntry TypeEntry;
#else
typedef struct TypeEntry TypeEntry;
#endif /* __cplusplus */

#endif 	/* __TypeEntry_FWD_DEFINED__ */


#ifndef __ActivatedClientTypeEntry_FWD_DEFINED__
#define __ActivatedClientTypeEntry_FWD_DEFINED__

#ifdef __cplusplus
typedef class ActivatedClientTypeEntry ActivatedClientTypeEntry;
#else
typedef struct ActivatedClientTypeEntry ActivatedClientTypeEntry;
#endif /* __cplusplus */

#endif 	/* __ActivatedClientTypeEntry_FWD_DEFINED__ */


#ifndef __ActivatedServiceTypeEntry_FWD_DEFINED__
#define __ActivatedServiceTypeEntry_FWD_DEFINED__

#ifdef __cplusplus
typedef class ActivatedServiceTypeEntry ActivatedServiceTypeEntry;
#else
typedef struct ActivatedServiceTypeEntry ActivatedServiceTypeEntry;
#endif /* __cplusplus */

#endif 	/* __ActivatedServiceTypeEntry_FWD_DEFINED__ */


#ifndef __WellKnownClientTypeEntry_FWD_DEFINED__
#define __WellKnownClientTypeEntry_FWD_DEFINED__

#ifdef __cplusplus
typedef class WellKnownClientTypeEntry WellKnownClientTypeEntry;
#else
typedef struct WellKnownClientTypeEntry WellKnownClientTypeEntry;
#endif /* __cplusplus */

#endif 	/* __WellKnownClientTypeEntry_FWD_DEFINED__ */


#ifndef __WellKnownServiceTypeEntry_FWD_DEFINED__
#define __WellKnownServiceTypeEntry_FWD_DEFINED__

#ifdef __cplusplus
typedef class WellKnownServiceTypeEntry WellKnownServiceTypeEntry;
#else
typedef struct WellKnownServiceTypeEntry WellKnownServiceTypeEntry;
#endif /* __cplusplus */

#endif 	/* __WellKnownServiceTypeEntry_FWD_DEFINED__ */


#ifndef __RemotingException_FWD_DEFINED__
#define __RemotingException_FWD_DEFINED__

#ifdef __cplusplus
typedef class RemotingException RemotingException;
#else
typedef struct RemotingException RemotingException;
#endif /* __cplusplus */

#endif 	/* __RemotingException_FWD_DEFINED__ */


#ifndef __ServerException_FWD_DEFINED__
#define __ServerException_FWD_DEFINED__

#ifdef __cplusplus
typedef class ServerException ServerException;
#else
typedef struct ServerException ServerException;
#endif /* __cplusplus */

#endif 	/* __ServerException_FWD_DEFINED__ */


#ifndef __RemotingTimeoutException_FWD_DEFINED__
#define __RemotingTimeoutException_FWD_DEFINED__

#ifdef __cplusplus
typedef class RemotingTimeoutException RemotingTimeoutException;
#else
typedef struct RemotingTimeoutException RemotingTimeoutException;
#endif /* __cplusplus */

#endif 	/* __RemotingTimeoutException_FWD_DEFINED__ */


#ifndef __RemotingServices_FWD_DEFINED__
#define __RemotingServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class RemotingServices RemotingServices;
#else
typedef struct RemotingServices RemotingServices;
#endif /* __cplusplus */

#endif 	/* __RemotingServices_FWD_DEFINED__ */


#ifndef __InternalRemotingServices_FWD_DEFINED__
#define __InternalRemotingServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class InternalRemotingServices InternalRemotingServices;
#else
typedef struct InternalRemotingServices InternalRemotingServices;
#endif /* __cplusplus */

#endif 	/* __InternalRemotingServices_FWD_DEFINED__ */


#ifndef __MessageSurrogateFilter_FWD_DEFINED__
#define __MessageSurrogateFilter_FWD_DEFINED__

#ifdef __cplusplus
typedef class MessageSurrogateFilter MessageSurrogateFilter;
#else
typedef struct MessageSurrogateFilter MessageSurrogateFilter;
#endif /* __cplusplus */

#endif 	/* __MessageSurrogateFilter_FWD_DEFINED__ */


#ifndef __RemotingSurrogateSelector_FWD_DEFINED__
#define __RemotingSurrogateSelector_FWD_DEFINED__

#ifdef __cplusplus
typedef class RemotingSurrogateSelector RemotingSurrogateSelector;
#else
typedef struct RemotingSurrogateSelector RemotingSurrogateSelector;
#endif /* __cplusplus */

#endif 	/* __RemotingSurrogateSelector_FWD_DEFINED__ */


#ifndef __SoapServices_FWD_DEFINED__
#define __SoapServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapServices SoapServices;
#else
typedef struct SoapServices SoapServices;
#endif /* __cplusplus */

#endif 	/* __SoapServices_FWD_DEFINED__ */


#ifndef __SoapDateTime_FWD_DEFINED__
#define __SoapDateTime_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapDateTime SoapDateTime;
#else
typedef struct SoapDateTime SoapDateTime;
#endif /* __cplusplus */

#endif 	/* __SoapDateTime_FWD_DEFINED__ */


#ifndef __SoapDuration_FWD_DEFINED__
#define __SoapDuration_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapDuration SoapDuration;
#else
typedef struct SoapDuration SoapDuration;
#endif /* __cplusplus */

#endif 	/* __SoapDuration_FWD_DEFINED__ */


#ifndef __SoapTime_FWD_DEFINED__
#define __SoapTime_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapTime SoapTime;
#else
typedef struct SoapTime SoapTime;
#endif /* __cplusplus */

#endif 	/* __SoapTime_FWD_DEFINED__ */


#ifndef __SoapDate_FWD_DEFINED__
#define __SoapDate_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapDate SoapDate;
#else
typedef struct SoapDate SoapDate;
#endif /* __cplusplus */

#endif 	/* __SoapDate_FWD_DEFINED__ */


#ifndef __SoapYearMonth_FWD_DEFINED__
#define __SoapYearMonth_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapYearMonth SoapYearMonth;
#else
typedef struct SoapYearMonth SoapYearMonth;
#endif /* __cplusplus */

#endif 	/* __SoapYearMonth_FWD_DEFINED__ */


#ifndef __SoapYear_FWD_DEFINED__
#define __SoapYear_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapYear SoapYear;
#else
typedef struct SoapYear SoapYear;
#endif /* __cplusplus */

#endif 	/* __SoapYear_FWD_DEFINED__ */


#ifndef __SoapMonthDay_FWD_DEFINED__
#define __SoapMonthDay_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapMonthDay SoapMonthDay;
#else
typedef struct SoapMonthDay SoapMonthDay;
#endif /* __cplusplus */

#endif 	/* __SoapMonthDay_FWD_DEFINED__ */


#ifndef __SoapDay_FWD_DEFINED__
#define __SoapDay_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapDay SoapDay;
#else
typedef struct SoapDay SoapDay;
#endif /* __cplusplus */

#endif 	/* __SoapDay_FWD_DEFINED__ */


#ifndef __SoapMonth_FWD_DEFINED__
#define __SoapMonth_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapMonth SoapMonth;
#else
typedef struct SoapMonth SoapMonth;
#endif /* __cplusplus */

#endif 	/* __SoapMonth_FWD_DEFINED__ */


#ifndef __SoapHexBinary_FWD_DEFINED__
#define __SoapHexBinary_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapHexBinary SoapHexBinary;
#else
typedef struct SoapHexBinary SoapHexBinary;
#endif /* __cplusplus */

#endif 	/* __SoapHexBinary_FWD_DEFINED__ */


#ifndef __SoapBase64Binary_FWD_DEFINED__
#define __SoapBase64Binary_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapBase64Binary SoapBase64Binary;
#else
typedef struct SoapBase64Binary SoapBase64Binary;
#endif /* __cplusplus */

#endif 	/* __SoapBase64Binary_FWD_DEFINED__ */


#ifndef __SoapInteger_FWD_DEFINED__
#define __SoapInteger_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapInteger SoapInteger;
#else
typedef struct SoapInteger SoapInteger;
#endif /* __cplusplus */

#endif 	/* __SoapInteger_FWD_DEFINED__ */


#ifndef __SoapPositiveInteger_FWD_DEFINED__
#define __SoapPositiveInteger_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapPositiveInteger SoapPositiveInteger;
#else
typedef struct SoapPositiveInteger SoapPositiveInteger;
#endif /* __cplusplus */

#endif 	/* __SoapPositiveInteger_FWD_DEFINED__ */


#ifndef __SoapNonPositiveInteger_FWD_DEFINED__
#define __SoapNonPositiveInteger_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNonPositiveInteger SoapNonPositiveInteger;
#else
typedef struct SoapNonPositiveInteger SoapNonPositiveInteger;
#endif /* __cplusplus */

#endif 	/* __SoapNonPositiveInteger_FWD_DEFINED__ */


#ifndef __SoapNonNegativeInteger_FWD_DEFINED__
#define __SoapNonNegativeInteger_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNonNegativeInteger SoapNonNegativeInteger;
#else
typedef struct SoapNonNegativeInteger SoapNonNegativeInteger;
#endif /* __cplusplus */

#endif 	/* __SoapNonNegativeInteger_FWD_DEFINED__ */


#ifndef __SoapNegativeInteger_FWD_DEFINED__
#define __SoapNegativeInteger_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNegativeInteger SoapNegativeInteger;
#else
typedef struct SoapNegativeInteger SoapNegativeInteger;
#endif /* __cplusplus */

#endif 	/* __SoapNegativeInteger_FWD_DEFINED__ */


#ifndef __SoapAnyUri_FWD_DEFINED__
#define __SoapAnyUri_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapAnyUri SoapAnyUri;
#else
typedef struct SoapAnyUri SoapAnyUri;
#endif /* __cplusplus */

#endif 	/* __SoapAnyUri_FWD_DEFINED__ */


#ifndef __SoapQName_FWD_DEFINED__
#define __SoapQName_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapQName SoapQName;
#else
typedef struct SoapQName SoapQName;
#endif /* __cplusplus */

#endif 	/* __SoapQName_FWD_DEFINED__ */


#ifndef __SoapNotation_FWD_DEFINED__
#define __SoapNotation_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNotation SoapNotation;
#else
typedef struct SoapNotation SoapNotation;
#endif /* __cplusplus */

#endif 	/* __SoapNotation_FWD_DEFINED__ */


#ifndef __SoapNormalizedString_FWD_DEFINED__
#define __SoapNormalizedString_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNormalizedString SoapNormalizedString;
#else
typedef struct SoapNormalizedString SoapNormalizedString;
#endif /* __cplusplus */

#endif 	/* __SoapNormalizedString_FWD_DEFINED__ */


#ifndef __SoapToken_FWD_DEFINED__
#define __SoapToken_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapToken SoapToken;
#else
typedef struct SoapToken SoapToken;
#endif /* __cplusplus */

#endif 	/* __SoapToken_FWD_DEFINED__ */


#ifndef __SoapLanguage_FWD_DEFINED__
#define __SoapLanguage_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapLanguage SoapLanguage;
#else
typedef struct SoapLanguage SoapLanguage;
#endif /* __cplusplus */

#endif 	/* __SoapLanguage_FWD_DEFINED__ */


#ifndef __SoapName_FWD_DEFINED__
#define __SoapName_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapName SoapName;
#else
typedef struct SoapName SoapName;
#endif /* __cplusplus */

#endif 	/* __SoapName_FWD_DEFINED__ */


#ifndef __SoapIdrefs_FWD_DEFINED__
#define __SoapIdrefs_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapIdrefs SoapIdrefs;
#else
typedef struct SoapIdrefs SoapIdrefs;
#endif /* __cplusplus */

#endif 	/* __SoapIdrefs_FWD_DEFINED__ */


#ifndef __SoapEntities_FWD_DEFINED__
#define __SoapEntities_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapEntities SoapEntities;
#else
typedef struct SoapEntities SoapEntities;
#endif /* __cplusplus */

#endif 	/* __SoapEntities_FWD_DEFINED__ */


#ifndef __SoapNmtoken_FWD_DEFINED__
#define __SoapNmtoken_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNmtoken SoapNmtoken;
#else
typedef struct SoapNmtoken SoapNmtoken;
#endif /* __cplusplus */

#endif 	/* __SoapNmtoken_FWD_DEFINED__ */


#ifndef __SoapNmtokens_FWD_DEFINED__
#define __SoapNmtokens_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNmtokens SoapNmtokens;
#else
typedef struct SoapNmtokens SoapNmtokens;
#endif /* __cplusplus */

#endif 	/* __SoapNmtokens_FWD_DEFINED__ */


#ifndef __SoapNcName_FWD_DEFINED__
#define __SoapNcName_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapNcName SoapNcName;
#else
typedef struct SoapNcName SoapNcName;
#endif /* __cplusplus */

#endif 	/* __SoapNcName_FWD_DEFINED__ */


#ifndef __SoapId_FWD_DEFINED__
#define __SoapId_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapId SoapId;
#else
typedef struct SoapId SoapId;
#endif /* __cplusplus */

#endif 	/* __SoapId_FWD_DEFINED__ */


#ifndef __SoapIdref_FWD_DEFINED__
#define __SoapIdref_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapIdref SoapIdref;
#else
typedef struct SoapIdref SoapIdref;
#endif /* __cplusplus */

#endif 	/* __SoapIdref_FWD_DEFINED__ */


#ifndef __SoapEntity_FWD_DEFINED__
#define __SoapEntity_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapEntity SoapEntity;
#else
typedef struct SoapEntity SoapEntity;
#endif /* __cplusplus */

#endif 	/* __SoapEntity_FWD_DEFINED__ */


#ifndef __SynchronizationAttribute_FWD_DEFINED__
#define __SynchronizationAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class SynchronizationAttribute SynchronizationAttribute;
#else
typedef struct SynchronizationAttribute SynchronizationAttribute;
#endif /* __cplusplus */

#endif 	/* __SynchronizationAttribute_FWD_DEFINED__ */


#ifndef __TrackingServices_FWD_DEFINED__
#define __TrackingServices_FWD_DEFINED__

#ifdef __cplusplus
typedef class TrackingServices TrackingServices;
#else
typedef struct TrackingServices TrackingServices;
#endif /* __cplusplus */

#endif 	/* __TrackingServices_FWD_DEFINED__ */


#ifndef __UrlAttribute_FWD_DEFINED__
#define __UrlAttribute_FWD_DEFINED__

#ifdef __cplusplus
typedef class UrlAttribute UrlAttribute;
#else
typedef struct UrlAttribute UrlAttribute;
#endif /* __cplusplus */

#endif 	/* __UrlAttribute_FWD_DEFINED__ */


#ifndef __IsolatedStorage_FWD_DEFINED__
#define __IsolatedStorage_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStorage IsolatedStorage;
#else
typedef struct IsolatedStorage IsolatedStorage;
#endif /* __cplusplus */

#endif 	/* __IsolatedStorage_FWD_DEFINED__ */


#ifndef __IsolatedStorageFile_FWD_DEFINED__
#define __IsolatedStorageFile_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStorageFile IsolatedStorageFile;
#else
typedef struct IsolatedStorageFile IsolatedStorageFile;
#endif /* __cplusplus */

#endif 	/* __IsolatedStorageFile_FWD_DEFINED__ */


#ifndef __IsolatedStorageFileStream_FWD_DEFINED__
#define __IsolatedStorageFileStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStorageFileStream IsolatedStorageFileStream;
#else
typedef struct IsolatedStorageFileStream IsolatedStorageFileStream;
#endif /* __cplusplus */

#endif 	/* __IsolatedStorageFileStream_FWD_DEFINED__ */


#ifndef __IsolatedStorageException_FWD_DEFINED__
#define __IsolatedStorageException_FWD_DEFINED__

#ifdef __cplusplus
typedef class IsolatedStorageException IsolatedStorageException;
#else
typedef struct IsolatedStorageException IsolatedStorageException;
#endif /* __cplusplus */

#endif 	/* __IsolatedStorageException_FWD_DEFINED__ */


#ifndef __InternalRM_FWD_DEFINED__
#define __InternalRM_FWD_DEFINED__

#ifdef __cplusplus
typedef class InternalRM InternalRM;
#else
typedef struct InternalRM InternalRM;
#endif /* __cplusplus */

#endif 	/* __InternalRM_FWD_DEFINED__ */


#ifndef __InternalST_FWD_DEFINED__
#define __InternalST_FWD_DEFINED__

#ifdef __cplusplus
typedef class InternalST InternalST;
#else
typedef struct InternalST InternalST;
#endif /* __cplusplus */

#endif 	/* __InternalST_FWD_DEFINED__ */


#ifndef __SoapMessage_FWD_DEFINED__
#define __SoapMessage_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapMessage SoapMessage;
#else
typedef struct SoapMessage SoapMessage;
#endif /* __cplusplus */

#endif 	/* __SoapMessage_FWD_DEFINED__ */


#ifndef __SoapFault_FWD_DEFINED__
#define __SoapFault_FWD_DEFINED__

#ifdef __cplusplus
typedef class SoapFault SoapFault;
#else
typedef struct SoapFault SoapFault;
#endif /* __cplusplus */

#endif 	/* __SoapFault_FWD_DEFINED__ */


#ifndef __ServerFault_FWD_DEFINED__
#define __ServerFault_FWD_DEFINED__

#ifdef __cplusplus
typedef class ServerFault ServerFault;
#else
typedef struct ServerFault ServerFault;
#endif /* __cplusplus */

#endif 	/* __ServerFault_FWD_DEFINED__ */


#ifndef __BinaryFormatter_FWD_DEFINED__
#define __BinaryFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class BinaryFormatter BinaryFormatter;
#else
typedef struct BinaryFormatter BinaryFormatter;
#endif /* __cplusplus */

#endif 	/* __BinaryFormatter_FWD_DEFINED__ */


#ifndef __AssemblyBuilder_FWD_DEFINED__
#define __AssemblyBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class AssemblyBuilder AssemblyBuilder;
#else
typedef struct AssemblyBuilder AssemblyBuilder;
#endif /* __cplusplus */

#endif 	/* __AssemblyBuilder_FWD_DEFINED__ */


#ifndef __ConstructorBuilder_FWD_DEFINED__
#define __ConstructorBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class ConstructorBuilder ConstructorBuilder;
#else
typedef struct ConstructorBuilder ConstructorBuilder;
#endif /* __cplusplus */

#endif 	/* __ConstructorBuilder_FWD_DEFINED__ */


#ifndef __ILGenerator_FWD_DEFINED__
#define __ILGenerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class ILGenerator ILGenerator;
#else
typedef struct ILGenerator ILGenerator;
#endif /* __cplusplus */

#endif 	/* __ILGenerator_FWD_DEFINED__ */


#ifndef __DynamicILInfo_FWD_DEFINED__
#define __DynamicILInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class DynamicILInfo DynamicILInfo;
#else
typedef struct DynamicILInfo DynamicILInfo;
#endif /* __cplusplus */

#endif 	/* __DynamicILInfo_FWD_DEFINED__ */


#ifndef __DynamicMethod_FWD_DEFINED__
#define __DynamicMethod_FWD_DEFINED__

#ifdef __cplusplus
typedef class DynamicMethod DynamicMethod;
#else
typedef struct DynamicMethod DynamicMethod;
#endif /* __cplusplus */

#endif 	/* __DynamicMethod_FWD_DEFINED__ */


#ifndef __EventBuilder_FWD_DEFINED__
#define __EventBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class EventBuilder EventBuilder;
#else
typedef struct EventBuilder EventBuilder;
#endif /* __cplusplus */

#endif 	/* __EventBuilder_FWD_DEFINED__ */


#ifndef __FieldBuilder_FWD_DEFINED__
#define __FieldBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class FieldBuilder FieldBuilder;
#else
typedef struct FieldBuilder FieldBuilder;
#endif /* __cplusplus */

#endif 	/* __FieldBuilder_FWD_DEFINED__ */


#ifndef __LocalBuilder_FWD_DEFINED__
#define __LocalBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class LocalBuilder LocalBuilder;
#else
typedef struct LocalBuilder LocalBuilder;
#endif /* __cplusplus */

#endif 	/* __LocalBuilder_FWD_DEFINED__ */


#ifndef __MethodBuilder_FWD_DEFINED__
#define __MethodBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodBuilder MethodBuilder;
#else
typedef struct MethodBuilder MethodBuilder;
#endif /* __cplusplus */

#endif 	/* __MethodBuilder_FWD_DEFINED__ */


#ifndef __CustomAttributeBuilder_FWD_DEFINED__
#define __CustomAttributeBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class CustomAttributeBuilder CustomAttributeBuilder;
#else
typedef struct CustomAttributeBuilder CustomAttributeBuilder;
#endif /* __cplusplus */

#endif 	/* __CustomAttributeBuilder_FWD_DEFINED__ */


#ifndef __MethodRental_FWD_DEFINED__
#define __MethodRental_FWD_DEFINED__

#ifdef __cplusplus
typedef class MethodRental MethodRental;
#else
typedef struct MethodRental MethodRental;
#endif /* __cplusplus */

#endif 	/* __MethodRental_FWD_DEFINED__ */


#ifndef __ModuleBuilder_FWD_DEFINED__
#define __ModuleBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class ModuleBuilder ModuleBuilder;
#else
typedef struct ModuleBuilder ModuleBuilder;
#endif /* __cplusplus */

#endif 	/* __ModuleBuilder_FWD_DEFINED__ */


#ifndef __OpCodes_FWD_DEFINED__
#define __OpCodes_FWD_DEFINED__

#ifdef __cplusplus
typedef class OpCodes OpCodes;
#else
typedef struct OpCodes OpCodes;
#endif /* __cplusplus */

#endif 	/* __OpCodes_FWD_DEFINED__ */


#ifndef __ParameterBuilder_FWD_DEFINED__
#define __ParameterBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class ParameterBuilder ParameterBuilder;
#else
typedef struct ParameterBuilder ParameterBuilder;
#endif /* __cplusplus */

#endif 	/* __ParameterBuilder_FWD_DEFINED__ */


#ifndef __PropertyBuilder_FWD_DEFINED__
#define __PropertyBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class PropertyBuilder PropertyBuilder;
#else
typedef struct PropertyBuilder PropertyBuilder;
#endif /* __cplusplus */

#endif 	/* __PropertyBuilder_FWD_DEFINED__ */


#ifndef __SignatureHelper_FWD_DEFINED__
#define __SignatureHelper_FWD_DEFINED__

#ifdef __cplusplus
typedef class SignatureHelper SignatureHelper;
#else
typedef struct SignatureHelper SignatureHelper;
#endif /* __cplusplus */

#endif 	/* __SignatureHelper_FWD_DEFINED__ */


#ifndef __TypeBuilder_FWD_DEFINED__
#define __TypeBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class TypeBuilder TypeBuilder;
#else
typedef struct TypeBuilder TypeBuilder;
#endif /* __cplusplus */

#endif 	/* __TypeBuilder_FWD_DEFINED__ */


#ifndef __GenericTypeParameterBuilder_FWD_DEFINED__
#define __GenericTypeParameterBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class GenericTypeParameterBuilder GenericTypeParameterBuilder;
#else
typedef struct GenericTypeParameterBuilder GenericTypeParameterBuilder;
#endif /* __cplusplus */

#endif 	/* __GenericTypeParameterBuilder_FWD_DEFINED__ */


#ifndef __EnumBuilder_FWD_DEFINED__
#define __EnumBuilder_FWD_DEFINED__

#ifdef __cplusplus
typedef class EnumBuilder EnumBuilder;
#else
typedef struct EnumBuilder EnumBuilder;
#endif /* __cplusplus */

#endif 	/* __EnumBuilder_FWD_DEFINED__ */


#ifndef __UnmanagedMarshal_FWD_DEFINED__
#define __UnmanagedMarshal_FWD_DEFINED__

#ifdef __cplusplus
typedef class UnmanagedMarshal UnmanagedMarshal;
#else
typedef struct UnmanagedMarshal UnmanagedMarshal;
#endif /* __cplusplus */

#endif 	/* __UnmanagedMarshal_FWD_DEFINED__ */


#ifndef __KeySizes_FWD_DEFINED__
#define __KeySizes_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeySizes KeySizes;
#else
typedef struct KeySizes KeySizes;
#endif /* __cplusplus */

#endif 	/* __KeySizes_FWD_DEFINED__ */


#ifndef __CryptographicException_FWD_DEFINED__
#define __CryptographicException_FWD_DEFINED__

#ifdef __cplusplus
typedef class CryptographicException CryptographicException;
#else
typedef struct CryptographicException CryptographicException;
#endif /* __cplusplus */

#endif 	/* __CryptographicException_FWD_DEFINED__ */


#ifndef __CryptographicUnexpectedOperationException_FWD_DEFINED__
#define __CryptographicUnexpectedOperationException_FWD_DEFINED__

#ifdef __cplusplus
typedef class CryptographicUnexpectedOperationException CryptographicUnexpectedOperationException;
#else
typedef struct CryptographicUnexpectedOperationException CryptographicUnexpectedOperationException;
#endif /* __cplusplus */

#endif 	/* __CryptographicUnexpectedOperationException_FWD_DEFINED__ */


#ifndef __RandomNumberGenerator_FWD_DEFINED__
#define __RandomNumberGenerator_FWD_DEFINED__

#ifdef __cplusplus
typedef class RandomNumberGenerator RandomNumberGenerator;
#else
typedef struct RandomNumberGenerator RandomNumberGenerator;
#endif /* __cplusplus */

#endif 	/* __RandomNumberGenerator_FWD_DEFINED__ */


#ifndef __RNGCryptoServiceProvider_FWD_DEFINED__
#define __RNGCryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class RNGCryptoServiceProvider RNGCryptoServiceProvider;
#else
typedef struct RNGCryptoServiceProvider RNGCryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __RNGCryptoServiceProvider_FWD_DEFINED__ */


#ifndef __AsymmetricAlgorithm_FWD_DEFINED__
#define __AsymmetricAlgorithm_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsymmetricAlgorithm AsymmetricAlgorithm;
#else
typedef struct AsymmetricAlgorithm AsymmetricAlgorithm;
#endif /* __cplusplus */

#endif 	/* __AsymmetricAlgorithm_FWD_DEFINED__ */


#ifndef __AsymmetricKeyExchangeDeformatter_FWD_DEFINED__
#define __AsymmetricKeyExchangeDeformatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsymmetricKeyExchangeDeformatter AsymmetricKeyExchangeDeformatter;
#else
typedef struct AsymmetricKeyExchangeDeformatter AsymmetricKeyExchangeDeformatter;
#endif /* __cplusplus */

#endif 	/* __AsymmetricKeyExchangeDeformatter_FWD_DEFINED__ */


#ifndef __AsymmetricKeyExchangeFormatter_FWD_DEFINED__
#define __AsymmetricKeyExchangeFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsymmetricKeyExchangeFormatter AsymmetricKeyExchangeFormatter;
#else
typedef struct AsymmetricKeyExchangeFormatter AsymmetricKeyExchangeFormatter;
#endif /* __cplusplus */

#endif 	/* __AsymmetricKeyExchangeFormatter_FWD_DEFINED__ */


#ifndef __AsymmetricSignatureDeformatter_FWD_DEFINED__
#define __AsymmetricSignatureDeformatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsymmetricSignatureDeformatter AsymmetricSignatureDeformatter;
#else
typedef struct AsymmetricSignatureDeformatter AsymmetricSignatureDeformatter;
#endif /* __cplusplus */

#endif 	/* __AsymmetricSignatureDeformatter_FWD_DEFINED__ */


#ifndef __AsymmetricSignatureFormatter_FWD_DEFINED__
#define __AsymmetricSignatureFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class AsymmetricSignatureFormatter AsymmetricSignatureFormatter;
#else
typedef struct AsymmetricSignatureFormatter AsymmetricSignatureFormatter;
#endif /* __cplusplus */

#endif 	/* __AsymmetricSignatureFormatter_FWD_DEFINED__ */


#ifndef __ToBase64Transform_FWD_DEFINED__
#define __ToBase64Transform_FWD_DEFINED__

#ifdef __cplusplus
typedef class ToBase64Transform ToBase64Transform;
#else
typedef struct ToBase64Transform ToBase64Transform;
#endif /* __cplusplus */

#endif 	/* __ToBase64Transform_FWD_DEFINED__ */


#ifndef __FromBase64Transform_FWD_DEFINED__
#define __FromBase64Transform_FWD_DEFINED__

#ifdef __cplusplus
typedef class FromBase64Transform FromBase64Transform;
#else
typedef struct FromBase64Transform FromBase64Transform;
#endif /* __cplusplus */

#endif 	/* __FromBase64Transform_FWD_DEFINED__ */


#ifndef __CryptoAPITransform_FWD_DEFINED__
#define __CryptoAPITransform_FWD_DEFINED__

#ifdef __cplusplus
typedef class CryptoAPITransform CryptoAPITransform;
#else
typedef struct CryptoAPITransform CryptoAPITransform;
#endif /* __cplusplus */

#endif 	/* __CryptoAPITransform_FWD_DEFINED__ */


#ifndef __CspParameters_FWD_DEFINED__
#define __CspParameters_FWD_DEFINED__

#ifdef __cplusplus
typedef class CspParameters CspParameters;
#else
typedef struct CspParameters CspParameters;
#endif /* __cplusplus */

#endif 	/* __CspParameters_FWD_DEFINED__ */


#ifndef __CryptoConfig_FWD_DEFINED__
#define __CryptoConfig_FWD_DEFINED__

#ifdef __cplusplus
typedef class CryptoConfig CryptoConfig;
#else
typedef struct CryptoConfig CryptoConfig;
#endif /* __cplusplus */

#endif 	/* __CryptoConfig_FWD_DEFINED__ */


#ifndef __CryptoStream_FWD_DEFINED__
#define __CryptoStream_FWD_DEFINED__

#ifdef __cplusplus
typedef class CryptoStream CryptoStream;
#else
typedef struct CryptoStream CryptoStream;
#endif /* __cplusplus */

#endif 	/* __CryptoStream_FWD_DEFINED__ */


#ifndef __SymmetricAlgorithm_FWD_DEFINED__
#define __SymmetricAlgorithm_FWD_DEFINED__

#ifdef __cplusplus
typedef class SymmetricAlgorithm SymmetricAlgorithm;
#else
typedef struct SymmetricAlgorithm SymmetricAlgorithm;
#endif /* __cplusplus */

#endif 	/* __SymmetricAlgorithm_FWD_DEFINED__ */


#ifndef __DES_FWD_DEFINED__
#define __DES_FWD_DEFINED__

#ifdef __cplusplus
typedef class DES DES;
#else
typedef struct DES DES;
#endif /* __cplusplus */

#endif 	/* __DES_FWD_DEFINED__ */


#ifndef __DESCryptoServiceProvider_FWD_DEFINED__
#define __DESCryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class DESCryptoServiceProvider DESCryptoServiceProvider;
#else
typedef struct DESCryptoServiceProvider DESCryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __DESCryptoServiceProvider_FWD_DEFINED__ */


#ifndef __DeriveBytes_FWD_DEFINED__
#define __DeriveBytes_FWD_DEFINED__

#ifdef __cplusplus
typedef class DeriveBytes DeriveBytes;
#else
typedef struct DeriveBytes DeriveBytes;
#endif /* __cplusplus */

#endif 	/* __DeriveBytes_FWD_DEFINED__ */


#ifndef __DSA_FWD_DEFINED__
#define __DSA_FWD_DEFINED__

#ifdef __cplusplus
typedef class DSA DSA;
#else
typedef struct DSA DSA;
#endif /* __cplusplus */

#endif 	/* __DSA_FWD_DEFINED__ */


#ifndef __DSACryptoServiceProvider_FWD_DEFINED__
#define __DSACryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class DSACryptoServiceProvider DSACryptoServiceProvider;
#else
typedef struct DSACryptoServiceProvider DSACryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __DSACryptoServiceProvider_FWD_DEFINED__ */


#ifndef __DSASignatureDeformatter_FWD_DEFINED__
#define __DSASignatureDeformatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class DSASignatureDeformatter DSASignatureDeformatter;
#else
typedef struct DSASignatureDeformatter DSASignatureDeformatter;
#endif /* __cplusplus */

#endif 	/* __DSASignatureDeformatter_FWD_DEFINED__ */


#ifndef __DSASignatureFormatter_FWD_DEFINED__
#define __DSASignatureFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class DSASignatureFormatter DSASignatureFormatter;
#else
typedef struct DSASignatureFormatter DSASignatureFormatter;
#endif /* __cplusplus */

#endif 	/* __DSASignatureFormatter_FWD_DEFINED__ */


#ifndef __HashAlgorithm_FWD_DEFINED__
#define __HashAlgorithm_FWD_DEFINED__

#ifdef __cplusplus
typedef class HashAlgorithm HashAlgorithm;
#else
typedef struct HashAlgorithm HashAlgorithm;
#endif /* __cplusplus */

#endif 	/* __HashAlgorithm_FWD_DEFINED__ */


#ifndef __KeyedHashAlgorithm_FWD_DEFINED__
#define __KeyedHashAlgorithm_FWD_DEFINED__

#ifdef __cplusplus
typedef class KeyedHashAlgorithm KeyedHashAlgorithm;
#else
typedef struct KeyedHashAlgorithm KeyedHashAlgorithm;
#endif /* __cplusplus */

#endif 	/* __KeyedHashAlgorithm_FWD_DEFINED__ */


#ifndef __HMAC_FWD_DEFINED__
#define __HMAC_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMAC HMAC;
#else
typedef struct HMAC HMAC;
#endif /* __cplusplus */

#endif 	/* __HMAC_FWD_DEFINED__ */


#ifndef __HMACMD5_FWD_DEFINED__
#define __HMACMD5_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMACMD5 HMACMD5;
#else
typedef struct HMACMD5 HMACMD5;
#endif /* __cplusplus */

#endif 	/* __HMACMD5_FWD_DEFINED__ */


#ifndef __HMACRIPEMD160_FWD_DEFINED__
#define __HMACRIPEMD160_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMACRIPEMD160 HMACRIPEMD160;
#else
typedef struct HMACRIPEMD160 HMACRIPEMD160;
#endif /* __cplusplus */

#endif 	/* __HMACRIPEMD160_FWD_DEFINED__ */


#ifndef __HMACSHA1_FWD_DEFINED__
#define __HMACSHA1_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMACSHA1 HMACSHA1;
#else
typedef struct HMACSHA1 HMACSHA1;
#endif /* __cplusplus */

#endif 	/* __HMACSHA1_FWD_DEFINED__ */


#ifndef __HMACSHA256_FWD_DEFINED__
#define __HMACSHA256_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMACSHA256 HMACSHA256;
#else
typedef struct HMACSHA256 HMACSHA256;
#endif /* __cplusplus */

#endif 	/* __HMACSHA256_FWD_DEFINED__ */


#ifndef __HMACSHA384_FWD_DEFINED__
#define __HMACSHA384_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMACSHA384 HMACSHA384;
#else
typedef struct HMACSHA384 HMACSHA384;
#endif /* __cplusplus */

#endif 	/* __HMACSHA384_FWD_DEFINED__ */


#ifndef __HMACSHA512_FWD_DEFINED__
#define __HMACSHA512_FWD_DEFINED__

#ifdef __cplusplus
typedef class HMACSHA512 HMACSHA512;
#else
typedef struct HMACSHA512 HMACSHA512;
#endif /* __cplusplus */

#endif 	/* __HMACSHA512_FWD_DEFINED__ */


#ifndef __CspKeyContainerInfo_FWD_DEFINED__
#define __CspKeyContainerInfo_FWD_DEFINED__

#ifdef __cplusplus
typedef class CspKeyContainerInfo CspKeyContainerInfo;
#else
typedef struct CspKeyContainerInfo CspKeyContainerInfo;
#endif /* __cplusplus */

#endif 	/* __CspKeyContainerInfo_FWD_DEFINED__ */


#ifndef __MACTripleDES_FWD_DEFINED__
#define __MACTripleDES_FWD_DEFINED__

#ifdef __cplusplus
typedef class MACTripleDES MACTripleDES;
#else
typedef struct MACTripleDES MACTripleDES;
#endif /* __cplusplus */

#endif 	/* __MACTripleDES_FWD_DEFINED__ */


#ifndef __MD5_FWD_DEFINED__
#define __MD5_FWD_DEFINED__

#ifdef __cplusplus
typedef class MD5 MD5;
#else
typedef struct MD5 MD5;
#endif /* __cplusplus */

#endif 	/* __MD5_FWD_DEFINED__ */


#ifndef __MD5CryptoServiceProvider_FWD_DEFINED__
#define __MD5CryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class MD5CryptoServiceProvider MD5CryptoServiceProvider;
#else
typedef struct MD5CryptoServiceProvider MD5CryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __MD5CryptoServiceProvider_FWD_DEFINED__ */


#ifndef __MaskGenerationMethod_FWD_DEFINED__
#define __MaskGenerationMethod_FWD_DEFINED__

#ifdef __cplusplus
typedef class MaskGenerationMethod MaskGenerationMethod;
#else
typedef struct MaskGenerationMethod MaskGenerationMethod;
#endif /* __cplusplus */

#endif 	/* __MaskGenerationMethod_FWD_DEFINED__ */


#ifndef __PasswordDeriveBytes_FWD_DEFINED__
#define __PasswordDeriveBytes_FWD_DEFINED__

#ifdef __cplusplus
typedef class PasswordDeriveBytes PasswordDeriveBytes;
#else
typedef struct PasswordDeriveBytes PasswordDeriveBytes;
#endif /* __cplusplus */

#endif 	/* __PasswordDeriveBytes_FWD_DEFINED__ */


#ifndef __PKCS1MaskGenerationMethod_FWD_DEFINED__
#define __PKCS1MaskGenerationMethod_FWD_DEFINED__

#ifdef __cplusplus
typedef class PKCS1MaskGenerationMethod PKCS1MaskGenerationMethod;
#else
typedef struct PKCS1MaskGenerationMethod PKCS1MaskGenerationMethod;
#endif /* __cplusplus */

#endif 	/* __PKCS1MaskGenerationMethod_FWD_DEFINED__ */


#ifndef __RC2_FWD_DEFINED__
#define __RC2_FWD_DEFINED__

#ifdef __cplusplus
typedef class RC2 RC2;
#else
typedef struct RC2 RC2;
#endif /* __cplusplus */

#endif 	/* __RC2_FWD_DEFINED__ */


#ifndef __RC2CryptoServiceProvider_FWD_DEFINED__
#define __RC2CryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class RC2CryptoServiceProvider RC2CryptoServiceProvider;
#else
typedef struct RC2CryptoServiceProvider RC2CryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __RC2CryptoServiceProvider_FWD_DEFINED__ */


#ifndef __Rfc2898DeriveBytes_FWD_DEFINED__
#define __Rfc2898DeriveBytes_FWD_DEFINED__

#ifdef __cplusplus
typedef class Rfc2898DeriveBytes Rfc2898DeriveBytes;
#else
typedef struct Rfc2898DeriveBytes Rfc2898DeriveBytes;
#endif /* __cplusplus */

#endif 	/* __Rfc2898DeriveBytes_FWD_DEFINED__ */


#ifndef __RIPEMD160_FWD_DEFINED__
#define __RIPEMD160_FWD_DEFINED__

#ifdef __cplusplus
typedef class RIPEMD160 RIPEMD160;
#else
typedef struct RIPEMD160 RIPEMD160;
#endif /* __cplusplus */

#endif 	/* __RIPEMD160_FWD_DEFINED__ */


#ifndef __RIPEMD160Managed_FWD_DEFINED__
#define __RIPEMD160Managed_FWD_DEFINED__

#ifdef __cplusplus
typedef class RIPEMD160Managed RIPEMD160Managed;
#else
typedef struct RIPEMD160Managed RIPEMD160Managed;
#endif /* __cplusplus */

#endif 	/* __RIPEMD160Managed_FWD_DEFINED__ */


#ifndef __RSA_FWD_DEFINED__
#define __RSA_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSA RSA;
#else
typedef struct RSA RSA;
#endif /* __cplusplus */

#endif 	/* __RSA_FWD_DEFINED__ */


#ifndef __RSACryptoServiceProvider_FWD_DEFINED__
#define __RSACryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSACryptoServiceProvider RSACryptoServiceProvider;
#else
typedef struct RSACryptoServiceProvider RSACryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __RSACryptoServiceProvider_FWD_DEFINED__ */


#ifndef __RSAOAEPKeyExchangeDeformatter_FWD_DEFINED__
#define __RSAOAEPKeyExchangeDeformatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSAOAEPKeyExchangeDeformatter RSAOAEPKeyExchangeDeformatter;
#else
typedef struct RSAOAEPKeyExchangeDeformatter RSAOAEPKeyExchangeDeformatter;
#endif /* __cplusplus */

#endif 	/* __RSAOAEPKeyExchangeDeformatter_FWD_DEFINED__ */


#ifndef __RSAOAEPKeyExchangeFormatter_FWD_DEFINED__
#define __RSAOAEPKeyExchangeFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSAOAEPKeyExchangeFormatter RSAOAEPKeyExchangeFormatter;
#else
typedef struct RSAOAEPKeyExchangeFormatter RSAOAEPKeyExchangeFormatter;
#endif /* __cplusplus */

#endif 	/* __RSAOAEPKeyExchangeFormatter_FWD_DEFINED__ */


#ifndef __RSAPKCS1KeyExchangeDeformatter_FWD_DEFINED__
#define __RSAPKCS1KeyExchangeDeformatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSAPKCS1KeyExchangeDeformatter RSAPKCS1KeyExchangeDeformatter;
#else
typedef struct RSAPKCS1KeyExchangeDeformatter RSAPKCS1KeyExchangeDeformatter;
#endif /* __cplusplus */

#endif 	/* __RSAPKCS1KeyExchangeDeformatter_FWD_DEFINED__ */


#ifndef __RSAPKCS1KeyExchangeFormatter_FWD_DEFINED__
#define __RSAPKCS1KeyExchangeFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSAPKCS1KeyExchangeFormatter RSAPKCS1KeyExchangeFormatter;
#else
typedef struct RSAPKCS1KeyExchangeFormatter RSAPKCS1KeyExchangeFormatter;
#endif /* __cplusplus */

#endif 	/* __RSAPKCS1KeyExchangeFormatter_FWD_DEFINED__ */


#ifndef __RSAPKCS1SignatureDeformatter_FWD_DEFINED__
#define __RSAPKCS1SignatureDeformatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSAPKCS1SignatureDeformatter RSAPKCS1SignatureDeformatter;
#else
typedef struct RSAPKCS1SignatureDeformatter RSAPKCS1SignatureDeformatter;
#endif /* __cplusplus */

#endif 	/* __RSAPKCS1SignatureDeformatter_FWD_DEFINED__ */


#ifndef __RSAPKCS1SignatureFormatter_FWD_DEFINED__
#define __RSAPKCS1SignatureFormatter_FWD_DEFINED__

#ifdef __cplusplus
typedef class RSAPKCS1SignatureFormatter RSAPKCS1SignatureFormatter;
#else
typedef struct RSAPKCS1SignatureFormatter RSAPKCS1SignatureFormatter;
#endif /* __cplusplus */

#endif 	/* __RSAPKCS1SignatureFormatter_FWD_DEFINED__ */


#ifndef __Rijndael_FWD_DEFINED__
#define __Rijndael_FWD_DEFINED__

#ifdef __cplusplus
typedef class Rijndael Rijndael;
#else
typedef struct Rijndael Rijndael;
#endif /* __cplusplus */

#endif 	/* __Rijndael_FWD_DEFINED__ */


#ifndef __RijndaelManaged_FWD_DEFINED__
#define __RijndaelManaged_FWD_DEFINED__

#ifdef __cplusplus
typedef class RijndaelManaged RijndaelManaged;
#else
typedef struct RijndaelManaged RijndaelManaged;
#endif /* __cplusplus */

#endif 	/* __RijndaelManaged_FWD_DEFINED__ */


#ifndef __RijndaelManagedTransform_FWD_DEFINED__
#define __RijndaelManagedTransform_FWD_DEFINED__

#ifdef __cplusplus
typedef class RijndaelManagedTransform RijndaelManagedTransform;
#else
typedef struct RijndaelManagedTransform RijndaelManagedTransform;
#endif /* __cplusplus */

#endif 	/* __RijndaelManagedTransform_FWD_DEFINED__ */


#ifndef __SHA1_FWD_DEFINED__
#define __SHA1_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA1 SHA1;
#else
typedef struct SHA1 SHA1;
#endif /* __cplusplus */

#endif 	/* __SHA1_FWD_DEFINED__ */


#ifndef __SHA1CryptoServiceProvider_FWD_DEFINED__
#define __SHA1CryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA1CryptoServiceProvider SHA1CryptoServiceProvider;
#else
typedef struct SHA1CryptoServiceProvider SHA1CryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __SHA1CryptoServiceProvider_FWD_DEFINED__ */


#ifndef __SHA1Managed_FWD_DEFINED__
#define __SHA1Managed_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA1Managed SHA1Managed;
#else
typedef struct SHA1Managed SHA1Managed;
#endif /* __cplusplus */

#endif 	/* __SHA1Managed_FWD_DEFINED__ */


#ifndef __SHA256_FWD_DEFINED__
#define __SHA256_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA256 SHA256;
#else
typedef struct SHA256 SHA256;
#endif /* __cplusplus */

#endif 	/* __SHA256_FWD_DEFINED__ */


#ifndef __SHA256Managed_FWD_DEFINED__
#define __SHA256Managed_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA256Managed SHA256Managed;
#else
typedef struct SHA256Managed SHA256Managed;
#endif /* __cplusplus */

#endif 	/* __SHA256Managed_FWD_DEFINED__ */


#ifndef __SHA384_FWD_DEFINED__
#define __SHA384_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA384 SHA384;
#else
typedef struct SHA384 SHA384;
#endif /* __cplusplus */

#endif 	/* __SHA384_FWD_DEFINED__ */


#ifndef __SHA384Managed_FWD_DEFINED__
#define __SHA384Managed_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA384Managed SHA384Managed;
#else
typedef struct SHA384Managed SHA384Managed;
#endif /* __cplusplus */

#endif 	/* __SHA384Managed_FWD_DEFINED__ */


#ifndef __SHA512_FWD_DEFINED__
#define __SHA512_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA512 SHA512;
#else
typedef struct SHA512 SHA512;
#endif /* __cplusplus */

#endif 	/* __SHA512_FWD_DEFINED__ */


#ifndef __SHA512Managed_FWD_DEFINED__
#define __SHA512Managed_FWD_DEFINED__

#ifdef __cplusplus
typedef class SHA512Managed SHA512Managed;
#else
typedef struct SHA512Managed SHA512Managed;
#endif /* __cplusplus */

#endif 	/* __SHA512Managed_FWD_DEFINED__ */


#ifndef __SignatureDescription_FWD_DEFINED__
#define __SignatureDescription_FWD_DEFINED__

#ifdef __cplusplus
typedef class SignatureDescription SignatureDescription;
#else
typedef struct SignatureDescription SignatureDescription;
#endif /* __cplusplus */

#endif 	/* __SignatureDescription_FWD_DEFINED__ */


#ifndef __TripleDES_FWD_DEFINED__
#define __TripleDES_FWD_DEFINED__

#ifdef __cplusplus
typedef class TripleDES TripleDES;
#else
typedef struct TripleDES TripleDES;
#endif /* __cplusplus */

#endif 	/* __TripleDES_FWD_DEFINED__ */


#ifndef __TripleDESCryptoServiceProvider_FWD_DEFINED__
#define __TripleDESCryptoServiceProvider_FWD_DEFINED__

#ifdef __cplusplus
typedef class TripleDESCryptoServiceProvider TripleDESCryptoServiceProvider;
#else
typedef struct TripleDESCryptoServiceProvider TripleDESCryptoServiceProvider;
#endif /* __cplusplus */

#endif 	/* __TripleDESCryptoServiceProvider_FWD_DEFINED__ */


#ifndef __X509Certificate_FWD_DEFINED__
#define __X509Certificate_FWD_DEFINED__

#ifdef __cplusplus
typedef class X509Certificate X509Certificate;
#else
typedef struct X509Certificate X509Certificate;
#endif /* __cplusplus */

#endif 	/* __X509Certificate_FWD_DEFINED__ */


#ifdef __cplusplus
extern "C"{
#endif 



#ifndef __mscorlib_LIBRARY_DEFINED__
#define __mscorlib_LIBRARY_DEFINED__

/* library mscorlib */
/* [helpstring][version][uuid] */ 











































































































































































































































































































































































































































































































































































































































































































































































typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("8ABD8CB3-A365-32F9-9914-F08EC1FEC4CA") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0001
    {
        OpCodeType_Annotation	= 0,
        OpCodeType_Macro	= 1,
        OpCodeType_Nternal	= 2,
        OpCodeType_Objmodel	= 3,
        OpCodeType_Prefix	= 4,
        OpCodeType_Primitive	= 5
    } 	OpCodeType;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("75A7861C-767E-3A5E-A57B-6EC136009654") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0002
    {
        FlowControl_Branch	= 0,
        FlowControl_Break	= 1,
        FlowControl_Call	= 2,
        FlowControl_Cond_Branch	= 3,
        FlowControl_Meta	= 4,
        FlowControl_Next	= 5,
        FlowControl_Phi	= 6,
        FlowControl_Return	= 7,
        FlowControl_Throw	= 8
    } 	FlowControl;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("B125618B-1B4E-37C3-B31A-331D6021B52D") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0003
    {
        OperandType_InlineBrTarget	= 0,
        OperandType_InlineField	= 1,
        OperandType_InlineI	= 2,
        OperandType_InlineI8	= 3,
        OperandType_InlineMethod	= 4,
        OperandType_InlineNone	= 5,
        OperandType_InlinePhi	= 6,
        OperandType_InlineR	= 7,
        OperandType_InlineSig	= 9,
        OperandType_InlineString	= 10,
        OperandType_InlineSwitch	= 11,
        OperandType_InlineTok	= 12,
        OperandType_InlineType	= 13,
        OperandType_InlineVar	= 14,
        OperandType_ShortInlineBrTarget	= 15,
        OperandType_ShortInlineI	= 16,
        OperandType_ShortInlineR	= 17,
        OperandType_ShortInlineVar	= 18
    } 	OperandType;

typedef /* [public][public][public][custom][version][uuid] */  DECLSPEC_UUID("D25ED092-A7A8-3BBE-820C-42F5A4604768") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0004
    {
        StackBehaviour_Pop0	= 0,
        StackBehaviour_Pop1	= 1,
        StackBehaviour_Pop1_pop1	= 2,
        StackBehaviour_Popi	= 3,
        StackBehaviour_Popi_pop1	= 4,
        StackBehaviour_Popi_popi	= 5,
        StackBehaviour_Popi_popi8	= 6,
        StackBehaviour_Popi_popi_popi	= 7,
        StackBehaviour_Popi_popr4	= 8,
        StackBehaviour_Popi_popr8	= 9,
        StackBehaviour_Popref	= 10,
        StackBehaviour_Popref_pop1	= 11,
        StackBehaviour_Popref_popi	= 12,
        StackBehaviour_Popref_popi_popi	= 13,
        StackBehaviour_Popref_popi_popi8	= 14,
        StackBehaviour_Popref_popi_popr4	= 15,
        StackBehaviour_Popref_popi_popr8	= 16,
        StackBehaviour_Popref_popi_popref	= 17,
        StackBehaviour_Push0	= 18,
        StackBehaviour_Push1	= 19,
        StackBehaviour_Push1_push1	= 20,
        StackBehaviour_Pushi	= 21,
        StackBehaviour_Pushi8	= 22,
        StackBehaviour_Pushr4	= 23,
        StackBehaviour_Pushr8	= 24,
        StackBehaviour_Pushref	= 25,
        StackBehaviour_Varpop	= 26,
        StackBehaviour_Varpush	= 27,
        StackBehaviour_Popref_popi_pop1	= 28
    } 	StackBehaviour;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("A2C06560-E728-39D5-8230-7EB08001C79E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0005
    {
        LeaseState_Null	= 0,
        LeaseState_Initial	= 1,
        LeaseState_Active	= 2,
        LeaseState_Renewing	= 3,
        LeaseState_Expired	= 4
    } 	LeaseState;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("A026E65F-9720-3F82-8DE1-A18E51180A34") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0006
    {
        ServerProcessing_Complete	= 0,
        ServerProcessing_OneWay	= 1,
        ServerProcessing_Async	= 2
    } 	ServerProcessing;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("B946AC61-DD6B-39F3-BBE1-E4C1540F16EA") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0007
    {
        ActivatorLevel_Construction	= 4,
        ActivatorLevel_Context	= 8,
        ActivatorLevel_AppDomain	= 12,
        ActivatorLevel_Process	= 16,
        ActivatorLevel_Machine	= 20
    } 	ActivatorLevel;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("B42619B4-0EDC-3F55-AA64-2140275FA115") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0008
    {
        ImporterEventKind_NOTIF_TYPECONVERTED	= 0,
        ImporterEventKind_NOTIF_CONVERTWARNING	= 1,
        ImporterEventKind_ERROR_REFTOINVALIDTYPELIB	= 2
    } 	ImporterEventKind;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("03C85CD9-D760-3AA8-94BD-F774407391CB") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0009
    {
        EventAttributes_None	= 0,
        EventAttributes_SpecialName	= 512,
        EventAttributes_ReservedMask	= 1024,
        EventAttributes_RTSpecialName	= 1024
    } 	EventAttributes;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("816C979C-D3D2-3101-B5CA-E4A5C5E966FA") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0010
    {
        PropertyAttributes_None	= 0,
        PropertyAttributes_SpecialName	= 512,
        PropertyAttributes_ReservedMask	= 62464,
        PropertyAttributes_RTSpecialName	= 1024,
        PropertyAttributes_HasDefault	= 4096,
        PropertyAttributes_Reserved2	= 8192,
        PropertyAttributes_Reserved3	= 16384,
        PropertyAttributes_Reserved4	= 32768
    } 	PropertyAttributes;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("688A6FF0-5727-32D2-8228-6E838A822616") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0011
    {
        ParameterAttributes_None	= 0,
        ParameterAttributes_In	= 1,
        ParameterAttributes_Out	= 2,
        ParameterAttributes_Lcid	= 4,
        ParameterAttributes_Retval	= 8,
        ParameterAttributes_Optional	= 16,
        ParameterAttributes_ReservedMask	= 61440,
        ParameterAttributes_HasDefault	= 4096,
        ParameterAttributes_HasFieldMarshal	= 8192,
        ParameterAttributes_Reserved3	= 16384,
        ParameterAttributes_Reserved4	= 32768
    } 	ParameterAttributes;

typedef /* [public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("C8679E0A-1C67-3A20-8645-0D930F529031") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0012
    {
        FieldAttributes_FieldAccessMask	= 7,
        FieldAttributes_PrivateScope	= 0,
        FieldAttributes_Private	= 1,
        FieldAttributes_FamANDAssem	= 2,
        FieldAttributes_Assembly	= 3,
        FieldAttributes_Family	= 4,
        FieldAttributes_FamORAssem	= 5,
        FieldAttributes_Public	= 6,
        FieldAttributes_Static	= 16,
        FieldAttributes_InitOnly	= 32,
        FieldAttributes_Literal	= 64,
        FieldAttributes_NotSerialized	= 128,
        FieldAttributes_SpecialName	= 512,
        FieldAttributes_PinvokeImpl	= 8192,
        FieldAttributes_ReservedMask	= 38144,
        FieldAttributes_RTSpecialName	= 1024,
        FieldAttributes_HasFieldMarshal	= 4096,
        FieldAttributes_HasDefault	= 32768,
        FieldAttributes_HasFieldRVA	= 256
    } 	FieldAttributes;

typedef /* [public][public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("B6B91160-2ABF-352B-A74D-1174CC324E18") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0013
    {
        SymAddressKind_ILOffset	= 1,
        SymAddressKind_NativeRVA	= 2,
        SymAddressKind_NativeRegister	= 3,
        SymAddressKind_NativeRegisterRelative	= 4,
        SymAddressKind_NativeOffset	= 5,
        SymAddressKind_NativeRegisterRegister	= 6,
        SymAddressKind_NativeRegisterStack	= 7,
        SymAddressKind_NativeStackRegister	= 8,
        SymAddressKind_BitField	= 9,
        SymAddressKind_NativeSectionOffset	= 10
    } 	SymAddressKind;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("709164DF-D0E2-3813-A07D-F9F1E99F9A4B") struct tagSymbolToken
    {
    long m_token;
    } 	SymbolToken;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("28EE6224-FD72-3BDF-B248-BA9102FCEB14") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0014
    {
        TypeAttributes_VisibilityMask	= 7,
        TypeAttributes_NotPublic	= 0,
        TypeAttributes_Public	= 1,
        TypeAttributes_NestedPublic	= 2,
        TypeAttributes_NestedPrivate	= 3,
        TypeAttributes_NestedFamily	= 4,
        TypeAttributes_NestedAssembly	= 5,
        TypeAttributes_NestedFamANDAssem	= 6,
        TypeAttributes_NestedFamORAssem	= 7,
        TypeAttributes_LayoutMask	= 24,
        TypeAttributes_AutoLayout	= 0,
        TypeAttributes_SequentialLayout	= 8,
        TypeAttributes_ExplicitLayout	= 16,
        TypeAttributes_ClassSemanticsMask	= 32,
        TypeAttributes_Class	= 0,
        TypeAttributes_Interface	= 32,
        TypeAttributes_Abstract	= 128,
        TypeAttributes_Sealed	= 256,
        TypeAttributes_SpecialName	= 1024,
        TypeAttributes_Import	= 4096,
        TypeAttributes_Serializable	= 8192,
        TypeAttributes_StringFormatMask	= 0x30000,
        TypeAttributes_AnsiClass	= 0,
        TypeAttributes_UnicodeClass	= 0x10000,
        TypeAttributes_AutoClass	= 0x20000,
        TypeAttributes_CustomFormatClass	= 0x30000,
        TypeAttributes_CustomFormatMask	= 0xc00000,
        TypeAttributes_BeforeFieldInit	= 0x100000,
        TypeAttributes_ReservedMask	= 0x40800,
        TypeAttributes_RTSpecialName	= 2048,
        TypeAttributes_HasSecurity	= 0x40000
    } 	TypeAttributes;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("3223E024-5D70-3236-A92A-6B4114B2632F") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0015
    {
        BindingFlags_Default	= 0,
        BindingFlags_IgnoreCase	= 1,
        BindingFlags_DeclaredOnly	= 2,
        BindingFlags_Instance	= 4,
        BindingFlags_Static	= 8,
        BindingFlags_Public	= 16,
        BindingFlags_NonPublic	= 32,
        BindingFlags_FlattenHierarchy	= 64,
        BindingFlags_InvokeMethod	= 256,
        BindingFlags_CreateInstance	= 512,
        BindingFlags_GetField	= 1024,
        BindingFlags_SetField	= 2048,
        BindingFlags_GetProperty	= 4096,
        BindingFlags_SetProperty	= 8192,
        BindingFlags_PutDispProperty	= 16384,
        BindingFlags_PutRefDispProperty	= 32768,
        BindingFlags_ExactBinding	= 0x10000,
        BindingFlags_SuppressChangeType	= 0x20000,
        BindingFlags_OptionalParamBinding	= 0x40000,
        BindingFlags_IgnoreReturn	= 0x1000000
    } 	BindingFlags;

typedef /* [public][public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("FD67EBE2-30DE-3FBE-896B-81DA2E455137") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0016
    {
        CallingConventions_Standard	= 1,
        CallingConventions_VarArgs	= 2,
        CallingConventions_Any	= 3,
        CallingConventions_HasThis	= 32,
        CallingConventions_ExplicitThis	= 64
    } 	CallingConventions;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("11D31042-14C0-3B5C-87D0-A2CD40803CB5") struct tagParameterModifier
    {
    SAFEARRAY * _byRef;
    } 	ParameterModifier;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("5F7A2664-4778-3D72-A78F-D38B6B00180D") struct tagInterfaceMapping
    {
    _Type *TargetType;
    _Type *interfaceType;
    SAFEARRAY * TargetMethods;
    SAFEARRAY * InterfaceMethods;
    } 	InterfaceMapping;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("3613A9B6-C23B-3B54-AE02-6EC764D69E70") struct tagRuntimeArgumentHandle
    {
    INT64 m_ptr;
    } 	RuntimeArgumentHandle;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("78C18A10-C00E-3C09-B000-411C38900C2C") struct tagRuntimeTypeHandle
    {
    INT64 m_ptr;
    } 	RuntimeTypeHandle;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("F8FC5D7C-8215-3E65-BEFB-11E8172606FE") struct tagRuntimeMethodHandle
    {
    INT64 m_ptr;
    } 	RuntimeMethodHandle;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("27B33BD9-E6F7-3148-911D-F67340A5353F") struct tagRuntimeFieldHandle
    {
    INT64 m_ptr;
    } 	RuntimeFieldHandle;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("8531F85A-746B-3DB5-A45F-9BAC4BD02D8B") struct tagModuleHandle
    {
    INT64 m_ptr;
    } 	ModuleHandle;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("CA2BCDB4-3A7E-33E8-80ED-D32475ADEF33") struct tagSByte
    {
    unsigned char m_value;
    } 	SByte;

typedef /* [public][public][public][public][public][public][public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("513B8B77-4930-36BA-9A22-0DAEB293E109") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0017
    {
        MemberTypes_Constructor	= 1,
        MemberTypes_Event	= 2,
        MemberTypes_Field	= 4,
        MemberTypes_Method	= 8,
        MemberTypes_Property	= 16,
        MemberTypes_TypeInfo	= 32,
        MemberTypes_Custom	= 64,
        MemberTypes_NestedType	= 128,
        MemberTypes_All	= 191
    } 	MemberTypes;

typedef /* [public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("641AB47A-9351-3A37-81C1-647D31873F15") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0018
    {
        MethodAttributes_MemberAccessMask	= 7,
        MethodAttributes_PrivateScope	= 0,
        MethodAttributes_Private	= 1,
        MethodAttributes_FamANDAssem	= 2,
        MethodAttributes_Assembly	= 3,
        MethodAttributes_Family	= 4,
        MethodAttributes_FamORAssem	= 5,
        MethodAttributes_Public	= 6,
        MethodAttributes_Static	= 16,
        MethodAttributes_Final	= 32,
        MethodAttributes_Virtual	= 64,
        MethodAttributes_HideBySig	= 128,
        MethodAttributes_CheckAccessOnOverride	= 512,
        MethodAttributes_VtableLayoutMask	= 256,
        MethodAttributes_ReuseSlot	= 0,
        MethodAttributes_NewSlot	= 256,
        MethodAttributes_Abstract	= 1024,
        MethodAttributes_SpecialName	= 2048,
        MethodAttributes_PinvokeImpl	= 8192,
        MethodAttributes_UnmanagedExport	= 8,
        MethodAttributes_RTSpecialName	= 4096,
        MethodAttributes_ReservedMask	= 53248,
        MethodAttributes_HasSecurity	= 16384,
        MethodAttributes_RequireSecObject	= 32768
    } 	MethodAttributes;

typedef /* [public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("BCAB3A5D-F2CD-3C69-841D-AD001969BF50") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0019
    {
        MethodImplAttributes_CodeTypeMask	= 3,
        MethodImplAttributes_IL	= 0,
        MethodImplAttributes_Native	= 1,
        MethodImplAttributes_OPTIL	= 2,
        MethodImplAttributes_Runtime	= 3,
        MethodImplAttributes_ManagedMask	= 4,
        MethodImplAttributes_Unmanaged	= 4,
        MethodImplAttributes_Managed	= 0,
        MethodImplAttributes_ForwardRef	= 16,
        MethodImplAttributes_PreserveSig	= 128,
        MethodImplAttributes_InternalCall	= 4096,
        MethodImplAttributes_Synchronized	= 32,
        MethodImplAttributes_NoInlining	= 8,
        MethodImplAttributes_MaxMethodImplVal	= 65535
    } 	MethodImplAttributes;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("7D29BC4B-8FBC-38AA-8B35-ED4539A1CF8E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0020
    {
        PrincipalPolicy_UnauthenticatedPrincipal	= 0,
        PrincipalPolicy_NoPrincipal	= 1,
        PrincipalPolicy_WindowsPrincipal	= 2
    } 	PrincipalPolicy;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("8830F669-E622-3DA0-BC37-4A02A151E142") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0021
    {
        WindowsAccountType_Normal	= 0,
        WindowsAccountType_Guest	= 1,
        WindowsAccountType_System	= 2,
        WindowsAccountType_Anonymous	= 3
    } 	WindowsAccountType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("3E82FB4A-7F30-35B7-B8B1-6D717B3B5DB0") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0022
    {
        TokenImpersonationLevel_None	= 0,
        TokenImpersonationLevel_Anonymous	= 1,
        TokenImpersonationLevel_Identification	= 2,
        TokenImpersonationLevel_Impersonation	= 3,
        TokenImpersonationLevel_Delegation	= 4
    } 	TokenImpersonationLevel;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("10A8B906-2F7A-327C-87AB-1A95A9B5E23E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0023
    {
        TokenAccessLevels_AssignPrimary	= 1,
        TokenAccessLevels_Duplicate	= 2,
        TokenAccessLevels_Impersonate	= 4,
        TokenAccessLevels_Query	= 8,
        TokenAccessLevels_QuerySource	= 16,
        TokenAccessLevels_AdjustPrivileges	= 32,
        TokenAccessLevels_AdjustGroups	= 64,
        TokenAccessLevels_AdjustDefault	= 128,
        TokenAccessLevels_AdjustSessionId	= 256,
        TokenAccessLevels_Read	= 0x20008,
        TokenAccessLevels_Write	= 0x200e0,
        TokenAccessLevels_AllAccess	= 0xf01ff,
        TokenAccessLevels_MaximumAllowed	= 0x2000000
    } 	TokenAccessLevels;

typedef /* [public][public][public][public][public][public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("F0778630-AC34-3D71-9FAB-617F61243065") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0024
    {
        AssemblyBuilderAccess_Run	= 1,
        AssemblyBuilderAccess_Save	= 2,
        AssemblyBuilderAccess_RunAndSave	= 3,
        AssemblyBuilderAccess_ReflectionOnly	= 6
    } 	AssemblyBuilderAccess;

typedef /* [public][public][public][public][public][custom][version][uuid] */  DECLSPEC_UUID("78304E50-A1E6-3D84-A718-49020681E02E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0025
    {
        StreamingContextStates_CrossProcess	= 1,
        StreamingContextStates_CrossMachine	= 2,
        StreamingContextStates_File	= 4,
        StreamingContextStates_Persistence	= 8,
        StreamingContextStates_Remoting	= 16,
        StreamingContextStates_Other	= 32,
        StreamingContextStates_Clone	= 64,
        StreamingContextStates_CrossAppDomain	= 128,
        StreamingContextStates_All	= 255
    } 	StreamingContextStates;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("79179AA0-E14C-35EA-A666-66BE968AF69F") struct tagStreamingContext
    {
    IUnknown *m_additionalContext;
    StreamingContextStates m_state;
    } 	StreamingContext;

typedef /* [public][public][public][custom][version][uuid] */  DECLSPEC_UUID("8E3CC6FB-A6ED-3F63-A7D1-D40D8C6666F6") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0000_0000_0026
    {
        TypeCode_Empty	= 0,
        TypeCode_Object	= 1,
        TypeCode_DBNull	= 2,
        TypeCode_Boolean	= 3,
        TypeCode_Char	= 4,
        TypeCode_SByte	= 5,
        TypeCode_Byte	= 6,
        TypeCode_Int16	= 7,
        TypeCode_UInt16	= 8,
        TypeCode_Int32	= 9,
        TypeCode_UInt32	= 10,
        TypeCode_Int64	= 11,
        TypeCode_UInt64	= 12,
        TypeCode_Single	= 13,
        TypeCode_Double	= 14,
        TypeCode_Decimal	= 15,
        TypeCode_DateTime	= 16,
        TypeCode_String	= 18
    } 	TypeCode;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D0431551-3853-37F8-B714-8A8986E1EA38") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0016_0001
    {
        StringComparison_CurrentCulture	= 0,
        StringComparison_CurrentCultureIgnoreCase	= 1,
        StringComparison_InvariantCulture	= 2,
        StringComparison_InvariantCultureIgnoreCase	= 3,
        StringComparison_Ordinal	= 4,
        StringComparison_OrdinalIgnoreCase	= 5
    } 	StringComparison;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("69CEDC24-BC35-3354-B324-6BD5F3ECB757") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0020_0001
    {
        DateTimeKind_Unspecified	= 0,
        DateTimeKind_Utc	= 1,
        DateTimeKind_Local	= 2
    } 	DateTimeKind;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("148540D3-E67F-36DC-A55D-2C8DEC53B9D3") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0044_0001
    {
        AppDomainManagerInitializationOptions_None	= 0,
        AppDomainManagerInitializationOptions_RegisterWithHost	= 1
    } 	AppDomainManagerInitializationOptions;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("8A6C24C5-1F87-37C2-BC4D-3421EB62D4C1") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0047_0001
    {
        LoaderOptimization_NotSpecified	= 0,
        LoaderOptimization_SingleDomain	= 1,
        LoaderOptimization_MultiDomain	= 2,
        LoaderOptimization_MultiDomainHost	= 3,
        LoaderOptimization_DomainMask	= 3,
        LoaderOptimization_DisallowBindings	= 4
    } 	LoaderOptimization;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("9BC2306F-4971-38F5-B861-F19C022274A0") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0059_0001
    {
        AttributeTargets_Assembly	= 1,
        AttributeTargets_Module	= 2,
        AttributeTargets_Class	= 4,
        AttributeTargets_Struct	= 8,
        AttributeTargets_Enum	= 16,
        AttributeTargets_Constructor	= 32,
        AttributeTargets_Method	= 64,
        AttributeTargets_Property	= 128,
        AttributeTargets_Field	= 256,
        AttributeTargets_Event	= 512,
        AttributeTargets_Interface	= 1024,
        AttributeTargets_Parameter	= 2048,
        AttributeTargets_Delegate	= 4096,
        AttributeTargets_ReturnValue	= 8192,
        AttributeTargets_GenericParameter	= 16384,
        AttributeTargets_All	= 32767
    } 	AttributeTargets;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("C3008E12-9B16-36EC-B731-73257F25BE7A") struct tagBoolean
    {
    long m_value;
    } 	Boolean;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("9B957340-ADBA-3234-91EA-46A5C9BFF530") struct tagByte
    {
    unsigned char m_value;
    } 	Byte;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("6EE96102-3657-3D66-867A-26B63AAAAF78") struct tagChar
    {
    unsigned char m_value;
    } 	Char;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("12D4D747-6B55-36F2-9108-3EE9BC0FFEFD") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0072_0001
    {
        DayOfWeek_Sunday	= 0,
        DayOfWeek_Monday	= 1,
        DayOfWeek_Tuesday	= 2,
        DayOfWeek_Wednesday	= 3,
        DayOfWeek_Thursday	= 4,
        DayOfWeek_Friday	= 5,
        DayOfWeek_Saturday	= 6
    } 	DayOfWeek;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("6FB370D8-4F72-3AC1-9A32-3875F336ECB5") struct tagDecimal
    {
    long flags;
    long hi;
    long lo;
    long mid;
    } 	Decimal;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("0F4F147F-4369-3388-8E4B-71E20C96F9AD") struct tagDouble
    {
    double m_value;
    } 	Double;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("3B1774CD-34E0-3C00-AABD-168B38C62FD9") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0080_0001
    {
        EnvironmentVariableTarget_Process	= 0,
        EnvironmentVariableTarget_User	= 1,
        EnvironmentVariableTarget_Machine	= 2
    } 	EnvironmentVariableTarget;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("2E05A70A-1BBE-31DF-B2A8-B8FA0F130915") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0081_0001
    {
        SpecialFolder_ApplicationData	= 26,
        SpecialFolder_CommonApplicationData	= 35,
        SpecialFolder_LocalApplicationData	= 28,
        SpecialFolder_Cookies	= 33,
        SpecialFolder_Desktop	= 0,
        SpecialFolder_Favorites	= 6,
        SpecialFolder_History	= 34,
        SpecialFolder_InternetCache	= 32,
        SpecialFolder_Programs	= 2,
        SpecialFolder_MyComputer	= 17,
        SpecialFolder_MyMusic	= 13,
        SpecialFolder_MyPictures	= 39,
        SpecialFolder_Recent	= 8,
        SpecialFolder_SendTo	= 9,
        SpecialFolder_StartMenu	= 11,
        SpecialFolder_Startup	= 7,
        SpecialFolder_System	= 37,
        SpecialFolder_Templates	= 21,
        SpecialFolder_DesktopDirectory	= 16,
        SpecialFolder_Personal	= 5,
        SpecialFolder_MyDocuments	= 5,
        SpecialFolder_ProgramFiles	= 38,
        SpecialFolder_CommonProgramFiles	= 43
    } 	SpecialFolder;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("9C5923E9-DE52-33EA-88DE-7EBC8633B9CC") struct tagGuid
    {
    long _a;
    short _b;
    short _c;
    unsigned char _d;
    unsigned char _e;
    unsigned char _f;
    unsigned char _g;
    unsigned char _h;
    unsigned char _i;
    unsigned char _j;
    unsigned char _k;
    } 	Guid;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("206DAF34-5BA5-3504-8A19-D57699561886") struct tagInt16
    {
    short m_value;
    } 	Int16;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("A310FADD-7C33-377C-9D6B-599B0317D7F2") struct tagInt32
    {
    long m_value;
    } 	Int32;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("AD1CECF5-5FAD-3ECF-AD89-2FEBD6521FA9") struct tagInt64
    {
    INT64 m_value;
    } 	Int64;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("A1CB710C-8D50-3181-BB38-65CE2E98F9A6") struct tagIntPtr
    {
    void *m_value;
    } 	IntPtr;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D12ABE44-783E-328B-AAD3-4ED726E903C7") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0094_0001
    {
        MidpointRounding_ToEven	= 0,
        MidpointRounding_AwayFromZero	= 1
    } 	MidpointRounding;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("F9628962-01E2-32F6-A40C-08BD8ADCFF25") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0109_0001
    {
        PlatformID_Win32S	= 0,
        PlatformID_Win32Windows	= 1,
        PlatformID_Win32NT	= 2,
        PlatformID_WinCE	= 3,
        PlatformID_Unix	= 4
    } 	PlatformID;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("23D4A35B-C997-3401-8372-736025B17744") struct tagSingle
    {
    double m_value;
    } 	Single;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("94942670-4ACF-3572-92D1-0916CD777E00") struct tagTimeSpan
    {
    Int64 _ticks;
    } 	TimeSpan;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("06AD02B5-C5A4-3EEC-B7BA-B0AF7860D36A") struct tagTypedReference
    {
    Int64 value;
    Int64 Type;
    } 	TypedReference;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("0F0928B7-11DD-31DD-A0D5-BB008AE887BF") struct tagUInt16
    {
    unsigned short m_value;
    } 	UInt16;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("4F854E40-AF6D-3D30-860A-E9722C85E9A3") struct tagUInt32
    {
    unsigned long m_value;
    } 	UInt32;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("62AD7D6B-52CC-3ED4-A20D-1A32EF6BF1DA") struct tagUInt64
    {
    UINT64 m_value;
    } 	UInt64;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("4F93B8DD-5396-3B65-B16A-11FBC8812A71") struct tagUIntPtr
    {
    void *m_value;
    } 	UIntPtr;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("CA5C1C2B-61F8-3FC4-B66B-17163A3066A5") struct tagVoid
    {
    //void vo;
    } 	Void;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("BA0E4CF7-A429-3FE8-ABAB-183387D05852") struct tagLockCookie
    {
    long _dwFlags;
    long _dwWriterSeqNum;
    long _wReaderAndWriterLevel;
    long _dwThreadID;
    } 	LockCookie;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("A2959123-2F66-35B4-815D-37C83360809B") struct tagNativeOverlapped
    {
    Int64 InternalLow;
    Int64 InternalHigh;
    long OffsetLow;
    long OffsetHigh;
    Int64 EventHandle;
    } 	NativeOverlapped;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D32B1206-1440-3664-9991-1AE109ADD173") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0144_0001
    {
        ThreadPriority_Lowest	= 0,
        ThreadPriority_BelowNormal	= 1,
        ThreadPriority_Normal	= 2,
        ThreadPriority_AboveNormal	= 3,
        ThreadPriority_Highest	= 4
    } 	ThreadPriority;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("F768EC63-95ED-35FC-9876-7BCF01A14919") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0145_0001
    {
        ThreadState_Running	= 0,
        ThreadState_StopRequested	= 1,
        ThreadState_SuspendRequested	= 2,
        ThreadState_Background	= 4,
        ThreadState_Unstarted	= 8,
        ThreadState_Stopped	= 16,
        ThreadState_WaitSleepJoin	= 32,
        ThreadState_Suspended	= 64,
        ThreadState_AbortRequested	= 128,
        ThreadState_Aborted	= 256
    } 	ThreadState;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("7055B1DB-D445-31FC-BDEC-A9FB3F6E6E58") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0150_0001
    {
        ApartmentState_STA	= 0,
        ApartmentState_MTA	= 1,
        ApartmentState_Unknown	= 2
    } 	ApartmentState;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("A6CCEB32-EC73-3E9B-8852-02783C97D3FA") struct tagDictionaryEntry
    {
    IUnknown *_key;
    IUnknown *_value;
    } 	DictionaryEntry;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("86343361-CE50-35EE-8BEA-6F39EC8C8159") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0177_0001
    {
        DebuggingModes_None	= 0,
        DebuggingModes_Default	= 1,
        DebuggingModes_DisableOptimizations	= 256,
        DebuggingModes_IgnoreSymbolStoreSequencePoints	= 2,
        DebuggingModes_EnableEditAndContinue	= 4
    } 	DebuggingModes;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("5A235286-93F1-3C18-A3AE-16D345A87A24") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0177_0002
    {
        DebuggerBrowsableState_Never	= 0,
        DebuggerBrowsableState_Collapsed	= 2,
        DebuggerBrowsableState_RootHidden	= 3
    } 	DebuggerBrowsableState;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("981DC77E-CE21-3753-92DA-3C4A0CC7AA44") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0220_0001
    {
        AssemblyNameFlags_None	= 0,
        AssemblyNameFlags_PublicKey	= 1,
        AssemblyNameFlags_EnableJITcompileOptimizer	= 16384,
        AssemblyNameFlags_EnableJITcompileTracking	= 32768,
        AssemblyNameFlags_Retargetable	= 256
    } 	AssemblyNameFlags;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("56B1CCCB-6490-396D-8C09-2257259F3CAA") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0220_0002
    {
        ProcessorArchitecture_None	= 0,
        ProcessorArchitecture_MSIL	= 1,
        ProcessorArchitecture_X86	= 2,
        ProcessorArchitecture_IA64	= 3,
        ProcessorArchitecture_Amd64	= 4
    } 	ProcessorArchitecture;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("9DC6AC40-EDFA-3E34-9AD1-B7A0A9E3A40A") struct tagCustomAttributeTypedArgument
    {
    IUnknown *m_value;
    _Type *m_argumentType;
    } 	CustomAttributeTypedArgument;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("7FC47A26-AA2E-32EA-BDE4-01A490842D87") struct tagCustomAttributeNamedArgument
    {
    _MemberInfo *m_memberInfo;
    CustomAttributeTypedArgument m_value;
    } 	CustomAttributeNamedArgument;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("E84FE360-54E3-3884-ADEE-7C6832DD354E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0233_0001
    {
        ResourceLocation_Embedded	= 1,
        ResourceLocation_ContainedInAnotherAssembly	= 2,
        ResourceLocation_ContainedInManifestFile	= 4
    } 	ResourceLocation;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("68DA8301-BE1B-3C22-B9F2-DB8F48694DDD") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0235_0001
    {
        PortableExecutableKinds_NotAPortableExecutableImage	= 0,
        PortableExecutableKinds_ILOnly	= 1,
        PortableExecutableKinds_Required32Bit	= 2,
        PortableExecutableKinds_PE32Plus	= 4,
        PortableExecutableKinds_Unmanaged32Bit	= 8
    } 	PortableExecutableKinds;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("51191552-C65E-360D-BA21-9F0E454FD59F") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0235_0002
    {
        ImageFileMachine_I386	= 332,
        ImageFileMachine_IA64	= 512,
        ImageFileMachine_AMD64	= 34404
    } 	ImageFileMachine;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("6BD98650-5AE6-3F03-B6CF-1463BBD45E6D") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0238_0001
    {
        ExceptionHandlingClauseOptions_Clause	= 0,
        ExceptionHandlingClauseOptions_Filter	= 1,
        ExceptionHandlingClauseOptions_Finally	= 2,
        ExceptionHandlingClauseOptions_Fault	= 4
    } 	ExceptionHandlingClauseOptions;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D89E7F8E-9F99-3EE9-8FCE-D97E64C8650E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0243_0001
    {
        ResourceAttributes_Public	= 1,
        ResourceAttributes_Private	= 2
    } 	ResourceAttributes;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("3642E7ED-5A69-3A94-98D3-A08877A0D046") struct tagSerializationEntry
    {
    _Type *m_type;
    IUnknown *m_value;
    LPSTR m_name;
    } 	SerializationEntry;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("F680A48A-2D6C-33F1-AFF7-6273B785B035") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0276_0001
    {
        CalendarAlgorithmType_Unknown	= 0,
        CalendarAlgorithmType_SolarCalendar	= 1,
        CalendarAlgorithmType_LunarCalendar	= 2,
        CalendarAlgorithmType_LunisolarCalendar	= 3
    } 	CalendarAlgorithmType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("117D12E1-4D32-3326-B23E-57D4FE34A527") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0276_0002
    {
        CalendarWeekRule_FirstDay	= 0,
        CalendarWeekRule_FirstFullWeek	= 1,
        CalendarWeekRule_FirstFourDayWeek	= 2
    } 	CalendarWeekRule;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("FDBF0369-D278-3320-B9CE-0E0719380C0F") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0277_0001
    {
        CompareOptions_None	= 0,
        CompareOptions_IgnoreCase	= 1,
        CompareOptions_IgnoreNonSpace	= 2,
        CompareOptions_IgnoreSymbols	= 4,
        CompareOptions_IgnoreKanaType	= 8,
        CompareOptions_IgnoreWidth	= 16,
        CompareOptions_OrdinalIgnoreCase	= 0x10000000,
        CompareOptions_StringSort	= 0x20000000,
        CompareOptions_Ordinal	= 0x40000000
    } 	CompareOptions;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("AB8E1300-F46A-3FFD-BCEF-A45DE1C55458") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0279_0001
    {
        CultureTypes_NeutralCultures	= 1,
        CultureTypes_SpecificCultures	= 2,
        CultureTypes_InstalledWin32Cultures	= 4,
        CultureTypes_AllCultures	= 7,
        CultureTypes_UserCustomCulture	= 8,
        CultureTypes_ReplacementCultures	= 16,
        CultureTypes_WindowsOnlyCultures	= 32,
        CultureTypes_FrameworkCultures	= 64
    } 	CultureTypes;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("F62FF05F-99CE-30DB-8344-2B2C26F5765C") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0279_0002
    {
        DateTimeStyles_None	= 0,
        DateTimeStyles_AllowLeadingWhite	= 1,
        DateTimeStyles_AllowTrailingWhite	= 2,
        DateTimeStyles_AllowInnerWhite	= 4,
        DateTimeStyles_AllowWhiteSpaces	= 7,
        DateTimeStyles_NoCurrentDateDefault	= 8,
        DateTimeStyles_AdjustToUniversal	= 16,
        DateTimeStyles_AssumeLocal	= 32,
        DateTimeStyles_AssumeUniversal	= 64,
        DateTimeStyles_RoundTripKind	= 128
    } 	DateTimeStyles;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("A2D18600-D187-399C-B2ED-6FA8ED5D2A59") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0281_0001
    {
        DigitShapes_Context	= 0,
        DigitShapes_None	= 1,
        DigitShapes_NativeNational	= 2
    } 	DigitShapes;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D535A40B-83C0-36FC-82D1-7EF2DE252ECC") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0282_0001
    {
        GregorianCalendarTypes_Localized	= 1,
        GregorianCalendarTypes_USEnglish	= 2,
        GregorianCalendarTypes_MiddleEastFrench	= 9,
        GregorianCalendarTypes_Arabic	= 10,
        GregorianCalendarTypes_TransliteratedEnglish	= 11,
        GregorianCalendarTypes_TransliteratedFrench	= 12
    } 	GregorianCalendarTypes;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("00D1ACA9-41F2-3340-816E-330175414A56") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0295_0001
    {
        NumberStyles_None	= 0,
        NumberStyles_AllowLeadingWhite	= 1,
        NumberStyles_AllowTrailingWhite	= 2,
        NumberStyles_AllowLeadingSign	= 4,
        NumberStyles_AllowTrailingSign	= 8,
        NumberStyles_AllowParentheses	= 16,
        NumberStyles_AllowDecimalPoint	= 32,
        NumberStyles_AllowThousands	= 64,
        NumberStyles_AllowExponent	= 128,
        NumberStyles_AllowCurrencySymbol	= 256,
        NumberStyles_AllowHexSpecifier	= 512,
        NumberStyles_Integer	= 7,
        NumberStyles_HexNumber	= 515,
        NumberStyles_Number	= 111,
        NumberStyles_Float	= 167,
        NumberStyles_Currency	= 383,
        NumberStyles_Any	= 511
    } 	NumberStyles;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("299E2A7D-6551-3ED1-B4A0-A51CB56EEFE7") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0295_0002
    {
        UnicodeCategory_UppercaseLetter	= 0,
        UnicodeCategory_LowercaseLetter	= 1,
        UnicodeCategory_TitlecaseLetter	= 2,
        UnicodeCategory_ModifierLetter	= 3,
        UnicodeCategory_OtherLetter	= 4,
        UnicodeCategory_NonSpacingMark	= 5,
        UnicodeCategory_SpacingCombiningMark	= 6,
        UnicodeCategory_EnclosingMark	= 7,
        UnicodeCategory_DecimalDigitNumber	= 8,
        UnicodeCategory_LetterNumber	= 9,
        UnicodeCategory_OtherNumber	= 10,
        UnicodeCategory_SpaceSeparator	= 11,
        UnicodeCategory_LineSeparator	= 12,
        UnicodeCategory_ParagraphSeparator	= 13,
        UnicodeCategory_Control	= 14,
        UnicodeCategory_Format	= 15,
        UnicodeCategory_Surrogate	= 16,
        UnicodeCategory_PrivateUse	= 17,
        UnicodeCategory_ConnectorPunctuation	= 18,
        UnicodeCategory_DashPunctuation	= 19,
        UnicodeCategory_OpenPunctuation	= 20,
        UnicodeCategory_ClosePunctuation	= 21,
        UnicodeCategory_InitialQuotePunctuation	= 22,
        UnicodeCategory_FinalQuotePunctuation	= 23,
        UnicodeCategory_OtherPunctuation	= 24,
        UnicodeCategory_MathSymbol	= 25,
        UnicodeCategory_CurrencySymbol	= 26,
        UnicodeCategory_ModifierSymbol	= 27,
        UnicodeCategory_OtherSymbol	= 28,
        UnicodeCategory_OtherNotAssigned	= 29
    } 	UnicodeCategory;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("B38DA717-D61B-3C13-93CE-2B9370D0AE43") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0299_0001
    {
        NormalizationForm_FormC	= 1,
        NormalizationForm_FormD	= 2,
        NormalizationForm_FormKC	= 5,
        NormalizationForm_FormKD	= 6
    } 	NormalizationForm;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("2173568C-6EDC-392B-880A-CC158D7E2BDA") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0312_0001
    {
        UltimateResourceFallbackLocation_MainAssembly	= 0,
        UltimateResourceFallbackLocation_Satellite	= 1
    } 	UltimateResourceFallbackLocation;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("B3B46869-C190-3199-96DA-4006E2AC6E72") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0313_0001
    {
        RegistryHive_ClassesRoot	= 0x80000000,
        RegistryHive_CurrentUser	= 0x80000001,
        RegistryHive_LocalMachine	= 0x80000002,
        RegistryHive_Users	= 0x80000003,
        RegistryHive_PerformanceData	= 0x80000004,
        RegistryHive_CurrentConfig	= 0x80000005,
        RegistryHive_DynData	= 0x80000006
    } 	RegistryHive;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("62ECB562-B92A-37E7-8D5B-84036A1A4348") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0314_0001
    {
        RegistryValueKind_String	= 1,
        RegistryValueKind_ExpandString	= 2,
        RegistryValueKind_Binary	= 3,
        RegistryValueKind_DWord	= 4,
        RegistryValueKind_MultiString	= 7,
        RegistryValueKind_QWord	= 11,
        RegistryValueKind_Unknown	= 0
    } 	RegistryValueKind;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D93EACA8-8176-387B-9667-6D32B504047B") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0322_0001
    {
        ApplicationVersionMatch_MatchExactVersion	= 0,
        ApplicationVersionMatch_MatchAllVersions	= 1
    } 	ApplicationVersionMatch;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("940B1725-F706-3CEF-9586-0F189B117C20") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0331_0001
    {
        TrustManagerUIContext_Install	= 0,
        TrustManagerUIContext_Upgrade	= 1,
        TrustManagerUIContext_Run	= 2
    } 	TrustManagerUIContext;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("338D2529-B3D6-37F1-BB01-404698DC537B") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0337_0001
    {
        PolicyStatementAttribute_Nothing	= 0,
        PolicyStatementAttribute_Exclusive	= 1,
        PolicyStatementAttribute_LevelFinal	= 2,
        PolicyStatementAttribute_All	= 3
    } 	PolicyStatementAttribute;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("8B7E18B8-3E96-3A4C-82CB-3D13FA15A32F") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0359_0001
    {
        WindowsBuiltInRole_Administrator	= 544,
        WindowsBuiltInRole_User	= 545,
        WindowsBuiltInRole_Guest	= 546,
        WindowsBuiltInRole_PowerUser	= 547,
        WindowsBuiltInRole_AccountOperator	= 548,
        WindowsBuiltInRole_SystemOperator	= 549,
        WindowsBuiltInRole_PrintOperator	= 550,
        WindowsBuiltInRole_BackupOperator	= 551,
        WindowsBuiltInRole_Replicator	= 552
    } 	WindowsBuiltInRole;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("8351108F-34E3-3CC9-BF5A-C76C48060835") struct tagArrayWithOffset
    {
    IUnknown *m_array;
    long m_offset;
    long m_count;
    } 	ArrayWithOffset;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("18C327E4-E4BA-3C3C-9942-274272626278") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0362_0001
    {
        ComInterfaceType_InterfaceIsDual	= 0,
        ComInterfaceType_InterfaceIsIUnknown	= 1,
        ComInterfaceType_InterfaceIsIDispatch	= 2
    } 	ComInterfaceType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D58DC4BB-3A4C-3B0C-B75F-9D0876694F3D") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0364_0001
    {
        ClassInterfaceType_None	= 0,
        ClassInterfaceType_AutoDispatch	= 1,
        ClassInterfaceType_AutoDual	= 2
    } 	ClassInterfaceType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("8A958A5B-626C-3D22-AB56-3EC30C9B7EE2") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0372_0001
    {
        IDispatchImplType_SystemDefinedImpl	= 0,
        IDispatchImplType_InternalImpl	= 1,
        IDispatchImplType_CompatibleImpl	= 2
    } 	IDispatchImplType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("97AA3979-1066-3969-B278-E064BDB97DCE") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0375_0001
    {
        TypeLibTypeFlags_FAppObject	= 1,
        TypeLibTypeFlags_FCanCreate	= 2,
        TypeLibTypeFlags_FLicensed	= 4,
        TypeLibTypeFlags_FPreDeclId	= 8,
        TypeLibTypeFlags_FHidden	= 16,
        TypeLibTypeFlags_FControl	= 32,
        TypeLibTypeFlags_FDual	= 64,
        TypeLibTypeFlags_FNonExtensible	= 128,
        TypeLibTypeFlags_FOleAutomation	= 256,
        TypeLibTypeFlags_FRestricted	= 512,
        TypeLibTypeFlags_FAggregatable	= 1024,
        TypeLibTypeFlags_FReplaceable	= 2048,
        TypeLibTypeFlags_FDispatchable	= 4096,
        TypeLibTypeFlags_FReverseBind	= 8192
    } 	TypeLibTypeFlags;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("BF1BF727-537F-3284-9CA9-5ADF12641AB5") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0375_0002
    {
        TypeLibFuncFlags_FRestricted	= 1,
        TypeLibFuncFlags_FSource	= 2,
        TypeLibFuncFlags_FBindable	= 4,
        TypeLibFuncFlags_FRequestEdit	= 8,
        TypeLibFuncFlags_FDisplayBind	= 16,
        TypeLibFuncFlags_FDefaultBind	= 32,
        TypeLibFuncFlags_FHidden	= 64,
        TypeLibFuncFlags_FUsesGetLastError	= 128,
        TypeLibFuncFlags_FDefaultCollelem	= 256,
        TypeLibFuncFlags_FUiDefault	= 512,
        TypeLibFuncFlags_FNonBrowsable	= 1024,
        TypeLibFuncFlags_FReplaceable	= 2048,
        TypeLibFuncFlags_FImmediateBind	= 4096
    } 	TypeLibFuncFlags;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("C660D7A6-D1DD-3E9D-85EB-F844791E2DAE") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0375_0003
    {
        TypeLibVarFlags_FReadOnly	= 1,
        TypeLibVarFlags_FSource	= 2,
        TypeLibVarFlags_FBindable	= 4,
        TypeLibVarFlags_FRequestEdit	= 8,
        TypeLibVarFlags_FDisplayBind	= 16,
        TypeLibVarFlags_FDefaultBind	= 32,
        TypeLibVarFlags_FHidden	= 64,
        TypeLibVarFlags_FRestricted	= 128,
        TypeLibVarFlags_FDefaultCollelem	= 256,
        TypeLibVarFlags_FUiDefault	= 512,
        TypeLibVarFlags_FNonBrowsable	= 1024,
        TypeLibVarFlags_FReplaceable	= 2048,
        TypeLibVarFlags_FImmediateBind	= 4096
    } 	TypeLibVarFlags;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("875EB8B7-663D-3B83-B702-5AF34662B9B5") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0378_0001
    {
        VarEnum_VT_EMPTY	= 0,
        VarEnum_VT_NULL	= 1,
        VarEnum_VT_I2	= 2,
        VarEnum_VT_I4	= 3,
        VarEnum_VT_R4	= 4,
        VarEnum_VT_R8	= 5,
        VarEnum_VT_CY	= 6,
        VarEnum_VT_DATE	= 7,
        VarEnum_VT_BSTR	= 8,
        VarEnum_VT_DISPATCH	= 9,
        VarEnum_VT_ERROR	= 10,
        VarEnum_VT_BOOL	= 11,
        VarEnum_VT_VARIANT	= 12,
        VarEnum_VT_UNKNOWN	= 13,
        VarEnum_VT_DECIMAL	= 14,
        VarEnum_VT_I1	= 16,
        VarEnum_VT_UI1	= 17,
        VarEnum_VT_UI2	= 18,
        VarEnum_VT_UI4	= 19,
        VarEnum_VT_I8	= 20,
        VarEnum_VT_UI8	= 21,
        VarEnum_VT_INT	= 22,
        VarEnum_VT_UINT	= 23,
        VarEnum_VT_VOID	= 24,
        VarEnum_VT_HRESULT	= 25,
        VarEnum_VT_PTR	= 26,
        VarEnum_VT_SAFEARRAY	= 27,
        VarEnum_VT_CARRAY	= 28,
        VarEnum_VT_USERDEFINED	= 29,
        VarEnum_VT_LPSTR	= 30,
        VarEnum_VT_LPWSTR	= 31,
        VarEnum_VT_RECORD	= 36,
        VarEnum_VT_FILETIME	= 64,
        VarEnum_VT_BLOB	= 65,
        VarEnum_VT_STREAM	= 66,
        VarEnum_VT_STORAGE	= 67,
        VarEnum_VT_STREAMED_OBJECT	= 68,
        VarEnum_VT_STORED_OBJECT	= 69,
        VarEnum_VT_BLOB_OBJECT	= 70,
        VarEnum_VT_CF	= 71,
        VarEnum_VT_CLSID	= 72,
        VarEnum_VT_VECTOR	= 4096,
        VarEnum_VT_ARRAY	= 8192,
        VarEnum_VT_BYREF	= 16384
    } 	VarEnum;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("03D65B1A-BBF6-3BDC-BC53-85E02415670D") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0378_0002
    {
        UnmanagedType_Bool	= 2,
        UnmanagedType_I1	= 3,
        UnmanagedType_U1	= 4,
        UnmanagedType_I2	= 5,
        UnmanagedType_U2	= 6,
        UnmanagedType_I4	= 7,
        UnmanagedType_U4	= 8,
        UnmanagedType_I8	= 9,
        UnmanagedType_U8	= 10,
        UnmanagedType_R4	= 11,
        UnmanagedType_R8	= 12,
        UnmanagedType_Currency	= 15,
        UnmanagedType_BStr	= 19,
        UnmanagedType_LPStr	= 20,
        UnmanagedType_LPWStr	= 21,
        UnmanagedType_LPTStr	= 22,
        UnmanagedType_ByValTStr	= 23,
        UnmanagedType_IUnknown	= 25,
        UnmanagedType_IDispatch	= 26,
        UnmanagedType_Struct	= 27,
        UnmanagedType_Interface	= 28,
        UnmanagedType_SafeArray	= 29,
        UnmanagedType_ByValArray	= 30,
        UnmanagedType_SysInt	= 31,
        UnmanagedType_SysUInt	= 32,
        UnmanagedType_VBByRefStr	= 34,
        UnmanagedType_AnsiBStr	= 35,
        UnmanagedType_TBStr	= 36,
        UnmanagedType_VariantBool	= 37,
        UnmanagedType_FunctionPtr	= 38,
        UnmanagedType_AsAny	= 40,
        UnmanagedType_LPArray	= 42,
        UnmanagedType_LPStruct	= 43,
        UnmanagedType_CustomMarshaler	= 44,
        UnmanagedType_Error	= 45
    } 	UnmanagedType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("79C2C4A6-8D21-371C-995F-52C38701B91E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0398_0001
    {
        CallingConvention_Winapi	= 1,
        CallingConvention_Cdecl	= 2,
        CallingConvention_StdCall	= 3,
        CallingConvention_ThisCall	= 4,
        CallingConvention_FastCall	= 5
    } 	CallingConvention;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("DEAE387D-C9A7-3A9C-B772-0153A2538502") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0398_0002
    {
        CharSet_None	= 1,
        CharSet_Ansi	= 2,
        CharSet_Unicode	= 3,
        CharSet_Auto	= 4
    } 	CharSet;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("0E71F38E-C5E1-3094-9487-5C7DD1E998EC") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0400_0001
    {
        GCHandleType_Weak	= 0,
        GCHandleType_WeakTrackResurrection	= 1,
        GCHandleType_Normal	= 2,
        GCHandleType_Pinned	= 3
    } 	GCHandleType;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("66E1F723-E57F-35CE-8306-3C09FB68A322") struct tagGCHandle
    {
    Int64 m_handle;
    } 	GCHandle;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("C71DCE2B-B87F-37A9-89ED-F1145955BCD6") struct tagHandleRef
    {
    IUnknown *m_wrapper;
    Int64 m_handle;
    } 	HandleRef;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("9ABE23BD-D5D5-30F6-B127-9B3AB98F7DBB") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0402_0001
    {
        LayoutKind_Sequential	= 0,
        LayoutKind_Explicit	= 2,
        LayoutKind_Auto	= 3
    } 	LayoutKind;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("96E0DEE8-C1CA-38A5-A3C9-52DA9B5440EF") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0407_0001
    {
        ComMemberType_Method	= 0,
        ComMemberType_PropGet	= 1,
        ComMemberType_PropSet	= 2
    } 	ComMemberType;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("765653A0-2B24-38E4-A6F6-5CB325E8CCC9") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0414_0001
    {
        AssemblyRegistrationFlags_None	= 0,
        AssemblyRegistrationFlags_SetCodeBase	= 1
    } 	AssemblyRegistrationFlags;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("C335350A-892D-37F7-967C-99B3C4C4A301") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0415_0001
    {
        TypeLibImporterFlags_None	= 0,
        TypeLibImporterFlags_PrimaryInteropAssembly	= 1,
        TypeLibImporterFlags_UnsafeInterfaces	= 2,
        TypeLibImporterFlags_SafeArrayAsSystemArray	= 4,
        TypeLibImporterFlags_TransformDispRetVals	= 8,
        TypeLibImporterFlags_PreventClassMembers	= 16,
        TypeLibImporterFlags_SerializableValueClasses	= 32,
        TypeLibImporterFlags_ImportAsX86	= 256,
        TypeLibImporterFlags_ImportAsX64	= 512,
        TypeLibImporterFlags_ImportAsItanium	= 1024,
        TypeLibImporterFlags_ImportAsAgnostic	= 2048,
        TypeLibImporterFlags_ReflectionOnlyLoading	= 4096
    } 	TypeLibImporterFlags;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("AD92602F-55F2-3552-A977-D93C79DB346E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0415_0002
    {
        TypeLibExporterFlags_None	= 0,
        TypeLibExporterFlags_OnlyReferenceRegistered	= 1,
        TypeLibExporterFlags_CallerResolvedReferences	= 2,
        TypeLibExporterFlags_OldNames	= 4,
        TypeLibExporterFlags_ExportAs32Bit	= 16,
        TypeLibExporterFlags_ExportAs64Bit	= 32
    } 	TypeLibExporterFlags;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("26170123-45FD-30F7-987D-BF3689662B6C") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0415_0003
    {
        ExporterEventKind_NOTIF_TYPECONVERTED	= 0,
        ExporterEventKind_NOTIF_CONVERTWARNING	= 1,
        ExporterEventKind_ERROR_REFTOINVALIDASSEMBLY	= 2
    } 	ExporterEventKind;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("8D583B4D-52C8-3243-829E-999D660D3947") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0432_0001
    {
        SearchOption_TopDirectoryOnly	= 0,
        SearchOption_AllDirectories	= 1
    } 	SearchOption;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("72E8197D-904B-3371-AE0E-B70D9D53771C") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0434_0001
    {
        DriveType_Unknown	= 0,
        DriveType_NoRootDirectory	= 1,
        DriveType_Removable	= 2,
        DriveType_Fixed	= 3,
        DriveType_Network	= 4,
        DriveType_CDRom	= 5,
        DriveType_Ram	= 6
    } 	DriveType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("74CAA246-BE0E-3AE5-A17C-946E10D89626") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0438_0001
    {
        FileAccess_Read	= 1,
        FileAccess_Write	= 2,
        FileAccess_ReadWrite	= 3
    } 	FileAccess;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("F9A5BD62-8DA3-3B2D-A556-864CDAD150F6") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0440_0001
    {
        FileMode_CreateNew	= 1,
        FileMode_Create	= 2,
        FileMode_Open	= 3,
        FileMode_OpenOrCreate	= 4,
        FileMode_Truncate	= 5,
        FileMode_Append	= 6
    } 	FileMode;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("68DB6E95-F774-3AE3-B1DE-B0CC80F6E174") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0441_0001
    {
        FileOptions_None	= 0,
        FileOptions_WriteThrough	= 0x80000000,
        FileOptions_Asynchronous	= 0x40000000,
        FileOptions_RandomAccess	= 0x10000000,
        FileOptions_DeleteOnClose	= 0x4000000,
        FileOptions_SequentialScan	= 0x8000000,
        FileOptions_Encrypted	= 16384
    } 	FileOptions;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("791EC67C-5A1B-35FD-832D-80B02D07ED6D") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0441_0002
    {
        FileShare_None	= 0,
        FileShare_Read	= 1,
        FileShare_Write	= 2,
        FileShare_ReadWrite	= 3,
        FileShare_Delete	= 4,
        FileShare_Inheritable	= 16
    } 	FileShare;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("38512CF6-FF94-3AD8-8299-F5F64A8956AA") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0442_0001
    {
        FileAttributes_ReadOnly	= 1,
        FileAttributes_Hidden	= 2,
        FileAttributes_System	= 4,
        FileAttributes_Directory	= 16,
        FileAttributes_Archive	= 32,
        FileAttributes_Device	= 64,
        FileAttributes_Normal	= 128,
        FileAttributes_Temporary	= 256,
        FileAttributes_SparseFile	= 512,
        FileAttributes_ReparsePoint	= 1024,
        FileAttributes_Compressed	= 2048,
        FileAttributes_Offline	= 4096,
        FileAttributes_NotContentIndexed	= 8192,
        FileAttributes_Encrypted	= 16384
    } 	FileAttributes;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("0CFE1ABF-373D-3208-85C2-947434046704") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0445_0001
    {
        SeekOrigin_Begin	= 0,
        SeekOrigin_Current	= 1,
        SeekOrigin_End	= 2
    } 	SeekOrigin;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("1E552DAE-602E-3CB5-9BFA-22AEB1FC38A5") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0460_0001
    {
        CompilationRelaxations_NoStringInterning	= 8
    } 	CompilationRelaxations;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("63A2E7FD-9A9B-3D6B-A827-3C5BF8DB1E6A") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0464_0001
    {
        MethodImplOptions_Unmanaged	= 4,
        MethodImplOptions_ForwardRef	= 16,
        MethodImplOptions_PreserveSig	= 128,
        MethodImplOptions_InternalCall	= 4096,
        MethodImplOptions_Synchronized	= 32,
        MethodImplOptions_NoInlining	= 8
    } 	MethodImplOptions;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("6B7F18AE-F5AC-368F-8DFD-AB5E2D229ED7") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0464_0002
    {
        MethodCodeType_IL	= 0,
        MethodCodeType_Native	= 1,
        MethodCodeType_OPTIL	= 2,
        MethodCodeType_Runtime	= 3
    } 	MethodCodeType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("EC73FCEB-1AEA-3A57-B953-21368E992507") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0472_0001
    {
        EnvironmentPermissionAccess_NoAccess	= 0,
        EnvironmentPermissionAccess_Read	= 1,
        EnvironmentPermissionAccess_Write	= 2,
        EnvironmentPermissionAccess_AllAccess	= 3
    } 	EnvironmentPermissionAccess;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("0DF04A9B-DDDC-3777-A6B1-9604B5CED191") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0477_0001
    {
        FileDialogPermissionAccess_None	= 0,
        FileDialogPermissionAccess_Open	= 1,
        FileDialogPermissionAccess_Save	= 2,
        FileDialogPermissionAccess_OpenSave	= 3
    } 	FileDialogPermissionAccess;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("CA10C1A1-9FDC-36A3-AD74-8FAC60E6541C") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0478_0001
    {
        FileIOPermissionAccess_NoAccess	= 0,
        FileIOPermissionAccess_Read	= 1,
        FileIOPermissionAccess_Write	= 2,
        FileIOPermissionAccess_Append	= 4,
        FileIOPermissionAccess_PathDiscovery	= 8,
        FileIOPermissionAccess_AllAccess	= 15
    } 	FileIOPermissionAccess;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("4548A129-2855-35E8-A892-FF506C877AA8") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0479_0001
    {
        HostProtectionResource_None	= 0,
        HostProtectionResource_Synchronization	= 1,
        HostProtectionResource_SharedState	= 2,
        HostProtectionResource_ExternalProcessMgmt	= 4,
        HostProtectionResource_SelfAffectingProcessMgmt	= 8,
        HostProtectionResource_ExternalThreading	= 16,
        HostProtectionResource_SelfAffectingThreading	= 32,
        HostProtectionResource_SecurityInfrastructure	= 64,
        HostProtectionResource_UI	= 128,
        HostProtectionResource_MayLeakOnAbort	= 256,
        HostProtectionResource_All	= 511
    } 	HostProtectionResource;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("0D6E31DF-3A76-3054-A8EB-150E92300F89") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0482_0001
    {
        IsolatedStorageContainment_None	= 0,
        IsolatedStorageContainment_DomainIsolationByUser	= 16,
        IsolatedStorageContainment_ApplicationIsolationByUser	= 21,
        IsolatedStorageContainment_AssemblyIsolationByUser	= 32,
        IsolatedStorageContainment_DomainIsolationByMachine	= 48,
        IsolatedStorageContainment_AssemblyIsolationByMachine	= 64,
        IsolatedStorageContainment_ApplicationIsolationByMachine	= 69,
        IsolatedStorageContainment_DomainIsolationByRoamingUser	= 80,
        IsolatedStorageContainment_AssemblyIsolationByRoamingUser	= 96,
        IsolatedStorageContainment_ApplicationIsolationByRoamingUser	= 101,
        IsolatedStorageContainment_AdministerIsolatedStorageByUser	= 112,
        IsolatedStorageContainment_UnrestrictedIsolatedStorage	= 240
    } 	IsolatedStorageContainment;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("DFAECF33-4728-382D-A34D-C1B0392F8B73") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0484_0001
    {
        PermissionState_Unrestricted	= 1,
        PermissionState_None	= 0
    } 	PermissionState;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("BA99AE52-D539-362F-B78C-4E84C14158BF") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0484_0002
    {
        SecurityAction_Demand	= 2,
        SecurityAction_Assert	= 3,
        SecurityAction_Deny	= 4,
        SecurityAction_PermitOnly	= 5,
        SecurityAction_LinkDemand	= 6,
        SecurityAction_InheritanceDemand	= 7,
        SecurityAction_RequestMinimum	= 8,
        SecurityAction_RequestOptional	= 9,
        SecurityAction_RequestRefuse	= 10
    } 	SecurityAction;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("44C2F476-9E95-3D5A-B666-FDBEF071494E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0501_0001
    {
        ReflectionPermissionFlag_NoFlags	= 0,
        ReflectionPermissionFlag_TypeInformation	= 1,
        ReflectionPermissionFlag_MemberAccess	= 2,
        ReflectionPermissionFlag_ReflectionEmit	= 4,
        ReflectionPermissionFlag_AllFlags	= 7
    } 	ReflectionPermissionFlag;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("B718F0F8-E5E7-3651-A2BE-97009B568250") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0503_0001
    {
        SecurityPermissionFlag_NoFlags	= 0,
        SecurityPermissionFlag_Assertion	= 1,
        SecurityPermissionFlag_UnmanagedCode	= 2,
        SecurityPermissionFlag_SkipVerification	= 4,
        SecurityPermissionFlag_Execution	= 8,
        SecurityPermissionFlag_ControlThread	= 16,
        SecurityPermissionFlag_ControlEvidence	= 32,
        SecurityPermissionFlag_ControlPolicy	= 64,
        SecurityPermissionFlag_SerializationFormatter	= 128,
        SecurityPermissionFlag_ControlDomainPolicy	= 256,
        SecurityPermissionFlag_ControlPrincipal	= 512,
        SecurityPermissionFlag_ControlAppDomain	= 1024,
        SecurityPermissionFlag_RemotingConfiguration	= 2048,
        SecurityPermissionFlag_Infrastructure	= 4096,
        SecurityPermissionFlag_BindingRedirects	= 8192,
        SecurityPermissionFlag_AllFlags	= 16383
    } 	SecurityPermissionFlag;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("B30FD15E-CED6-3977-8151-0D50E79CD703") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0507_0001
    {
        UIPermissionWindow_NoWindows	= 0,
        UIPermissionWindow_SafeSubWindows	= 1,
        UIPermissionWindow_SafeTopLevelWindows	= 2,
        UIPermissionWindow_AllWindows	= 3
    } 	UIPermissionWindow;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("9E5C3C99-D046-3FE5-9921-21CF0F0A08FF") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0507_0002
    {
        UIPermissionClipboard_NoClipboard	= 0,
        UIPermissionClipboard_OwnClipboard	= 1,
        UIPermissionClipboard_AllClipboard	= 2
    } 	UIPermissionClipboard;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("742BDC16-F04E-3E0E-8FF1-E3250940B5BF") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0512_0001
    {
        KeyContainerPermissionFlags_NoFlags	= 0,
        KeyContainerPermissionFlags_Create	= 1,
        KeyContainerPermissionFlags_Open	= 2,
        KeyContainerPermissionFlags_Delete	= 4,
        KeyContainerPermissionFlags_Import	= 16,
        KeyContainerPermissionFlags_Export	= 32,
        KeyContainerPermissionFlags_Sign	= 256,
        KeyContainerPermissionFlags_Decrypt	= 512,
        KeyContainerPermissionFlags_ViewAcl	= 4096,
        KeyContainerPermissionFlags_ChangeAcl	= 8192,
        KeyContainerPermissionFlags_AllFlags	= 13111
    } 	KeyContainerPermissionFlags;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("3EB29914-F9A9-3C15-A03F-560885CFCB61") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0517_0001
    {
        RegistryPermissionAccess_NoAccess	= 0,
        RegistryPermissionAccess_Read	= 1,
        RegistryPermissionAccess_Write	= 2,
        RegistryPermissionAccess_Create	= 4,
        RegistryPermissionAccess_AllAccess	= 7
    } 	RegistryPermissionAccess;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("51E1B3CA-D3CB-39BF-A016-6199569E74B2") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0521_0001
    {
        HostSecurityManagerOptions_None	= 0,
        HostSecurityManagerOptions_HostAppDomainEvidence	= 1,
        HostSecurityManagerOptions_HostPolicyLevel	= 2,
        HostSecurityManagerOptions_HostAssemblyEvidence	= 4,
        HostSecurityManagerOptions_HostDetermineApplicationTrust	= 8,
        HostSecurityManagerOptions_HostResolvePolicy	= 16,
        HostSecurityManagerOptions_AllFlags	= 31
    } 	HostSecurityManagerOptions;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("EE965595-853A-331B-9CD0-D53DCCE3B6F8") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0526_0001
    {
        PolicyLevelType_User	= 0,
        PolicyLevelType_Machine	= 1,
        PolicyLevelType_Enterprise	= 2,
        PolicyLevelType_AppDomain	= 3
    } 	PolicyLevelType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("902A6B65-41BD-32F1-A233-075F009D459C") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0527_0001
    {
        SecurityZone_MyComputer	= 0,
        SecurityZone_Intranet	= 1,
        SecurityZone_Trusted	= 2,
        SecurityZone_Internet	= 3,
        SecurityZone_Untrusted	= 4,
        SecurityZone_NoZone	= 0xffffffff
    } 	SecurityZone;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("669212CB-7972-3073-BDB0-6782534B6590") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0546_0001
    {
        WellKnownObjectMode_Singleton	= 1,
        WellKnownObjectMode_SingleCall	= 2
    } 	WellKnownObjectMode;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("C888351B-5DFD-3A9F-8D36-96E7770D0EBF") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0607_0001
    {
        SoapOption_None	= 0,
        SoapOption_AlwaysIncludeTypes	= 1,
        SoapOption_XsdString	= 2,
        SoapOption_EmbedAll	= 4,
        SoapOption_Option1	= 8,
        SoapOption_Option2	= 16
    } 	SoapOption;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("0AD279C7-05FB-3A46-9031-92E00C9F7C29") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0607_0002
    {
        XmlFieldOrderOption_All	= 0,
        XmlFieldOrderOption_Sequence	= 1,
        XmlFieldOrderOption_Choice	= 2
    } 	XmlFieldOrderOption;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("82FEBF4C-9FC8-3285-8D5A-F00DD1E1BA40") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0618_0001
    {
        CustomErrorsModes_On	= 0,
        CustomErrorsModes_Off	= 1,
        CustomErrorsModes_RemoteOnly	= 2
    } 	CustomErrorsModes;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("B3E5A7FF-AFC6-3F2B-8FFF-300C7C567693") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0662_0001
    {
        IsolatedStorageScope_None	= 0,
        IsolatedStorageScope_User	= 1,
        IsolatedStorageScope_Domain	= 2,
        IsolatedStorageScope_Assembly	= 4,
        IsolatedStorageScope_Roaming	= 8,
        IsolatedStorageScope_Machine	= 16,
        IsolatedStorageScope_Application	= 32
    } 	IsolatedStorageScope;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("72B06367-DE53-3111-9C49-B816EFEE3148") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0667_0001
    {
        FormatterTypeStyle_TypesWhenNeeded	= 0,
        FormatterTypeStyle_TypesAlways	= 1,
        FormatterTypeStyle_XsdString	= 2
    } 	FormatterTypeStyle;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("F18130E7-BD6C-37F4-9488-35F9FB832AC7") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0667_0002
    {
        FormatterAssemblyStyle_Simple	= 0,
        FormatterAssemblyStyle_Full	= 1
    } 	FormatterAssemblyStyle;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("C5D299AC-63B0-3448-BCB7-6AA9B5EB598E") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0667_0003
    {
        TypeFilterLevel_Low	= 2,
        TypeFilterLevel_Full	= 3
    } 	TypeFilterLevel;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("4E8B1BB8-6A6F-3B57-8AFA-0129550B07BE") struct tagEventToken
    {
    long m_event;
    } 	EventToken;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("24246833-61EB-329D-BDDF-0DAF3874062B") struct tagFieldToken
    {
    long m_fieldTok;
    IUnknown *m_class;
    } 	FieldToken;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("A419B664-DABD-383D-A0DB-991487D41E14") struct tagLabel
    {
    long m_label;
    } 	Label;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("0EFE423A-A87E-33D9-8BF4-2D212620EE5F") struct tagMethodToken
    {
    long m_method;
    } 	MethodToken;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("E87FA4D7-0CAA-3C24-BE83-CF98B50186E2") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0701_0001
    {
        PEFileKinds_Dll	= 1,
        PEFileKinds_ConsoleApplication	= 2,
        PEFileKinds_WindowApplication	= 3
    } 	PEFileKinds;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("A7ED05C6-FECF-3C35-BA3B-84163AC1D5E5") struct tagOpCode
    {
    LPSTR m_stringname;
    StackBehaviour m_pop;
    StackBehaviour m_push;
    OperandType m_operand;
    OpCodeType m_type;
    long m_size;
    unsigned char m_s1;
    unsigned char m_s2;
    FlowControl m_ctrl;
    long m_endsUncondJmpBlk;
    long m_stackChange;
    } 	OpCode;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("CFB98CA9-8121-35BE-AF40-C176C616A16B") struct tagParameterToken
    {
    long m_tkParameter;
    } 	ParameterToken;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("566833C7-F4A0-30EE-BD7E-44752AD570E6") struct tagPropertyToken
    {
    long m_property;
    } 	PropertyToken;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("155E1466-0E84-3F2B-B825-F6525523407C") struct tagSignatureToken
    {
    long m_signature;
    _ModuleBuilder *m_moduleBuilder;
    } 	SignatureToken;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("8CF0278D-D0AD-307D-BE63-A785432E3FDF") struct tagStringToken
    {
    long m_string;
    } 	StringToken;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("3E0AF669-1CD8-3AFC-9F2C-E81C2B810135") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0705_0001
    {
        PackingSize_Unspecified	= 0,
        PackingSize_Size1	= 1,
        PackingSize_Size2	= 2,
        PackingSize_Size4	= 4,
        PackingSize_Size8	= 8,
        PackingSize_Size16	= 16,
        PackingSize_Size32	= 32,
        PackingSize_Size64	= 64,
        PackingSize_Size128	= 128
    } 	PackingSize;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("048FA0C2-8EBB-3BC2-A47F-01F12A32008E") struct tagTypeToken
    {
    long m_class;
    } 	TypeToken;

typedef /* [public][public][custom][version][uuid] */  DECLSPEC_UUID("DDD019BF-D182-34DE-9192-95575F7B2A31") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0709_0001
    {
        AssemblyHashAlgorithm_None	= 0,
        AssemblyHashAlgorithm_MD5	= 32771,
        AssemblyHashAlgorithm_SHA1	= 32772
    } 	AssemblyHashAlgorithm;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("42A66664-072F-3A67-A189-7D440709A77E") struct tagAssemblyHash
    {
    AssemblyHashAlgorithm _Algorithm;
    SAFEARRAY * _value;
    } 	AssemblyHash;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("E3DC8079-43BC-3E70-B291-1591CC9E451D") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0709_0002
    {
        AssemblyVersionCompatibility_SameMachine	= 1,
        AssemblyVersionCompatibility_SameProcess	= 2,
        AssemblyVersionCompatibility_SameDomain	= 3
    } 	AssemblyVersionCompatibility;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("75C9E85E-D2D1-32DB-BF9C-0636F94FB0C2") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0709_0003
    {
        CipherMode_CBC	= 1,
        CipherMode_ECB	= 2,
        CipherMode_OFB	= 3,
        CipherMode_CFB	= 4,
        CipherMode_CTS	= 5
    } 	CipherMode;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("1254089D-0104-3BFB-B6BA-9168F994DCA6") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0709_0004
    {
        PaddingMode_None	= 1,
        PaddingMode_PKCS7	= 2,
        PaddingMode_Zeros	= 3,
        PaddingMode_ANSIX923	= 4,
        PaddingMode_ISO10126	= 5
    } 	PaddingMode;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("11472518-C3B8-3BF4-9705-2135E1709883") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0720_0001
    {
        FromBase64TransformMode_IgnoreWhiteSpaces	= 0,
        FromBase64TransformMode_DoNotIgnoreWhiteSpaces	= 1
    } 	FromBase64TransformMode;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("6BE41CDF-29D7-32DB-8181-5117F580BA68") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0723_0001
    {
        CspProviderFlags_NoFlags	= 0,
        CspProviderFlags_UseMachineKeyStore	= 1,
        CspProviderFlags_UseDefaultKeyContainer	= 2,
        CspProviderFlags_UseNonExportableKey	= 4,
        CspProviderFlags_UseExistingKey	= 8,
        CspProviderFlags_UseArchivableKey	= 16,
        CspProviderFlags_UseUserProtectedKey	= 32,
        CspProviderFlags_NoPrompt	= 64
    } 	CspProviderFlags;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("8990CB3B-227E-3A43-8264-0057EC763FA0") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0725_0001
    {
        CryptoStreamMode_Read	= 0,
        CryptoStreamMode_Write	= 1
    } 	CryptoStreamMode;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("0C646F46-AA27-350D-88DD-D8C920CE6C2D") struct tagDSAParameters
    {
    SAFEARRAY * P;
    SAFEARRAY * Q;
    SAFEARRAY * G;
    SAFEARRAY * y;
    SAFEARRAY * J;
    SAFEARRAY * x;
    SAFEARRAY * Seed;
    long Counter;
    } 	DSAParameters;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("D7DD91C9-91E4-38E9-8EC6-37836572A66A") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0744_0001
    {
        KeyNumber_Exchange	= 1,
        KeyNumber_Signature	= 2
    } 	KeyNumber;

typedef /* [custom][version][uuid] */  DECLSPEC_UUID("094E9135-483D-334A-AAE7-8690895AB70A") struct tagRSAParameters
    {
    SAFEARRAY * Exponent;
    SAFEARRAY * Modulus;
    SAFEARRAY * P;
    SAFEARRAY * Q;
    SAFEARRAY * DP;
    SAFEARRAY * DQ;
    SAFEARRAY * InverseQ;
    SAFEARRAY * D;
    } 	RSAParameters;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("70446B90-F93B-3578-9B7B-95D05A12DA60") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0779_0001
    {
        X509ContentType_Unknown	= 0,
        X509ContentType_Cert	= 1,
        X509ContentType_SerializedCert	= 2,
        X509ContentType_Pfx	= 3,
        X509ContentType_Pkcs12	= 3,
        X509ContentType_SerializedStore	= 4,
        X509ContentType_Pkcs7	= 5,
        X509ContentType_Authenticode	= 6
    } 	X509ContentType;

typedef /* [public][custom][version][uuid] */  DECLSPEC_UUID("2530EE1E-6D70-3A79-A864-7CC0E2120DA1") 
enum __MIDL___MIDL_itf_mscorlib_fixed_0001_0779_0002
    {
        X509KeyStorageFlags_DefaultKeySet	= 0,
        X509KeyStorageFlags_UserKeySet	= 1,
        X509KeyStorageFlags_MachineKeySet	= 2,
        X509KeyStorageFlags_Exportable	= 4,
        X509KeyStorageFlags_UserProtected	= 8,
        X509KeyStorageFlags_PersistKeySet	= 16
    } 	X509KeyStorageFlags;


EXTERN_C const IID LIBID_mscorlib;

#ifndef __ICloneable_INTERFACE_DEFINED__
#define __ICloneable_INTERFACE_DEFINED__

/* interface ICloneable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICloneable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CB251A7-3AB3-3B5C-A0B8-9DDF88824B85")
    ICloneable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICloneableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICloneable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICloneable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICloneable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICloneable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICloneable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICloneable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICloneable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Clone )( 
            ICloneable * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } ICloneableVtbl;

    interface ICloneable
    {
        CONST_VTBL struct ICloneableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICloneable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICloneable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICloneable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICloneable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICloneable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICloneable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICloneable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICloneable_Clone(This,pRetVal)	\
    ( (This)->lpVtbl -> Clone(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICloneable_INTERFACE_DEFINED__ */


#ifndef __IEnumerable_INTERFACE_DEFINED__
#define __IEnumerable_INTERFACE_DEFINED__

/* interface IEnumerable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IEnumerable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("496B0ABE-CDEE-11D3-88E8-00902754C43A")
    IEnumerable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumVARIANT **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IEnumerableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumerable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumerable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumerable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IEnumerable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IEnumerable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IEnumerable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IEnumerable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IEnumerable * This,
            /* [retval][out] */ IEnumVARIANT **pRetVal);
        
        END_INTERFACE
    } IEnumerableVtbl;

    interface IEnumerable
    {
        CONST_VTBL struct IEnumerableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumerable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumerable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumerable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumerable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IEnumerable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IEnumerable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IEnumerable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IEnumerable_GetEnumerator(This,pRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumerable_INTERFACE_DEFINED__ */


#ifndef __ICollection_INTERFACE_DEFINED__
#define __ICollection_INTERFACE_DEFINED__

/* interface ICollection */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE8DB6F8-D101-3A92-8D1C-E72E5F10E992")
    ICollection : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CopyTo( 
            /* [in] */ _Array *Array,
            /* [in] */ long index) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Count( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SyncRoot( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsSynchronized( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICollection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICollection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICollection * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CopyTo )( 
            ICollection * This,
            /* [in] */ _Array *Array,
            /* [in] */ long index);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Count )( 
            ICollection * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SyncRoot )( 
            ICollection * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsSynchronized )( 
            ICollection * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } ICollectionVtbl;

    interface ICollection
    {
        CONST_VTBL struct ICollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICollection_CopyTo(This,Array,index)	\
    ( (This)->lpVtbl -> CopyTo(This,Array,index) ) 

#define ICollection_get_Count(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Count(This,pRetVal) ) 

#define ICollection_get_SyncRoot(This,pRetVal)	\
    ( (This)->lpVtbl -> get_SyncRoot(This,pRetVal) ) 

#define ICollection_get_IsSynchronized(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSynchronized(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICollection_INTERFACE_DEFINED__ */


#ifndef __IList_INTERFACE_DEFINED__
#define __IList_INTERFACE_DEFINED__

/* interface IList */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7BCFA00F-F764-3113-9140-3BBD127A96BB")
    IList : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ long index,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Item( 
            /* [in] */ long index,
            /* [in] */ VARIANT pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsReadOnly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsFixedSize( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IndexOf( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Insert( 
            /* [in] */ long index,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveAt( 
            /* [in] */ long index) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IList * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IList * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IList * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IList * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IList * This,
            /* [in] */ long index,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Item )( 
            IList * This,
            /* [in] */ long index,
            /* [in] */ VARIANT pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IList * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IList * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IList * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )( 
            IList * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsFixedSize )( 
            IList * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IndexOf )( 
            IList * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Insert )( 
            IList * This,
            /* [in] */ long index,
            /* [in] */ VARIANT value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IList * This,
            /* [in] */ VARIANT value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveAt )( 
            IList * This,
            /* [in] */ long index);
        
        END_INTERFACE
    } IListVtbl;

    interface IList
    {
        CONST_VTBL struct IListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IList_get_Item(This,index,pRetVal)	\
    ( (This)->lpVtbl -> get_Item(This,index,pRetVal) ) 

#define IList_putref_Item(This,index,pRetVal)	\
    ( (This)->lpVtbl -> putref_Item(This,index,pRetVal) ) 

#define IList_Add(This,value,pRetVal)	\
    ( (This)->lpVtbl -> Add(This,value,pRetVal) ) 

#define IList_Contains(This,value,pRetVal)	\
    ( (This)->lpVtbl -> Contains(This,value,pRetVal) ) 

#define IList_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IList_get_IsReadOnly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsReadOnly(This,pRetVal) ) 

#define IList_get_IsFixedSize(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFixedSize(This,pRetVal) ) 

#define IList_IndexOf(This,value,pRetVal)	\
    ( (This)->lpVtbl -> IndexOf(This,value,pRetVal) ) 

#define IList_Insert(This,index,value)	\
    ( (This)->lpVtbl -> Insert(This,index,value) ) 

#define IList_Remove(This,value)	\
    ( (This)->lpVtbl -> Remove(This,value) ) 

#define IList_RemoveAt(This,index)	\
    ( (This)->lpVtbl -> RemoveAt(This,index) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IList_INTERFACE_DEFINED__ */


#ifndef __IEnumerator_INTERFACE_DEFINED__
#define __IEnumerator_INTERFACE_DEFINED__

/* interface IEnumerator */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("496B0ABF-CDEE-11D3-88E8-00902754C43A")
    IEnumerator : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MoveNext( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Current( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Reset( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *MoveNext )( 
            IEnumerator * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Current )( 
            IEnumerator * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Reset )( 
            IEnumerator * This);
        
        END_INTERFACE
    } IEnumeratorVtbl;

    interface IEnumerator
    {
        CONST_VTBL struct IEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IEnumerator_MoveNext(This,pRetVal)	\
    ( (This)->lpVtbl -> MoveNext(This,pRetVal) ) 

#define IEnumerator_get_Current(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Current(This,pRetVal) ) 

#define IEnumerator_Reset(This)	\
    ( (This)->lpVtbl -> Reset(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnumerator_INTERFACE_DEFINED__ */


#ifndef __IDisposable_INTERFACE_DEFINED__
#define __IDisposable_INTERFACE_DEFINED__

/* interface IDisposable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IDisposable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("805D7A98-D4AF-3F0F-967F-E5CF45312D2C")
    IDisposable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Dispose( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDisposableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDisposable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDisposable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDisposable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDisposable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDisposable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDisposable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDisposable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Dispose )( 
            IDisposable * This);
        
        END_INTERFACE
    } IDisposableVtbl;

    interface IDisposable
    {
        CONST_VTBL struct IDisposableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDisposable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDisposable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDisposable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDisposable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDisposable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDisposable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDisposable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDisposable_Dispose(This)	\
    ( (This)->lpVtbl -> Dispose(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDisposable_INTERFACE_DEFINED__ */


#ifndef __IComparable_INTERFACE_DEFINED__
#define __IComparable_INTERFACE_DEFINED__

/* interface IComparable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IComparable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DEB0E770-91FD-3CF6-9A6C-E6A3656F3965")
    IComparable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CompareTo( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ long *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IComparableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IComparable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IComparable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IComparable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IComparable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IComparable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IComparable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IComparable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CompareTo )( 
            IComparable * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ long *pRetVal);
        
        END_INTERFACE
    } IComparableVtbl;

    interface IComparable
    {
        CONST_VTBL struct IComparableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComparable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IComparable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IComparable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IComparable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IComparable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IComparable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IComparable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IComparable_CompareTo(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> CompareTo(This,obj,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IComparable_INTERFACE_DEFINED__ */


#ifndef __IFormattable_INTERFACE_DEFINED__
#define __IFormattable_INTERFACE_DEFINED__

/* interface IFormattable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IFormattable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9A604EE7-E630-3DED-9444-BAAE247075AB")
    IFormattable : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [in] */ BSTR format,
            /* [in] */ IFormatProvider *formatProvider,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IFormattableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFormattable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFormattable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFormattable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFormattable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFormattable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFormattable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFormattable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            IFormattable * This,
            /* [in] */ BSTR format,
            /* [in] */ IFormatProvider *formatProvider,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } IFormattableVtbl;

    interface IFormattable
    {
        CONST_VTBL struct IFormattableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFormattable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFormattable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFormattable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFormattable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFormattable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFormattable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFormattable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFormattable_get_ToString(This,format,formatProvider,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,format,formatProvider,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFormattable_INTERFACE_DEFINED__ */


#ifndef __IConvertible_INTERFACE_DEFINED__
#define __IConvertible_INTERFACE_DEFINED__

/* interface IConvertible */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IConvertible;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("805E3B62-B5E9-393D-8941-377D8BF4556B")
    IConvertible : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetTypeCode( 
            /* [retval][out] */ TypeCode *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToBoolean( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToChar( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned short *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToSByte( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned char *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToByte( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned char *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToInt16( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ short *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToUInt16( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned short *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToInt32( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToUInt32( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToInt64( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ INT64 *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToUInt64( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ UINT64 *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToSingle( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ double *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToDouble( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ double *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToDecimal( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ wchar_t *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToDateTime( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ DATE *pRetVal) = 0;
        
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToType( 
            /* [in] */ _Type *conversionType,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IConvertibleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IConvertible * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IConvertible * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IConvertible * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IConvertible * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IConvertible * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IConvertible * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IConvertible * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetTypeCode )( 
            IConvertible * This,
            /* [retval][out] */ TypeCode *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToBoolean )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToChar )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned short *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToSByte )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned char *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToByte )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned char *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToInt16 )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ short *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToUInt16 )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned short *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToInt32 )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToUInt32 )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ unsigned long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToInt64 )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ INT64 *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToUInt64 )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ UINT64 *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToSingle )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ double *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToDouble )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ double *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToDecimal )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ wchar_t *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToDateTime )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ DATE *pRetVal);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            IConvertible * This,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToType )( 
            IConvertible * This,
            /* [in] */ _Type *conversionType,
            /* [in] */ IFormatProvider *provider,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } IConvertibleVtbl;

    interface IConvertible
    {
        CONST_VTBL struct IConvertibleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConvertible_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConvertible_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConvertible_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConvertible_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IConvertible_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IConvertible_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IConvertible_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IConvertible_GetTypeCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetTypeCode(This,pRetVal) ) 

#define IConvertible_ToBoolean(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToBoolean(This,provider,pRetVal) ) 

#define IConvertible_ToChar(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToChar(This,provider,pRetVal) ) 

#define IConvertible_ToSByte(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToSByte(This,provider,pRetVal) ) 

#define IConvertible_ToByte(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToByte(This,provider,pRetVal) ) 

#define IConvertible_ToInt16(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToInt16(This,provider,pRetVal) ) 

#define IConvertible_ToUInt16(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToUInt16(This,provider,pRetVal) ) 

#define IConvertible_ToInt32(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToInt32(This,provider,pRetVal) ) 

#define IConvertible_ToUInt32(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToUInt32(This,provider,pRetVal) ) 

#define IConvertible_ToInt64(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToInt64(This,provider,pRetVal) ) 

#define IConvertible_ToUInt64(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToUInt64(This,provider,pRetVal) ) 

#define IConvertible_ToSingle(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToSingle(This,provider,pRetVal) ) 

#define IConvertible_ToDouble(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToDouble(This,provider,pRetVal) ) 

#define IConvertible_ToDecimal(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToDecimal(This,provider,pRetVal) ) 

#define IConvertible_ToDateTime(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToDateTime(This,provider,pRetVal) ) 

#define IConvertible_get_ToString(This,provider,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,provider,pRetVal) ) 

#define IConvertible_ToType(This,conversionType,provider,pRetVal)	\
    ( (This)->lpVtbl -> ToType(This,conversionType,provider,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConvertible_INTERFACE_DEFINED__ */


#ifndef __IComparer_INTERFACE_DEFINED__
#define __IComparer_INTERFACE_DEFINED__

/* interface IComparer */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IComparer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C20FD3EB-7022-3D14-8477-760FAB54E50D")
    IComparer : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Compare( 
            /* [in] */ VARIANT x,
            /* [in] */ VARIANT y,
            /* [retval][out] */ long *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IComparerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IComparer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IComparer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IComparer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IComparer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IComparer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IComparer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IComparer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Compare )( 
            IComparer * This,
            /* [in] */ VARIANT x,
            /* [in] */ VARIANT y,
            /* [retval][out] */ long *pRetVal);
        
        END_INTERFACE
    } IComparerVtbl;

    interface IComparer
    {
        CONST_VTBL struct IComparerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IComparer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IComparer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IComparer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IComparer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IComparer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IComparer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IComparer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IComparer_Compare(This,x,y,pRetVal)	\
    ( (This)->lpVtbl -> Compare(This,x,y,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IComparer_INTERFACE_DEFINED__ */


#ifndef __IEqualityComparer_INTERFACE_DEFINED__
#define __IEqualityComparer_INTERFACE_DEFINED__

/* interface IEqualityComparer */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IEqualityComparer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AAB7C6EA-CAB0-3ADB-82AA-CF32E29AF238")
    IEqualityComparer : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT x,
            /* [in] */ VARIANT y,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ long *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IEqualityComparerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEqualityComparer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEqualityComparer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEqualityComparer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IEqualityComparer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IEqualityComparer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IEqualityComparer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IEqualityComparer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            IEqualityComparer * This,
            /* [in] */ VARIANT x,
            /* [in] */ VARIANT y,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            IEqualityComparer * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ long *pRetVal);
        
        END_INTERFACE
    } IEqualityComparerVtbl;

    interface IEqualityComparer
    {
        CONST_VTBL struct IEqualityComparerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEqualityComparer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEqualityComparer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEqualityComparer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEqualityComparer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IEqualityComparer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IEqualityComparer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IEqualityComparer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IEqualityComparer_Equals(This,x,y,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,x,y,pRetVal) ) 

#define IEqualityComparer_GetHashCode(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,obj,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEqualityComparer_INTERFACE_DEFINED__ */


#ifndef __ISerializable_INTERFACE_DEFINED__
#define __ISerializable_INTERFACE_DEFINED__

/* interface ISerializable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISerializable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D0EEAA62-3D30-3EE2-B896-A2F34DDA47D8")
    ISerializable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObjectData( 
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISerializableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISerializable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISerializable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISerializable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISerializable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISerializable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISerializable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISerializable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectData )( 
            ISerializable * This,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context);
        
        END_INTERFACE
    } ISerializableVtbl;

    interface ISerializable
    {
        CONST_VTBL struct ISerializableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISerializable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISerializable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISerializable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISerializable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISerializable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISerializable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISerializable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISerializable_GetObjectData(This,info,Context)	\
    ( (This)->lpVtbl -> GetObjectData(This,info,Context) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISerializable_INTERFACE_DEFINED__ */


#ifndef ___Exception_INTERFACE_DEFINED__
#define ___Exception_INTERFACE_DEFINED__

/* interface _Exception */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID__Exception;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B36B5C63-42EF-38BC-A07E-0B34C98F164A")
    _Exception : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Message( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetBaseException( 
            /* [retval][out] */ _Exception **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_StackTrace( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HelpLink( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_HelpLink( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Source( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Source( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObjectData( 
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InnerException( 
            /* [retval][out] */ _Exception **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_TargetSite( 
            /* [retval][out] */ _MethodBase **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Exception * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Exception * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Exception * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Exception * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Exception * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Exception * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Exception * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            _Exception * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            _Exception * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            _Exception * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            _Exception * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Message )( 
            _Exception * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetBaseException )( 
            _Exception * This,
            /* [retval][out] */ _Exception **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StackTrace )( 
            _Exception * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HelpLink )( 
            _Exception * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_HelpLink )( 
            _Exception * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Source )( 
            _Exception * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Source )( 
            _Exception * This,
            /* [in] */ BSTR pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectData )( 
            _Exception * This,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InnerException )( 
            _Exception * This,
            /* [retval][out] */ _Exception **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_TargetSite )( 
            _Exception * This,
            /* [retval][out] */ _MethodBase **pRetVal);
        
        END_INTERFACE
    } _ExceptionVtbl;

    interface _Exception
    {
        CONST_VTBL struct _ExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Exception_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Exception_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Exception_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Exception_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Exception_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Exception_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Exception_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Exception_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _Exception_Equals(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,obj,pRetVal) ) 

#define _Exception_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _Exception_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _Exception_get_Message(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Message(This,pRetVal) ) 

#define _Exception_GetBaseException(This,pRetVal)	\
    ( (This)->lpVtbl -> GetBaseException(This,pRetVal) ) 

#define _Exception_get_StackTrace(This,pRetVal)	\
    ( (This)->lpVtbl -> get_StackTrace(This,pRetVal) ) 

#define _Exception_get_HelpLink(This,pRetVal)	\
    ( (This)->lpVtbl -> get_HelpLink(This,pRetVal) ) 

#define _Exception_put_HelpLink(This,pRetVal)	\
    ( (This)->lpVtbl -> put_HelpLink(This,pRetVal) ) 

#define _Exception_get_Source(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Source(This,pRetVal) ) 

#define _Exception_put_Source(This,pRetVal)	\
    ( (This)->lpVtbl -> put_Source(This,pRetVal) ) 

#define _Exception_GetObjectData(This,info,Context)	\
    ( (This)->lpVtbl -> GetObjectData(This,info,Context) ) 

#define _Exception_get_InnerException(This,pRetVal)	\
    ( (This)->lpVtbl -> get_InnerException(This,pRetVal) ) 

#define _Exception_get_TargetSite(This,pRetVal)	\
    ( (This)->lpVtbl -> get_TargetSite(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Exception_INTERFACE_DEFINED__ */


#ifndef ___Activator_INTERFACE_DEFINED__
#define ___Activator_INTERFACE_DEFINED__

/* interface _Activator */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__Activator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("03973551-57A1-3900-A2B5-9083E3FF2943")
    _Activator : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ActivatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Activator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Activator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Activator * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _Activator * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _Activator * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _Activator * This,
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _Activator * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr);
        
        END_INTERFACE
    } _ActivatorVtbl;

    interface _Activator
    {
        CONST_VTBL struct _ActivatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Activator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Activator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Activator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Activator_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _Activator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Activator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Activator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Activator_INTERFACE_DEFINED__ */


#ifndef ___AppDomain_INTERFACE_DEFINED__
#define ___AppDomain_INTERFACE_DEFINED__

/* interface _AppDomain */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__AppDomain;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05F696DC-2B29-3663-AD8B-C4389CF2A713")
    _AppDomain : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall InitializeLifetimeService( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetLifetimeService( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Evidence( 
            /* [retval][out] */ _Evidence **pRetVal) = 0;
        
        virtual HRESULT __stdcall add_DomainUnload( 
            /* [in] */ _EventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_DomainUnload( 
            /* [in] */ _EventHandler *value) = 0;
        
        virtual HRESULT __stdcall add_AssemblyLoad( 
            /* [in] */ _AssemblyLoadEventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_AssemblyLoad( 
            /* [in] */ _AssemblyLoadEventHandler *value) = 0;
        
        virtual HRESULT __stdcall add_ProcessExit( 
            /* [in] */ _EventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_ProcessExit( 
            /* [in] */ _EventHandler *value) = 0;
        
        virtual HRESULT __stdcall add_TypeResolve( 
            /* [in] */ _ResolveEventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_TypeResolve( 
            /* [in] */ _ResolveEventHandler *value) = 0;
        
        virtual HRESULT __stdcall add_ResourceResolve( 
            /* [in] */ _ResolveEventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_ResourceResolve( 
            /* [in] */ _ResolveEventHandler *value) = 0;
        
        virtual HRESULT __stdcall add_AssemblyResolve( 
            /* [in] */ _ResolveEventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_AssemblyResolve( 
            /* [in] */ _ResolveEventHandler *value) = 0;
        
        virtual HRESULT __stdcall add_UnhandledException( 
            /* [in] */ _UnhandledExceptionEventHandler *value) = 0;
        
        virtual HRESULT __stdcall remove_UnhandledException( 
            /* [in] */ _UnhandledExceptionEventHandler *value) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_2( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_3( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_4( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_5( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_6( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_7( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ _Evidence *Evidence,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_8( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _Evidence *Evidence,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall DefineDynamicAssembly_9( 
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _Evidence *Evidence,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [in] */ VARIANT_BOOL IsSynchronized,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall CreateInstance( 
            /* [in] */ BSTR AssemblyName,
            /* [in] */ BSTR typeName,
            /* [retval][out] */ _ObjectHandle **pRetVal) = 0;
        
        virtual HRESULT __stdcall CreateInstanceFrom( 
            /* [in] */ BSTR assemblyFile,
            /* [in] */ BSTR typeName,
            /* [retval][out] */ _ObjectHandle **pRetVal) = 0;
        
        virtual HRESULT __stdcall CreateInstance_2( 
            /* [in] */ BSTR AssemblyName,
            /* [in] */ BSTR typeName,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal) = 0;
        
        virtual HRESULT __stdcall CreateInstanceFrom_2( 
            /* [in] */ BSTR assemblyFile,
            /* [in] */ BSTR typeName,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal) = 0;
        
        virtual HRESULT __stdcall CreateInstance_3( 
            /* [in] */ BSTR AssemblyName,
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [in] */ _Evidence *securityAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal) = 0;
        
        virtual HRESULT __stdcall CreateInstanceFrom_3( 
            /* [in] */ BSTR assemblyFile,
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [in] */ _Evidence *securityAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load( 
            /* [in] */ _AssemblyName *assemblyRef,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load_2( 
            /* [in] */ BSTR assemblyString,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load_3( 
            /* [in] */ SAFEARRAY * rawAssembly,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load_4( 
            /* [in] */ SAFEARRAY * rawAssembly,
            /* [in] */ SAFEARRAY * rawSymbolStore,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load_5( 
            /* [in] */ SAFEARRAY * rawAssembly,
            /* [in] */ SAFEARRAY * rawSymbolStore,
            /* [in] */ _Evidence *securityEvidence,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load_6( 
            /* [in] */ _AssemblyName *assemblyRef,
            /* [in] */ _Evidence *assemblySecurity,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall Load_7( 
            /* [in] */ BSTR assemblyString,
            /* [in] */ _Evidence *assemblySecurity,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual HRESULT __stdcall ExecuteAssembly( 
            /* [in] */ BSTR assemblyFile,
            /* [in] */ _Evidence *assemblySecurity,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall ExecuteAssembly_2( 
            /* [in] */ BSTR assemblyFile,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall ExecuteAssembly_3( 
            /* [in] */ BSTR assemblyFile,
            /* [in] */ _Evidence *assemblySecurity,
            /* [in] */ SAFEARRAY * args,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_FriendlyName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_BaseDirectory( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_RelativeSearchPath( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ShadowCopyFiles( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetAssemblies( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall AppendPrivatePath( 
            /* [in] */ BSTR Path) = 0;
        
        virtual HRESULT __stdcall ClearPrivatePath( void) = 0;
        
        virtual HRESULT __stdcall SetShadowCopyPath( 
            /* [in] */ BSTR s) = 0;
        
        virtual HRESULT __stdcall ClearShadowCopyPath( void) = 0;
        
        virtual HRESULT __stdcall SetCachePath( 
            /* [in] */ BSTR s) = 0;
        
        virtual HRESULT __stdcall SetData( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT data) = 0;
        
        virtual HRESULT __stdcall GetData( 
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall SetAppDomainPolicy( 
            /* [in] */ _PolicyLevel *domainPolicy) = 0;
        
        virtual HRESULT __stdcall SetThreadPrincipal( 
            /* [in] */ IPrincipal *principal) = 0;
        
        virtual HRESULT __stdcall SetPrincipalPolicy( 
            /* [in] */ PrincipalPolicy policy) = 0;
        
        virtual HRESULT __stdcall DoCallBack( 
            /* [in] */ _CrossAppDomainDelegate *theDelegate) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DynamicDirectory( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AppDomainVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AppDomain * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AppDomain * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AppDomain * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _AppDomain * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _AppDomain * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _AppDomain * This,
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _AppDomain * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _AppDomain * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _AppDomain * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _AppDomain * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _AppDomain * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *InitializeLifetimeService )( 
            _AppDomain * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *GetLifetimeService )( 
            _AppDomain * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Evidence )( 
            _AppDomain * This,
            /* [retval][out] */ _Evidence **pRetVal);
        
        HRESULT ( __stdcall *add_DomainUnload )( 
            _AppDomain * This,
            /* [in] */ _EventHandler *value);
        
        HRESULT ( __stdcall *remove_DomainUnload )( 
            _AppDomain * This,
            /* [in] */ _EventHandler *value);
        
        HRESULT ( __stdcall *add_AssemblyLoad )( 
            _AppDomain * This,
            /* [in] */ _AssemblyLoadEventHandler *value);
        
        HRESULT ( __stdcall *remove_AssemblyLoad )( 
            _AppDomain * This,
            /* [in] */ _AssemblyLoadEventHandler *value);
        
        HRESULT ( __stdcall *add_ProcessExit )( 
            _AppDomain * This,
            /* [in] */ _EventHandler *value);
        
        HRESULT ( __stdcall *remove_ProcessExit )( 
            _AppDomain * This,
            /* [in] */ _EventHandler *value);
        
        HRESULT ( __stdcall *add_TypeResolve )( 
            _AppDomain * This,
            /* [in] */ _ResolveEventHandler *value);
        
        HRESULT ( __stdcall *remove_TypeResolve )( 
            _AppDomain * This,
            /* [in] */ _ResolveEventHandler *value);
        
        HRESULT ( __stdcall *add_ResourceResolve )( 
            _AppDomain * This,
            /* [in] */ _ResolveEventHandler *value);
        
        HRESULT ( __stdcall *remove_ResourceResolve )( 
            _AppDomain * This,
            /* [in] */ _ResolveEventHandler *value);
        
        HRESULT ( __stdcall *add_AssemblyResolve )( 
            _AppDomain * This,
            /* [in] */ _ResolveEventHandler *value);
        
        HRESULT ( __stdcall *remove_AssemblyResolve )( 
            _AppDomain * This,
            /* [in] */ _ResolveEventHandler *value);
        
        HRESULT ( __stdcall *add_UnhandledException )( 
            _AppDomain * This,
            /* [in] */ _UnhandledExceptionEventHandler *value);
        
        HRESULT ( __stdcall *remove_UnhandledException )( 
            _AppDomain * This,
            /* [in] */ _UnhandledExceptionEventHandler *value);
        
        HRESULT ( __stdcall *DefineDynamicAssembly )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_2 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_3 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_4 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_5 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_6 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_7 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ _Evidence *Evidence,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_8 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _Evidence *Evidence,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *DefineDynamicAssembly_9 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *name,
            /* [in] */ AssemblyBuilderAccess access,
            /* [in] */ BSTR dir,
            /* [in] */ _Evidence *Evidence,
            /* [in] */ _PermissionSet *requiredPermissions,
            /* [in] */ _PermissionSet *optionalPermissions,
            /* [in] */ _PermissionSet *refusedPermissions,
            /* [in] */ VARIANT_BOOL IsSynchronized,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *CreateInstance )( 
            _AppDomain * This,
            /* [in] */ BSTR AssemblyName,
            /* [in] */ BSTR typeName,
            /* [retval][out] */ _ObjectHandle **pRetVal);
        
        HRESULT ( __stdcall *CreateInstanceFrom )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyFile,
            /* [in] */ BSTR typeName,
            /* [retval][out] */ _ObjectHandle **pRetVal);
        
        HRESULT ( __stdcall *CreateInstance_2 )( 
            _AppDomain * This,
            /* [in] */ BSTR AssemblyName,
            /* [in] */ BSTR typeName,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal);
        
        HRESULT ( __stdcall *CreateInstanceFrom_2 )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyFile,
            /* [in] */ BSTR typeName,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal);
        
        HRESULT ( __stdcall *CreateInstance_3 )( 
            _AppDomain * This,
            /* [in] */ BSTR AssemblyName,
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [in] */ _Evidence *securityAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal);
        
        HRESULT ( __stdcall *CreateInstanceFrom_3 )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyFile,
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [in] */ _Evidence *securityAttributes,
            /* [retval][out] */ _ObjectHandle **pRetVal);
        
        HRESULT ( __stdcall *Load )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *assemblyRef,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *Load_2 )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyString,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *Load_3 )( 
            _AppDomain * This,
            /* [in] */ SAFEARRAY * rawAssembly,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *Load_4 )( 
            _AppDomain * This,
            /* [in] */ SAFEARRAY * rawAssembly,
            /* [in] */ SAFEARRAY * rawSymbolStore,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *Load_5 )( 
            _AppDomain * This,
            /* [in] */ SAFEARRAY * rawAssembly,
            /* [in] */ SAFEARRAY * rawSymbolStore,
            /* [in] */ _Evidence *securityEvidence,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *Load_6 )( 
            _AppDomain * This,
            /* [in] */ _AssemblyName *assemblyRef,
            /* [in] */ _Evidence *assemblySecurity,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *Load_7 )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyString,
            /* [in] */ _Evidence *assemblySecurity,
            /* [retval][out] */ _Assembly **pRetVal);
        
        HRESULT ( __stdcall *ExecuteAssembly )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyFile,
            /* [in] */ _Evidence *assemblySecurity,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *ExecuteAssembly_2 )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyFile,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *ExecuteAssembly_3 )( 
            _AppDomain * This,
            /* [in] */ BSTR assemblyFile,
            /* [in] */ _Evidence *assemblySecurity,
            /* [in] */ SAFEARRAY * args,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_FriendlyName )( 
            _AppDomain * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_BaseDirectory )( 
            _AppDomain * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_RelativeSearchPath )( 
            _AppDomain * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ShadowCopyFiles )( 
            _AppDomain * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetAssemblies )( 
            _AppDomain * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *AppendPrivatePath )( 
            _AppDomain * This,
            /* [in] */ BSTR Path);
        
        HRESULT ( __stdcall *ClearPrivatePath )( 
            _AppDomain * This);
        
        HRESULT ( __stdcall *SetShadowCopyPath )( 
            _AppDomain * This,
            /* [in] */ BSTR s);
        
        HRESULT ( __stdcall *ClearShadowCopyPath )( 
            _AppDomain * This);
        
        HRESULT ( __stdcall *SetCachePath )( 
            _AppDomain * This,
            /* [in] */ BSTR s);
        
        HRESULT ( __stdcall *SetData )( 
            _AppDomain * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT data);
        
        HRESULT ( __stdcall *GetData )( 
            _AppDomain * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *SetAppDomainPolicy )( 
            _AppDomain * This,
            /* [in] */ _PolicyLevel *domainPolicy);
        
        HRESULT ( __stdcall *SetThreadPrincipal )( 
            _AppDomain * This,
            /* [in] */ IPrincipal *principal);
        
        HRESULT ( __stdcall *SetPrincipalPolicy )( 
            _AppDomain * This,
            /* [in] */ PrincipalPolicy policy);
        
        HRESULT ( __stdcall *DoCallBack )( 
            _AppDomain * This,
            /* [in] */ _CrossAppDomainDelegate *theDelegate);
        
        /* [propget] */ HRESULT ( __stdcall *get_DynamicDirectory )( 
            _AppDomain * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } _AppDomainVtbl;

    interface _AppDomain
    {
        CONST_VTBL struct _AppDomainVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AppDomain_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AppDomain_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AppDomain_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AppDomain_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _AppDomain_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AppDomain_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AppDomain_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _AppDomain_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _AppDomain_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _AppDomain_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _AppDomain_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _AppDomain_InitializeLifetimeService(This,pRetVal)	\
    ( (This)->lpVtbl -> InitializeLifetimeService(This,pRetVal) ) 

#define _AppDomain_GetLifetimeService(This,pRetVal)	\
    ( (This)->lpVtbl -> GetLifetimeService(This,pRetVal) ) 

#define _AppDomain_get_Evidence(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Evidence(This,pRetVal) ) 

#define _AppDomain_add_DomainUnload(This,value)	\
    ( (This)->lpVtbl -> add_DomainUnload(This,value) ) 

#define _AppDomain_remove_DomainUnload(This,value)	\
    ( (This)->lpVtbl -> remove_DomainUnload(This,value) ) 

#define _AppDomain_add_AssemblyLoad(This,value)	\
    ( (This)->lpVtbl -> add_AssemblyLoad(This,value) ) 

#define _AppDomain_remove_AssemblyLoad(This,value)	\
    ( (This)->lpVtbl -> remove_AssemblyLoad(This,value) ) 

#define _AppDomain_add_ProcessExit(This,value)	\
    ( (This)->lpVtbl -> add_ProcessExit(This,value) ) 

#define _AppDomain_remove_ProcessExit(This,value)	\
    ( (This)->lpVtbl -> remove_ProcessExit(This,value) ) 

#define _AppDomain_add_TypeResolve(This,value)	\
    ( (This)->lpVtbl -> add_TypeResolve(This,value) ) 

#define _AppDomain_remove_TypeResolve(This,value)	\
    ( (This)->lpVtbl -> remove_TypeResolve(This,value) ) 

#define _AppDomain_add_ResourceResolve(This,value)	\
    ( (This)->lpVtbl -> add_ResourceResolve(This,value) ) 

#define _AppDomain_remove_ResourceResolve(This,value)	\
    ( (This)->lpVtbl -> remove_ResourceResolve(This,value) ) 

#define _AppDomain_add_AssemblyResolve(This,value)	\
    ( (This)->lpVtbl -> add_AssemblyResolve(This,value) ) 

#define _AppDomain_remove_AssemblyResolve(This,value)	\
    ( (This)->lpVtbl -> remove_AssemblyResolve(This,value) ) 

#define _AppDomain_add_UnhandledException(This,value)	\
    ( (This)->lpVtbl -> add_UnhandledException(This,value) ) 

#define _AppDomain_remove_UnhandledException(This,value)	\
    ( (This)->lpVtbl -> remove_UnhandledException(This,value) ) 

#define _AppDomain_DefineDynamicAssembly(This,name,access,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly(This,name,access,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_2(This,name,access,dir,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_2(This,name,access,dir,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_3(This,name,access,Evidence,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_3(This,name,access,Evidence,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_4(This,name,access,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_4(This,name,access,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_5(This,name,access,dir,Evidence,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_5(This,name,access,dir,Evidence,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_6(This,name,access,dir,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_6(This,name,access,dir,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_7(This,name,access,Evidence,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_7(This,name,access,Evidence,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_8(This,name,access,dir,Evidence,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_8(This,name,access,dir,Evidence,requiredPermissions,optionalPermissions,refusedPermissions,pRetVal) ) 

#define _AppDomain_DefineDynamicAssembly_9(This,name,access,dir,Evidence,requiredPermissions,optionalPermissions,refusedPermissions,IsSynchronized,pRetVal)	\
    ( (This)->lpVtbl -> DefineDynamicAssembly_9(This,name,access,dir,Evidence,requiredPermissions,optionalPermissions,refusedPermissions,IsSynchronized,pRetVal) ) 

#define _AppDomain_CreateInstance(This,AssemblyName,typeName,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance(This,AssemblyName,typeName,pRetVal) ) 

#define _AppDomain_CreateInstanceFrom(This,assemblyFile,typeName,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstanceFrom(This,assemblyFile,typeName,pRetVal) ) 

#define _AppDomain_CreateInstance_2(This,AssemblyName,typeName,activationAttributes,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance_2(This,AssemblyName,typeName,activationAttributes,pRetVal) ) 

#define _AppDomain_CreateInstanceFrom_2(This,assemblyFile,typeName,activationAttributes,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstanceFrom_2(This,assemblyFile,typeName,activationAttributes,pRetVal) ) 

#define _AppDomain_CreateInstance_3(This,AssemblyName,typeName,ignoreCase,bindingAttr,Binder,args,culture,activationAttributes,securityAttributes,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance_3(This,AssemblyName,typeName,ignoreCase,bindingAttr,Binder,args,culture,activationAttributes,securityAttributes,pRetVal) ) 

#define _AppDomain_CreateInstanceFrom_3(This,assemblyFile,typeName,ignoreCase,bindingAttr,Binder,args,culture,activationAttributes,securityAttributes,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstanceFrom_3(This,assemblyFile,typeName,ignoreCase,bindingAttr,Binder,args,culture,activationAttributes,securityAttributes,pRetVal) ) 

#define _AppDomain_Load(This,assemblyRef,pRetVal)	\
    ( (This)->lpVtbl -> Load(This,assemblyRef,pRetVal) ) 

#define _AppDomain_Load_2(This,assemblyString,pRetVal)	\
    ( (This)->lpVtbl -> Load_2(This,assemblyString,pRetVal) ) 

#define _AppDomain_Load_3(This,rawAssembly,pRetVal)	\
    ( (This)->lpVtbl -> Load_3(This,rawAssembly,pRetVal) ) 

#define _AppDomain_Load_4(This,rawAssembly,rawSymbolStore,pRetVal)	\
    ( (This)->lpVtbl -> Load_4(This,rawAssembly,rawSymbolStore,pRetVal) ) 

#define _AppDomain_Load_5(This,rawAssembly,rawSymbolStore,securityEvidence,pRetVal)	\
    ( (This)->lpVtbl -> Load_5(This,rawAssembly,rawSymbolStore,securityEvidence,pRetVal) ) 

#define _AppDomain_Load_6(This,assemblyRef,assemblySecurity,pRetVal)	\
    ( (This)->lpVtbl -> Load_6(This,assemblyRef,assemblySecurity,pRetVal) ) 

#define _AppDomain_Load_7(This,assemblyString,assemblySecurity,pRetVal)	\
    ( (This)->lpVtbl -> Load_7(This,assemblyString,assemblySecurity,pRetVal) ) 

#define _AppDomain_ExecuteAssembly(This,assemblyFile,assemblySecurity,pRetVal)	\
    ( (This)->lpVtbl -> ExecuteAssembly(This,assemblyFile,assemblySecurity,pRetVal) ) 

#define _AppDomain_ExecuteAssembly_2(This,assemblyFile,pRetVal)	\
    ( (This)->lpVtbl -> ExecuteAssembly_2(This,assemblyFile,pRetVal) ) 

#define _AppDomain_ExecuteAssembly_3(This,assemblyFile,assemblySecurity,args,pRetVal)	\
    ( (This)->lpVtbl -> ExecuteAssembly_3(This,assemblyFile,assemblySecurity,args,pRetVal) ) 

#define _AppDomain_get_FriendlyName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FriendlyName(This,pRetVal) ) 

#define _AppDomain_get_BaseDirectory(This,pRetVal)	\
    ( (This)->lpVtbl -> get_BaseDirectory(This,pRetVal) ) 

#define _AppDomain_get_RelativeSearchPath(This,pRetVal)	\
    ( (This)->lpVtbl -> get_RelativeSearchPath(This,pRetVal) ) 

#define _AppDomain_get_ShadowCopyFiles(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ShadowCopyFiles(This,pRetVal) ) 

#define _AppDomain_GetAssemblies(This,pRetVal)	\
    ( (This)->lpVtbl -> GetAssemblies(This,pRetVal) ) 

#define _AppDomain_AppendPrivatePath(This,Path)	\
    ( (This)->lpVtbl -> AppendPrivatePath(This,Path) ) 

#define _AppDomain_ClearPrivatePath(This)	\
    ( (This)->lpVtbl -> ClearPrivatePath(This) ) 

#define _AppDomain_SetShadowCopyPath(This,s)	\
    ( (This)->lpVtbl -> SetShadowCopyPath(This,s) ) 

#define _AppDomain_ClearShadowCopyPath(This)	\
    ( (This)->lpVtbl -> ClearShadowCopyPath(This) ) 

#define _AppDomain_SetCachePath(This,s)	\
    ( (This)->lpVtbl -> SetCachePath(This,s) ) 

#define _AppDomain_SetData(This,name,data)	\
    ( (This)->lpVtbl -> SetData(This,name,data) ) 

#define _AppDomain_GetData(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetData(This,name,pRetVal) ) 

#define _AppDomain_SetAppDomainPolicy(This,domainPolicy)	\
    ( (This)->lpVtbl -> SetAppDomainPolicy(This,domainPolicy) ) 

#define _AppDomain_SetThreadPrincipal(This,principal)	\
    ( (This)->lpVtbl -> SetThreadPrincipal(This,principal) ) 

#define _AppDomain_SetPrincipalPolicy(This,policy)	\
    ( (This)->lpVtbl -> SetPrincipalPolicy(This,policy) ) 

#define _AppDomain_DoCallBack(This,theDelegate)	\
    ( (This)->lpVtbl -> DoCallBack(This,theDelegate) ) 

#define _AppDomain_get_DynamicDirectory(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DynamicDirectory(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AppDomain_INTERFACE_DEFINED__ */


#ifndef __IEvidenceFactory_INTERFACE_DEFINED__
#define __IEvidenceFactory_INTERFACE_DEFINED__

/* interface IEvidenceFactory */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IEvidenceFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35A8F3AC-FE28-360F-A0C0-9A4D50C4682A")
    IEvidenceFactory : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Evidence( 
            /* [retval][out] */ _Evidence **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IEvidenceFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEvidenceFactory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEvidenceFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEvidenceFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IEvidenceFactory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IEvidenceFactory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IEvidenceFactory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IEvidenceFactory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Evidence )( 
            IEvidenceFactory * This,
            /* [retval][out] */ _Evidence **pRetVal);
        
        END_INTERFACE
    } IEvidenceFactoryVtbl;

    interface IEvidenceFactory
    {
        CONST_VTBL struct IEvidenceFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEvidenceFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEvidenceFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEvidenceFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEvidenceFactory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IEvidenceFactory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IEvidenceFactory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IEvidenceFactory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IEvidenceFactory_get_Evidence(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Evidence(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEvidenceFactory_INTERFACE_DEFINED__ */


#ifndef __IAppDomainSetup_INTERFACE_DEFINED__
#define __IAppDomainSetup_INTERFACE_DEFINED__

/* interface IAppDomainSetup */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID_IAppDomainSetup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("27FFF232-A7A8-40DD-8D4A-734AD59FCD41")
    IAppDomainSetup : public IUnknown
    {
    public:
        virtual /* [propget] */ HRESULT __stdcall get_ApplicationBase( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_ApplicationBase( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ApplicationName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_ApplicationName( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_CachePath( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_CachePath( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ConfigurationFile( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_ConfigurationFile( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DynamicBase( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_DynamicBase( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_LicenseFile( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_LicenseFile( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_PrivateBinPath( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_PrivateBinPath( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_PrivateBinPathProbe( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_PrivateBinPathProbe( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ShadowCopyDirectories( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_ShadowCopyDirectories( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ShadowCopyFiles( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput] */ HRESULT __stdcall put_ShadowCopyFiles( 
            /* [in] */ BSTR pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAppDomainSetupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAppDomainSetup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAppDomainSetup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAppDomainSetup * This);
        
        /* [propget] */ HRESULT ( __stdcall *get_ApplicationBase )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_ApplicationBase )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ApplicationName )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_ApplicationName )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_CachePath )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_CachePath )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ConfigurationFile )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_ConfigurationFile )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DynamicBase )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_DynamicBase )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_LicenseFile )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_LicenseFile )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_PrivateBinPath )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_PrivateBinPath )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_PrivateBinPathProbe )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_PrivateBinPathProbe )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ShadowCopyDirectories )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_ShadowCopyDirectories )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ShadowCopyFiles )( 
            IAppDomainSetup * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput] */ HRESULT ( __stdcall *put_ShadowCopyFiles )( 
            IAppDomainSetup * This,
            /* [in] */ BSTR pRetVal);
        
        END_INTERFACE
    } IAppDomainSetupVtbl;

    interface IAppDomainSetup
    {
        CONST_VTBL struct IAppDomainSetupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAppDomainSetup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAppDomainSetup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAppDomainSetup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAppDomainSetup_get_ApplicationBase(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ApplicationBase(This,pRetVal) ) 

#define IAppDomainSetup_put_ApplicationBase(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ApplicationBase(This,pRetVal) ) 

#define IAppDomainSetup_get_ApplicationName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ApplicationName(This,pRetVal) ) 

#define IAppDomainSetup_put_ApplicationName(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ApplicationName(This,pRetVal) ) 

#define IAppDomainSetup_get_CachePath(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CachePath(This,pRetVal) ) 

#define IAppDomainSetup_put_CachePath(This,pRetVal)	\
    ( (This)->lpVtbl -> put_CachePath(This,pRetVal) ) 

#define IAppDomainSetup_get_ConfigurationFile(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ConfigurationFile(This,pRetVal) ) 

#define IAppDomainSetup_put_ConfigurationFile(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ConfigurationFile(This,pRetVal) ) 

#define IAppDomainSetup_get_DynamicBase(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DynamicBase(This,pRetVal) ) 

#define IAppDomainSetup_put_DynamicBase(This,pRetVal)	\
    ( (This)->lpVtbl -> put_DynamicBase(This,pRetVal) ) 

#define IAppDomainSetup_get_LicenseFile(This,pRetVal)	\
    ( (This)->lpVtbl -> get_LicenseFile(This,pRetVal) ) 

#define IAppDomainSetup_put_LicenseFile(This,pRetVal)	\
    ( (This)->lpVtbl -> put_LicenseFile(This,pRetVal) ) 

#define IAppDomainSetup_get_PrivateBinPath(This,pRetVal)	\
    ( (This)->lpVtbl -> get_PrivateBinPath(This,pRetVal) ) 

#define IAppDomainSetup_put_PrivateBinPath(This,pRetVal)	\
    ( (This)->lpVtbl -> put_PrivateBinPath(This,pRetVal) ) 

#define IAppDomainSetup_get_PrivateBinPathProbe(This,pRetVal)	\
    ( (This)->lpVtbl -> get_PrivateBinPathProbe(This,pRetVal) ) 

#define IAppDomainSetup_put_PrivateBinPathProbe(This,pRetVal)	\
    ( (This)->lpVtbl -> put_PrivateBinPathProbe(This,pRetVal) ) 

#define IAppDomainSetup_get_ShadowCopyDirectories(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ShadowCopyDirectories(This,pRetVal) ) 

#define IAppDomainSetup_put_ShadowCopyDirectories(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ShadowCopyDirectories(This,pRetVal) ) 

#define IAppDomainSetup_get_ShadowCopyFiles(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ShadowCopyFiles(This,pRetVal) ) 

#define IAppDomainSetup_put_ShadowCopyFiles(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ShadowCopyFiles(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAppDomainSetup_INTERFACE_DEFINED__ */


#ifndef ___Attribute_INTERFACE_DEFINED__
#define ___Attribute_INTERFACE_DEFINED__

/* interface _Attribute */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__Attribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("917B14D0-2D9E-38B8-92A9-381ACF52F7C0")
    _Attribute : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Attribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Attribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Attribute * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _Attribute * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _Attribute * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _Attribute * This,
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _Attribute * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr);
        
        END_INTERFACE
    } _AttributeVtbl;

    interface _Attribute
    {
        CONST_VTBL struct _AttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Attribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Attribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Attribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Attribute_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _Attribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Attribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Attribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Attribute_INTERFACE_DEFINED__ */


#ifndef ___Thread_INTERFACE_DEFINED__
#define ___Thread_INTERFACE_DEFINED__

/* interface _Thread */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__Thread;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C281C7F1-4AA9-3517-961A-463CFED57E75")
    _Thread : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ThreadVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Thread * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Thread * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Thread * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _Thread * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _Thread * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _Thread * This,
            /* [in] */ GUID *riid,
            /* [in] */ INT64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ INT64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _Thread * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ GUID *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ INT64 pDispParams,
            /* [in] */ INT64 pVarResult,
            /* [in] */ INT64 pExcepInfo,
            /* [in] */ INT64 puArgErr);
        
        END_INTERFACE
    } _ThreadVtbl;

    interface _Thread
    {
        CONST_VTBL struct _ThreadVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Thread_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Thread_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Thread_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Thread_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _Thread_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Thread_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Thread_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Thread_INTERFACE_DEFINED__ */


#ifndef __IObjectReference_INTERFACE_DEFINED__
#define __IObjectReference_INTERFACE_DEFINED__

/* interface IObjectReference */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IObjectReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6E70ED5F-0439-38CE-83BB-860F1421F29F")
    IObjectReference : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetRealObject( 
            /* [in] */ StreamingContext Context,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IObjectReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IObjectReference * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IObjectReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IObjectReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IObjectReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IObjectReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IObjectReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IObjectReference * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRealObject )( 
            IObjectReference * This,
            /* [in] */ StreamingContext Context,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } IObjectReferenceVtbl;

    interface IObjectReference
    {
        CONST_VTBL struct IObjectReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IObjectReference_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IObjectReference_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IObjectReference_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IObjectReference_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IObjectReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IObjectReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IObjectReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IObjectReference_GetRealObject(This,Context,pRetVal)	\
    ( (This)->lpVtbl -> GetRealObject(This,Context,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IObjectReference_INTERFACE_DEFINED__ */


#ifndef __IAsyncResult_INTERFACE_DEFINED__
#define __IAsyncResult_INTERFACE_DEFINED__

/* interface IAsyncResult */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IAsyncResult;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11AB34E7-0176-3C9E-9EFE-197858400A3D")
    IAsyncResult : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsCompleted( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AsyncWaitHandle( 
            /* [retval][out] */ _WaitHandle **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AsyncState( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CompletedSynchronously( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IAsyncResultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IAsyncResult * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IAsyncResult * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IAsyncResult * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IAsyncResult * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IAsyncResult * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IAsyncResult * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IAsyncResult * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsCompleted )( 
            IAsyncResult * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AsyncWaitHandle )( 
            IAsyncResult * This,
            /* [retval][out] */ _WaitHandle **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AsyncState )( 
            IAsyncResult * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CompletedSynchronously )( 
            IAsyncResult * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IAsyncResultVtbl;

    interface IAsyncResult
    {
        CONST_VTBL struct IAsyncResultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IAsyncResult_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IAsyncResult_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IAsyncResult_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IAsyncResult_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IAsyncResult_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IAsyncResult_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IAsyncResult_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IAsyncResult_get_IsCompleted(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsCompleted(This,pRetVal) ) 

#define IAsyncResult_get_AsyncWaitHandle(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AsyncWaitHandle(This,pRetVal) ) 

#define IAsyncResult_get_AsyncState(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AsyncState(This,pRetVal) ) 

#define IAsyncResult_get_CompletedSynchronously(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CompletedSynchronously(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IAsyncResult_INTERFACE_DEFINED__ */


#ifndef __ICustomFormatter_INTERFACE_DEFINED__
#define __ICustomFormatter_INTERFACE_DEFINED__

/* interface ICustomFormatter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICustomFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2B130940-CA5E-3406-8385-E259E68AB039")
    ICustomFormatter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE format( 
            /* [in] */ BSTR format,
            /* [in] */ VARIANT arg,
            /* [in] */ IFormatProvider *formatProvider,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICustomFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICustomFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICustomFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICustomFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICustomFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICustomFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICustomFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICustomFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *format )( 
            ICustomFormatter * This,
            /* [in] */ BSTR format,
            /* [in] */ VARIANT arg,
            /* [in] */ IFormatProvider *formatProvider,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } ICustomFormatterVtbl;

    interface ICustomFormatter
    {
        CONST_VTBL struct ICustomFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICustomFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICustomFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICustomFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICustomFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICustomFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICustomFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICustomFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICustomFormatter_format(This,format,arg,formatProvider,pRetVal)	\
    ( (This)->lpVtbl -> format(This,format,arg,formatProvider,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICustomFormatter_INTERFACE_DEFINED__ */


#ifndef __IFormatProvider_INTERFACE_DEFINED__
#define __IFormatProvider_INTERFACE_DEFINED__

/* interface IFormatProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IFormatProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C8CB1DED-2814-396A-9CC0-473CA49779CC")
    IFormatProvider : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetFormat( 
            /* [in] */ _Type *formatType,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IFormatProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFormatProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFormatProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFormatProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFormatProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFormatProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFormatProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFormatProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetFormat )( 
            IFormatProvider * This,
            /* [in] */ _Type *formatType,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } IFormatProviderVtbl;

    interface IFormatProvider
    {
        CONST_VTBL struct IFormatProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFormatProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFormatProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFormatProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFormatProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFormatProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFormatProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFormatProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFormatProvider_GetFormat(This,formatType,pRetVal)	\
    ( (This)->lpVtbl -> GetFormat(This,formatType,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFormatProvider_INTERFACE_DEFINED__ */


#ifndef __ICustomAttributeProvider_INTERFACE_DEFINED__
#define __ICustomAttributeProvider_INTERFACE_DEFINED__

/* interface ICustomAttributeProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICustomAttributeProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9B91146-D6C2-3A62-8159-C2D1794CDEB0")
    ICustomAttributeProvider : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICustomAttributeProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICustomAttributeProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICustomAttributeProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICustomAttributeProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICustomAttributeProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICustomAttributeProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICustomAttributeProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICustomAttributeProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomAttributes )( 
            ICustomAttributeProvider * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomAttributes_2 )( 
            ICustomAttributeProvider * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDefined )( 
            ICustomAttributeProvider * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } ICustomAttributeProviderVtbl;

    interface ICustomAttributeProvider
    {
        CONST_VTBL struct ICustomAttributeProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICustomAttributeProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICustomAttributeProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICustomAttributeProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICustomAttributeProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICustomAttributeProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICustomAttributeProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICustomAttributeProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICustomAttributeProvider_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define ICustomAttributeProvider_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define ICustomAttributeProvider_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICustomAttributeProvider_INTERFACE_DEFINED__ */


#ifndef ___MemberInfo_INTERFACE_DEFINED__
#define ___MemberInfo_INTERFACE_DEFINED__

/* interface _MemberInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__MemberInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7102FA9-CABB-3A74-A6DA-B4567EF1B079")
    _MemberInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MemberInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MemberInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MemberInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MemberInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _MemberInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _MemberInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _MemberInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _MemberInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _MemberInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _MemberInfo * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _MemberInfo * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _MemberInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _MemberInfo * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _MemberInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _MemberInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _MemberInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _MemberInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _MemberInfo * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _MemberInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } _MemberInfoVtbl;

    interface _MemberInfo
    {
        CONST_VTBL struct _MemberInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MemberInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MemberInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MemberInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MemberInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _MemberInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MemberInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MemberInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _MemberInfo_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _MemberInfo_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _MemberInfo_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _MemberInfo_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _MemberInfo_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _MemberInfo_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _MemberInfo_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _MemberInfo_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _MemberInfo_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _MemberInfo_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _MemberInfo_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MemberInfo_INTERFACE_DEFINED__ */


#ifndef ___Type_INTERFACE_DEFINED__
#define ___Type_INTERFACE_DEFINED__

/* interface _Type */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__Type;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")
    _Type : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Guid( 
            /* [retval][out] */ Guid *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Module( 
            /* [retval][out] */ _Module **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Assembly( 
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_TypeHandle( 
            /* [retval][out] */ RuntimeTypeHandle *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_FullName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Namespace( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_AssemblyQualifiedName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetArrayRank( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_BaseType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetConstructors( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetInterface( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetInterfaces( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall FindInterfaces( 
            /* [in] */ _TypeFilter *filter,
            /* [in] */ VARIANT filterCriteria,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetEvent( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _EventInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetEvents( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetEvents_2( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetNestedTypes( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetNestedType( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMember( 
            /* [in] */ BSTR name,
            /* [in] */ MemberTypes Type,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetDefaultMembers( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall FindMembers( 
            /* [in] */ MemberTypes MemberType,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _MemberFilter *filter,
            /* [in] */ VARIANT filterCriteria,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetElementType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall IsSubclassOf( 
            /* [in] */ _Type *c,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsInstanceOfType( 
            /* [in] */ VARIANT o,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsAssignableFrom( 
            /* [in] */ _Type *c,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetInterfaceMap( 
            /* [in] */ _Type *interfaceType,
            /* [retval][out] */ InterfaceMapping *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethod( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethod_2( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethods( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetField( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _FieldInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetFields( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty_2( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperties( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMember_2( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMembers( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall InvokeMember( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ SAFEARRAY * modifiers,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * namedParameters,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_UnderlyingSystemType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall InvokeMember_2( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall InvokeMember_3( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetConstructor( 
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ CallingConventions callConvention,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _ConstructorInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetConstructor_2( 
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _ConstructorInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetConstructor_3( 
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _ConstructorInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetConstructors_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_TypeInitializer( 
            /* [retval][out] */ _ConstructorInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethod_3( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ CallingConventions callConvention,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethod_4( 
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethod_5( 
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethod_6( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethods_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetField_2( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _FieldInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetFields_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetInterface_2( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetEvent_2( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _EventInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty_3( 
            /* [in] */ BSTR name,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty_4( 
            /* [in] */ BSTR name,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty_5( 
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty_6( 
            /* [in] */ BSTR name,
            /* [in] */ _Type *returnType,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperty_7( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetProperties_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetNestedTypes_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetNestedType_2( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMember_3( 
            /* [in] */ BSTR name,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMembers_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ TypeAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNotPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNestedPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNestedPrivate( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNestedFamily( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNestedAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNestedFamANDAssem( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNestedFamORAssem( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAutoLayout( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsLayoutSequential( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsExplicitLayout( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsClass( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsInterface( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsValueType( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAbstract( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSealed( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsEnum( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsImport( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSerializable( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAnsiClass( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsUnicodeClass( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAutoClass( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsArray( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsByRef( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPointer( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPrimitive( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsCOMObject( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_HasElementType( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsContextful( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsMarshalByRef( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals_2( 
            /* [in] */ _Type *o,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Type * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Type * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Type * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _Type * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _Type * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _Type * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _Type * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _Type * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _Type * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _Type * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _Type * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _Type * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _Type * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _Type * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _Type * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _Type * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _Type * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _Type * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Guid )( 
            _Type * This,
            /* [retval][out] */ Guid *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Module )( 
            _Type * This,
            /* [retval][out] */ _Module **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Assembly )( 
            _Type * This,
            /* [retval][out] */ _Assembly **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_TypeHandle )( 
            _Type * This,
            /* [retval][out] */ RuntimeTypeHandle *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_FullName )( 
            _Type * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Namespace )( 
            _Type * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_AssemblyQualifiedName )( 
            _Type * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *GetArrayRank )( 
            _Type * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_BaseType )( 
            _Type * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetConstructors )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetInterface )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetInterfaces )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *FindInterfaces )( 
            _Type * This,
            /* [in] */ _TypeFilter *filter,
            /* [in] */ VARIANT filterCriteria,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetEvent )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _EventInfo **pRetVal);
        
        HRESULT ( __stdcall *GetEvents )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetEvents_2 )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetNestedTypes )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetNestedType )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetMember )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ MemberTypes Type,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetDefaultMembers )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *FindMembers )( 
            _Type * This,
            /* [in] */ MemberTypes MemberType,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _MemberFilter *filter,
            /* [in] */ VARIANT filterCriteria,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetElementType )( 
            _Type * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *IsSubclassOf )( 
            _Type * This,
            /* [in] */ _Type *c,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *IsInstanceOfType )( 
            _Type * This,
            /* [in] */ VARIANT o,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *IsAssignableFrom )( 
            _Type * This,
            /* [in] */ _Type *c,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetInterfaceMap )( 
            _Type * This,
            /* [in] */ _Type *interfaceType,
            /* [retval][out] */ InterfaceMapping *pRetVal);
        
        HRESULT ( __stdcall *GetMethod )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethod_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethods )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetField )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _FieldInfo **pRetVal);
        
        HRESULT ( __stdcall *GetFields )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetProperty )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperty_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperties )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetMember_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetMembers )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *InvokeMember )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ SAFEARRAY * modifiers,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * namedParameters,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_UnderlyingSystemType )( 
            _Type * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *InvokeMember_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *InvokeMember_3 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *GetConstructor )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ CallingConventions callConvention,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _ConstructorInfo **pRetVal);
        
        HRESULT ( __stdcall *GetConstructor_2 )( 
            _Type * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _ConstructorInfo **pRetVal);
        
        HRESULT ( __stdcall *GetConstructor_3 )( 
            _Type * This,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _ConstructorInfo **pRetVal);
        
        HRESULT ( __stdcall *GetConstructors_2 )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_TypeInitializer )( 
            _Type * This,
            /* [retval][out] */ _ConstructorInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethod_3 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ CallingConventions callConvention,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethod_4 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethod_5 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethod_6 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetMethods_2 )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetField_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _FieldInfo **pRetVal);
        
        HRESULT ( __stdcall *GetFields_2 )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetInterface_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetEvent_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _EventInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperty_3 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperty_4 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperty_5 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * types,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperty_6 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [in] */ _Type *returnType,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperty_7 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        HRESULT ( __stdcall *GetProperties_2 )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetNestedTypes_2 )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetNestedType_2 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetMember_3 )( 
            _Type * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetMembers_2 )( 
            _Type * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _Type * This,
            /* [retval][out] */ TypeAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNotPublic )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPublic )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNestedPublic )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNestedPrivate )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNestedFamily )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNestedAssembly )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNestedFamANDAssem )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNestedFamORAssem )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAutoLayout )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsLayoutSequential )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsExplicitLayout )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsClass )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsInterface )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsValueType )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAbstract )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSealed )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsEnum )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsImport )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSerializable )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAnsiClass )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsUnicodeClass )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAutoClass )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsArray )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsByRef )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPointer )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPrimitive )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsCOMObject )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_HasElementType )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsContextful )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsMarshalByRef )( 
            _Type * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *Equals_2 )( 
            _Type * This,
            /* [in] */ _Type *o,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } _TypeVtbl;

    interface _Type
    {
        CONST_VTBL struct _TypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Type_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Type_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Type_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Type_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _Type_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Type_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Type_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _Type_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _Type_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _Type_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _Type_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _Type_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _Type_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _Type_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _Type_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _Type_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _Type_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _Type_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _Type_get_Guid(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Guid(This,pRetVal) ) 

#define _Type_get_Module(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Module(This,pRetVal) ) 

#define _Type_get_Assembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Assembly(This,pRetVal) ) 

#define _Type_get_TypeHandle(This,pRetVal)	\
    ( (This)->lpVtbl -> get_TypeHandle(This,pRetVal) ) 

#define _Type_get_FullName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pRetVal) ) 

#define _Type_get_Namespace(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Namespace(This,pRetVal) ) 

#define _Type_get_AssemblyQualifiedName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AssemblyQualifiedName(This,pRetVal) ) 

#define _Type_GetArrayRank(This,pRetVal)	\
    ( (This)->lpVtbl -> GetArrayRank(This,pRetVal) ) 

#define _Type_get_BaseType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_BaseType(This,pRetVal) ) 

#define _Type_GetConstructors(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetConstructors(This,bindingAttr,pRetVal) ) 

#define _Type_GetInterface(This,name,ignoreCase,pRetVal)	\
    ( (This)->lpVtbl -> GetInterface(This,name,ignoreCase,pRetVal) ) 

#define _Type_GetInterfaces(This,pRetVal)	\
    ( (This)->lpVtbl -> GetInterfaces(This,pRetVal) ) 

#define _Type_FindInterfaces(This,filter,filterCriteria,pRetVal)	\
    ( (This)->lpVtbl -> FindInterfaces(This,filter,filterCriteria,pRetVal) ) 

#define _Type_GetEvent(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetEvent(This,name,bindingAttr,pRetVal) ) 

#define _Type_GetEvents(This,pRetVal)	\
    ( (This)->lpVtbl -> GetEvents(This,pRetVal) ) 

#define _Type_GetEvents_2(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetEvents_2(This,bindingAttr,pRetVal) ) 

#define _Type_GetNestedTypes(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetNestedTypes(This,bindingAttr,pRetVal) ) 

#define _Type_GetNestedType(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetNestedType(This,name,bindingAttr,pRetVal) ) 

#define _Type_GetMember(This,name,Type,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMember(This,name,Type,bindingAttr,pRetVal) ) 

#define _Type_GetDefaultMembers(This,pRetVal)	\
    ( (This)->lpVtbl -> GetDefaultMembers(This,pRetVal) ) 

#define _Type_FindMembers(This,MemberType,bindingAttr,filter,filterCriteria,pRetVal)	\
    ( (This)->lpVtbl -> FindMembers(This,MemberType,bindingAttr,filter,filterCriteria,pRetVal) ) 

#define _Type_GetElementType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetElementType(This,pRetVal) ) 

#define _Type_IsSubclassOf(This,c,pRetVal)	\
    ( (This)->lpVtbl -> IsSubclassOf(This,c,pRetVal) ) 

#define _Type_IsInstanceOfType(This,o,pRetVal)	\
    ( (This)->lpVtbl -> IsInstanceOfType(This,o,pRetVal) ) 

#define _Type_IsAssignableFrom(This,c,pRetVal)	\
    ( (This)->lpVtbl -> IsAssignableFrom(This,c,pRetVal) ) 

#define _Type_GetInterfaceMap(This,interfaceType,pRetVal)	\
    ( (This)->lpVtbl -> GetInterfaceMap(This,interfaceType,pRetVal) ) 

#define _Type_GetMethod(This,name,bindingAttr,Binder,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod(This,name,bindingAttr,Binder,types,modifiers,pRetVal) ) 

#define _Type_GetMethod_2(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_2(This,name,bindingAttr,pRetVal) ) 

#define _Type_GetMethods(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMethods(This,bindingAttr,pRetVal) ) 

#define _Type_GetField(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetField(This,name,bindingAttr,pRetVal) ) 

#define _Type_GetFields(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetFields(This,bindingAttr,pRetVal) ) 

#define _Type_GetProperty(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty(This,name,bindingAttr,pRetVal) ) 

#define _Type_GetProperty_2(This,name,bindingAttr,Binder,returnType,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_2(This,name,bindingAttr,Binder,returnType,types,modifiers,pRetVal) ) 

#define _Type_GetProperties(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetProperties(This,bindingAttr,pRetVal) ) 

#define _Type_GetMember_2(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMember_2(This,name,bindingAttr,pRetVal) ) 

#define _Type_GetMembers(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMembers(This,bindingAttr,pRetVal) ) 

#define _Type_InvokeMember(This,name,invokeAttr,Binder,Target,args,modifiers,culture,namedParameters,pRetVal)	\
    ( (This)->lpVtbl -> InvokeMember(This,name,invokeAttr,Binder,Target,args,modifiers,culture,namedParameters,pRetVal) ) 

#define _Type_get_UnderlyingSystemType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_UnderlyingSystemType(This,pRetVal) ) 

#define _Type_InvokeMember_2(This,name,invokeAttr,Binder,Target,args,culture,pRetVal)	\
    ( (This)->lpVtbl -> InvokeMember_2(This,name,invokeAttr,Binder,Target,args,culture,pRetVal) ) 

#define _Type_InvokeMember_3(This,name,invokeAttr,Binder,Target,args,pRetVal)	\
    ( (This)->lpVtbl -> InvokeMember_3(This,name,invokeAttr,Binder,Target,args,pRetVal) ) 

#define _Type_GetConstructor(This,bindingAttr,Binder,callConvention,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetConstructor(This,bindingAttr,Binder,callConvention,types,modifiers,pRetVal) ) 

#define _Type_GetConstructor_2(This,bindingAttr,Binder,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetConstructor_2(This,bindingAttr,Binder,types,modifiers,pRetVal) ) 

#define _Type_GetConstructor_3(This,types,pRetVal)	\
    ( (This)->lpVtbl -> GetConstructor_3(This,types,pRetVal) ) 

#define _Type_GetConstructors_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetConstructors_2(This,pRetVal) ) 

#define _Type_get_TypeInitializer(This,pRetVal)	\
    ( (This)->lpVtbl -> get_TypeInitializer(This,pRetVal) ) 

#define _Type_GetMethod_3(This,name,bindingAttr,Binder,callConvention,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_3(This,name,bindingAttr,Binder,callConvention,types,modifiers,pRetVal) ) 

#define _Type_GetMethod_4(This,name,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_4(This,name,types,modifiers,pRetVal) ) 

#define _Type_GetMethod_5(This,name,types,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_5(This,name,types,pRetVal) ) 

#define _Type_GetMethod_6(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_6(This,name,pRetVal) ) 

#define _Type_GetMethods_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetMethods_2(This,pRetVal) ) 

#define _Type_GetField_2(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetField_2(This,name,pRetVal) ) 

#define _Type_GetFields_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetFields_2(This,pRetVal) ) 

#define _Type_GetInterface_2(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetInterface_2(This,name,pRetVal) ) 

#define _Type_GetEvent_2(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetEvent_2(This,name,pRetVal) ) 

#define _Type_GetProperty_3(This,name,returnType,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_3(This,name,returnType,types,modifiers,pRetVal) ) 

#define _Type_GetProperty_4(This,name,returnType,types,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_4(This,name,returnType,types,pRetVal) ) 

#define _Type_GetProperty_5(This,name,types,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_5(This,name,types,pRetVal) ) 

#define _Type_GetProperty_6(This,name,returnType,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_6(This,name,returnType,pRetVal) ) 

#define _Type_GetProperty_7(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_7(This,name,pRetVal) ) 

#define _Type_GetProperties_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetProperties_2(This,pRetVal) ) 

#define _Type_GetNestedTypes_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNestedTypes_2(This,pRetVal) ) 

#define _Type_GetNestedType_2(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetNestedType_2(This,name,pRetVal) ) 

#define _Type_GetMember_3(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetMember_3(This,name,pRetVal) ) 

#define _Type_GetMembers_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetMembers_2(This,pRetVal) ) 

#define _Type_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _Type_get_IsNotPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNotPublic(This,pRetVal) ) 

#define _Type_get_IsPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPublic(This,pRetVal) ) 

#define _Type_get_IsNestedPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNestedPublic(This,pRetVal) ) 

#define _Type_get_IsNestedPrivate(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNestedPrivate(This,pRetVal) ) 

#define _Type_get_IsNestedFamily(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNestedFamily(This,pRetVal) ) 

#define _Type_get_IsNestedAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNestedAssembly(This,pRetVal) ) 

#define _Type_get_IsNestedFamANDAssem(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNestedFamANDAssem(This,pRetVal) ) 

#define _Type_get_IsNestedFamORAssem(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNestedFamORAssem(This,pRetVal) ) 

#define _Type_get_IsAutoLayout(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAutoLayout(This,pRetVal) ) 

#define _Type_get_IsLayoutSequential(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsLayoutSequential(This,pRetVal) ) 

#define _Type_get_IsExplicitLayout(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsExplicitLayout(This,pRetVal) ) 

#define _Type_get_IsClass(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsClass(This,pRetVal) ) 

#define _Type_get_IsInterface(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsInterface(This,pRetVal) ) 

#define _Type_get_IsValueType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsValueType(This,pRetVal) ) 

#define _Type_get_IsAbstract(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAbstract(This,pRetVal) ) 

#define _Type_get_IsSealed(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSealed(This,pRetVal) ) 

#define _Type_get_IsEnum(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsEnum(This,pRetVal) ) 

#define _Type_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#define _Type_get_IsImport(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsImport(This,pRetVal) ) 

#define _Type_get_IsSerializable(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSerializable(This,pRetVal) ) 

#define _Type_get_IsAnsiClass(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAnsiClass(This,pRetVal) ) 

#define _Type_get_IsUnicodeClass(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsUnicodeClass(This,pRetVal) ) 

#define _Type_get_IsAutoClass(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAutoClass(This,pRetVal) ) 

#define _Type_get_IsArray(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsArray(This,pRetVal) ) 

#define _Type_get_IsByRef(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsByRef(This,pRetVal) ) 

#define _Type_get_IsPointer(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPointer(This,pRetVal) ) 

#define _Type_get_IsPrimitive(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPrimitive(This,pRetVal) ) 

#define _Type_get_IsCOMObject(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsCOMObject(This,pRetVal) ) 

#define _Type_get_HasElementType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_HasElementType(This,pRetVal) ) 

#define _Type_get_IsContextful(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsContextful(This,pRetVal) ) 

#define _Type_get_IsMarshalByRef(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsMarshalByRef(This,pRetVal) ) 

#define _Type_Equals_2(This,o,pRetVal)	\
    ( (This)->lpVtbl -> Equals_2(This,o,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Type_INTERFACE_DEFINED__ */


#ifndef __IReflect_INTERFACE_DEFINED__
#define __IReflect_INTERFACE_DEFINED__

/* interface IReflect */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IReflect;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AFBF15E5-C37C-11D2-B88E-00A0C9B471B8")
    IReflect : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMethod( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetMethod_2( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMethods( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetField( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _FieldInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetFields( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetProperty( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetProperty_2( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetProperties( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMember( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMembers( 
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE InvokeMember( 
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ SAFEARRAY * modifiers,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * namedParameters,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UnderlyingSystemType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IReflectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IReflect * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IReflect * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IReflect * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IReflect * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IReflect * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IReflect * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IReflect * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMethod )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetMethod_2 )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMethods )( 
            IReflect * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetField )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _FieldInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetFields )( 
            IReflect * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProperty )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetProperty_2 )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProperties )( 
            IReflect * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMember )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMembers )( 
            IReflect * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *InvokeMember )( 
            IReflect * This,
            /* [in] */ BSTR name,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ VARIANT Target,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ SAFEARRAY * modifiers,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * namedParameters,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UnderlyingSystemType )( 
            IReflect * This,
            /* [retval][out] */ _Type **pRetVal);
        
        END_INTERFACE
    } IReflectVtbl;

    interface IReflect
    {
        CONST_VTBL struct IReflectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IReflect_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IReflect_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IReflect_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IReflect_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IReflect_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IReflect_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IReflect_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IReflect_GetMethod(This,name,bindingAttr,Binder,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod(This,name,bindingAttr,Binder,types,modifiers,pRetVal) ) 

#define IReflect_GetMethod_2(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_2(This,name,bindingAttr,pRetVal) ) 

#define IReflect_GetMethods(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMethods(This,bindingAttr,pRetVal) ) 

#define IReflect_GetField(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetField(This,name,bindingAttr,pRetVal) ) 

#define IReflect_GetFields(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetFields(This,bindingAttr,pRetVal) ) 

#define IReflect_GetProperty(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty(This,name,bindingAttr,pRetVal) ) 

#define IReflect_GetProperty_2(This,name,bindingAttr,Binder,returnType,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> GetProperty_2(This,name,bindingAttr,Binder,returnType,types,modifiers,pRetVal) ) 

#define IReflect_GetProperties(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetProperties(This,bindingAttr,pRetVal) ) 

#define IReflect_GetMember(This,name,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMember(This,name,bindingAttr,pRetVal) ) 

#define IReflect_GetMembers(This,bindingAttr,pRetVal)	\
    ( (This)->lpVtbl -> GetMembers(This,bindingAttr,pRetVal) ) 

#define IReflect_InvokeMember(This,name,invokeAttr,Binder,Target,args,modifiers,culture,namedParameters,pRetVal)	\
    ( (This)->lpVtbl -> InvokeMember(This,name,invokeAttr,Binder,Target,args,modifiers,culture,namedParameters,pRetVal) ) 

#define IReflect_get_UnderlyingSystemType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_UnderlyingSystemType(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IReflect_INTERFACE_DEFINED__ */


#ifndef __IObjectHandle_INTERFACE_DEFINED__
#define __IObjectHandle_INTERFACE_DEFINED__

/* interface IObjectHandle */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID_IObjectHandle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C460E2B4-E199-412A-8456-84DC3E4838C3")
    IObjectHandle : public IUnknown
    {
    public:
        virtual HRESULT __stdcall Unwrap( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IObjectHandleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IObjectHandle * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IObjectHandle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IObjectHandle * This);
        
        HRESULT ( __stdcall *Unwrap )( 
            IObjectHandle * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } IObjectHandleVtbl;

    interface IObjectHandle
    {
        CONST_VTBL struct IObjectHandleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IObjectHandle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IObjectHandle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IObjectHandle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IObjectHandle_Unwrap(This,pRetVal)	\
    ( (This)->lpVtbl -> Unwrap(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IObjectHandle_INTERFACE_DEFINED__ */


#ifndef __IHashCodeProvider_INTERFACE_DEFINED__
#define __IHashCodeProvider_INTERFACE_DEFINED__

/* interface IHashCodeProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IHashCodeProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5D573036-3435-3C5A-AEFF-2B8191082C71")
    IHashCodeProvider : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ long *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IHashCodeProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IHashCodeProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IHashCodeProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IHashCodeProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IHashCodeProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IHashCodeProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IHashCodeProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IHashCodeProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            IHashCodeProvider * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ long *pRetVal);
        
        END_INTERFACE
    } IHashCodeProviderVtbl;

    interface IHashCodeProvider
    {
        CONST_VTBL struct IHashCodeProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IHashCodeProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IHashCodeProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IHashCodeProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IHashCodeProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IHashCodeProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IHashCodeProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IHashCodeProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IHashCodeProvider_GetHashCode(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,obj,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IHashCodeProvider_INTERFACE_DEFINED__ */


#ifndef __IDictionary_INTERFACE_DEFINED__
#define __IDictionary_INTERFACE_DEFINED__

/* interface IDictionary */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IDictionary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6A6841DF-3287-3D87-8060-CE0B4C77D2A1")
    IDictionary : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Item( 
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Keys( 
            /* [retval][out] */ ICollection **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Values( 
            /* [retval][out] */ ICollection **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Contains( 
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Add( 
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Clear( void) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsReadOnly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsFixedSize( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IDictionaryEnumerator **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Remove( 
            /* [in] */ VARIANT key) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDictionaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDictionary * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDictionary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDictionary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDictionary * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDictionary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDictionary * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDictionary * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IDictionary * This,
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Item )( 
            IDictionary * This,
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Keys )( 
            IDictionary * This,
            /* [retval][out] */ ICollection **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Values )( 
            IDictionary * This,
            /* [retval][out] */ ICollection **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Contains )( 
            IDictionary * This,
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Add )( 
            IDictionary * This,
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Clear )( 
            IDictionary * This);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsReadOnly )( 
            IDictionary * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsFixedSize )( 
            IDictionary * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IDictionary * This,
            /* [retval][out] */ IDictionaryEnumerator **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Remove )( 
            IDictionary * This,
            /* [in] */ VARIANT key);
        
        END_INTERFACE
    } IDictionaryVtbl;

    interface IDictionary
    {
        CONST_VTBL struct IDictionaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDictionary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDictionary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDictionary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDictionary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDictionary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDictionary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDictionary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDictionary_get_Item(This,key,pRetVal)	\
    ( (This)->lpVtbl -> get_Item(This,key,pRetVal) ) 

#define IDictionary_putref_Item(This,key,pRetVal)	\
    ( (This)->lpVtbl -> putref_Item(This,key,pRetVal) ) 

#define IDictionary_get_Keys(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Keys(This,pRetVal) ) 

#define IDictionary_get_Values(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Values(This,pRetVal) ) 

#define IDictionary_Contains(This,key,pRetVal)	\
    ( (This)->lpVtbl -> Contains(This,key,pRetVal) ) 

#define IDictionary_Add(This,key,value)	\
    ( (This)->lpVtbl -> Add(This,key,value) ) 

#define IDictionary_Clear(This)	\
    ( (This)->lpVtbl -> Clear(This) ) 

#define IDictionary_get_IsReadOnly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsReadOnly(This,pRetVal) ) 

#define IDictionary_get_IsFixedSize(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFixedSize(This,pRetVal) ) 

#define IDictionary_GetEnumerator(This,pRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,pRetVal) ) 

#define IDictionary_Remove(This,key)	\
    ( (This)->lpVtbl -> Remove(This,key) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDictionary_INTERFACE_DEFINED__ */


#ifndef __IDictionaryEnumerator_INTERFACE_DEFINED__
#define __IDictionaryEnumerator_INTERFACE_DEFINED__

/* interface IDictionaryEnumerator */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IDictionaryEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("35D574BF-7A4F-3588-8C19-12212A0FE4DC")
    IDictionaryEnumerator : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_key( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_value( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Entry( 
            /* [retval][out] */ DictionaryEntry *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDictionaryEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDictionaryEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDictionaryEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDictionaryEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDictionaryEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDictionaryEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDictionaryEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDictionaryEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_key )( 
            IDictionaryEnumerator * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_value )( 
            IDictionaryEnumerator * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Entry )( 
            IDictionaryEnumerator * This,
            /* [retval][out] */ DictionaryEntry *pRetVal);
        
        END_INTERFACE
    } IDictionaryEnumeratorVtbl;

    interface IDictionaryEnumerator
    {
        CONST_VTBL struct IDictionaryEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDictionaryEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDictionaryEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDictionaryEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDictionaryEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDictionaryEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDictionaryEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDictionaryEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDictionaryEnumerator_get_key(This,pRetVal)	\
    ( (This)->lpVtbl -> get_key(This,pRetVal) ) 

#define IDictionaryEnumerator_get_value(This,pRetVal)	\
    ( (This)->lpVtbl -> get_value(This,pRetVal) ) 

#define IDictionaryEnumerator_get_Entry(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Entry(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDictionaryEnumerator_INTERFACE_DEFINED__ */


#ifndef __IDeserializationCallback_INTERFACE_DEFINED__
#define __IDeserializationCallback_INTERFACE_DEFINED__

/* interface IDeserializationCallback */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IDeserializationCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB3F47E4-C227-3B05-BF9F-94649BEF9888")
    IDeserializationCallback : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OnDeserialization( 
            /* [in] */ VARIANT sender) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDeserializationCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDeserializationCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDeserializationCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDeserializationCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDeserializationCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDeserializationCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDeserializationCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDeserializationCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OnDeserialization )( 
            IDeserializationCallback * This,
            /* [in] */ VARIANT sender);
        
        END_INTERFACE
    } IDeserializationCallbackVtbl;

    interface IDeserializationCallback
    {
        CONST_VTBL struct IDeserializationCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDeserializationCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDeserializationCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDeserializationCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDeserializationCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDeserializationCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDeserializationCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDeserializationCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDeserializationCallback_OnDeserialization(This,sender)	\
    ( (This)->lpVtbl -> OnDeserialization(This,sender) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDeserializationCallback_INTERFACE_DEFINED__ */


#ifndef __ISymbolBinder_INTERFACE_DEFINED__
#define __ISymbolBinder_INTERFACE_DEFINED__

/* interface ISymbolBinder */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolBinder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("20808ADC-CC01-3F3A-8F09-ED12940FC212")
    ISymbolBinder : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetReader( 
            /* [in] */ long importer,
            /* [in] */ BSTR filename,
            /* [in] */ BSTR searchPath,
            /* [retval][out] */ ISymbolReader **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolBinderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolBinder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolBinder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolBinder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolBinder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolBinder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolBinder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolBinder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetReader )( 
            ISymbolBinder * This,
            /* [in] */ long importer,
            /* [in] */ BSTR filename,
            /* [in] */ BSTR searchPath,
            /* [retval][out] */ ISymbolReader **pRetVal);
        
        END_INTERFACE
    } ISymbolBinderVtbl;

    interface ISymbolBinder
    {
        CONST_VTBL struct ISymbolBinderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolBinder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolBinder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolBinder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolBinder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolBinder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolBinder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolBinder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolBinder_GetReader(This,importer,filename,searchPath,pRetVal)	\
    ( (This)->lpVtbl -> GetReader(This,importer,filename,searchPath,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolBinder_INTERFACE_DEFINED__ */


#ifndef __ISymbolBinder1_INTERFACE_DEFINED__
#define __ISymbolBinder1_INTERFACE_DEFINED__

/* interface ISymbolBinder1 */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolBinder1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("027C036A-4052-3821-85DE-B53319DF1211")
    ISymbolBinder1 : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetReader( 
            /* [in] */ Int64 importer,
            /* [in] */ BSTR filename,
            /* [in] */ BSTR searchPath,
            /* [retval][out] */ ISymbolReader **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolBinder1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolBinder1 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolBinder1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolBinder1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolBinder1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolBinder1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolBinder1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolBinder1 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetReader )( 
            ISymbolBinder1 * This,
            /* [in] */ Int64 importer,
            /* [in] */ BSTR filename,
            /* [in] */ BSTR searchPath,
            /* [retval][out] */ ISymbolReader **pRetVal);
        
        END_INTERFACE
    } ISymbolBinder1Vtbl;

    interface ISymbolBinder1
    {
        CONST_VTBL struct ISymbolBinder1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolBinder1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolBinder1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolBinder1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolBinder1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolBinder1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolBinder1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolBinder1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolBinder1_GetReader(This,importer,filename,searchPath,pRetVal)	\
    ( (This)->lpVtbl -> GetReader(This,importer,filename,searchPath,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolBinder1_INTERFACE_DEFINED__ */


#ifndef __ISymbolDocument_INTERFACE_DEFINED__
#define __ISymbolDocument_INTERFACE_DEFINED__

/* interface ISymbolDocument */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolDocument;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1C32F012-2684-3EFE-8D50-9C2973ACC00B")
    ISymbolDocument : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Url( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_DocumentType( 
            /* [retval][out] */ Guid *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Language( 
            /* [retval][out] */ Guid *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LanguageVendor( 
            /* [retval][out] */ Guid *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CheckSumAlgorithmId( 
            /* [retval][out] */ Guid *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetCheckSum( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FindClosestLine( 
            /* [in] */ long line,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasEmbeddedSource( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SourceLength( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSourceRange( 
            /* [in] */ long startLine,
            /* [in] */ long startColumn,
            /* [in] */ long endLine,
            /* [in] */ long endColumn,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolDocumentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolDocument * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolDocument * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolDocument * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolDocument * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolDocument * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolDocument * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolDocument * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Url )( 
            ISymbolDocument * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_DocumentType )( 
            ISymbolDocument * This,
            /* [retval][out] */ Guid *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Language )( 
            ISymbolDocument * This,
            /* [retval][out] */ Guid *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LanguageVendor )( 
            ISymbolDocument * This,
            /* [retval][out] */ Guid *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CheckSumAlgorithmId )( 
            ISymbolDocument * This,
            /* [retval][out] */ Guid *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCheckSum )( 
            ISymbolDocument * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FindClosestLine )( 
            ISymbolDocument * This,
            /* [in] */ long line,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasEmbeddedSource )( 
            ISymbolDocument * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SourceLength )( 
            ISymbolDocument * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSourceRange )( 
            ISymbolDocument * This,
            /* [in] */ long startLine,
            /* [in] */ long startColumn,
            /* [in] */ long endLine,
            /* [in] */ long endColumn,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } ISymbolDocumentVtbl;

    interface ISymbolDocument
    {
        CONST_VTBL struct ISymbolDocumentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolDocument_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolDocument_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolDocument_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolDocument_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolDocument_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolDocument_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolDocument_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolDocument_get_Url(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Url(This,pRetVal) ) 

#define ISymbolDocument_get_DocumentType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DocumentType(This,pRetVal) ) 

#define ISymbolDocument_get_Language(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Language(This,pRetVal) ) 

#define ISymbolDocument_get_LanguageVendor(This,pRetVal)	\
    ( (This)->lpVtbl -> get_LanguageVendor(This,pRetVal) ) 

#define ISymbolDocument_get_CheckSumAlgorithmId(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CheckSumAlgorithmId(This,pRetVal) ) 

#define ISymbolDocument_GetCheckSum(This,pRetVal)	\
    ( (This)->lpVtbl -> GetCheckSum(This,pRetVal) ) 

#define ISymbolDocument_FindClosestLine(This,line,pRetVal)	\
    ( (This)->lpVtbl -> FindClosestLine(This,line,pRetVal) ) 

#define ISymbolDocument_get_HasEmbeddedSource(This,pRetVal)	\
    ( (This)->lpVtbl -> get_HasEmbeddedSource(This,pRetVal) ) 

#define ISymbolDocument_get_SourceLength(This,pRetVal)	\
    ( (This)->lpVtbl -> get_SourceLength(This,pRetVal) ) 

#define ISymbolDocument_GetSourceRange(This,startLine,startColumn,endLine,endColumn,pRetVal)	\
    ( (This)->lpVtbl -> GetSourceRange(This,startLine,startColumn,endLine,endColumn,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolDocument_INTERFACE_DEFINED__ */


#ifndef __ISymbolDocumentWriter_INTERFACE_DEFINED__
#define __ISymbolDocumentWriter_INTERFACE_DEFINED__

/* interface ISymbolDocumentWriter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolDocumentWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA682F24-3A3C-390D-B8A2-96F1106F4B37")
    ISymbolDocumentWriter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetSource( 
            /* [in] */ SAFEARRAY * Source) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetCheckSum( 
            /* [in] */ Guid algorithmId,
            /* [in] */ SAFEARRAY * checkSum) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolDocumentWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolDocumentWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolDocumentWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolDocumentWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolDocumentWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolDocumentWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolDocumentWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolDocumentWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetSource )( 
            ISymbolDocumentWriter * This,
            /* [in] */ SAFEARRAY * Source);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetCheckSum )( 
            ISymbolDocumentWriter * This,
            /* [in] */ Guid algorithmId,
            /* [in] */ SAFEARRAY * checkSum);
        
        END_INTERFACE
    } ISymbolDocumentWriterVtbl;

    interface ISymbolDocumentWriter
    {
        CONST_VTBL struct ISymbolDocumentWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolDocumentWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolDocumentWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolDocumentWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolDocumentWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolDocumentWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolDocumentWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolDocumentWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolDocumentWriter_SetSource(This,Source)	\
    ( (This)->lpVtbl -> SetSource(This,Source) ) 

#define ISymbolDocumentWriter_SetCheckSum(This,algorithmId,checkSum)	\
    ( (This)->lpVtbl -> SetCheckSum(This,algorithmId,checkSum) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolDocumentWriter_INTERFACE_DEFINED__ */


#ifndef __ISymbolMethod_INTERFACE_DEFINED__
#define __ISymbolMethod_INTERFACE_DEFINED__

/* interface ISymbolMethod */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolMethod;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("25C72EB0-E437-3F17-946D-3B72A3ACFF37")
    ISymbolMethod : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Token( 
            /* [retval][out] */ SymbolToken *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SequencePointCount( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSequencePoints( 
            /* [in] */ SAFEARRAY * offsets,
            /* [in] */ SAFEARRAY * documents,
            /* [in] */ SAFEARRAY * lines,
            /* [in] */ SAFEARRAY * columns,
            /* [in] */ SAFEARRAY * endLines,
            /* [in] */ SAFEARRAY * endColumns) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RootScope( 
            /* [retval][out] */ ISymbolScope **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetScope( 
            /* [in] */ long offset,
            /* [retval][out] */ ISymbolScope **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetOffset( 
            /* [in] */ ISymbolDocument *document,
            /* [in] */ long line,
            /* [in] */ long column,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetRanges( 
            /* [in] */ ISymbolDocument *document,
            /* [in] */ long line,
            /* [in] */ long column,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetParameters( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNamespace( 
            /* [retval][out] */ ISymbolNamespace **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSourceStartEnd( 
            /* [in] */ SAFEARRAY * docs,
            /* [in] */ SAFEARRAY * lines,
            /* [in] */ SAFEARRAY * columns,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolMethodVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolMethod * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolMethod * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolMethod * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolMethod * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolMethod * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolMethod * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolMethod * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Token )( 
            ISymbolMethod * This,
            /* [retval][out] */ SymbolToken *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SequencePointCount )( 
            ISymbolMethod * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSequencePoints )( 
            ISymbolMethod * This,
            /* [in] */ SAFEARRAY * offsets,
            /* [in] */ SAFEARRAY * documents,
            /* [in] */ SAFEARRAY * lines,
            /* [in] */ SAFEARRAY * columns,
            /* [in] */ SAFEARRAY * endLines,
            /* [in] */ SAFEARRAY * endColumns);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RootScope )( 
            ISymbolMethod * This,
            /* [retval][out] */ ISymbolScope **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetScope )( 
            ISymbolMethod * This,
            /* [in] */ long offset,
            /* [retval][out] */ ISymbolScope **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetOffset )( 
            ISymbolMethod * This,
            /* [in] */ ISymbolDocument *document,
            /* [in] */ long line,
            /* [in] */ long column,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRanges )( 
            ISymbolMethod * This,
            /* [in] */ ISymbolDocument *document,
            /* [in] */ long line,
            /* [in] */ long column,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetParameters )( 
            ISymbolMethod * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNamespace )( 
            ISymbolMethod * This,
            /* [retval][out] */ ISymbolNamespace **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSourceStartEnd )( 
            ISymbolMethod * This,
            /* [in] */ SAFEARRAY * docs,
            /* [in] */ SAFEARRAY * lines,
            /* [in] */ SAFEARRAY * columns,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } ISymbolMethodVtbl;

    interface ISymbolMethod
    {
        CONST_VTBL struct ISymbolMethodVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolMethod_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolMethod_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolMethod_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolMethod_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolMethod_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolMethod_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolMethod_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolMethod_get_Token(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Token(This,pRetVal) ) 

#define ISymbolMethod_get_SequencePointCount(This,pRetVal)	\
    ( (This)->lpVtbl -> get_SequencePointCount(This,pRetVal) ) 

#define ISymbolMethod_GetSequencePoints(This,offsets,documents,lines,columns,endLines,endColumns)	\
    ( (This)->lpVtbl -> GetSequencePoints(This,offsets,documents,lines,columns,endLines,endColumns) ) 

#define ISymbolMethod_get_RootScope(This,pRetVal)	\
    ( (This)->lpVtbl -> get_RootScope(This,pRetVal) ) 

#define ISymbolMethod_GetScope(This,offset,pRetVal)	\
    ( (This)->lpVtbl -> GetScope(This,offset,pRetVal) ) 

#define ISymbolMethod_GetOffset(This,document,line,column,pRetVal)	\
    ( (This)->lpVtbl -> GetOffset(This,document,line,column,pRetVal) ) 

#define ISymbolMethod_GetRanges(This,document,line,column,pRetVal)	\
    ( (This)->lpVtbl -> GetRanges(This,document,line,column,pRetVal) ) 

#define ISymbolMethod_GetParameters(This,pRetVal)	\
    ( (This)->lpVtbl -> GetParameters(This,pRetVal) ) 

#define ISymbolMethod_GetNamespace(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNamespace(This,pRetVal) ) 

#define ISymbolMethod_GetSourceStartEnd(This,docs,lines,columns,pRetVal)	\
    ( (This)->lpVtbl -> GetSourceStartEnd(This,docs,lines,columns,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolMethod_INTERFACE_DEFINED__ */


#ifndef __ISymbolNamespace_INTERFACE_DEFINED__
#define __ISymbolNamespace_INTERFACE_DEFINED__

/* interface ISymbolNamespace */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolNamespace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23ED2454-6899-3C28-BAB7-6EC86683964A")
    ISymbolNamespace : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNamespaces( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetVariables( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolNamespaceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolNamespace * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolNamespace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolNamespace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolNamespace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolNamespace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolNamespace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolNamespace * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            ISymbolNamespace * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNamespaces )( 
            ISymbolNamespace * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetVariables )( 
            ISymbolNamespace * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } ISymbolNamespaceVtbl;

    interface ISymbolNamespace
    {
        CONST_VTBL struct ISymbolNamespaceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolNamespace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolNamespace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolNamespace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolNamespace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolNamespace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolNamespace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolNamespace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolNamespace_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define ISymbolNamespace_GetNamespaces(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNamespaces(This,pRetVal) ) 

#define ISymbolNamespace_GetVariables(This,pRetVal)	\
    ( (This)->lpVtbl -> GetVariables(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolNamespace_INTERFACE_DEFINED__ */


#ifndef __ISymbolReader_INTERFACE_DEFINED__
#define __ISymbolReader_INTERFACE_DEFINED__

/* interface ISymbolReader */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E809A5F1-D3D7-3144-9BEF-FE8AC0364699")
    ISymbolReader : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetDocument( 
            /* [in] */ BSTR Url,
            /* [in] */ Guid Language,
            /* [in] */ Guid LanguageVendor,
            /* [in] */ Guid DocumentType,
            /* [retval][out] */ ISymbolDocument **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetDocuments( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_UserEntryPoint( 
            /* [retval][out] */ SymbolToken *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMethod( 
            /* [in] */ SymbolToken Method,
            /* [retval][out] */ ISymbolMethod **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetMethod_2( 
            /* [in] */ SymbolToken Method,
            /* [in] */ long Version,
            /* [retval][out] */ ISymbolMethod **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetVariables( 
            /* [in] */ SymbolToken parent,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetGlobalVariables( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetMethodFromDocumentPosition( 
            /* [in] */ ISymbolDocument *document,
            /* [in] */ long line,
            /* [in] */ long column,
            /* [retval][out] */ ISymbolMethod **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSymAttribute( 
            /* [in] */ SymbolToken parent,
            /* [in] */ BSTR name,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNamespaces( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetDocument )( 
            ISymbolReader * This,
            /* [in] */ BSTR Url,
            /* [in] */ Guid Language,
            /* [in] */ Guid LanguageVendor,
            /* [in] */ Guid DocumentType,
            /* [retval][out] */ ISymbolDocument **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetDocuments )( 
            ISymbolReader * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_UserEntryPoint )( 
            ISymbolReader * This,
            /* [retval][out] */ SymbolToken *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMethod )( 
            ISymbolReader * This,
            /* [in] */ SymbolToken Method,
            /* [retval][out] */ ISymbolMethod **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetMethod_2 )( 
            ISymbolReader * This,
            /* [in] */ SymbolToken Method,
            /* [in] */ long Version,
            /* [retval][out] */ ISymbolMethod **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetVariables )( 
            ISymbolReader * This,
            /* [in] */ SymbolToken parent,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetGlobalVariables )( 
            ISymbolReader * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetMethodFromDocumentPosition )( 
            ISymbolReader * This,
            /* [in] */ ISymbolDocument *document,
            /* [in] */ long line,
            /* [in] */ long column,
            /* [retval][out] */ ISymbolMethod **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSymAttribute )( 
            ISymbolReader * This,
            /* [in] */ SymbolToken parent,
            /* [in] */ BSTR name,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNamespaces )( 
            ISymbolReader * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } ISymbolReaderVtbl;

    interface ISymbolReader
    {
        CONST_VTBL struct ISymbolReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolReader_GetDocument(This,Url,Language,LanguageVendor,DocumentType,pRetVal)	\
    ( (This)->lpVtbl -> GetDocument(This,Url,Language,LanguageVendor,DocumentType,pRetVal) ) 

#define ISymbolReader_GetDocuments(This,pRetVal)	\
    ( (This)->lpVtbl -> GetDocuments(This,pRetVal) ) 

#define ISymbolReader_get_UserEntryPoint(This,pRetVal)	\
    ( (This)->lpVtbl -> get_UserEntryPoint(This,pRetVal) ) 

#define ISymbolReader_GetMethod(This,Method,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod(This,Method,pRetVal) ) 

#define ISymbolReader_GetMethod_2(This,Method,Version,pRetVal)	\
    ( (This)->lpVtbl -> GetMethod_2(This,Method,Version,pRetVal) ) 

#define ISymbolReader_GetVariables(This,parent,pRetVal)	\
    ( (This)->lpVtbl -> GetVariables(This,parent,pRetVal) ) 

#define ISymbolReader_GetGlobalVariables(This,pRetVal)	\
    ( (This)->lpVtbl -> GetGlobalVariables(This,pRetVal) ) 

#define ISymbolReader_GetMethodFromDocumentPosition(This,document,line,column,pRetVal)	\
    ( (This)->lpVtbl -> GetMethodFromDocumentPosition(This,document,line,column,pRetVal) ) 

#define ISymbolReader_GetSymAttribute(This,parent,name,pRetVal)	\
    ( (This)->lpVtbl -> GetSymAttribute(This,parent,name,pRetVal) ) 

#define ISymbolReader_GetNamespaces(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNamespaces(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolReader_INTERFACE_DEFINED__ */


#ifndef __ISymbolScope_INTERFACE_DEFINED__
#define __ISymbolScope_INTERFACE_DEFINED__

/* interface ISymbolScope */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolScope;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1CEE3A11-01AE-3244-A939-4972FC9703EF")
    ISymbolScope : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Method( 
            /* [retval][out] */ ISymbolMethod **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_parent( 
            /* [retval][out] */ ISymbolScope **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetChildren( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_StartOffset( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndOffset( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetLocals( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNamespaces( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolScopeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolScope * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolScope * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolScope * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolScope * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolScope * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolScope * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolScope * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Method )( 
            ISymbolScope * This,
            /* [retval][out] */ ISymbolMethod **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_parent )( 
            ISymbolScope * This,
            /* [retval][out] */ ISymbolScope **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetChildren )( 
            ISymbolScope * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartOffset )( 
            ISymbolScope * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndOffset )( 
            ISymbolScope * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLocals )( 
            ISymbolScope * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNamespaces )( 
            ISymbolScope * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } ISymbolScopeVtbl;

    interface ISymbolScope
    {
        CONST_VTBL struct ISymbolScopeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolScope_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolScope_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolScope_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolScope_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolScope_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolScope_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolScope_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolScope_get_Method(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Method(This,pRetVal) ) 

#define ISymbolScope_get_parent(This,pRetVal)	\
    ( (This)->lpVtbl -> get_parent(This,pRetVal) ) 

#define ISymbolScope_GetChildren(This,pRetVal)	\
    ( (This)->lpVtbl -> GetChildren(This,pRetVal) ) 

#define ISymbolScope_get_StartOffset(This,pRetVal)	\
    ( (This)->lpVtbl -> get_StartOffset(This,pRetVal) ) 

#define ISymbolScope_get_EndOffset(This,pRetVal)	\
    ( (This)->lpVtbl -> get_EndOffset(This,pRetVal) ) 

#define ISymbolScope_GetLocals(This,pRetVal)	\
    ( (This)->lpVtbl -> GetLocals(This,pRetVal) ) 

#define ISymbolScope_GetNamespaces(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNamespaces(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolScope_INTERFACE_DEFINED__ */


#ifndef __ISymbolVariable_INTERFACE_DEFINED__
#define __ISymbolVariable_INTERFACE_DEFINED__

/* interface ISymbolVariable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolVariable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4042BD4D-B5AB-30E8-919B-14910687BAAE")
    ISymbolVariable : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Attributes( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSignature( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressKind( 
            /* [retval][out] */ SymAddressKind *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressField1( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressField2( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AddressField3( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_StartOffset( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EndOffset( 
            /* [retval][out] */ long *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolVariableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolVariable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolVariable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolVariable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolVariable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolVariable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolVariable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolVariable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            ISymbolVariable * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Attributes )( 
            ISymbolVariable * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSignature )( 
            ISymbolVariable * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressKind )( 
            ISymbolVariable * This,
            /* [retval][out] */ SymAddressKind *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressField1 )( 
            ISymbolVariable * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressField2 )( 
            ISymbolVariable * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AddressField3 )( 
            ISymbolVariable * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_StartOffset )( 
            ISymbolVariable * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EndOffset )( 
            ISymbolVariable * This,
            /* [retval][out] */ long *pRetVal);
        
        END_INTERFACE
    } ISymbolVariableVtbl;

    interface ISymbolVariable
    {
        CONST_VTBL struct ISymbolVariableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolVariable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolVariable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolVariable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolVariable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolVariable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolVariable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolVariable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolVariable_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define ISymbolVariable_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define ISymbolVariable_GetSignature(This,pRetVal)	\
    ( (This)->lpVtbl -> GetSignature(This,pRetVal) ) 

#define ISymbolVariable_get_AddressKind(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AddressKind(This,pRetVal) ) 

#define ISymbolVariable_get_AddressField1(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AddressField1(This,pRetVal) ) 

#define ISymbolVariable_get_AddressField2(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AddressField2(This,pRetVal) ) 

#define ISymbolVariable_get_AddressField3(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AddressField3(This,pRetVal) ) 

#define ISymbolVariable_get_StartOffset(This,pRetVal)	\
    ( (This)->lpVtbl -> get_StartOffset(This,pRetVal) ) 

#define ISymbolVariable_get_EndOffset(This,pRetVal)	\
    ( (This)->lpVtbl -> get_EndOffset(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolVariable_INTERFACE_DEFINED__ */


#ifndef __ISymbolWriter_INTERFACE_DEFINED__
#define __ISymbolWriter_INTERFACE_DEFINED__

/* interface ISymbolWriter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISymbolWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DA295A1B-C5BD-3B34-8ACD-1D7D334FFB7F")
    ISymbolWriter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Initialize( 
            /* [in] */ Int64 emitter,
            /* [in] */ BSTR filename,
            /* [in] */ VARIANT_BOOL fFullBuild) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DefineDocument( 
            /* [in] */ BSTR Url,
            /* [in] */ Guid Language,
            /* [in] */ Guid LanguageVendor,
            /* [in] */ Guid DocumentType,
            /* [retval][out] */ ISymbolDocumentWriter **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetUserEntryPoint( 
            /* [in] */ SymbolToken entryMethod) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OpenMethod( 
            /* [in] */ SymbolToken Method) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CloseMethod( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DefineSequencePoints( 
            /* [in] */ ISymbolDocumentWriter *document,
            /* [in] */ SAFEARRAY * offsets,
            /* [in] */ SAFEARRAY * lines,
            /* [in] */ SAFEARRAY * columns,
            /* [in] */ SAFEARRAY * endLines,
            /* [in] */ SAFEARRAY * endColumns) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OpenScope( 
            /* [in] */ long StartOffset,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CloseScope( 
            /* [in] */ long EndOffset) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetScopeRange( 
            /* [in] */ long scopeID,
            /* [in] */ long StartOffset,
            /* [in] */ long EndOffset) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DefineLocalVariable( 
            /* [in] */ BSTR name,
            /* [in] */ FieldAttributes Attributes,
            /* [in] */ SAFEARRAY * signature,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3,
            /* [in] */ long StartOffset,
            /* [in] */ long EndOffset) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DefineParameter( 
            /* [in] */ BSTR name,
            /* [in] */ ParameterAttributes Attributes,
            /* [in] */ long sequence,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DefineField( 
            /* [in] */ SymbolToken parent,
            /* [in] */ BSTR name,
            /* [in] */ FieldAttributes Attributes,
            /* [in] */ SAFEARRAY * signature,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DefineGlobalVariable( 
            /* [in] */ BSTR name,
            /* [in] */ FieldAttributes Attributes,
            /* [in] */ SAFEARRAY * signature,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetSymAttribute( 
            /* [in] */ SymbolToken parent,
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * data) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE OpenNamespace( 
            /* [in] */ BSTR name) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CloseNamespace( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UsingNamespace( 
            /* [in] */ BSTR FullName) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetMethodSourceRange( 
            /* [in] */ ISymbolDocumentWriter *startDoc,
            /* [in] */ long startLine,
            /* [in] */ long startColumn,
            /* [in] */ ISymbolDocumentWriter *endDoc,
            /* [in] */ long endLine,
            /* [in] */ long endColumn) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetUnderlyingWriter( 
            /* [in] */ Int64 underlyingWriter) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISymbolWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISymbolWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISymbolWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISymbolWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISymbolWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISymbolWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISymbolWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISymbolWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Initialize )( 
            ISymbolWriter * This,
            /* [in] */ Int64 emitter,
            /* [in] */ BSTR filename,
            /* [in] */ VARIANT_BOOL fFullBuild);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DefineDocument )( 
            ISymbolWriter * This,
            /* [in] */ BSTR Url,
            /* [in] */ Guid Language,
            /* [in] */ Guid LanguageVendor,
            /* [in] */ Guid DocumentType,
            /* [retval][out] */ ISymbolDocumentWriter **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetUserEntryPoint )( 
            ISymbolWriter * This,
            /* [in] */ SymbolToken entryMethod);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OpenMethod )( 
            ISymbolWriter * This,
            /* [in] */ SymbolToken Method);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CloseMethod )( 
            ISymbolWriter * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DefineSequencePoints )( 
            ISymbolWriter * This,
            /* [in] */ ISymbolDocumentWriter *document,
            /* [in] */ SAFEARRAY * offsets,
            /* [in] */ SAFEARRAY * lines,
            /* [in] */ SAFEARRAY * columns,
            /* [in] */ SAFEARRAY * endLines,
            /* [in] */ SAFEARRAY * endColumns);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OpenScope )( 
            ISymbolWriter * This,
            /* [in] */ long StartOffset,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CloseScope )( 
            ISymbolWriter * This,
            /* [in] */ long EndOffset);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetScopeRange )( 
            ISymbolWriter * This,
            /* [in] */ long scopeID,
            /* [in] */ long StartOffset,
            /* [in] */ long EndOffset);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DefineLocalVariable )( 
            ISymbolWriter * This,
            /* [in] */ BSTR name,
            /* [in] */ FieldAttributes Attributes,
            /* [in] */ SAFEARRAY * signature,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3,
            /* [in] */ long StartOffset,
            /* [in] */ long EndOffset);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DefineParameter )( 
            ISymbolWriter * This,
            /* [in] */ BSTR name,
            /* [in] */ ParameterAttributes Attributes,
            /* [in] */ long sequence,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DefineField )( 
            ISymbolWriter * This,
            /* [in] */ SymbolToken parent,
            /* [in] */ BSTR name,
            /* [in] */ FieldAttributes Attributes,
            /* [in] */ SAFEARRAY * signature,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DefineGlobalVariable )( 
            ISymbolWriter * This,
            /* [in] */ BSTR name,
            /* [in] */ FieldAttributes Attributes,
            /* [in] */ SAFEARRAY * signature,
            /* [in] */ SymAddressKind addrKind,
            /* [in] */ long addr1,
            /* [in] */ long addr2,
            /* [in] */ long addr3);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            ISymbolWriter * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetSymAttribute )( 
            ISymbolWriter * This,
            /* [in] */ SymbolToken parent,
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * data);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *OpenNamespace )( 
            ISymbolWriter * This,
            /* [in] */ BSTR name);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CloseNamespace )( 
            ISymbolWriter * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UsingNamespace )( 
            ISymbolWriter * This,
            /* [in] */ BSTR FullName);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetMethodSourceRange )( 
            ISymbolWriter * This,
            /* [in] */ ISymbolDocumentWriter *startDoc,
            /* [in] */ long startLine,
            /* [in] */ long startColumn,
            /* [in] */ ISymbolDocumentWriter *endDoc,
            /* [in] */ long endLine,
            /* [in] */ long endColumn);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetUnderlyingWriter )( 
            ISymbolWriter * This,
            /* [in] */ Int64 underlyingWriter);
        
        END_INTERFACE
    } ISymbolWriterVtbl;

    interface ISymbolWriter
    {
        CONST_VTBL struct ISymbolWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISymbolWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISymbolWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISymbolWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISymbolWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISymbolWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISymbolWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISymbolWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISymbolWriter_Initialize(This,emitter,filename,fFullBuild)	\
    ( (This)->lpVtbl -> Initialize(This,emitter,filename,fFullBuild) ) 

#define ISymbolWriter_DefineDocument(This,Url,Language,LanguageVendor,DocumentType,pRetVal)	\
    ( (This)->lpVtbl -> DefineDocument(This,Url,Language,LanguageVendor,DocumentType,pRetVal) ) 

#define ISymbolWriter_SetUserEntryPoint(This,entryMethod)	\
    ( (This)->lpVtbl -> SetUserEntryPoint(This,entryMethod) ) 

#define ISymbolWriter_OpenMethod(This,Method)	\
    ( (This)->lpVtbl -> OpenMethod(This,Method) ) 

#define ISymbolWriter_CloseMethod(This)	\
    ( (This)->lpVtbl -> CloseMethod(This) ) 

#define ISymbolWriter_DefineSequencePoints(This,document,offsets,lines,columns,endLines,endColumns)	\
    ( (This)->lpVtbl -> DefineSequencePoints(This,document,offsets,lines,columns,endLines,endColumns) ) 

#define ISymbolWriter_OpenScope(This,StartOffset,pRetVal)	\
    ( (This)->lpVtbl -> OpenScope(This,StartOffset,pRetVal) ) 

#define ISymbolWriter_CloseScope(This,EndOffset)	\
    ( (This)->lpVtbl -> CloseScope(This,EndOffset) ) 

#define ISymbolWriter_SetScopeRange(This,scopeID,StartOffset,EndOffset)	\
    ( (This)->lpVtbl -> SetScopeRange(This,scopeID,StartOffset,EndOffset) ) 

#define ISymbolWriter_DefineLocalVariable(This,name,Attributes,signature,addrKind,addr1,addr2,addr3,StartOffset,EndOffset)	\
    ( (This)->lpVtbl -> DefineLocalVariable(This,name,Attributes,signature,addrKind,addr1,addr2,addr3,StartOffset,EndOffset) ) 

#define ISymbolWriter_DefineParameter(This,name,Attributes,sequence,addrKind,addr1,addr2,addr3)	\
    ( (This)->lpVtbl -> DefineParameter(This,name,Attributes,sequence,addrKind,addr1,addr2,addr3) ) 

#define ISymbolWriter_DefineField(This,parent,name,Attributes,signature,addrKind,addr1,addr2,addr3)	\
    ( (This)->lpVtbl -> DefineField(This,parent,name,Attributes,signature,addrKind,addr1,addr2,addr3) ) 

#define ISymbolWriter_DefineGlobalVariable(This,name,Attributes,signature,addrKind,addr1,addr2,addr3)	\
    ( (This)->lpVtbl -> DefineGlobalVariable(This,name,Attributes,signature,addrKind,addr1,addr2,addr3) ) 

#define ISymbolWriter_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define ISymbolWriter_SetSymAttribute(This,parent,name,data)	\
    ( (This)->lpVtbl -> SetSymAttribute(This,parent,name,data) ) 

#define ISymbolWriter_OpenNamespace(This,name)	\
    ( (This)->lpVtbl -> OpenNamespace(This,name) ) 

#define ISymbolWriter_CloseNamespace(This)	\
    ( (This)->lpVtbl -> CloseNamespace(This) ) 

#define ISymbolWriter_UsingNamespace(This,FullName)	\
    ( (This)->lpVtbl -> UsingNamespace(This,FullName) ) 

#define ISymbolWriter_SetMethodSourceRange(This,startDoc,startLine,startColumn,endDoc,endLine,endColumn)	\
    ( (This)->lpVtbl -> SetMethodSourceRange(This,startDoc,startLine,startColumn,endDoc,endLine,endColumn) ) 

#define ISymbolWriter_SetUnderlyingWriter(This,underlyingWriter)	\
    ( (This)->lpVtbl -> SetUnderlyingWriter(This,underlyingWriter) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISymbolWriter_INTERFACE_DEFINED__ */


#ifndef ___Assembly_INTERFACE_DEFINED__
#define ___Assembly_INTERFACE_DEFINED__

/* interface _Assembly */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID__Assembly;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("17156360-2F1A-384A-BC52-FDE93C215C5B")
    _Assembly : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CodeBase( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EscapedCodeBase( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetName( 
            /* [retval][out] */ _AssemblyName **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetName_2( 
            /* [in] */ VARIANT_BOOL copiedName,
            /* [retval][out] */ _AssemblyName **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FullName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EntryPoint( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetType_2( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetType_3( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL throwOnError,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetExportedTypes( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetTypes( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetManifestResourceStream( 
            /* [in] */ _Type *Type,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Stream **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetManifestResourceStream_2( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _Stream **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetFile( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _FileStream **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetFiles( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetFiles_2( 
            /* [in] */ VARIANT_BOOL getResourceModules,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetManifestResourceNames( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetManifestResourceInfo( 
            /* [in] */ BSTR resourceName,
            /* [retval][out] */ _ManifestResourceInfo **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Location( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Evidence( 
            /* [retval][out] */ _Evidence **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObjectData( 
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE add_ModuleResolve( 
            /* [in] */ _ModuleResolveEventHandler *value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE remove_ModuleResolve( 
            /* [in] */ _ModuleResolveEventHandler *value) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetType_4( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL throwOnError,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSatelliteAssembly( 
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetSatelliteAssembly_2( 
            /* [in] */ _CultureInfo *culture,
            /* [in] */ _Version *Version,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE LoadModule( 
            /* [in] */ BSTR moduleName,
            /* [in] */ SAFEARRAY * rawModule,
            /* [retval][out] */ _Module **pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE LoadModule_2( 
            /* [in] */ BSTR moduleName,
            /* [in] */ SAFEARRAY * rawModule,
            /* [in] */ SAFEARRAY * rawSymbolStore,
            /* [retval][out] */ _Module **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateInstance( 
            /* [in] */ BSTR typeName,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE CreateInstance_2( 
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE CreateInstance_3( 
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetLoadedModules( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetLoadedModules_2( 
            /* [in] */ VARIANT_BOOL getResourceModules,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetModules( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE GetModules_2( 
            /* [in] */ VARIANT_BOOL getResourceModules,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetModule( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _Module **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetReferencedAssemblies( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_GlobalAssemblyCache( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Assembly * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Assembly * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Assembly * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Assembly * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Assembly * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Assembly * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Assembly * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            _Assembly * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            _Assembly * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            _Assembly * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            _Assembly * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CodeBase )( 
            _Assembly * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EscapedCodeBase )( 
            _Assembly * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetName )( 
            _Assembly * This,
            /* [retval][out] */ _AssemblyName **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetName_2 )( 
            _Assembly * This,
            /* [in] */ VARIANT_BOOL copiedName,
            /* [retval][out] */ _AssemblyName **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FullName )( 
            _Assembly * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EntryPoint )( 
            _Assembly * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetType_2 )( 
            _Assembly * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetType_3 )( 
            _Assembly * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL throwOnError,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetExportedTypes )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetTypes )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetManifestResourceStream )( 
            _Assembly * This,
            /* [in] */ _Type *Type,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Stream **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetManifestResourceStream_2 )( 
            _Assembly * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Stream **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetFile )( 
            _Assembly * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _FileStream **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetFiles )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetFiles_2 )( 
            _Assembly * This,
            /* [in] */ VARIANT_BOOL getResourceModules,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetManifestResourceNames )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetManifestResourceInfo )( 
            _Assembly * This,
            /* [in] */ BSTR resourceName,
            /* [retval][out] */ _ManifestResourceInfo **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Location )( 
            _Assembly * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Evidence )( 
            _Assembly * This,
            /* [retval][out] */ _Evidence **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomAttributes )( 
            _Assembly * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetCustomAttributes_2 )( 
            _Assembly * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsDefined )( 
            _Assembly * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectData )( 
            _Assembly * This,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *add_ModuleResolve )( 
            _Assembly * This,
            /* [in] */ _ModuleResolveEventHandler *value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *remove_ModuleResolve )( 
            _Assembly * This,
            /* [in] */ _ModuleResolveEventHandler *value);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetType_4 )( 
            _Assembly * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT_BOOL throwOnError,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSatelliteAssembly )( 
            _Assembly * This,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ _Assembly **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetSatelliteAssembly_2 )( 
            _Assembly * This,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ _Version *Version,
            /* [retval][out] */ _Assembly **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *LoadModule )( 
            _Assembly * This,
            /* [in] */ BSTR moduleName,
            /* [in] */ SAFEARRAY * rawModule,
            /* [retval][out] */ _Module **pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *LoadModule_2 )( 
            _Assembly * This,
            /* [in] */ BSTR moduleName,
            /* [in] */ SAFEARRAY * rawModule,
            /* [in] */ SAFEARRAY * rawSymbolStore,
            /* [retval][out] */ _Module **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            _Assembly * This,
            /* [in] */ BSTR typeName,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *CreateInstance_2 )( 
            _Assembly * This,
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *CreateInstance_3 )( 
            _Assembly * This,
            /* [in] */ BSTR typeName,
            /* [in] */ VARIANT_BOOL ignoreCase,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * args,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * activationAttributes,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLoadedModules )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetLoadedModules_2 )( 
            _Assembly * This,
            /* [in] */ VARIANT_BOOL getResourceModules,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetModules )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *GetModules_2 )( 
            _Assembly * This,
            /* [in] */ VARIANT_BOOL getResourceModules,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetModule )( 
            _Assembly * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _Module **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetReferencedAssemblies )( 
            _Assembly * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_GlobalAssemblyCache )( 
            _Assembly * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } _AssemblyVtbl;

    interface _Assembly
    {
        CONST_VTBL struct _AssemblyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Assembly_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Assembly_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Assembly_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Assembly_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Assembly_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Assembly_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Assembly_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Assembly_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _Assembly_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _Assembly_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _Assembly_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _Assembly_get_CodeBase(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CodeBase(This,pRetVal) ) 

#define _Assembly_get_EscapedCodeBase(This,pRetVal)	\
    ( (This)->lpVtbl -> get_EscapedCodeBase(This,pRetVal) ) 

#define _Assembly_GetName(This,pRetVal)	\
    ( (This)->lpVtbl -> GetName(This,pRetVal) ) 

#define _Assembly_GetName_2(This,copiedName,pRetVal)	\
    ( (This)->lpVtbl -> GetName_2(This,copiedName,pRetVal) ) 

#define _Assembly_get_FullName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FullName(This,pRetVal) ) 

#define _Assembly_get_EntryPoint(This,pRetVal)	\
    ( (This)->lpVtbl -> get_EntryPoint(This,pRetVal) ) 

#define _Assembly_GetType_2(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetType_2(This,name,pRetVal) ) 

#define _Assembly_GetType_3(This,name,throwOnError,pRetVal)	\
    ( (This)->lpVtbl -> GetType_3(This,name,throwOnError,pRetVal) ) 

#define _Assembly_GetExportedTypes(This,pRetVal)	\
    ( (This)->lpVtbl -> GetExportedTypes(This,pRetVal) ) 

#define _Assembly_GetTypes(This,pRetVal)	\
    ( (This)->lpVtbl -> GetTypes(This,pRetVal) ) 

#define _Assembly_GetManifestResourceStream(This,Type,name,pRetVal)	\
    ( (This)->lpVtbl -> GetManifestResourceStream(This,Type,name,pRetVal) ) 

#define _Assembly_GetManifestResourceStream_2(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetManifestResourceStream_2(This,name,pRetVal) ) 

#define _Assembly_GetFile(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetFile(This,name,pRetVal) ) 

#define _Assembly_GetFiles(This,pRetVal)	\
    ( (This)->lpVtbl -> GetFiles(This,pRetVal) ) 

#define _Assembly_GetFiles_2(This,getResourceModules,pRetVal)	\
    ( (This)->lpVtbl -> GetFiles_2(This,getResourceModules,pRetVal) ) 

#define _Assembly_GetManifestResourceNames(This,pRetVal)	\
    ( (This)->lpVtbl -> GetManifestResourceNames(This,pRetVal) ) 

#define _Assembly_GetManifestResourceInfo(This,resourceName,pRetVal)	\
    ( (This)->lpVtbl -> GetManifestResourceInfo(This,resourceName,pRetVal) ) 

#define _Assembly_get_Location(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Location(This,pRetVal) ) 

#define _Assembly_get_Evidence(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Evidence(This,pRetVal) ) 

#define _Assembly_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _Assembly_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _Assembly_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _Assembly_GetObjectData(This,info,Context)	\
    ( (This)->lpVtbl -> GetObjectData(This,info,Context) ) 

#define _Assembly_add_ModuleResolve(This,value)	\
    ( (This)->lpVtbl -> add_ModuleResolve(This,value) ) 

#define _Assembly_remove_ModuleResolve(This,value)	\
    ( (This)->lpVtbl -> remove_ModuleResolve(This,value) ) 

#define _Assembly_GetType_4(This,name,throwOnError,ignoreCase,pRetVal)	\
    ( (This)->lpVtbl -> GetType_4(This,name,throwOnError,ignoreCase,pRetVal) ) 

#define _Assembly_GetSatelliteAssembly(This,culture,pRetVal)	\
    ( (This)->lpVtbl -> GetSatelliteAssembly(This,culture,pRetVal) ) 

#define _Assembly_GetSatelliteAssembly_2(This,culture,Version,pRetVal)	\
    ( (This)->lpVtbl -> GetSatelliteAssembly_2(This,culture,Version,pRetVal) ) 

#define _Assembly_LoadModule(This,moduleName,rawModule,pRetVal)	\
    ( (This)->lpVtbl -> LoadModule(This,moduleName,rawModule,pRetVal) ) 

#define _Assembly_LoadModule_2(This,moduleName,rawModule,rawSymbolStore,pRetVal)	\
    ( (This)->lpVtbl -> LoadModule_2(This,moduleName,rawModule,rawSymbolStore,pRetVal) ) 

#define _Assembly_CreateInstance(This,typeName,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance(This,typeName,pRetVal) ) 

#define _Assembly_CreateInstance_2(This,typeName,ignoreCase,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance_2(This,typeName,ignoreCase,pRetVal) ) 

#define _Assembly_CreateInstance_3(This,typeName,ignoreCase,bindingAttr,Binder,args,culture,activationAttributes,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance_3(This,typeName,ignoreCase,bindingAttr,Binder,args,culture,activationAttributes,pRetVal) ) 

#define _Assembly_GetLoadedModules(This,pRetVal)	\
    ( (This)->lpVtbl -> GetLoadedModules(This,pRetVal) ) 

#define _Assembly_GetLoadedModules_2(This,getResourceModules,pRetVal)	\
    ( (This)->lpVtbl -> GetLoadedModules_2(This,getResourceModules,pRetVal) ) 

#define _Assembly_GetModules(This,pRetVal)	\
    ( (This)->lpVtbl -> GetModules(This,pRetVal) ) 

#define _Assembly_GetModules_2(This,getResourceModules,pRetVal)	\
    ( (This)->lpVtbl -> GetModules_2(This,getResourceModules,pRetVal) ) 

#define _Assembly_GetModule(This,name,pRetVal)	\
    ( (This)->lpVtbl -> GetModule(This,name,pRetVal) ) 

#define _Assembly_GetReferencedAssemblies(This,pRetVal)	\
    ( (This)->lpVtbl -> GetReferencedAssemblies(This,pRetVal) ) 

#define _Assembly_get_GlobalAssemblyCache(This,pRetVal)	\
    ( (This)->lpVtbl -> get_GlobalAssemblyCache(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Assembly_INTERFACE_DEFINED__ */


#ifndef ___AssemblyName_INTERFACE_DEFINED__
#define ___AssemblyName_INTERFACE_DEFINED__

/* interface _AssemblyName */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__AssemblyName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B42B6AAC-317E-34D5-9FA9-093BB4160C50")
    _AssemblyName : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyName * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyName * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _AssemblyName * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _AssemblyName * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _AssemblyName * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _AssemblyName * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _AssemblyNameVtbl;

    interface _AssemblyName
    {
        CONST_VTBL struct _AssemblyNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyName_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _AssemblyName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyName_INTERFACE_DEFINED__ */


#ifndef ___MethodBase_INTERFACE_DEFINED__
#define ___MethodBase_INTERFACE_DEFINED__

/* interface _MethodBase */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__MethodBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6240837A-707F-3181-8E98-A36AE086766B")
    _MethodBase : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetParameters( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethodImplementationFlags( 
            /* [retval][out] */ MethodImplAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MethodHandle( 
            /* [retval][out] */ RuntimeMethodHandle *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ MethodAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_CallingConvention( 
            /* [retval][out] */ CallingConventions *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_2( 
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPrivate( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamily( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyAndAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyOrAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsStatic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFinal( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsVirtual( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsHideBySig( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAbstract( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsConstructor( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_3( 
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodBase * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodBase * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _MethodBase * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _MethodBase * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _MethodBase * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _MethodBase * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _MethodBase * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _MethodBase * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _MethodBase * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _MethodBase * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _MethodBase * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _MethodBase * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _MethodBase * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _MethodBase * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _MethodBase * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _MethodBase * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _MethodBase * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetParameters )( 
            _MethodBase * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetMethodImplementationFlags )( 
            _MethodBase * This,
            /* [retval][out] */ MethodImplAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MethodHandle )( 
            _MethodBase * This,
            /* [retval][out] */ RuntimeMethodHandle *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _MethodBase * This,
            /* [retval][out] */ MethodAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_CallingConvention )( 
            _MethodBase * This,
            /* [retval][out] */ CallingConventions *pRetVal);
        
        HRESULT ( __stdcall *Invoke_2 )( 
            _MethodBase * This,
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPublic )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPrivate )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamily )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAssembly )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyAndAssembly )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyOrAssembly )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsStatic )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFinal )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsVirtual )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsHideBySig )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAbstract )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsConstructor )( 
            _MethodBase * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *Invoke_3 )( 
            _MethodBase * This,
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } _MethodBaseVtbl;

    interface _MethodBase
    {
        CONST_VTBL struct _MethodBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodBase_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _MethodBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _MethodBase_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _MethodBase_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _MethodBase_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _MethodBase_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _MethodBase_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _MethodBase_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _MethodBase_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _MethodBase_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _MethodBase_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _MethodBase_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _MethodBase_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _MethodBase_GetParameters(This,pRetVal)	\
    ( (This)->lpVtbl -> GetParameters(This,pRetVal) ) 

#define _MethodBase_GetMethodImplementationFlags(This,pRetVal)	\
    ( (This)->lpVtbl -> GetMethodImplementationFlags(This,pRetVal) ) 

#define _MethodBase_get_MethodHandle(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodHandle(This,pRetVal) ) 

#define _MethodBase_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _MethodBase_get_CallingConvention(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CallingConvention(This,pRetVal) ) 

#define _MethodBase_Invoke_2(This,obj,invokeAttr,Binder,parameters,culture,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_2(This,obj,invokeAttr,Binder,parameters,culture,pRetVal) ) 

#define _MethodBase_get_IsPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPublic(This,pRetVal) ) 

#define _MethodBase_get_IsPrivate(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPrivate(This,pRetVal) ) 

#define _MethodBase_get_IsFamily(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamily(This,pRetVal) ) 

#define _MethodBase_get_IsAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAssembly(This,pRetVal) ) 

#define _MethodBase_get_IsFamilyAndAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyAndAssembly(This,pRetVal) ) 

#define _MethodBase_get_IsFamilyOrAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyOrAssembly(This,pRetVal) ) 

#define _MethodBase_get_IsStatic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsStatic(This,pRetVal) ) 

#define _MethodBase_get_IsFinal(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFinal(This,pRetVal) ) 

#define _MethodBase_get_IsVirtual(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsVirtual(This,pRetVal) ) 

#define _MethodBase_get_IsHideBySig(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsHideBySig(This,pRetVal) ) 

#define _MethodBase_get_IsAbstract(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAbstract(This,pRetVal) ) 

#define _MethodBase_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#define _MethodBase_get_IsConstructor(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsConstructor(This,pRetVal) ) 

#define _MethodBase_Invoke_3(This,obj,parameters,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_3(This,obj,parameters,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodBase_INTERFACE_DEFINED__ */


#ifndef ___MethodInfo_INTERFACE_DEFINED__
#define ___MethodInfo_INTERFACE_DEFINED__

/* interface _MethodInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__MethodInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F")
    _MethodInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetParameters( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethodImplementationFlags( 
            /* [retval][out] */ MethodImplAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MethodHandle( 
            /* [retval][out] */ RuntimeMethodHandle *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ MethodAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_CallingConvention( 
            /* [retval][out] */ CallingConventions *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_2( 
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPrivate( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamily( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyAndAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyOrAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsStatic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFinal( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsVirtual( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsHideBySig( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAbstract( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsConstructor( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_3( 
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_returnType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReturnTypeCustomAttributes( 
            /* [retval][out] */ ICustomAttributeProvider **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetBaseDefinition( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _MethodInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _MethodInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _MethodInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _MethodInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _MethodInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _MethodInfo * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _MethodInfo * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _MethodInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _MethodInfo * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _MethodInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _MethodInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _MethodInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _MethodInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _MethodInfo * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _MethodInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetParameters )( 
            _MethodInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetMethodImplementationFlags )( 
            _MethodInfo * This,
            /* [retval][out] */ MethodImplAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MethodHandle )( 
            _MethodInfo * This,
            /* [retval][out] */ RuntimeMethodHandle *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _MethodInfo * This,
            /* [retval][out] */ MethodAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_CallingConvention )( 
            _MethodInfo * This,
            /* [retval][out] */ CallingConventions *pRetVal);
        
        HRESULT ( __stdcall *Invoke_2 )( 
            _MethodInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPublic )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPrivate )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamily )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAssembly )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyAndAssembly )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyOrAssembly )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsStatic )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFinal )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsVirtual )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsHideBySig )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAbstract )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsConstructor )( 
            _MethodInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *Invoke_3 )( 
            _MethodInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_returnType )( 
            _MethodInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReturnTypeCustomAttributes )( 
            _MethodInfo * This,
            /* [retval][out] */ ICustomAttributeProvider **pRetVal);
        
        HRESULT ( __stdcall *GetBaseDefinition )( 
            _MethodInfo * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        END_INTERFACE
    } _MethodInfoVtbl;

    interface _MethodInfo
    {
        CONST_VTBL struct _MethodInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _MethodInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _MethodInfo_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _MethodInfo_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _MethodInfo_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _MethodInfo_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _MethodInfo_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _MethodInfo_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _MethodInfo_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _MethodInfo_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _MethodInfo_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _MethodInfo_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _MethodInfo_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _MethodInfo_GetParameters(This,pRetVal)	\
    ( (This)->lpVtbl -> GetParameters(This,pRetVal) ) 

#define _MethodInfo_GetMethodImplementationFlags(This,pRetVal)	\
    ( (This)->lpVtbl -> GetMethodImplementationFlags(This,pRetVal) ) 

#define _MethodInfo_get_MethodHandle(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodHandle(This,pRetVal) ) 

#define _MethodInfo_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _MethodInfo_get_CallingConvention(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CallingConvention(This,pRetVal) ) 

#define _MethodInfo_Invoke_2(This,obj,invokeAttr,Binder,parameters,culture,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_2(This,obj,invokeAttr,Binder,parameters,culture,pRetVal) ) 

#define _MethodInfo_get_IsPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPublic(This,pRetVal) ) 

#define _MethodInfo_get_IsPrivate(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPrivate(This,pRetVal) ) 

#define _MethodInfo_get_IsFamily(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamily(This,pRetVal) ) 

#define _MethodInfo_get_IsAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAssembly(This,pRetVal) ) 

#define _MethodInfo_get_IsFamilyAndAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyAndAssembly(This,pRetVal) ) 

#define _MethodInfo_get_IsFamilyOrAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyOrAssembly(This,pRetVal) ) 

#define _MethodInfo_get_IsStatic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsStatic(This,pRetVal) ) 

#define _MethodInfo_get_IsFinal(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFinal(This,pRetVal) ) 

#define _MethodInfo_get_IsVirtual(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsVirtual(This,pRetVal) ) 

#define _MethodInfo_get_IsHideBySig(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsHideBySig(This,pRetVal) ) 

#define _MethodInfo_get_IsAbstract(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAbstract(This,pRetVal) ) 

#define _MethodInfo_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#define _MethodInfo_get_IsConstructor(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsConstructor(This,pRetVal) ) 

#define _MethodInfo_Invoke_3(This,obj,parameters,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_3(This,obj,parameters,pRetVal) ) 

#define _MethodInfo_get_returnType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_returnType(This,pRetVal) ) 

#define _MethodInfo_get_ReturnTypeCustomAttributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReturnTypeCustomAttributes(This,pRetVal) ) 

#define _MethodInfo_GetBaseDefinition(This,pRetVal)	\
    ( (This)->lpVtbl -> GetBaseDefinition(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodInfo_INTERFACE_DEFINED__ */


#ifndef ___ConstructorInfo_INTERFACE_DEFINED__
#define ___ConstructorInfo_INTERFACE_DEFINED__

/* interface _ConstructorInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__ConstructorInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E9A19478-9646-3679-9B10-8411AE1FD57D")
    _ConstructorInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetParameters( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetMethodImplementationFlags( 
            /* [retval][out] */ MethodImplAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MethodHandle( 
            /* [retval][out] */ RuntimeMethodHandle *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ MethodAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_CallingConvention( 
            /* [retval][out] */ CallingConventions *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_2( 
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPrivate( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamily( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyAndAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyOrAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsStatic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFinal( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsVirtual( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsHideBySig( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAbstract( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsConstructor( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_3( 
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_4( 
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall Invoke_5( 
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ConstructorInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ConstructorInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ConstructorInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ConstructorInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _ConstructorInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _ConstructorInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _ConstructorInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _ConstructorInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _ConstructorInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _ConstructorInfo * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _ConstructorInfo * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _ConstructorInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _ConstructorInfo * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _ConstructorInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _ConstructorInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _ConstructorInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _ConstructorInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _ConstructorInfo * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _ConstructorInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetParameters )( 
            _ConstructorInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetMethodImplementationFlags )( 
            _ConstructorInfo * This,
            /* [retval][out] */ MethodImplAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MethodHandle )( 
            _ConstructorInfo * This,
            /* [retval][out] */ RuntimeMethodHandle *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _ConstructorInfo * This,
            /* [retval][out] */ MethodAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_CallingConvention )( 
            _ConstructorInfo * This,
            /* [retval][out] */ CallingConventions *pRetVal);
        
        HRESULT ( __stdcall *Invoke_2 )( 
            _ConstructorInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPublic )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPrivate )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamily )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAssembly )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyAndAssembly )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyOrAssembly )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsStatic )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFinal )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsVirtual )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsHideBySig )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAbstract )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsConstructor )( 
            _ConstructorInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *Invoke_3 )( 
            _ConstructorInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *Invoke_4 )( 
            _ConstructorInfo * This,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * parameters,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *Invoke_5 )( 
            _ConstructorInfo * This,
            /* [in] */ SAFEARRAY * parameters,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } _ConstructorInfoVtbl;

    interface _ConstructorInfo
    {
        CONST_VTBL struct _ConstructorInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ConstructorInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ConstructorInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ConstructorInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ConstructorInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _ConstructorInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ConstructorInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ConstructorInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _ConstructorInfo_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _ConstructorInfo_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _ConstructorInfo_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _ConstructorInfo_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _ConstructorInfo_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _ConstructorInfo_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _ConstructorInfo_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _ConstructorInfo_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _ConstructorInfo_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _ConstructorInfo_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _ConstructorInfo_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _ConstructorInfo_GetParameters(This,pRetVal)	\
    ( (This)->lpVtbl -> GetParameters(This,pRetVal) ) 

#define _ConstructorInfo_GetMethodImplementationFlags(This,pRetVal)	\
    ( (This)->lpVtbl -> GetMethodImplementationFlags(This,pRetVal) ) 

#define _ConstructorInfo_get_MethodHandle(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodHandle(This,pRetVal) ) 

#define _ConstructorInfo_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _ConstructorInfo_get_CallingConvention(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CallingConvention(This,pRetVal) ) 

#define _ConstructorInfo_Invoke_2(This,obj,invokeAttr,Binder,parameters,culture,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_2(This,obj,invokeAttr,Binder,parameters,culture,pRetVal) ) 

#define _ConstructorInfo_get_IsPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPublic(This,pRetVal) ) 

#define _ConstructorInfo_get_IsPrivate(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPrivate(This,pRetVal) ) 

#define _ConstructorInfo_get_IsFamily(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamily(This,pRetVal) ) 

#define _ConstructorInfo_get_IsAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAssembly(This,pRetVal) ) 

#define _ConstructorInfo_get_IsFamilyAndAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyAndAssembly(This,pRetVal) ) 

#define _ConstructorInfo_get_IsFamilyOrAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyOrAssembly(This,pRetVal) ) 

#define _ConstructorInfo_get_IsStatic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsStatic(This,pRetVal) ) 

#define _ConstructorInfo_get_IsFinal(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFinal(This,pRetVal) ) 

#define _ConstructorInfo_get_IsVirtual(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsVirtual(This,pRetVal) ) 

#define _ConstructorInfo_get_IsHideBySig(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsHideBySig(This,pRetVal) ) 

#define _ConstructorInfo_get_IsAbstract(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAbstract(This,pRetVal) ) 

#define _ConstructorInfo_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#define _ConstructorInfo_get_IsConstructor(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsConstructor(This,pRetVal) ) 

#define _ConstructorInfo_Invoke_3(This,obj,parameters,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_3(This,obj,parameters,pRetVal) ) 

#define _ConstructorInfo_Invoke_4(This,invokeAttr,Binder,parameters,culture,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_4(This,invokeAttr,Binder,parameters,culture,pRetVal) ) 

#define _ConstructorInfo_Invoke_5(This,parameters,pRetVal)	\
    ( (This)->lpVtbl -> Invoke_5(This,parameters,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ConstructorInfo_INTERFACE_DEFINED__ */


#ifndef ___FieldInfo_INTERFACE_DEFINED__
#define ___FieldInfo_INTERFACE_DEFINED__

/* interface _FieldInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__FieldInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8A7C1442-A9FB-366B-80D8-4939FFA6DBE0")
    _FieldInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_FieldType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetValue( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetValueDirect( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall SetValue( 
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ _CultureInfo *culture) = 0;
        
        virtual HRESULT __stdcall SetValueDirect( 
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_FieldHandle( 
            /* [retval][out] */ RuntimeFieldHandle *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ FieldAttributes *pRetVal) = 0;
        
        virtual HRESULT __stdcall SetValue_2( 
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPublic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPrivate( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamily( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyAndAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsFamilyOrAssembly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsStatic( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsInitOnly( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsLiteral( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsNotSerialized( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsPinvokeImpl( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FieldInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FieldInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FieldInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FieldInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _FieldInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _FieldInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _FieldInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _FieldInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _FieldInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _FieldInfo * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _FieldInfo * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _FieldInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _FieldInfo * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _FieldInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _FieldInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _FieldInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _FieldInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _FieldInfo * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _FieldInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_FieldType )( 
            _FieldInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetValue )( 
            _FieldInfo * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *GetValueDirect )( 
            _FieldInfo * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *SetValue )( 
            _FieldInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ _CultureInfo *culture);
        
        HRESULT ( __stdcall *SetValueDirect )( 
            _FieldInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value);
        
        /* [propget] */ HRESULT ( __stdcall *get_FieldHandle )( 
            _FieldInfo * This,
            /* [retval][out] */ RuntimeFieldHandle *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _FieldInfo * This,
            /* [retval][out] */ FieldAttributes *pRetVal);
        
        HRESULT ( __stdcall *SetValue_2 )( 
            _FieldInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPublic )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPrivate )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamily )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsAssembly )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyAndAssembly )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsFamilyOrAssembly )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsStatic )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsInitOnly )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsLiteral )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsNotSerialized )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsPinvokeImpl )( 
            _FieldInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } _FieldInfoVtbl;

    interface _FieldInfo
    {
        CONST_VTBL struct _FieldInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FieldInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FieldInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FieldInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FieldInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _FieldInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FieldInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FieldInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _FieldInfo_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _FieldInfo_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _FieldInfo_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _FieldInfo_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _FieldInfo_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _FieldInfo_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _FieldInfo_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _FieldInfo_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _FieldInfo_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _FieldInfo_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _FieldInfo_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _FieldInfo_get_FieldType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FieldType(This,pRetVal) ) 

#define _FieldInfo_GetValue(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> GetValue(This,obj,pRetVal) ) 

#define _FieldInfo_GetValueDirect(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> GetValueDirect(This,obj,pRetVal) ) 

#define _FieldInfo_SetValue(This,obj,value,invokeAttr,Binder,culture)	\
    ( (This)->lpVtbl -> SetValue(This,obj,value,invokeAttr,Binder,culture) ) 

#define _FieldInfo_SetValueDirect(This,obj,value)	\
    ( (This)->lpVtbl -> SetValueDirect(This,obj,value) ) 

#define _FieldInfo_get_FieldHandle(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FieldHandle(This,pRetVal) ) 

#define _FieldInfo_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _FieldInfo_SetValue_2(This,obj,value)	\
    ( (This)->lpVtbl -> SetValue_2(This,obj,value) ) 

#define _FieldInfo_get_IsPublic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPublic(This,pRetVal) ) 

#define _FieldInfo_get_IsPrivate(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPrivate(This,pRetVal) ) 

#define _FieldInfo_get_IsFamily(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamily(This,pRetVal) ) 

#define _FieldInfo_get_IsAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAssembly(This,pRetVal) ) 

#define _FieldInfo_get_IsFamilyAndAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyAndAssembly(This,pRetVal) ) 

#define _FieldInfo_get_IsFamilyOrAssembly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsFamilyOrAssembly(This,pRetVal) ) 

#define _FieldInfo_get_IsStatic(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsStatic(This,pRetVal) ) 

#define _FieldInfo_get_IsInitOnly(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsInitOnly(This,pRetVal) ) 

#define _FieldInfo_get_IsLiteral(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsLiteral(This,pRetVal) ) 

#define _FieldInfo_get_IsNotSerialized(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsNotSerialized(This,pRetVal) ) 

#define _FieldInfo_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#define _FieldInfo_get_IsPinvokeImpl(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsPinvokeImpl(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FieldInfo_INTERFACE_DEFINED__ */


#ifndef ___PropertyInfo_INTERFACE_DEFINED__
#define ___PropertyInfo_INTERFACE_DEFINED__

/* interface _PropertyInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__PropertyInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F59ED4E4-E68F-3218-BD77-061AA82824BF")
    _PropertyInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_PropertyType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetValue( 
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * index,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetValue_2( 
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * index,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual HRESULT __stdcall SetValue( 
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value,
            /* [in] */ SAFEARRAY * index) = 0;
        
        virtual HRESULT __stdcall SetValue_2( 
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * index,
            /* [in] */ _CultureInfo *culture) = 0;
        
        virtual HRESULT __stdcall GetAccessors( 
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetGetMethod( 
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetSetMethod( 
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetIndexParameters( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ PropertyAttributes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_CanRead( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_CanWrite( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetAccessors_2( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetGetMethod_2( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetSetMethod_2( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _PropertyInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PropertyInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PropertyInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PropertyInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _PropertyInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _PropertyInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _PropertyInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _PropertyInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _PropertyInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _PropertyInfo * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _PropertyInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _PropertyInfo * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _PropertyInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _PropertyInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _PropertyInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _PropertyInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _PropertyInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_PropertyType )( 
            _PropertyInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetValue )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ SAFEARRAY * index,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *GetValue_2 )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * index,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        HRESULT ( __stdcall *SetValue )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value,
            /* [in] */ SAFEARRAY * index);
        
        HRESULT ( __stdcall *SetValue_2 )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT obj,
            /* [in] */ VARIANT value,
            /* [in] */ BindingFlags invokeAttr,
            /* [in] */ _Binder *Binder,
            /* [in] */ SAFEARRAY * index,
            /* [in] */ _CultureInfo *culture);
        
        HRESULT ( __stdcall *GetAccessors )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetGetMethod )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetSetMethod )( 
            _PropertyInfo * This,
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetIndexParameters )( 
            _PropertyInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _PropertyInfo * This,
            /* [retval][out] */ PropertyAttributes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_CanRead )( 
            _PropertyInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_CanWrite )( 
            _PropertyInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetAccessors_2 )( 
            _PropertyInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetGetMethod_2 )( 
            _PropertyInfo * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetSetMethod_2 )( 
            _PropertyInfo * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _PropertyInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } _PropertyInfoVtbl;

    interface _PropertyInfo
    {
        CONST_VTBL struct _PropertyInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PropertyInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PropertyInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PropertyInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PropertyInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _PropertyInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PropertyInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PropertyInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _PropertyInfo_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _PropertyInfo_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _PropertyInfo_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _PropertyInfo_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _PropertyInfo_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _PropertyInfo_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _PropertyInfo_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _PropertyInfo_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _PropertyInfo_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _PropertyInfo_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _PropertyInfo_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _PropertyInfo_get_PropertyType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_PropertyType(This,pRetVal) ) 

#define _PropertyInfo_GetValue(This,obj,index,pRetVal)	\
    ( (This)->lpVtbl -> GetValue(This,obj,index,pRetVal) ) 

#define _PropertyInfo_GetValue_2(This,obj,invokeAttr,Binder,index,culture,pRetVal)	\
    ( (This)->lpVtbl -> GetValue_2(This,obj,invokeAttr,Binder,index,culture,pRetVal) ) 

#define _PropertyInfo_SetValue(This,obj,value,index)	\
    ( (This)->lpVtbl -> SetValue(This,obj,value,index) ) 

#define _PropertyInfo_SetValue_2(This,obj,value,invokeAttr,Binder,index,culture)	\
    ( (This)->lpVtbl -> SetValue_2(This,obj,value,invokeAttr,Binder,index,culture) ) 

#define _PropertyInfo_GetAccessors(This,nonPublic,pRetVal)	\
    ( (This)->lpVtbl -> GetAccessors(This,nonPublic,pRetVal) ) 

#define _PropertyInfo_GetGetMethod(This,nonPublic,pRetVal)	\
    ( (This)->lpVtbl -> GetGetMethod(This,nonPublic,pRetVal) ) 

#define _PropertyInfo_GetSetMethod(This,nonPublic,pRetVal)	\
    ( (This)->lpVtbl -> GetSetMethod(This,nonPublic,pRetVal) ) 

#define _PropertyInfo_GetIndexParameters(This,pRetVal)	\
    ( (This)->lpVtbl -> GetIndexParameters(This,pRetVal) ) 

#define _PropertyInfo_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _PropertyInfo_get_CanRead(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CanRead(This,pRetVal) ) 

#define _PropertyInfo_get_CanWrite(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CanWrite(This,pRetVal) ) 

#define _PropertyInfo_GetAccessors_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetAccessors_2(This,pRetVal) ) 

#define _PropertyInfo_GetGetMethod_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetGetMethod_2(This,pRetVal) ) 

#define _PropertyInfo_GetSetMethod_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetSetMethod_2(This,pRetVal) ) 

#define _PropertyInfo_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PropertyInfo_INTERFACE_DEFINED__ */


#ifndef ___EventInfo_INTERFACE_DEFINED__
#define ___EventInfo_INTERFACE_DEFINED__

/* interface _EventInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__EventInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9DE59C64-D889-35A1-B897-587D74469E5B")
    _EventInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
        virtual /* [custom][propget] */ HRESULT __stdcall get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual HRESULT __stdcall Equals( 
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_MemberType( 
            /* [retval][out] */ MemberTypes *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_DeclaringType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_ReflectedType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetCustomAttributes_2( 
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual HRESULT __stdcall IsDefined( 
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetAddMethod( 
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetRemoveMethod( 
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetRaiseMethod( 
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_Attributes( 
            /* [retval][out] */ EventAttributes *pRetVal) = 0;
        
        virtual HRESULT __stdcall GetAddMethod_2( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetRemoveMethod_2( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetRaiseMethod_2( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual HRESULT __stdcall AddEventHandler( 
            /* [in] */ VARIANT Target,
            /* [in] */ _Delegate *handler) = 0;
        
        virtual HRESULT __stdcall RemoveEventHandler( 
            /* [in] */ VARIANT Target,
            /* [in] */ _Delegate *handler) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_EventHandlerType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsSpecialName( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget] */ HRESULT __stdcall get_IsMulticast( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _EventInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EventInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EventInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EventInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _EventInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _EventInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _EventInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _EventInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        /* [custom][propget] */ HRESULT ( __stdcall *get_ToString )( 
            _EventInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        HRESULT ( __stdcall *Equals )( 
            _EventInfo * This,
            /* [in] */ VARIANT other,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetHashCode )( 
            _EventInfo * This,
            /* [retval][out] */ long *pRetVal);
        
        HRESULT ( __stdcall *GetType )( 
            _EventInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_MemberType )( 
            _EventInfo * This,
            /* [retval][out] */ MemberTypes *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_name )( 
            _EventInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_DeclaringType )( 
            _EventInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_ReflectedType )( 
            _EventInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes )( 
            _EventInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *GetCustomAttributes_2 )( 
            _EventInfo * This,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        HRESULT ( __stdcall *IsDefined )( 
            _EventInfo * This,
            /* [in] */ _Type *attributeType,
            /* [in] */ VARIANT_BOOL inherit,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *GetAddMethod )( 
            _EventInfo * This,
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetRemoveMethod )( 
            _EventInfo * This,
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetRaiseMethod )( 
            _EventInfo * This,
            /* [in] */ VARIANT_BOOL nonPublic,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_Attributes )( 
            _EventInfo * This,
            /* [retval][out] */ EventAttributes *pRetVal);
        
        HRESULT ( __stdcall *GetAddMethod_2 )( 
            _EventInfo * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetRemoveMethod_2 )( 
            _EventInfo * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *GetRaiseMethod_2 )( 
            _EventInfo * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        HRESULT ( __stdcall *AddEventHandler )( 
            _EventInfo * This,
            /* [in] */ VARIANT Target,
            /* [in] */ _Delegate *handler);
        
        HRESULT ( __stdcall *RemoveEventHandler )( 
            _EventInfo * This,
            /* [in] */ VARIANT Target,
            /* [in] */ _Delegate *handler);
        
        /* [propget] */ HRESULT ( __stdcall *get_EventHandlerType )( 
            _EventInfo * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsSpecialName )( 
            _EventInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget] */ HRESULT ( __stdcall *get_IsMulticast )( 
            _EventInfo * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } _EventInfoVtbl;

    interface _EventInfo
    {
        CONST_VTBL struct _EventInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EventInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EventInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EventInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EventInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _EventInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EventInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EventInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#define _EventInfo_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _EventInfo_Equals(This,other,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,other,pRetVal) ) 

#define _EventInfo_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _EventInfo_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _EventInfo_get_MemberType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MemberType(This,pRetVal) ) 

#define _EventInfo_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define _EventInfo_get_DeclaringType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_DeclaringType(This,pRetVal) ) 

#define _EventInfo_get_ReflectedType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReflectedType(This,pRetVal) ) 

#define _EventInfo_GetCustomAttributes(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes(This,attributeType,inherit,pRetVal) ) 

#define _EventInfo_GetCustomAttributes_2(This,inherit,pRetVal)	\
    ( (This)->lpVtbl -> GetCustomAttributes_2(This,inherit,pRetVal) ) 

#define _EventInfo_IsDefined(This,attributeType,inherit,pRetVal)	\
    ( (This)->lpVtbl -> IsDefined(This,attributeType,inherit,pRetVal) ) 

#define _EventInfo_GetAddMethod(This,nonPublic,pRetVal)	\
    ( (This)->lpVtbl -> GetAddMethod(This,nonPublic,pRetVal) ) 

#define _EventInfo_GetRemoveMethod(This,nonPublic,pRetVal)	\
    ( (This)->lpVtbl -> GetRemoveMethod(This,nonPublic,pRetVal) ) 

#define _EventInfo_GetRaiseMethod(This,nonPublic,pRetVal)	\
    ( (This)->lpVtbl -> GetRaiseMethod(This,nonPublic,pRetVal) ) 

#define _EventInfo_get_Attributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Attributes(This,pRetVal) ) 

#define _EventInfo_GetAddMethod_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetAddMethod_2(This,pRetVal) ) 

#define _EventInfo_GetRemoveMethod_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetRemoveMethod_2(This,pRetVal) ) 

#define _EventInfo_GetRaiseMethod_2(This,pRetVal)	\
    ( (This)->lpVtbl -> GetRaiseMethod_2(This,pRetVal) ) 

#define _EventInfo_AddEventHandler(This,Target,handler)	\
    ( (This)->lpVtbl -> AddEventHandler(This,Target,handler) ) 

#define _EventInfo_RemoveEventHandler(This,Target,handler)	\
    ( (This)->lpVtbl -> RemoveEventHandler(This,Target,handler) ) 

#define _EventInfo_get_EventHandlerType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_EventHandlerType(This,pRetVal) ) 

#define _EventInfo_get_IsSpecialName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsSpecialName(This,pRetVal) ) 

#define _EventInfo_get_IsMulticast(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsMulticast(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EventInfo_INTERFACE_DEFINED__ */


#ifndef ___ParameterInfo_INTERFACE_DEFINED__
#define ___ParameterInfo_INTERFACE_DEFINED__

/* interface _ParameterInfo */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__ParameterInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("993634C4-E47A-32CC-BE08-85F567DC27D6")
    _ParameterInfo : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ParameterInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ParameterInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ParameterInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ParameterInfo * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _ParameterInfo * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _ParameterInfo * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _ParameterInfo * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _ParameterInfo * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _ParameterInfoVtbl;

    interface _ParameterInfo
    {
        CONST_VTBL struct _ParameterInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ParameterInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ParameterInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ParameterInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ParameterInfo_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _ParameterInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ParameterInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ParameterInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ParameterInfo_INTERFACE_DEFINED__ */


#ifndef ___Module_INTERFACE_DEFINED__
#define ___Module_INTERFACE_DEFINED__

/* interface _Module */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__Module;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D002E9BA-D9E3-3749-B1D3-D565A08B13E7")
    _Module : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ModuleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Module * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Module * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Module * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _Module * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _Module * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _Module * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _Module * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _ModuleVtbl;

    interface _Module
    {
        CONST_VTBL struct _ModuleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Module_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Module_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Module_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Module_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _Module_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Module_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Module_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Module_INTERFACE_DEFINED__ */


#ifndef __IFormatter_INTERFACE_DEFINED__
#define __IFormatter_INTERFACE_DEFINED__

/* interface IFormatter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("93D7A8C5-D2EB-319B-A374-A65D321F2AA9")
    IFormatter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Deserialize( 
            /* [in] */ _Stream *serializationStream,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Serialize( 
            /* [in] */ _Stream *serializationStream,
            /* [in] */ VARIANT graph) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SurrogateSelector( 
            /* [retval][out] */ ISurrogateSelector **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_SurrogateSelector( 
            /* [in] */ ISurrogateSelector *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Binder( 
            /* [retval][out] */ _SerializationBinder **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Binder( 
            /* [in] */ _SerializationBinder *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Context( 
            /* [retval][out] */ StreamingContext *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_Context( 
            /* [in] */ StreamingContext pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Deserialize )( 
            IFormatter * This,
            /* [in] */ _Stream *serializationStream,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Serialize )( 
            IFormatter * This,
            /* [in] */ _Stream *serializationStream,
            /* [in] */ VARIANT graph);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SurrogateSelector )( 
            IFormatter * This,
            /* [retval][out] */ ISurrogateSelector **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_SurrogateSelector )( 
            IFormatter * This,
            /* [in] */ ISurrogateSelector *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Binder )( 
            IFormatter * This,
            /* [retval][out] */ _SerializationBinder **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Binder )( 
            IFormatter * This,
            /* [in] */ _SerializationBinder *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Context )( 
            IFormatter * This,
            /* [retval][out] */ StreamingContext *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_Context )( 
            IFormatter * This,
            /* [in] */ StreamingContext pRetVal);
        
        END_INTERFACE
    } IFormatterVtbl;

    interface IFormatter
    {
        CONST_VTBL struct IFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFormatter_Deserialize(This,serializationStream,pRetVal)	\
    ( (This)->lpVtbl -> Deserialize(This,serializationStream,pRetVal) ) 

#define IFormatter_Serialize(This,serializationStream,graph)	\
    ( (This)->lpVtbl -> Serialize(This,serializationStream,graph) ) 

#define IFormatter_get_SurrogateSelector(This,pRetVal)	\
    ( (This)->lpVtbl -> get_SurrogateSelector(This,pRetVal) ) 

#define IFormatter_putref_SurrogateSelector(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_SurrogateSelector(This,pRetVal) ) 

#define IFormatter_get_Binder(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Binder(This,pRetVal) ) 

#define IFormatter_putref_Binder(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_Binder(This,pRetVal) ) 

#define IFormatter_get_Context(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Context(This,pRetVal) ) 

#define IFormatter_put_Context(This,pRetVal)	\
    ( (This)->lpVtbl -> put_Context(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFormatter_INTERFACE_DEFINED__ */


#ifndef __IFormatterConverter_INTERFACE_DEFINED__
#define __IFormatterConverter_INTERFACE_DEFINED__

/* interface IFormatterConverter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IFormatterConverter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4F5C303-FAD3-3D0C-A4DF-BB82B5EE308F")
    IFormatterConverter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Convert( 
            /* [in] */ VARIANT value,
            /* [in] */ _Type *Type,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE Convert_2( 
            /* [in] */ VARIANT value,
            /* [in] */ TypeCode TypeCode,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToBoolean( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToChar( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned short *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToSByte( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned char *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToByte( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned char *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToInt16( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ short *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToUInt16( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned short *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToInt32( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToUInt32( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToInt64( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ Int64 *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToUInt64( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ UInt64 *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToSingle( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ Single *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToDouble( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ double *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToDecimal( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ wchar_t *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToDateTime( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ DATE *pRetVal) = 0;
        
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [in] */ VARIANT value,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IFormatterConverterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFormatterConverter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFormatterConverter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFormatterConverter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFormatterConverter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFormatterConverter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFormatterConverter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFormatterConverter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Convert )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [in] */ _Type *Type,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *Convert_2 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [in] */ TypeCode TypeCode,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToBoolean )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToChar )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned short *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToSByte )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned char *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToByte )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned char *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToInt16 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ short *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToUInt16 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned short *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToInt32 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToUInt32 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ unsigned long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToInt64 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ Int64 *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToUInt64 )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ UInt64 *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToSingle )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ Single *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToDouble )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ double *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToDecimal )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ wchar_t *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToDateTime )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ DATE *pRetVal);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            IFormatterConverter * This,
            /* [in] */ VARIANT value,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } IFormatterConverterVtbl;

    interface IFormatterConverter
    {
        CONST_VTBL struct IFormatterConverterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFormatterConverter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFormatterConverter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFormatterConverter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFormatterConverter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFormatterConverter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFormatterConverter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFormatterConverter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFormatterConverter_Convert(This,value,Type,pRetVal)	\
    ( (This)->lpVtbl -> Convert(This,value,Type,pRetVal) ) 

#define IFormatterConverter_Convert_2(This,value,TypeCode,pRetVal)	\
    ( (This)->lpVtbl -> Convert_2(This,value,TypeCode,pRetVal) ) 

#define IFormatterConverter_ToBoolean(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToBoolean(This,value,pRetVal) ) 

#define IFormatterConverter_ToChar(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToChar(This,value,pRetVal) ) 

#define IFormatterConverter_ToSByte(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToSByte(This,value,pRetVal) ) 

#define IFormatterConverter_ToByte(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToByte(This,value,pRetVal) ) 

#define IFormatterConverter_ToInt16(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToInt16(This,value,pRetVal) ) 

#define IFormatterConverter_ToUInt16(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToUInt16(This,value,pRetVal) ) 

#define IFormatterConverter_ToInt32(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToInt32(This,value,pRetVal) ) 

#define IFormatterConverter_ToUInt32(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToUInt32(This,value,pRetVal) ) 

#define IFormatterConverter_ToInt64(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToInt64(This,value,pRetVal) ) 

#define IFormatterConverter_ToUInt64(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToUInt64(This,value,pRetVal) ) 

#define IFormatterConverter_ToSingle(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToSingle(This,value,pRetVal) ) 

#define IFormatterConverter_ToDouble(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToDouble(This,value,pRetVal) ) 

#define IFormatterConverter_ToDecimal(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToDecimal(This,value,pRetVal) ) 

#define IFormatterConverter_ToDateTime(This,value,pRetVal)	\
    ( (This)->lpVtbl -> ToDateTime(This,value,pRetVal) ) 

#define IFormatterConverter_get_ToString(This,value,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,value,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFormatterConverter_INTERFACE_DEFINED__ */


#ifndef __ISerializationSurrogate_INTERFACE_DEFINED__
#define __ISerializationSurrogate_INTERFACE_DEFINED__

/* interface ISerializationSurrogate */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISerializationSurrogate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("62339172-DBFA-337B-8AC8-053B241E06AB")
    ISerializationSurrogate : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObjectData( 
            /* [in] */ VARIANT obj,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SetObjectData( 
            /* [in] */ VARIANT obj,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context,
            /* [in] */ ISurrogateSelector *selector,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISerializationSurrogateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISerializationSurrogate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISerializationSurrogate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISerializationSurrogate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISerializationSurrogate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISerializationSurrogate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISerializationSurrogate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISerializationSurrogate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectData )( 
            ISerializationSurrogate * This,
            /* [in] */ VARIANT obj,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SetObjectData )( 
            ISerializationSurrogate * This,
            /* [in] */ VARIANT obj,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context,
            /* [in] */ ISurrogateSelector *selector,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } ISerializationSurrogateVtbl;

    interface ISerializationSurrogate
    {
        CONST_VTBL struct ISerializationSurrogateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISerializationSurrogate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISerializationSurrogate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISerializationSurrogate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISerializationSurrogate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISerializationSurrogate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISerializationSurrogate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISerializationSurrogate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISerializationSurrogate_GetObjectData(This,obj,info,Context)	\
    ( (This)->lpVtbl -> GetObjectData(This,obj,info,Context) ) 

#define ISerializationSurrogate_SetObjectData(This,obj,info,Context,selector,pRetVal)	\
    ( (This)->lpVtbl -> SetObjectData(This,obj,info,Context,selector,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISerializationSurrogate_INTERFACE_DEFINED__ */


#ifndef __ISurrogateSelector_INTERFACE_DEFINED__
#define __ISurrogateSelector_INTERFACE_DEFINED__

/* interface ISurrogateSelector */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISurrogateSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7C66FF18-A1A5-3E19-857B-0E7B6A9E3F38")
    ISurrogateSelector : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ChainSelector( 
            /* [in] */ ISurrogateSelector *selector) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetSurrogate( 
            /* [in] */ _Type *Type,
            /* [in] */ StreamingContext Context,
            /* [out] */ ISurrogateSelector **selector,
            /* [retval][out] */ ISerializationSurrogate **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNextSelector( 
            /* [retval][out] */ ISurrogateSelector **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISurrogateSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISurrogateSelector * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISurrogateSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISurrogateSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISurrogateSelector * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISurrogateSelector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISurrogateSelector * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISurrogateSelector * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChainSelector )( 
            ISurrogateSelector * This,
            /* [in] */ ISurrogateSelector *selector);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetSurrogate )( 
            ISurrogateSelector * This,
            /* [in] */ _Type *Type,
            /* [in] */ StreamingContext Context,
            /* [out] */ ISurrogateSelector **selector,
            /* [retval][out] */ ISerializationSurrogate **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNextSelector )( 
            ISurrogateSelector * This,
            /* [retval][out] */ ISurrogateSelector **pRetVal);
        
        END_INTERFACE
    } ISurrogateSelectorVtbl;

    interface ISurrogateSelector
    {
        CONST_VTBL struct ISurrogateSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISurrogateSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISurrogateSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISurrogateSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISurrogateSelector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISurrogateSelector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISurrogateSelector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISurrogateSelector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISurrogateSelector_ChainSelector(This,selector)	\
    ( (This)->lpVtbl -> ChainSelector(This,selector) ) 

#define ISurrogateSelector_GetSurrogate(This,Type,Context,selector,pRetVal)	\
    ( (This)->lpVtbl -> GetSurrogate(This,Type,Context,selector,pRetVal) ) 

#define ISurrogateSelector_GetNextSelector(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNextSelector(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISurrogateSelector_INTERFACE_DEFINED__ */


#ifndef __IResourceReader_INTERFACE_DEFINED__
#define __IResourceReader_INTERFACE_DEFINED__

/* interface IResourceReader */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IResourceReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8965A22F-FBA8-36AD-8132-70BBD0DA457D")
    IResourceReader : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IDictionaryEnumerator **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IResourceReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IResourceReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IResourceReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IResourceReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IResourceReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IResourceReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IResourceReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IResourceReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IResourceReader * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            IResourceReader * This,
            /* [retval][out] */ IDictionaryEnumerator **pRetVal);
        
        END_INTERFACE
    } IResourceReaderVtbl;

    interface IResourceReader
    {
        CONST_VTBL struct IResourceReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResourceReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResourceReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResourceReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResourceReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IResourceReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IResourceReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IResourceReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IResourceReader_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define IResourceReader_GetEnumerator(This,pRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResourceReader_INTERFACE_DEFINED__ */


#ifndef __IResourceWriter_INTERFACE_DEFINED__
#define __IResourceWriter_INTERFACE_DEFINED__

/* interface IResourceWriter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IResourceWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E97AA6E5-595E-31C3-82F0-688FB91954C6")
    IResourceWriter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddResource( 
            /* [in] */ BSTR name,
            /* [in] */ BSTR value) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE AddResource_2( 
            /* [in] */ BSTR name,
            /* [in] */ VARIANT value) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE AddResource_3( 
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * value) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Close( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Generate( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IResourceWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IResourceWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IResourceWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IResourceWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IResourceWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IResourceWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IResourceWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IResourceWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddResource )( 
            IResourceWriter * This,
            /* [in] */ BSTR name,
            /* [in] */ BSTR value);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *AddResource_2 )( 
            IResourceWriter * This,
            /* [in] */ BSTR name,
            /* [in] */ VARIANT value);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *AddResource_3 )( 
            IResourceWriter * This,
            /* [in] */ BSTR name,
            /* [in] */ SAFEARRAY * value);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Close )( 
            IResourceWriter * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Generate )( 
            IResourceWriter * This);
        
        END_INTERFACE
    } IResourceWriterVtbl;

    interface IResourceWriter
    {
        CONST_VTBL struct IResourceWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IResourceWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IResourceWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IResourceWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IResourceWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IResourceWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IResourceWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IResourceWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IResourceWriter_AddResource(This,name,value)	\
    ( (This)->lpVtbl -> AddResource(This,name,value) ) 

#define IResourceWriter_AddResource_2(This,name,value)	\
    ( (This)->lpVtbl -> AddResource_2(This,name,value) ) 

#define IResourceWriter_AddResource_3(This,name,value)	\
    ( (This)->lpVtbl -> AddResource_3(This,name,value) ) 

#define IResourceWriter_Close(This)	\
    ( (This)->lpVtbl -> Close(This) ) 

#define IResourceWriter_Generate(This)	\
    ( (This)->lpVtbl -> Generate(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IResourceWriter_INTERFACE_DEFINED__ */


#ifndef __ISecurityEncodable_INTERFACE_DEFINED__
#define __ISecurityEncodable_INTERFACE_DEFINED__

/* interface ISecurityEncodable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISecurityEncodable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD46BDE5-ACDF-3CA5-B189-F0678387077F")
    ISecurityEncodable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToXml( 
            /* [retval][out] */ _SecurityElement **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FromXml( 
            /* [in] */ _SecurityElement *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISecurityEncodableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISecurityEncodable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISecurityEncodable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISecurityEncodable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISecurityEncodable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISecurityEncodable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISecurityEncodable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISecurityEncodable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToXml )( 
            ISecurityEncodable * This,
            /* [retval][out] */ _SecurityElement **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FromXml )( 
            ISecurityEncodable * This,
            /* [in] */ _SecurityElement *e);
        
        END_INTERFACE
    } ISecurityEncodableVtbl;

    interface ISecurityEncodable
    {
        CONST_VTBL struct ISecurityEncodableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISecurityEncodable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISecurityEncodable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISecurityEncodable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISecurityEncodable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISecurityEncodable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISecurityEncodable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISecurityEncodable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISecurityEncodable_ToXml(This,pRetVal)	\
    ( (This)->lpVtbl -> ToXml(This,pRetVal) ) 

#define ISecurityEncodable_FromXml(This,e)	\
    ( (This)->lpVtbl -> FromXml(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISecurityEncodable_INTERFACE_DEFINED__ */


#ifndef __ISecurityPolicyEncodable_INTERFACE_DEFINED__
#define __ISecurityPolicyEncodable_INTERFACE_DEFINED__

/* interface ISecurityPolicyEncodable */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISecurityPolicyEncodable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E6C21BA7-21BB-34E9-8E57-DB66D8CE4A70")
    ISecurityPolicyEncodable : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ToXml( 
            /* [in] */ _PolicyLevel *level,
            /* [retval][out] */ _SecurityElement **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE FromXml( 
            /* [in] */ _SecurityElement *e,
            /* [in] */ _PolicyLevel *level) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISecurityPolicyEncodableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISecurityPolicyEncodable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISecurityPolicyEncodable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISecurityPolicyEncodable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISecurityPolicyEncodable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISecurityPolicyEncodable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISecurityPolicyEncodable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISecurityPolicyEncodable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ToXml )( 
            ISecurityPolicyEncodable * This,
            /* [in] */ _PolicyLevel *level,
            /* [retval][out] */ _SecurityElement **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *FromXml )( 
            ISecurityPolicyEncodable * This,
            /* [in] */ _SecurityElement *e,
            /* [in] */ _PolicyLevel *level);
        
        END_INTERFACE
    } ISecurityPolicyEncodableVtbl;

    interface ISecurityPolicyEncodable
    {
        CONST_VTBL struct ISecurityPolicyEncodableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISecurityPolicyEncodable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISecurityPolicyEncodable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISecurityPolicyEncodable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISecurityPolicyEncodable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISecurityPolicyEncodable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISecurityPolicyEncodable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISecurityPolicyEncodable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISecurityPolicyEncodable_ToXml(This,level,pRetVal)	\
    ( (This)->lpVtbl -> ToXml(This,level,pRetVal) ) 

#define ISecurityPolicyEncodable_FromXml(This,e,level)	\
    ( (This)->lpVtbl -> FromXml(This,e,level) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISecurityPolicyEncodable_INTERFACE_DEFINED__ */


#ifndef __IMembershipCondition_INTERFACE_DEFINED__
#define __IMembershipCondition_INTERFACE_DEFINED__

/* interface IMembershipCondition */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6844EFF4-4F86-3CA1-A1EA-AAF583A6395E")
    IMembershipCondition : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Check( 
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IMembershipCondition **pRetVal) = 0;
        
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Check )( 
            IMembershipCondition * This,
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IMembershipCondition * This,
            /* [retval][out] */ IMembershipCondition **pRetVal);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            IMembershipCondition * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            IMembershipCondition * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IMembershipConditionVtbl;

    interface IMembershipCondition
    {
        CONST_VTBL struct IMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMembershipCondition_Check(This,Evidence,pRetVal)	\
    ( (This)->lpVtbl -> Check(This,Evidence,pRetVal) ) 

#define IMembershipCondition_Copy(This,pRetVal)	\
    ( (This)->lpVtbl -> Copy(This,pRetVal) ) 

#define IMembershipCondition_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define IMembershipCondition_Equals(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,obj,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMembershipCondition_INTERFACE_DEFINED__ */


#ifndef __IIdentityPermissionFactory_INTERFACE_DEFINED__
#define __IIdentityPermissionFactory_INTERFACE_DEFINED__

/* interface IIdentityPermissionFactory */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IIdentityPermissionFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4E95244E-C6FC-3A86-8DB7-1712454DE3B6")
    IIdentityPermissionFactory : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateIdentityPermission( 
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ IPermission **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IIdentityPermissionFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIdentityPermissionFactory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIdentityPermissionFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIdentityPermissionFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIdentityPermissionFactory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIdentityPermissionFactory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIdentityPermissionFactory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIdentityPermissionFactory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateIdentityPermission )( 
            IIdentityPermissionFactory * This,
            /* [in] */ _Evidence *Evidence,
            /* [retval][out] */ IPermission **pRetVal);
        
        END_INTERFACE
    } IIdentityPermissionFactoryVtbl;

    interface IIdentityPermissionFactory
    {
        CONST_VTBL struct IIdentityPermissionFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIdentityPermissionFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIdentityPermissionFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIdentityPermissionFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIdentityPermissionFactory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIdentityPermissionFactory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIdentityPermissionFactory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIdentityPermissionFactory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIdentityPermissionFactory_CreateIdentityPermission(This,Evidence,pRetVal)	\
    ( (This)->lpVtbl -> CreateIdentityPermission(This,Evidence,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIdentityPermissionFactory_INTERFACE_DEFINED__ */


#ifndef __IApplicationTrustManager_INTERFACE_DEFINED__
#define __IApplicationTrustManager_INTERFACE_DEFINED__

/* interface IApplicationTrustManager */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IApplicationTrustManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("427E255D-AF02-3B0D-8CE3-A2BB94BA300F")
    IApplicationTrustManager : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DetermineApplicationTrust( 
            /* [in] */ IUnknown *activationContext,
            /* [in] */ _TrustManagerContext *Context,
            /* [retval][out] */ _ApplicationTrust **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IApplicationTrustManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IApplicationTrustManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IApplicationTrustManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IApplicationTrustManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IApplicationTrustManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IApplicationTrustManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IApplicationTrustManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IApplicationTrustManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DetermineApplicationTrust )( 
            IApplicationTrustManager * This,
            /* [in] */ IUnknown *activationContext,
            /* [in] */ _TrustManagerContext *Context,
            /* [retval][out] */ _ApplicationTrust **pRetVal);
        
        END_INTERFACE
    } IApplicationTrustManagerVtbl;

    interface IApplicationTrustManager
    {
        CONST_VTBL struct IApplicationTrustManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IApplicationTrustManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IApplicationTrustManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IApplicationTrustManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IApplicationTrustManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IApplicationTrustManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IApplicationTrustManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IApplicationTrustManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IApplicationTrustManager_DetermineApplicationTrust(This,activationContext,Context,pRetVal)	\
    ( (This)->lpVtbl -> DetermineApplicationTrust(This,activationContext,Context,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IApplicationTrustManager_INTERFACE_DEFINED__ */


#ifndef __IIdentity_INTERFACE_DEFINED__
#define __IIdentity_INTERFACE_DEFINED__

/* interface IIdentity */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IIdentity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4205A87-4D46-303D-B1D9-5A99F7C90D30")
    IIdentity : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_AuthenticationType( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_IsAuthenticated( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IIdentityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IIdentity * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IIdentity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IIdentity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IIdentity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IIdentity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IIdentity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IIdentity * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            IIdentity * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_AuthenticationType )( 
            IIdentity * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_IsAuthenticated )( 
            IIdentity * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IIdentityVtbl;

    interface IIdentity
    {
        CONST_VTBL struct IIdentityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IIdentity_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IIdentity_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IIdentity_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IIdentity_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IIdentity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IIdentity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IIdentity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IIdentity_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define IIdentity_get_AuthenticationType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_AuthenticationType(This,pRetVal) ) 

#define IIdentity_get_IsAuthenticated(This,pRetVal)	\
    ( (This)->lpVtbl -> get_IsAuthenticated(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IIdentity_INTERFACE_DEFINED__ */


#ifndef __IPrincipal_INTERFACE_DEFINED__
#define __IPrincipal_INTERFACE_DEFINED__

/* interface IPrincipal */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IPrincipal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4283CA6C-D291-3481-83C9-9554481FE888")
    IPrincipal : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Identity( 
            /* [retval][out] */ IIdentity **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsInRole( 
            /* [in] */ BSTR role,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPrincipalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPrincipal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPrincipal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPrincipal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPrincipal * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPrincipal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPrincipal * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPrincipal * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Identity )( 
            IPrincipal * This,
            /* [retval][out] */ IIdentity **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsInRole )( 
            IPrincipal * This,
            /* [in] */ BSTR role,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IPrincipalVtbl;

    interface IPrincipal
    {
        CONST_VTBL struct IPrincipalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPrincipal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPrincipal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPrincipal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPrincipal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPrincipal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPrincipal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPrincipal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPrincipal_get_Identity(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Identity(This,pRetVal) ) 

#define IPrincipal_IsInRole(This,role,pRetVal)	\
    ( (This)->lpVtbl -> IsInRole(This,role,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPrincipal_INTERFACE_DEFINED__ */


#ifndef __ICustomMarshaler_INTERFACE_DEFINED__
#define __ICustomMarshaler_INTERFACE_DEFINED__

/* interface ICustomMarshaler */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICustomMarshaler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("601CD486-04BF-3213-9EA9-06EBE4351D74")
    ICustomMarshaler : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MarshalNativeToManaged( 
            /* [in] */ Int64 pNativeData,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MarshalManagedToNative( 
            /* [in] */ VARIANT ManagedObj,
            /* [retval][out] */ Int64 *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CleanUpNativeData( 
            /* [in] */ Int64 pNativeData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CleanUpManagedData( 
            /* [in] */ VARIANT ManagedObj) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetNativeDataSize( 
            /* [retval][out] */ long *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICustomMarshalerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICustomMarshaler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICustomMarshaler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICustomMarshaler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICustomMarshaler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICustomMarshaler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICustomMarshaler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICustomMarshaler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *MarshalNativeToManaged )( 
            ICustomMarshaler * This,
            /* [in] */ Int64 pNativeData,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *MarshalManagedToNative )( 
            ICustomMarshaler * This,
            /* [in] */ VARIANT ManagedObj,
            /* [retval][out] */ Int64 *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CleanUpNativeData )( 
            ICustomMarshaler * This,
            /* [in] */ Int64 pNativeData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CleanUpManagedData )( 
            ICustomMarshaler * This,
            /* [in] */ VARIANT ManagedObj);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetNativeDataSize )( 
            ICustomMarshaler * This,
            /* [retval][out] */ long *pRetVal);
        
        END_INTERFACE
    } ICustomMarshalerVtbl;

    interface ICustomMarshaler
    {
        CONST_VTBL struct ICustomMarshalerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICustomMarshaler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICustomMarshaler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICustomMarshaler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICustomMarshaler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICustomMarshaler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICustomMarshaler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICustomMarshaler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICustomMarshaler_MarshalNativeToManaged(This,pNativeData,pRetVal)	\
    ( (This)->lpVtbl -> MarshalNativeToManaged(This,pNativeData,pRetVal) ) 

#define ICustomMarshaler_MarshalManagedToNative(This,ManagedObj,pRetVal)	\
    ( (This)->lpVtbl -> MarshalManagedToNative(This,ManagedObj,pRetVal) ) 

#define ICustomMarshaler_CleanUpNativeData(This,pNativeData)	\
    ( (This)->lpVtbl -> CleanUpNativeData(This,pNativeData) ) 

#define ICustomMarshaler_CleanUpManagedData(This,ManagedObj)	\
    ( (This)->lpVtbl -> CleanUpManagedData(This,ManagedObj) ) 

#define ICustomMarshaler_GetNativeDataSize(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNativeDataSize(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICustomMarshaler_INTERFACE_DEFINED__ */


#ifndef __ITypeLibImporterNotifySink_INTERFACE_DEFINED__
#define __ITypeLibImporterNotifySink_INTERFACE_DEFINED__

/* interface ITypeLibImporterNotifySink */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID_ITypeLibImporterNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1C3BF76-C3E4-11D3-88E7-00902754C43A")
    ITypeLibImporterNotifySink : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ReportEvent( 
            /* [in] */ ImporterEventKind eventKind,
            /* [in] */ long eventCode,
            /* [in] */ BSTR eventMsg) = 0;
        
        virtual HRESULT __stdcall ResolveRef( 
            /* [in] */ IUnknown *typeLib,
            /* [retval][out] */ _Assembly **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITypeLibImporterNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITypeLibImporterNotifySink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITypeLibImporterNotifySink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITypeLibImporterNotifySink * This);
        
        HRESULT ( __stdcall *ReportEvent )( 
            ITypeLibImporterNotifySink * This,
            /* [in] */ ImporterEventKind eventKind,
            /* [in] */ long eventCode,
            /* [in] */ BSTR eventMsg);
        
        HRESULT ( __stdcall *ResolveRef )( 
            ITypeLibImporterNotifySink * This,
            /* [in] */ IUnknown *typeLib,
            /* [retval][out] */ _Assembly **pRetVal);
        
        END_INTERFACE
    } ITypeLibImporterNotifySinkVtbl;

    interface ITypeLibImporterNotifySink
    {
        CONST_VTBL struct ITypeLibImporterNotifySinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITypeLibImporterNotifySink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITypeLibImporterNotifySink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITypeLibImporterNotifySink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITypeLibImporterNotifySink_ReportEvent(This,eventKind,eventCode,eventMsg)	\
    ( (This)->lpVtbl -> ReportEvent(This,eventKind,eventCode,eventMsg) ) 

#define ITypeLibImporterNotifySink_ResolveRef(This,typeLib,pRetVal)	\
    ( (This)->lpVtbl -> ResolveRef(This,typeLib,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITypeLibImporterNotifySink_INTERFACE_DEFINED__ */


#ifndef __ICustomAdapter_INTERFACE_DEFINED__
#define __ICustomAdapter_INTERFACE_DEFINED__

/* interface ICustomAdapter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICustomAdapter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3CC86595-FEB5-3CE9-BA14-D05C8DC3321C")
    ICustomAdapter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetUnderlyingObject( 
            /* [retval][out] */ IUnknown **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICustomAdapterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICustomAdapter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICustomAdapter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICustomAdapter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICustomAdapter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICustomAdapter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICustomAdapter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICustomAdapter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetUnderlyingObject )( 
            ICustomAdapter * This,
            /* [retval][out] */ IUnknown **pRetVal);
        
        END_INTERFACE
    } ICustomAdapterVtbl;

    interface ICustomAdapter
    {
        CONST_VTBL struct ICustomAdapterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICustomAdapter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICustomAdapter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICustomAdapter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICustomAdapter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICustomAdapter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICustomAdapter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICustomAdapter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICustomAdapter_GetUnderlyingObject(This,pRetVal)	\
    ( (This)->lpVtbl -> GetUnderlyingObject(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICustomAdapter_INTERFACE_DEFINED__ */


#ifndef __ICustomFactory_INTERFACE_DEFINED__
#define __ICustomFactory_INTERFACE_DEFINED__

/* interface ICustomFactory */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICustomFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CA9008E-EE90-356E-9F6D-B59E6006B9A4")
    ICustomFactory : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateInstance( 
            /* [in] */ _Type *serverType,
            /* [retval][out] */ _MarshalByRefObject **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICustomFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICustomFactory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICustomFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICustomFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICustomFactory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICustomFactory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICustomFactory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICustomFactory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateInstance )( 
            ICustomFactory * This,
            /* [in] */ _Type *serverType,
            /* [retval][out] */ _MarshalByRefObject **pRetVal);
        
        END_INTERFACE
    } ICustomFactoryVtbl;

    interface ICustomFactory
    {
        CONST_VTBL struct ICustomFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICustomFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICustomFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICustomFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICustomFactory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICustomFactory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICustomFactory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICustomFactory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICustomFactory_CreateInstance(This,serverType,pRetVal)	\
    ( (This)->lpVtbl -> CreateInstance(This,serverType,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICustomFactory_INTERFACE_DEFINED__ */


#ifndef __IRegistrationServices_INTERFACE_DEFINED__
#define __IRegistrationServices_INTERFACE_DEFINED__

/* interface IRegistrationServices */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IRegistrationServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CCBD682C-73A5-4568-B8B0-C7007E11ABA2")
    IRegistrationServices : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RegisterAssembly( 
            /* [in] */ _Assembly *Assembly,
            /* [in] */ AssemblyRegistrationFlags flags,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UnregisterAssembly( 
            /* [in] */ _Assembly *Assembly,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetRegistrableTypesInAssembly( 
            /* [in] */ _Assembly *Assembly,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetProgIdForType( 
            /* [in] */ _Type *Type,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RegisterTypeForComClients( 
            /* [in] */ _Type *Type,
            /* [out][in] */ Guid *G) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetManagedCategoryGuid( 
            /* [retval][out] */ Guid *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TypeRequiresRegistration( 
            /* [in] */ _Type *Type,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TypeRepresentsComType( 
            /* [in] */ _Type *Type,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRegistrationServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRegistrationServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRegistrationServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRegistrationServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRegistrationServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRegistrationServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRegistrationServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRegistrationServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RegisterAssembly )( 
            IRegistrationServices * This,
            /* [in] */ _Assembly *Assembly,
            /* [in] */ AssemblyRegistrationFlags flags,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UnregisterAssembly )( 
            IRegistrationServices * This,
            /* [in] */ _Assembly *Assembly,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRegistrableTypesInAssembly )( 
            IRegistrationServices * This,
            /* [in] */ _Assembly *Assembly,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetProgIdForType )( 
            IRegistrationServices * This,
            /* [in] */ _Type *Type,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RegisterTypeForComClients )( 
            IRegistrationServices * This,
            /* [in] */ _Type *Type,
            /* [out][in] */ Guid *G);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetManagedCategoryGuid )( 
            IRegistrationServices * This,
            /* [retval][out] */ Guid *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TypeRequiresRegistration )( 
            IRegistrationServices * This,
            /* [in] */ _Type *Type,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TypeRepresentsComType )( 
            IRegistrationServices * This,
            /* [in] */ _Type *Type,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IRegistrationServicesVtbl;

    interface IRegistrationServices
    {
        CONST_VTBL struct IRegistrationServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRegistrationServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRegistrationServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRegistrationServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRegistrationServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRegistrationServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRegistrationServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRegistrationServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRegistrationServices_RegisterAssembly(This,Assembly,flags,pRetVal)	\
    ( (This)->lpVtbl -> RegisterAssembly(This,Assembly,flags,pRetVal) ) 

#define IRegistrationServices_UnregisterAssembly(This,Assembly,pRetVal)	\
    ( (This)->lpVtbl -> UnregisterAssembly(This,Assembly,pRetVal) ) 

#define IRegistrationServices_GetRegistrableTypesInAssembly(This,Assembly,pRetVal)	\
    ( (This)->lpVtbl -> GetRegistrableTypesInAssembly(This,Assembly,pRetVal) ) 

#define IRegistrationServices_GetProgIdForType(This,Type,pRetVal)	\
    ( (This)->lpVtbl -> GetProgIdForType(This,Type,pRetVal) ) 

#define IRegistrationServices_RegisterTypeForComClients(This,Type,G)	\
    ( (This)->lpVtbl -> RegisterTypeForComClients(This,Type,G) ) 

#define IRegistrationServices_GetManagedCategoryGuid(This,pRetVal)	\
    ( (This)->lpVtbl -> GetManagedCategoryGuid(This,pRetVal) ) 

#define IRegistrationServices_TypeRequiresRegistration(This,Type,pRetVal)	\
    ( (This)->lpVtbl -> TypeRequiresRegistration(This,Type,pRetVal) ) 

#define IRegistrationServices_TypeRepresentsComType(This,Type,pRetVal)	\
    ( (This)->lpVtbl -> TypeRepresentsComType(This,Type,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRegistrationServices_INTERFACE_DEFINED__ */


#ifndef __ITypeLibExporterNotifySink_INTERFACE_DEFINED__
#define __ITypeLibExporterNotifySink_INTERFACE_DEFINED__

/* interface ITypeLibExporterNotifySink */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID_ITypeLibExporterNotifySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1C3BF77-C3E4-11D3-88E7-00902754C43A")
    ITypeLibExporterNotifySink : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ReportEvent( 
            /* [in] */ ExporterEventKind eventKind,
            /* [in] */ long eventCode,
            /* [in] */ BSTR eventMsg) = 0;
        
        virtual HRESULT __stdcall ResolveRef( 
            /* [in] */ _Assembly *Assembly,
            /* [retval][out] */ IUnknown **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITypeLibExporterNotifySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITypeLibExporterNotifySink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITypeLibExporterNotifySink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITypeLibExporterNotifySink * This);
        
        HRESULT ( __stdcall *ReportEvent )( 
            ITypeLibExporterNotifySink * This,
            /* [in] */ ExporterEventKind eventKind,
            /* [in] */ long eventCode,
            /* [in] */ BSTR eventMsg);
        
        HRESULT ( __stdcall *ResolveRef )( 
            ITypeLibExporterNotifySink * This,
            /* [in] */ _Assembly *Assembly,
            /* [retval][out] */ IUnknown **pRetVal);
        
        END_INTERFACE
    } ITypeLibExporterNotifySinkVtbl;

    interface ITypeLibExporterNotifySink
    {
        CONST_VTBL struct ITypeLibExporterNotifySinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITypeLibExporterNotifySink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITypeLibExporterNotifySink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITypeLibExporterNotifySink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITypeLibExporterNotifySink_ReportEvent(This,eventKind,eventCode,eventMsg)	\
    ( (This)->lpVtbl -> ReportEvent(This,eventKind,eventCode,eventMsg) ) 

#define ITypeLibExporterNotifySink_ResolveRef(This,Assembly,pRetVal)	\
    ( (This)->lpVtbl -> ResolveRef(This,Assembly,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITypeLibExporterNotifySink_INTERFACE_DEFINED__ */


#ifndef __ITypeLibConverter_INTERFACE_DEFINED__
#define __ITypeLibConverter_INTERFACE_DEFINED__

/* interface ITypeLibConverter */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID_ITypeLibConverter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1C3BF78-C3E4-11D3-88E7-00902754C43A")
    ITypeLibConverter : public IUnknown
    {
    public:
        virtual HRESULT __stdcall ConvertTypeLibToAssembly( 
            /* [in] */ IUnknown *typeLib,
            /* [in] */ BSTR asmFileName,
            /* [in] */ TypeLibImporterFlags flags,
            /* [in] */ ITypeLibImporterNotifySink *notifySink,
            /* [in] */ SAFEARRAY * publicKey,
            /* [in] */ _StrongNameKeyPair *keyPair,
            /* [in] */ BSTR asmNamespace,
            /* [in] */ _Version *asmVersion,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
        virtual HRESULT __stdcall ConvertAssemblyToTypeLib( 
            /* [in] */ _Assembly *Assembly,
            /* [in] */ BSTR typeLibName,
            /* [in] */ TypeLibExporterFlags flags,
            /* [in] */ ITypeLibExporterNotifySink *notifySink,
            /* [retval][out] */ IUnknown **pRetVal) = 0;
        
        virtual HRESULT __stdcall GetPrimaryInteropAssembly( 
            /* [in] */ Guid G,
            /* [in] */ long major,
            /* [in] */ long minor,
            /* [in] */ long lcid,
            /* [out] */ BSTR *asmName,
            /* [out] */ BSTR *asmCodeBase,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual HRESULT __stdcall ConvertTypeLibToAssembly_2( 
            /* [in] */ IUnknown *typeLib,
            /* [in] */ BSTR asmFileName,
            /* [in] */ long flags,
            /* [in] */ ITypeLibImporterNotifySink *notifySink,
            /* [in] */ SAFEARRAY * publicKey,
            /* [in] */ _StrongNameKeyPair *keyPair,
            /* [in] */ VARIANT_BOOL unsafeInterfaces,
            /* [retval][out] */ _AssemblyBuilder **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITypeLibConverterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITypeLibConverter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITypeLibConverter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITypeLibConverter * This);
        
        HRESULT ( __stdcall *ConvertTypeLibToAssembly )( 
            ITypeLibConverter * This,
            /* [in] */ IUnknown *typeLib,
            /* [in] */ BSTR asmFileName,
            /* [in] */ TypeLibImporterFlags flags,
            /* [in] */ ITypeLibImporterNotifySink *notifySink,
            /* [in] */ SAFEARRAY * publicKey,
            /* [in] */ _StrongNameKeyPair *keyPair,
            /* [in] */ BSTR asmNamespace,
            /* [in] */ _Version *asmVersion,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        HRESULT ( __stdcall *ConvertAssemblyToTypeLib )( 
            ITypeLibConverter * This,
            /* [in] */ _Assembly *Assembly,
            /* [in] */ BSTR typeLibName,
            /* [in] */ TypeLibExporterFlags flags,
            /* [in] */ ITypeLibExporterNotifySink *notifySink,
            /* [retval][out] */ IUnknown **pRetVal);
        
        HRESULT ( __stdcall *GetPrimaryInteropAssembly )( 
            ITypeLibConverter * This,
            /* [in] */ Guid G,
            /* [in] */ long major,
            /* [in] */ long minor,
            /* [in] */ long lcid,
            /* [out] */ BSTR *asmName,
            /* [out] */ BSTR *asmCodeBase,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        HRESULT ( __stdcall *ConvertTypeLibToAssembly_2 )( 
            ITypeLibConverter * This,
            /* [in] */ IUnknown *typeLib,
            /* [in] */ BSTR asmFileName,
            /* [in] */ long flags,
            /* [in] */ ITypeLibImporterNotifySink *notifySink,
            /* [in] */ SAFEARRAY * publicKey,
            /* [in] */ _StrongNameKeyPair *keyPair,
            /* [in] */ VARIANT_BOOL unsafeInterfaces,
            /* [retval][out] */ _AssemblyBuilder **pRetVal);
        
        END_INTERFACE
    } ITypeLibConverterVtbl;

    interface ITypeLibConverter
    {
        CONST_VTBL struct ITypeLibConverterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITypeLibConverter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITypeLibConverter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITypeLibConverter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITypeLibConverter_ConvertTypeLibToAssembly(This,typeLib,asmFileName,flags,notifySink,publicKey,keyPair,asmNamespace,asmVersion,pRetVal)	\
    ( (This)->lpVtbl -> ConvertTypeLibToAssembly(This,typeLib,asmFileName,flags,notifySink,publicKey,keyPair,asmNamespace,asmVersion,pRetVal) ) 

#define ITypeLibConverter_ConvertAssemblyToTypeLib(This,Assembly,typeLibName,flags,notifySink,pRetVal)	\
    ( (This)->lpVtbl -> ConvertAssemblyToTypeLib(This,Assembly,typeLibName,flags,notifySink,pRetVal) ) 

#define ITypeLibConverter_GetPrimaryInteropAssembly(This,G,major,minor,lcid,asmName,asmCodeBase,pRetVal)	\
    ( (This)->lpVtbl -> GetPrimaryInteropAssembly(This,G,major,minor,lcid,asmName,asmCodeBase,pRetVal) ) 

#define ITypeLibConverter_ConvertTypeLibToAssembly_2(This,typeLib,asmFileName,flags,notifySink,publicKey,keyPair,unsafeInterfaces,pRetVal)	\
    ( (This)->lpVtbl -> ConvertTypeLibToAssembly_2(This,typeLib,asmFileName,flags,notifySink,publicKey,keyPair,unsafeInterfaces,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITypeLibConverter_INTERFACE_DEFINED__ */


#ifndef __ITypeLibExporterNameProvider_INTERFACE_DEFINED__
#define __ITypeLibExporterNameProvider_INTERFACE_DEFINED__

/* interface ITypeLibExporterNameProvider */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID_ITypeLibExporterNameProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA1F3615-ACB9-486D-9EAC-1BEF87E36B09")
    ITypeLibExporterNameProvider : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetNames( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITypeLibExporterNameProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITypeLibExporterNameProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITypeLibExporterNameProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITypeLibExporterNameProvider * This);
        
        HRESULT ( __stdcall *GetNames )( 
            ITypeLibExporterNameProvider * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } ITypeLibExporterNameProviderVtbl;

    interface ITypeLibExporterNameProvider
    {
        CONST_VTBL struct ITypeLibExporterNameProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITypeLibExporterNameProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITypeLibExporterNameProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITypeLibExporterNameProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITypeLibExporterNameProvider_GetNames(This,pRetVal)	\
    ( (This)->lpVtbl -> GetNames(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITypeLibExporterNameProvider_INTERFACE_DEFINED__ */


#ifndef __IExpando_INTERFACE_DEFINED__
#define __IExpando_INTERFACE_DEFINED__

/* interface IExpando */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IExpando;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AFBF15E6-C37C-11D2-B88E-00A0C9B471B8")
    IExpando : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddField( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _FieldInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddProperty( 
            /* [in] */ BSTR name,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddMethod( 
            /* [in] */ BSTR name,
            /* [in] */ _Delegate *Method,
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE RemoveMember( 
            /* [in] */ _MemberInfo *m) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IExpandoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IExpando * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IExpando * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IExpando * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IExpando * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IExpando * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IExpando * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IExpando * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddField )( 
            IExpando * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _FieldInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddProperty )( 
            IExpando * This,
            /* [in] */ BSTR name,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddMethod )( 
            IExpando * This,
            /* [in] */ BSTR name,
            /* [in] */ _Delegate *Method,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *RemoveMember )( 
            IExpando * This,
            /* [in] */ _MemberInfo *m);
        
        END_INTERFACE
    } IExpandoVtbl;

    interface IExpando
    {
        CONST_VTBL struct IExpandoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IExpando_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IExpando_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IExpando_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IExpando_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IExpando_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IExpando_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IExpando_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IExpando_AddField(This,name,pRetVal)	\
    ( (This)->lpVtbl -> AddField(This,name,pRetVal) ) 

#define IExpando_AddProperty(This,name,pRetVal)	\
    ( (This)->lpVtbl -> AddProperty(This,name,pRetVal) ) 

#define IExpando_AddMethod(This,name,Method,pRetVal)	\
    ( (This)->lpVtbl -> AddMethod(This,name,Method,pRetVal) ) 

#define IExpando_RemoveMember(This,m)	\
    ( (This)->lpVtbl -> RemoveMember(This,m) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IExpando_INTERFACE_DEFINED__ */


#ifndef __IPermission_INTERFACE_DEFINED__
#define __IPermission_INTERFACE_DEFINED__

/* interface IPermission */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A19B3FC6-D680-3DD4-A17A-F58A7D481494")
    IPermission : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Copy( 
            /* [retval][out] */ IPermission **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Intersect( 
            /* [in] */ IPermission *Target,
            /* [retval][out] */ IPermission **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Union( 
            /* [in] */ IPermission *Target,
            /* [retval][out] */ IPermission **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsSubsetOf( 
            /* [in] */ IPermission *Target,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Demand( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Copy )( 
            IPermission * This,
            /* [retval][out] */ IPermission **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Intersect )( 
            IPermission * This,
            /* [in] */ IPermission *Target,
            /* [retval][out] */ IPermission **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Union )( 
            IPermission * This,
            /* [in] */ IPermission *Target,
            /* [retval][out] */ IPermission **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsSubsetOf )( 
            IPermission * This,
            /* [in] */ IPermission *Target,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Demand )( 
            IPermission * This);
        
        END_INTERFACE
    } IPermissionVtbl;

    interface IPermission
    {
        CONST_VTBL struct IPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IPermission_Copy(This,pRetVal)	\
    ( (This)->lpVtbl -> Copy(This,pRetVal) ) 

#define IPermission_Intersect(This,Target,pRetVal)	\
    ( (This)->lpVtbl -> Intersect(This,Target,pRetVal) ) 

#define IPermission_Union(This,Target,pRetVal)	\
    ( (This)->lpVtbl -> Union(This,Target,pRetVal) ) 

#define IPermission_IsSubsetOf(This,Target,pRetVal)	\
    ( (This)->lpVtbl -> IsSubsetOf(This,Target,pRetVal) ) 

#define IPermission_Demand(This)	\
    ( (This)->lpVtbl -> Demand(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IPermission_INTERFACE_DEFINED__ */


#ifndef __IStackWalk_INTERFACE_DEFINED__
#define __IStackWalk_INTERFACE_DEFINED__

/* interface IStackWalk */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IStackWalk;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("60FC57B0-4A46-32A0-A5B4-B05B0DE8E781")
    IStackWalk : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Assert( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Demand( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Deny( void) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE PermitOnly( void) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IStackWalkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IStackWalk * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IStackWalk * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IStackWalk * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IStackWalk * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IStackWalk * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IStackWalk * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IStackWalk * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Assert )( 
            IStackWalk * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Demand )( 
            IStackWalk * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Deny )( 
            IStackWalk * This);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *PermitOnly )( 
            IStackWalk * This);
        
        END_INTERFACE
    } IStackWalkVtbl;

    interface IStackWalk
    {
        CONST_VTBL struct IStackWalkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IStackWalk_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IStackWalk_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IStackWalk_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IStackWalk_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IStackWalk_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IStackWalk_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IStackWalk_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IStackWalk_Assert(This)	\
    ( (This)->lpVtbl -> Assert(This) ) 

#define IStackWalk_Demand(This)	\
    ( (This)->lpVtbl -> Demand(This) ) 

#define IStackWalk_Deny(This)	\
    ( (This)->lpVtbl -> Deny(This) ) 

#define IStackWalk_PermitOnly(This)	\
    ( (This)->lpVtbl -> PermitOnly(This) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IStackWalk_INTERFACE_DEFINED__ */


#ifndef __IUnrestrictedPermission_INTERFACE_DEFINED__
#define __IUnrestrictedPermission_INTERFACE_DEFINED__

/* interface IUnrestrictedPermission */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IUnrestrictedPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0F1284E6-4399-3963-8DDD-A6A4904F66C8")
    IUnrestrictedPermission : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsUnrestricted( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IUnrestrictedPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IUnrestrictedPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IUnrestrictedPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IUnrestrictedPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IUnrestrictedPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IUnrestrictedPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IUnrestrictedPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IUnrestrictedPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsUnrestricted )( 
            IUnrestrictedPermission * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IUnrestrictedPermissionVtbl;

    interface IUnrestrictedPermission
    {
        CONST_VTBL struct IUnrestrictedPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IUnrestrictedPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IUnrestrictedPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IUnrestrictedPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IUnrestrictedPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IUnrestrictedPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IUnrestrictedPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IUnrestrictedPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IUnrestrictedPermission_IsUnrestricted(This,pRetVal)	\
    ( (This)->lpVtbl -> IsUnrestricted(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IUnrestrictedPermission_INTERFACE_DEFINED__ */


#ifndef __IContextAttribute_INTERFACE_DEFINED__
#define __IContextAttribute_INTERFACE_DEFINED__

/* interface IContextAttribute */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContextAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4A68BAA3-27AA-314A-BDBB-6AE9BDFC0420")
    IContextAttribute : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsContextOK( 
            /* [in] */ _Context *ctx,
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetPropertiesForNewContext( 
            /* [in] */ IConstructionCallMessage *msg) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContextAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContextAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContextAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContextAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContextAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContextAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContextAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContextAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsContextOK )( 
            IContextAttribute * This,
            /* [in] */ _Context *ctx,
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetPropertiesForNewContext )( 
            IContextAttribute * This,
            /* [in] */ IConstructionCallMessage *msg);
        
        END_INTERFACE
    } IContextAttributeVtbl;

    interface IContextAttribute
    {
        CONST_VTBL struct IContextAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContextAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContextAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContextAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContextAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContextAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContextAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContextAttribute_IsContextOK(This,ctx,msg,pRetVal)	\
    ( (This)->lpVtbl -> IsContextOK(This,ctx,msg,pRetVal) ) 

#define IContextAttribute_GetPropertiesForNewContext(This,msg)	\
    ( (This)->lpVtbl -> GetPropertiesForNewContext(This,msg) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContextAttribute_INTERFACE_DEFINED__ */


#ifndef __IContextProperty_INTERFACE_DEFINED__
#define __IContextProperty_INTERFACE_DEFINED__

/* interface IContextProperty */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContextProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F01D896D-8D5F-3235-BE59-20E1E10DC22A")
    IContextProperty : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsNewContextOK( 
            /* [in] */ _Context *newCtx,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Freeze( 
            /* [in] */ _Context *newContext) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContextPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContextProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContextProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContextProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContextProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContextProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContextProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContextProperty * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            IContextProperty * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsNewContextOK )( 
            IContextProperty * This,
            /* [in] */ _Context *newCtx,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Freeze )( 
            IContextProperty * This,
            /* [in] */ _Context *newContext);
        
        END_INTERFACE
    } IContextPropertyVtbl;

    interface IContextProperty
    {
        CONST_VTBL struct IContextPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContextProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContextProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContextProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContextProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContextProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContextProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContextProperty_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#define IContextProperty_IsNewContextOK(This,newCtx,pRetVal)	\
    ( (This)->lpVtbl -> IsNewContextOK(This,newCtx,pRetVal) ) 

#define IContextProperty_Freeze(This,newContext)	\
    ( (This)->lpVtbl -> Freeze(This,newContext) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContextProperty_INTERFACE_DEFINED__ */


#ifndef __IActivator_INTERFACE_DEFINED__
#define __IActivator_INTERFACE_DEFINED__

/* interface IActivator */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IActivator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C02BBB79-5AA8-390D-927F-717B7BFF06A1")
    IActivator : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NextActivator( 
            /* [retval][out] */ IActivator **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_NextActivator( 
            /* [in] */ IActivator *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Activate( 
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ IConstructionReturnMessage **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_level( 
            /* [retval][out] */ ActivatorLevel *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IActivatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IActivator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IActivator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IActivator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IActivator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IActivator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IActivator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IActivator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NextActivator )( 
            IActivator * This,
            /* [retval][out] */ IActivator **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_NextActivator )( 
            IActivator * This,
            /* [in] */ IActivator *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Activate )( 
            IActivator * This,
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ IConstructionReturnMessage **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_level )( 
            IActivator * This,
            /* [retval][out] */ ActivatorLevel *pRetVal);
        
        END_INTERFACE
    } IActivatorVtbl;

    interface IActivator
    {
        CONST_VTBL struct IActivatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IActivator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IActivator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IActivator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IActivator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IActivator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IActivator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IActivator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IActivator_get_NextActivator(This,pRetVal)	\
    ( (This)->lpVtbl -> get_NextActivator(This,pRetVal) ) 

#define IActivator_putref_NextActivator(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_NextActivator(This,pRetVal) ) 

#define IActivator_Activate(This,msg,pRetVal)	\
    ( (This)->lpVtbl -> Activate(This,msg,pRetVal) ) 

#define IActivator_get_level(This,pRetVal)	\
    ( (This)->lpVtbl -> get_level(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IActivator_INTERFACE_DEFINED__ */


#ifndef __IMessageSink_INTERFACE_DEFINED__
#define __IMessageSink_INTERFACE_DEFINED__

/* interface IMessageSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMessageSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("941F8AAA-A353-3B1D-A019-12E44377F1CD")
    IMessageSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SyncProcessMessage( 
            /* [in] */ IMessage *msg,
            /* [retval][out] */ IMessage **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AsyncProcessMessage( 
            /* [in] */ IMessage *msg,
            /* [in] */ IMessageSink *replySink,
            /* [retval][out] */ IMessageCtrl **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NextSink( 
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMessageSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMessageSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMessageSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMessageSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMessageSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMessageSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMessageSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMessageSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SyncProcessMessage )( 
            IMessageSink * This,
            /* [in] */ IMessage *msg,
            /* [retval][out] */ IMessage **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessMessage )( 
            IMessageSink * This,
            /* [in] */ IMessage *msg,
            /* [in] */ IMessageSink *replySink,
            /* [retval][out] */ IMessageCtrl **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NextSink )( 
            IMessageSink * This,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        END_INTERFACE
    } IMessageSinkVtbl;

    interface IMessageSink
    {
        CONST_VTBL struct IMessageSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMessageSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMessageSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMessageSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMessageSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMessageSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMessageSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMessageSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMessageSink_SyncProcessMessage(This,msg,pRetVal)	\
    ( (This)->lpVtbl -> SyncProcessMessage(This,msg,pRetVal) ) 

#define IMessageSink_AsyncProcessMessage(This,msg,replySink,pRetVal)	\
    ( (This)->lpVtbl -> AsyncProcessMessage(This,msg,replySink,pRetVal) ) 

#define IMessageSink_get_NextSink(This,pRetVal)	\
    ( (This)->lpVtbl -> get_NextSink(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMessageSink_INTERFACE_DEFINED__ */


#ifndef __ILogicalThreadAffinative_INTERFACE_DEFINED__
#define __ILogicalThreadAffinative_INTERFACE_DEFINED__

/* interface ILogicalThreadAffinative */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ILogicalThreadAffinative;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D125449-BA27-3927-8589-3E1B34B622E5")
    ILogicalThreadAffinative : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct ILogicalThreadAffinativeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILogicalThreadAffinative * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILogicalThreadAffinative * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILogicalThreadAffinative * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILogicalThreadAffinative * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILogicalThreadAffinative * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILogicalThreadAffinative * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILogicalThreadAffinative * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } ILogicalThreadAffinativeVtbl;

    interface ILogicalThreadAffinative
    {
        CONST_VTBL struct ILogicalThreadAffinativeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILogicalThreadAffinative_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILogicalThreadAffinative_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILogicalThreadAffinative_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILogicalThreadAffinative_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILogicalThreadAffinative_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILogicalThreadAffinative_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILogicalThreadAffinative_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILogicalThreadAffinative_INTERFACE_DEFINED__ */


#ifndef __IClientResponseChannelSinkStack_INTERFACE_DEFINED__
#define __IClientResponseChannelSinkStack_INTERFACE_DEFINED__

/* interface IClientResponseChannelSinkStack */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IClientResponseChannelSinkStack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3AFAB213-F5A2-3241-93BA-329EA4BA8016")
    IClientResponseChannelSinkStack : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AsyncProcessResponse( 
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DispatchReplyMessage( 
            /* [in] */ IMessage *msg) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DispatchException( 
            /* [in] */ _Exception *e) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IClientResponseChannelSinkStackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IClientResponseChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IClientResponseChannelSinkStack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IClientResponseChannelSinkStack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IClientResponseChannelSinkStack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IClientResponseChannelSinkStack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IClientResponseChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IClientResponseChannelSinkStack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessResponse )( 
            IClientResponseChannelSinkStack * This,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DispatchReplyMessage )( 
            IClientResponseChannelSinkStack * This,
            /* [in] */ IMessage *msg);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DispatchException )( 
            IClientResponseChannelSinkStack * This,
            /* [in] */ _Exception *e);
        
        END_INTERFACE
    } IClientResponseChannelSinkStackVtbl;

    interface IClientResponseChannelSinkStack
    {
        CONST_VTBL struct IClientResponseChannelSinkStackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IClientResponseChannelSinkStack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IClientResponseChannelSinkStack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IClientResponseChannelSinkStack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IClientResponseChannelSinkStack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IClientResponseChannelSinkStack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IClientResponseChannelSinkStack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IClientResponseChannelSinkStack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IClientResponseChannelSinkStack_AsyncProcessResponse(This,headers,Stream)	\
    ( (This)->lpVtbl -> AsyncProcessResponse(This,headers,Stream) ) 

#define IClientResponseChannelSinkStack_DispatchReplyMessage(This,msg)	\
    ( (This)->lpVtbl -> DispatchReplyMessage(This,msg) ) 

#define IClientResponseChannelSinkStack_DispatchException(This,e)	\
    ( (This)->lpVtbl -> DispatchException(This,e) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IClientResponseChannelSinkStack_INTERFACE_DEFINED__ */


#ifndef __IClientChannelSinkStack_INTERFACE_DEFINED__
#define __IClientChannelSinkStack_INTERFACE_DEFINED__

/* interface IClientChannelSinkStack */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IClientChannelSinkStack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A5FDE6B-DB46-34E8-BACD-16EA5A440540")
    IClientChannelSinkStack : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Push( 
            /* [in] */ IClientChannelSink *sink,
            /* [in] */ VARIANT state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Pop( 
            /* [in] */ IClientChannelSink *sink,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IClientChannelSinkStackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IClientChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IClientChannelSinkStack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IClientChannelSinkStack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IClientChannelSinkStack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IClientChannelSinkStack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IClientChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IClientChannelSinkStack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Push )( 
            IClientChannelSinkStack * This,
            /* [in] */ IClientChannelSink *sink,
            /* [in] */ VARIANT state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Pop )( 
            IClientChannelSinkStack * This,
            /* [in] */ IClientChannelSink *sink,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } IClientChannelSinkStackVtbl;

    interface IClientChannelSinkStack
    {
        CONST_VTBL struct IClientChannelSinkStackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IClientChannelSinkStack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IClientChannelSinkStack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IClientChannelSinkStack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IClientChannelSinkStack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IClientChannelSinkStack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IClientChannelSinkStack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IClientChannelSinkStack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IClientChannelSinkStack_Push(This,sink,state)	\
    ( (This)->lpVtbl -> Push(This,sink,state) ) 

#define IClientChannelSinkStack_Pop(This,sink,pRetVal)	\
    ( (This)->lpVtbl -> Pop(This,sink,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IClientChannelSinkStack_INTERFACE_DEFINED__ */


#ifndef __IServerResponseChannelSinkStack_INTERFACE_DEFINED__
#define __IServerResponseChannelSinkStack_INTERFACE_DEFINED__

/* interface IServerResponseChannelSinkStack */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IServerResponseChannelSinkStack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9BE679A6-61FD-38FC-A7B2-89982D33338B")
    IServerResponseChannelSinkStack : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AsyncProcessResponse( 
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetResponseStream( 
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [retval][out] */ _Stream **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IServerResponseChannelSinkStackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IServerResponseChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IServerResponseChannelSinkStack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IServerResponseChannelSinkStack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IServerResponseChannelSinkStack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IServerResponseChannelSinkStack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IServerResponseChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IServerResponseChannelSinkStack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessResponse )( 
            IServerResponseChannelSinkStack * This,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetResponseStream )( 
            IServerResponseChannelSinkStack * This,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [retval][out] */ _Stream **pRetVal);
        
        END_INTERFACE
    } IServerResponseChannelSinkStackVtbl;

    interface IServerResponseChannelSinkStack
    {
        CONST_VTBL struct IServerResponseChannelSinkStackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServerResponseChannelSinkStack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServerResponseChannelSinkStack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServerResponseChannelSinkStack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServerResponseChannelSinkStack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IServerResponseChannelSinkStack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IServerResponseChannelSinkStack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IServerResponseChannelSinkStack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IServerResponseChannelSinkStack_AsyncProcessResponse(This,msg,headers,Stream)	\
    ( (This)->lpVtbl -> AsyncProcessResponse(This,msg,headers,Stream) ) 

#define IServerResponseChannelSinkStack_GetResponseStream(This,msg,headers,pRetVal)	\
    ( (This)->lpVtbl -> GetResponseStream(This,msg,headers,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServerResponseChannelSinkStack_INTERFACE_DEFINED__ */


#ifndef __IServerChannelSinkStack_INTERFACE_DEFINED__
#define __IServerChannelSinkStack_INTERFACE_DEFINED__

/* interface IServerChannelSinkStack */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IServerChannelSinkStack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E694A733-768D-314D-B317-DCEAD136B11D")
    IServerChannelSinkStack : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Push( 
            /* [in] */ IServerChannelSink *sink,
            /* [in] */ VARIANT state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Pop( 
            /* [in] */ IServerChannelSink *sink,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Store( 
            /* [in] */ IServerChannelSink *sink,
            /* [in] */ VARIANT state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StoreAndDispatch( 
            /* [in] */ IServerChannelSink *sink,
            /* [in] */ VARIANT state) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ServerCallback( 
            /* [in] */ IAsyncResult *ar) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IServerChannelSinkStackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IServerChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IServerChannelSinkStack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IServerChannelSinkStack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IServerChannelSinkStack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IServerChannelSinkStack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IServerChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IServerChannelSinkStack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Push )( 
            IServerChannelSinkStack * This,
            /* [in] */ IServerChannelSink *sink,
            /* [in] */ VARIANT state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Pop )( 
            IServerChannelSinkStack * This,
            /* [in] */ IServerChannelSink *sink,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Store )( 
            IServerChannelSinkStack * This,
            /* [in] */ IServerChannelSink *sink,
            /* [in] */ VARIANT state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StoreAndDispatch )( 
            IServerChannelSinkStack * This,
            /* [in] */ IServerChannelSink *sink,
            /* [in] */ VARIANT state);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ServerCallback )( 
            IServerChannelSinkStack * This,
            /* [in] */ IAsyncResult *ar);
        
        END_INTERFACE
    } IServerChannelSinkStackVtbl;

    interface IServerChannelSinkStack
    {
        CONST_VTBL struct IServerChannelSinkStackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServerChannelSinkStack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServerChannelSinkStack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServerChannelSinkStack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServerChannelSinkStack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IServerChannelSinkStack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IServerChannelSinkStack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IServerChannelSinkStack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IServerChannelSinkStack_Push(This,sink,state)	\
    ( (This)->lpVtbl -> Push(This,sink,state) ) 

#define IServerChannelSinkStack_Pop(This,sink,pRetVal)	\
    ( (This)->lpVtbl -> Pop(This,sink,pRetVal) ) 

#define IServerChannelSinkStack_Store(This,sink,state)	\
    ( (This)->lpVtbl -> Store(This,sink,state) ) 

#define IServerChannelSinkStack_StoreAndDispatch(This,sink,state)	\
    ( (This)->lpVtbl -> StoreAndDispatch(This,sink,state) ) 

#define IServerChannelSinkStack_ServerCallback(This,ar)	\
    ( (This)->lpVtbl -> ServerCallback(This,ar) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServerChannelSinkStack_INTERFACE_DEFINED__ */


#ifndef __ISponsor_INTERFACE_DEFINED__
#define __ISponsor_INTERFACE_DEFINED__

/* interface ISponsor */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISponsor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("675591AF-0508-3131-A7CC-287D265CA7D6")
    ISponsor : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Renewal( 
            /* [in] */ ILease *lease,
            /* [retval][out] */ TimeSpan *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISponsorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISponsor * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISponsor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISponsor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISponsor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISponsor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISponsor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISponsor * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renewal )( 
            ISponsor * This,
            /* [in] */ ILease *lease,
            /* [retval][out] */ TimeSpan *pRetVal);
        
        END_INTERFACE
    } ISponsorVtbl;

    interface ISponsor
    {
        CONST_VTBL struct ISponsorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISponsor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISponsor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISponsor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISponsor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISponsor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISponsor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISponsor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISponsor_Renewal(This,lease,pRetVal)	\
    ( (This)->lpVtbl -> Renewal(This,lease,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISponsor_INTERFACE_DEFINED__ */


#ifndef __IContextPropertyActivator_INTERFACE_DEFINED__
#define __IContextPropertyActivator_INTERFACE_DEFINED__

/* interface IContextPropertyActivator */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContextPropertyActivator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7197B56B-5FA1-31EF-B38B-62FEE737277F")
    IContextPropertyActivator : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE IsOKToActivate( 
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CollectFromClientContext( 
            /* [in] */ IConstructionCallMessage *msg) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeliverClientContextToServerContext( 
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CollectFromServerContext( 
            /* [in] */ IConstructionReturnMessage *msg) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DeliverServerContextToClientContext( 
            /* [in] */ IConstructionReturnMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContextPropertyActivatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContextPropertyActivator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContextPropertyActivator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContextPropertyActivator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContextPropertyActivator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContextPropertyActivator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContextPropertyActivator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContextPropertyActivator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *IsOKToActivate )( 
            IContextPropertyActivator * This,
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CollectFromClientContext )( 
            IContextPropertyActivator * This,
            /* [in] */ IConstructionCallMessage *msg);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeliverClientContextToServerContext )( 
            IContextPropertyActivator * This,
            /* [in] */ IConstructionCallMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CollectFromServerContext )( 
            IContextPropertyActivator * This,
            /* [in] */ IConstructionReturnMessage *msg);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DeliverServerContextToClientContext )( 
            IContextPropertyActivator * This,
            /* [in] */ IConstructionReturnMessage *msg,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IContextPropertyActivatorVtbl;

    interface IContextPropertyActivator
    {
        CONST_VTBL struct IContextPropertyActivatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContextPropertyActivator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContextPropertyActivator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContextPropertyActivator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContextPropertyActivator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContextPropertyActivator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContextPropertyActivator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContextPropertyActivator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContextPropertyActivator_IsOKToActivate(This,msg,pRetVal)	\
    ( (This)->lpVtbl -> IsOKToActivate(This,msg,pRetVal) ) 

#define IContextPropertyActivator_CollectFromClientContext(This,msg)	\
    ( (This)->lpVtbl -> CollectFromClientContext(This,msg) ) 

#define IContextPropertyActivator_DeliverClientContextToServerContext(This,msg,pRetVal)	\
    ( (This)->lpVtbl -> DeliverClientContextToServerContext(This,msg,pRetVal) ) 

#define IContextPropertyActivator_CollectFromServerContext(This,msg)	\
    ( (This)->lpVtbl -> CollectFromServerContext(This,msg) ) 

#define IContextPropertyActivator_DeliverServerContextToClientContext(This,msg,pRetVal)	\
    ( (This)->lpVtbl -> DeliverServerContextToClientContext(This,msg,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContextPropertyActivator_INTERFACE_DEFINED__ */


#ifndef __IChannel_INTERFACE_DEFINED__
#define __IChannel_INTERFACE_DEFINED__

/* interface IChannel */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("563581E8-C86D-39E2-B2E8-6C23F7987A4B")
    IChannel : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelPriority( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Parse( 
            /* [in] */ BSTR Url,
            /* [out] */ BSTR *objectURI,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannel * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannel * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannel * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannel * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelPriority )( 
            IChannel * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelName )( 
            IChannel * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Parse )( 
            IChannel * This,
            /* [in] */ BSTR Url,
            /* [out] */ BSTR *objectURI,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } IChannelVtbl;

    interface IChannel
    {
        CONST_VTBL struct IChannelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannel_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannel_get_ChannelPriority(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelPriority(This,pRetVal) ) 

#define IChannel_get_ChannelName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelName(This,pRetVal) ) 

#define IChannel_Parse(This,Url,objectURI,pRetVal)	\
    ( (This)->lpVtbl -> Parse(This,Url,objectURI,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannel_INTERFACE_DEFINED__ */


#ifndef __IChannelSender_INTERFACE_DEFINED__
#define __IChannelSender_INTERFACE_DEFINED__

/* interface IChannelSender */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannelSender;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("10F1D605-E201-3145-B7AE-3AD746701986")
    IChannelSender : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateMessageSink( 
            /* [in] */ BSTR Url,
            /* [in] */ VARIANT remoteChannelData,
            /* [out] */ BSTR *objectURI,
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelSenderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelSender * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelSender * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelSender * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannelSender * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannelSender * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannelSender * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannelSender * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateMessageSink )( 
            IChannelSender * This,
            /* [in] */ BSTR Url,
            /* [in] */ VARIANT remoteChannelData,
            /* [out] */ BSTR *objectURI,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        END_INTERFACE
    } IChannelSenderVtbl;

    interface IChannelSender
    {
        CONST_VTBL struct IChannelSenderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelSender_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelSender_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelSender_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelSender_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannelSender_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannelSender_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannelSender_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannelSender_CreateMessageSink(This,Url,remoteChannelData,objectURI,pRetVal)	\
    ( (This)->lpVtbl -> CreateMessageSink(This,Url,remoteChannelData,objectURI,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelSender_INTERFACE_DEFINED__ */


#ifndef __IChannelReceiver_INTERFACE_DEFINED__
#define __IChannelReceiver_INTERFACE_DEFINED__

/* interface IChannelReceiver */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannelReceiver;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48AD41DA-0872-31DA-9887-F81F213527E6")
    IChannelReceiver : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelData( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetUrlsForUri( 
            /* [in] */ BSTR objectURI,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StartListening( 
            /* [in] */ VARIANT data) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE StopListening( 
            /* [in] */ VARIANT data) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelReceiverVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelReceiver * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelReceiver * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelReceiver * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannelReceiver * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannelReceiver * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannelReceiver * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannelReceiver * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelData )( 
            IChannelReceiver * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetUrlsForUri )( 
            IChannelReceiver * This,
            /* [in] */ BSTR objectURI,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StartListening )( 
            IChannelReceiver * This,
            /* [in] */ VARIANT data);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *StopListening )( 
            IChannelReceiver * This,
            /* [in] */ VARIANT data);
        
        END_INTERFACE
    } IChannelReceiverVtbl;

    interface IChannelReceiver
    {
        CONST_VTBL struct IChannelReceiverVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelReceiver_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelReceiver_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelReceiver_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelReceiver_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannelReceiver_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannelReceiver_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannelReceiver_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannelReceiver_get_ChannelData(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelData(This,pRetVal) ) 

#define IChannelReceiver_GetUrlsForUri(This,objectURI,pRetVal)	\
    ( (This)->lpVtbl -> GetUrlsForUri(This,objectURI,pRetVal) ) 

#define IChannelReceiver_StartListening(This,data)	\
    ( (This)->lpVtbl -> StartListening(This,data) ) 

#define IChannelReceiver_StopListening(This,data)	\
    ( (This)->lpVtbl -> StopListening(This,data) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelReceiver_INTERFACE_DEFINED__ */


#ifndef __IServerChannelSinkProvider_INTERFACE_DEFINED__
#define __IServerChannelSinkProvider_INTERFACE_DEFINED__

/* interface IServerChannelSinkProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IServerChannelSinkProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DD6E975-24EA-323C-A98C-0FDE96F9C4E6")
    IServerChannelSinkProvider : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetChannelData( 
            /* [in] */ IChannelDataStore *ChannelData) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateSink( 
            /* [in] */ IChannelReceiver *channel,
            /* [retval][out] */ IServerChannelSink **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Next( 
            /* [retval][out] */ IServerChannelSinkProvider **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Next( 
            /* [in] */ IServerChannelSinkProvider *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IServerChannelSinkProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IServerChannelSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IServerChannelSinkProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IServerChannelSinkProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IServerChannelSinkProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IServerChannelSinkProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IServerChannelSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IServerChannelSinkProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetChannelData )( 
            IServerChannelSinkProvider * This,
            /* [in] */ IChannelDataStore *ChannelData);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateSink )( 
            IServerChannelSinkProvider * This,
            /* [in] */ IChannelReceiver *channel,
            /* [retval][out] */ IServerChannelSink **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Next )( 
            IServerChannelSinkProvider * This,
            /* [retval][out] */ IServerChannelSinkProvider **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Next )( 
            IServerChannelSinkProvider * This,
            /* [in] */ IServerChannelSinkProvider *pRetVal);
        
        END_INTERFACE
    } IServerChannelSinkProviderVtbl;

    interface IServerChannelSinkProvider
    {
        CONST_VTBL struct IServerChannelSinkProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServerChannelSinkProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServerChannelSinkProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServerChannelSinkProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServerChannelSinkProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IServerChannelSinkProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IServerChannelSinkProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IServerChannelSinkProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IServerChannelSinkProvider_GetChannelData(This,ChannelData)	\
    ( (This)->lpVtbl -> GetChannelData(This,ChannelData) ) 

#define IServerChannelSinkProvider_CreateSink(This,channel,pRetVal)	\
    ( (This)->lpVtbl -> CreateSink(This,channel,pRetVal) ) 

#define IServerChannelSinkProvider_get_Next(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Next(This,pRetVal) ) 

#define IServerChannelSinkProvider_putref_Next(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_Next(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServerChannelSinkProvider_INTERFACE_DEFINED__ */


#ifndef __IChannelSinkBase_INTERFACE_DEFINED__
#define __IChannelSinkBase_INTERFACE_DEFINED__

/* interface IChannelSinkBase */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannelSinkBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("308DE042-ACC8-32F8-B632-7CB9799D9AA6")
    IChannelSinkBase : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ IDictionary **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelSinkBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelSinkBase * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelSinkBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelSinkBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannelSinkBase * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannelSinkBase * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannelSinkBase * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannelSinkBase * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            IChannelSinkBase * This,
            /* [retval][out] */ IDictionary **pRetVal);
        
        END_INTERFACE
    } IChannelSinkBaseVtbl;

    interface IChannelSinkBase
    {
        CONST_VTBL struct IChannelSinkBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelSinkBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelSinkBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelSinkBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelSinkBase_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannelSinkBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannelSinkBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannelSinkBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannelSinkBase_get_Properties(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Properties(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelSinkBase_INTERFACE_DEFINED__ */


#ifndef __IServerChannelSink_INTERFACE_DEFINED__
#define __IServerChannelSink_INTERFACE_DEFINED__

/* interface IServerChannelSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IServerChannelSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("21B5F37B-BEF3-354C-8F84-0F9F0863F5C5")
    IServerChannelSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProcessMessage( 
            /* [in] */ IServerChannelSinkStack *sinkStack,
            /* [in] */ IMessage *requestMsg,
            /* [in] */ ITransportHeaders *requestHeaders,
            /* [in] */ _Stream *requestStream,
            /* [out] */ IMessage **responseMsg,
            /* [out] */ ITransportHeaders **responseHeaders,
            /* [out] */ _Stream **responseStream,
            /* [retval][out] */ ServerProcessing *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AsyncProcessResponse( 
            /* [in] */ IServerResponseChannelSinkStack *sinkStack,
            /* [in] */ VARIANT state,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetResponseStream( 
            /* [in] */ IServerResponseChannelSinkStack *sinkStack,
            /* [in] */ VARIANT state,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [retval][out] */ _Stream **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NextChannelSink( 
            /* [retval][out] */ IServerChannelSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IServerChannelSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IServerChannelSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IServerChannelSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IServerChannelSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IServerChannelSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IServerChannelSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IServerChannelSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IServerChannelSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessMessage )( 
            IServerChannelSink * This,
            /* [in] */ IServerChannelSinkStack *sinkStack,
            /* [in] */ IMessage *requestMsg,
            /* [in] */ ITransportHeaders *requestHeaders,
            /* [in] */ _Stream *requestStream,
            /* [out] */ IMessage **responseMsg,
            /* [out] */ ITransportHeaders **responseHeaders,
            /* [out] */ _Stream **responseStream,
            /* [retval][out] */ ServerProcessing *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessResponse )( 
            IServerChannelSink * This,
            /* [in] */ IServerResponseChannelSinkStack *sinkStack,
            /* [in] */ VARIANT state,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetResponseStream )( 
            IServerChannelSink * This,
            /* [in] */ IServerResponseChannelSinkStack *sinkStack,
            /* [in] */ VARIANT state,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [retval][out] */ _Stream **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NextChannelSink )( 
            IServerChannelSink * This,
            /* [retval][out] */ IServerChannelSink **pRetVal);
        
        END_INTERFACE
    } IServerChannelSinkVtbl;

    interface IServerChannelSink
    {
        CONST_VTBL struct IServerChannelSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServerChannelSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServerChannelSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServerChannelSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServerChannelSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IServerChannelSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IServerChannelSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IServerChannelSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IServerChannelSink_ProcessMessage(This,sinkStack,requestMsg,requestHeaders,requestStream,responseMsg,responseHeaders,responseStream,pRetVal)	\
    ( (This)->lpVtbl -> ProcessMessage(This,sinkStack,requestMsg,requestHeaders,requestStream,responseMsg,responseHeaders,responseStream,pRetVal) ) 

#define IServerChannelSink_AsyncProcessResponse(This,sinkStack,state,msg,headers,Stream)	\
    ( (This)->lpVtbl -> AsyncProcessResponse(This,sinkStack,state,msg,headers,Stream) ) 

#define IServerChannelSink_GetResponseStream(This,sinkStack,state,msg,headers,pRetVal)	\
    ( (This)->lpVtbl -> GetResponseStream(This,sinkStack,state,msg,headers,pRetVal) ) 

#define IServerChannelSink_get_NextChannelSink(This,pRetVal)	\
    ( (This)->lpVtbl -> get_NextChannelSink(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServerChannelSink_INTERFACE_DEFINED__ */


#ifndef __IMessage_INTERFACE_DEFINED__
#define __IMessage_INTERFACE_DEFINED__

/* interface IMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1A8B0DE6-B825-38C5-B744-8F93075FD6FA")
    IMessage : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Properties( 
            /* [retval][out] */ IDictionary **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Properties )( 
            IMessage * This,
            /* [retval][out] */ IDictionary **pRetVal);
        
        END_INTERFACE
    } IMessageVtbl;

    interface IMessage
    {
        CONST_VTBL struct IMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMessage_get_Properties(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Properties(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMessage_INTERFACE_DEFINED__ */


#ifndef __IMethodMessage_INTERFACE_DEFINED__
#define __IMethodMessage_INTERFACE_DEFINED__

/* interface IMethodMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMethodMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E5E0B95-750E-310D-892C-8CA7231CF75B")
    IMethodMessage : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Uri( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MethodName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_typeName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MethodSignature( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ArgCount( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetArgName( 
            /* [in] */ long index,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetArg( 
            /* [in] */ long argNum,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_args( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_HasVarArgs( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_LogicalCallContext( 
            /* [retval][out] */ _LogicalCallContext **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MethodBase( 
            /* [retval][out] */ _MethodBase **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMethodMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMethodMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMethodMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMethodMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMethodMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMethodMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMethodMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMethodMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Uri )( 
            IMethodMessage * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MethodName )( 
            IMethodMessage * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_typeName )( 
            IMethodMessage * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MethodSignature )( 
            IMethodMessage * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ArgCount )( 
            IMethodMessage * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetArgName )( 
            IMethodMessage * This,
            /* [in] */ long index,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetArg )( 
            IMethodMessage * This,
            /* [in] */ long argNum,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_args )( 
            IMethodMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_HasVarArgs )( 
            IMethodMessage * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_LogicalCallContext )( 
            IMethodMessage * This,
            /* [retval][out] */ _LogicalCallContext **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MethodBase )( 
            IMethodMessage * This,
            /* [retval][out] */ _MethodBase **pRetVal);
        
        END_INTERFACE
    } IMethodMessageVtbl;

    interface IMethodMessage
    {
        CONST_VTBL struct IMethodMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMethodMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMethodMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMethodMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMethodMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMethodMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMethodMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMethodMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMethodMessage_get_Uri(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Uri(This,pRetVal) ) 

#define IMethodMessage_get_MethodName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodName(This,pRetVal) ) 

#define IMethodMessage_get_typeName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_typeName(This,pRetVal) ) 

#define IMethodMessage_get_MethodSignature(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodSignature(This,pRetVal) ) 

#define IMethodMessage_get_ArgCount(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ArgCount(This,pRetVal) ) 

#define IMethodMessage_GetArgName(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetArgName(This,index,pRetVal) ) 

#define IMethodMessage_GetArg(This,argNum,pRetVal)	\
    ( (This)->lpVtbl -> GetArg(This,argNum,pRetVal) ) 

#define IMethodMessage_get_args(This,pRetVal)	\
    ( (This)->lpVtbl -> get_args(This,pRetVal) ) 

#define IMethodMessage_get_HasVarArgs(This,pRetVal)	\
    ( (This)->lpVtbl -> get_HasVarArgs(This,pRetVal) ) 

#define IMethodMessage_get_LogicalCallContext(This,pRetVal)	\
    ( (This)->lpVtbl -> get_LogicalCallContext(This,pRetVal) ) 

#define IMethodMessage_get_MethodBase(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodBase(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMethodMessage_INTERFACE_DEFINED__ */


#ifndef __IMethodCallMessage_INTERFACE_DEFINED__
#define __IMethodCallMessage_INTERFACE_DEFINED__

/* interface IMethodCallMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMethodCallMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B90EFAA6-25E4-33D2-ACA3-94BF74DC4AB9")
    IMethodCallMessage : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InArgCount( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetInArgName( 
            /* [in] */ long index,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetInArg( 
            /* [in] */ long argNum,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InArgs( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMethodCallMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMethodCallMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMethodCallMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMethodCallMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMethodCallMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMethodCallMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMethodCallMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMethodCallMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InArgCount )( 
            IMethodCallMessage * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetInArgName )( 
            IMethodCallMessage * This,
            /* [in] */ long index,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetInArg )( 
            IMethodCallMessage * This,
            /* [in] */ long argNum,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InArgs )( 
            IMethodCallMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } IMethodCallMessageVtbl;

    interface IMethodCallMessage
    {
        CONST_VTBL struct IMethodCallMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMethodCallMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMethodCallMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMethodCallMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMethodCallMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMethodCallMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMethodCallMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMethodCallMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMethodCallMessage_get_InArgCount(This,pRetVal)	\
    ( (This)->lpVtbl -> get_InArgCount(This,pRetVal) ) 

#define IMethodCallMessage_GetInArgName(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetInArgName(This,index,pRetVal) ) 

#define IMethodCallMessage_GetInArg(This,argNum,pRetVal)	\
    ( (This)->lpVtbl -> GetInArg(This,argNum,pRetVal) ) 

#define IMethodCallMessage_get_InArgs(This,pRetVal)	\
    ( (This)->lpVtbl -> get_InArgs(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMethodCallMessage_INTERFACE_DEFINED__ */


#ifndef __IConstructionCallMessage_INTERFACE_DEFINED__
#define __IConstructionCallMessage_INTERFACE_DEFINED__

/* interface IConstructionCallMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IConstructionCallMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA28E3AF-7D09-31D5-BEEB-7F2626497CDE")
    IConstructionCallMessage : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Activator( 
            /* [retval][out] */ IActivator **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Activator( 
            /* [in] */ IActivator *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CallSiteActivationAttributes( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ActivationTypeName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ActivationType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ContextProperties( 
            /* [retval][out] */ IList **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IConstructionCallMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IConstructionCallMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IConstructionCallMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IConstructionCallMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IConstructionCallMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IConstructionCallMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IConstructionCallMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IConstructionCallMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Activator )( 
            IConstructionCallMessage * This,
            /* [retval][out] */ IActivator **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Activator )( 
            IConstructionCallMessage * This,
            /* [in] */ IActivator *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CallSiteActivationAttributes )( 
            IConstructionCallMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActivationTypeName )( 
            IConstructionCallMessage * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ActivationType )( 
            IConstructionCallMessage * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ContextProperties )( 
            IConstructionCallMessage * This,
            /* [retval][out] */ IList **pRetVal);
        
        END_INTERFACE
    } IConstructionCallMessageVtbl;

    interface IConstructionCallMessage
    {
        CONST_VTBL struct IConstructionCallMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConstructionCallMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConstructionCallMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConstructionCallMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConstructionCallMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IConstructionCallMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IConstructionCallMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IConstructionCallMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IConstructionCallMessage_get_Activator(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Activator(This,pRetVal) ) 

#define IConstructionCallMessage_putref_Activator(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_Activator(This,pRetVal) ) 

#define IConstructionCallMessage_get_CallSiteActivationAttributes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CallSiteActivationAttributes(This,pRetVal) ) 

#define IConstructionCallMessage_get_ActivationTypeName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ActivationTypeName(This,pRetVal) ) 

#define IConstructionCallMessage_get_ActivationType(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ActivationType(This,pRetVal) ) 

#define IConstructionCallMessage_get_ContextProperties(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ContextProperties(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConstructionCallMessage_INTERFACE_DEFINED__ */


#ifndef __IMethodReturnMessage_INTERFACE_DEFINED__
#define __IMethodReturnMessage_INTERFACE_DEFINED__

/* interface IMethodReturnMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMethodReturnMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F617690A-55F4-36AF-9149-D199831F8594")
    IMethodReturnMessage : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OutArgCount( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetOutArgName( 
            /* [in] */ long index,
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetOutArg( 
            /* [in] */ long argNum,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OutArgs( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Exception( 
            /* [retval][out] */ _Exception **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ReturnValue( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMethodReturnMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMethodReturnMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMethodReturnMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMethodReturnMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMethodReturnMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMethodReturnMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMethodReturnMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMethodReturnMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutArgCount )( 
            IMethodReturnMessage * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetOutArgName )( 
            IMethodReturnMessage * This,
            /* [in] */ long index,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetOutArg )( 
            IMethodReturnMessage * This,
            /* [in] */ long argNum,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutArgs )( 
            IMethodReturnMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Exception )( 
            IMethodReturnMessage * This,
            /* [retval][out] */ _Exception **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ReturnValue )( 
            IMethodReturnMessage * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } IMethodReturnMessageVtbl;

    interface IMethodReturnMessage
    {
        CONST_VTBL struct IMethodReturnMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMethodReturnMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMethodReturnMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMethodReturnMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMethodReturnMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMethodReturnMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMethodReturnMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMethodReturnMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMethodReturnMessage_get_OutArgCount(This,pRetVal)	\
    ( (This)->lpVtbl -> get_OutArgCount(This,pRetVal) ) 

#define IMethodReturnMessage_GetOutArgName(This,index,pRetVal)	\
    ( (This)->lpVtbl -> GetOutArgName(This,index,pRetVal) ) 

#define IMethodReturnMessage_GetOutArg(This,argNum,pRetVal)	\
    ( (This)->lpVtbl -> GetOutArg(This,argNum,pRetVal) ) 

#define IMethodReturnMessage_get_OutArgs(This,pRetVal)	\
    ( (This)->lpVtbl -> get_OutArgs(This,pRetVal) ) 

#define IMethodReturnMessage_get_Exception(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Exception(This,pRetVal) ) 

#define IMethodReturnMessage_get_ReturnValue(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ReturnValue(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMethodReturnMessage_INTERFACE_DEFINED__ */


#ifndef __IConstructionReturnMessage_INTERFACE_DEFINED__
#define __IConstructionReturnMessage_INTERFACE_DEFINED__

/* interface IConstructionReturnMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IConstructionReturnMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CA0AB564-F5E9-3A7F-A80B-EB0AEEFA44E9")
    IConstructionReturnMessage : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IConstructionReturnMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IConstructionReturnMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IConstructionReturnMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IConstructionReturnMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IConstructionReturnMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IConstructionReturnMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IConstructionReturnMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IConstructionReturnMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } IConstructionReturnMessageVtbl;

    interface IConstructionReturnMessage
    {
        CONST_VTBL struct IConstructionReturnMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IConstructionReturnMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IConstructionReturnMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IConstructionReturnMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IConstructionReturnMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IConstructionReturnMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IConstructionReturnMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IConstructionReturnMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IConstructionReturnMessage_INTERFACE_DEFINED__ */


#ifndef __IChannelReceiverHook_INTERFACE_DEFINED__
#define __IChannelReceiverHook_INTERFACE_DEFINED__

/* interface IChannelReceiverHook */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannelReceiverHook;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A02D3F7-3F40-3022-853D-CFDA765182FE")
    IChannelReceiverHook : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelScheme( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_WantsToListen( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelSinkChain( 
            /* [retval][out] */ IServerChannelSink **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AddHookChannelUri( 
            /* [in] */ BSTR channelUri) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelReceiverHookVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelReceiverHook * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelReceiverHook * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelReceiverHook * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannelReceiverHook * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannelReceiverHook * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannelReceiverHook * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannelReceiverHook * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelScheme )( 
            IChannelReceiverHook * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_WantsToListen )( 
            IChannelReceiverHook * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelSinkChain )( 
            IChannelReceiverHook * This,
            /* [retval][out] */ IServerChannelSink **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AddHookChannelUri )( 
            IChannelReceiverHook * This,
            /* [in] */ BSTR channelUri);
        
        END_INTERFACE
    } IChannelReceiverHookVtbl;

    interface IChannelReceiverHook
    {
        CONST_VTBL struct IChannelReceiverHookVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelReceiverHook_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelReceiverHook_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelReceiverHook_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelReceiverHook_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannelReceiverHook_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannelReceiverHook_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannelReceiverHook_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannelReceiverHook_get_ChannelScheme(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelScheme(This,pRetVal) ) 

#define IChannelReceiverHook_get_WantsToListen(This,pRetVal)	\
    ( (This)->lpVtbl -> get_WantsToListen(This,pRetVal) ) 

#define IChannelReceiverHook_get_ChannelSinkChain(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelSinkChain(This,pRetVal) ) 

#define IChannelReceiverHook_AddHookChannelUri(This,channelUri)	\
    ( (This)->lpVtbl -> AddHookChannelUri(This,channelUri) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelReceiverHook_INTERFACE_DEFINED__ */


#ifndef __IClientChannelSinkProvider_INTERFACE_DEFINED__
#define __IClientChannelSinkProvider_INTERFACE_DEFINED__

/* interface IClientChannelSinkProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IClientChannelSinkProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F8742C2-AC57-3440-A283-FE5FF4C75025")
    IClientChannelSinkProvider : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateSink( 
            /* [in] */ IChannelSender *channel,
            /* [in] */ BSTR Url,
            /* [in] */ VARIANT remoteChannelData,
            /* [retval][out] */ IClientChannelSink **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Next( 
            /* [retval][out] */ IClientChannelSinkProvider **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Next( 
            /* [in] */ IClientChannelSinkProvider *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IClientChannelSinkProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IClientChannelSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IClientChannelSinkProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IClientChannelSinkProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IClientChannelSinkProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IClientChannelSinkProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IClientChannelSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IClientChannelSinkProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateSink )( 
            IClientChannelSinkProvider * This,
            /* [in] */ IChannelSender *channel,
            /* [in] */ BSTR Url,
            /* [in] */ VARIANT remoteChannelData,
            /* [retval][out] */ IClientChannelSink **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Next )( 
            IClientChannelSinkProvider * This,
            /* [retval][out] */ IClientChannelSinkProvider **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Next )( 
            IClientChannelSinkProvider * This,
            /* [in] */ IClientChannelSinkProvider *pRetVal);
        
        END_INTERFACE
    } IClientChannelSinkProviderVtbl;

    interface IClientChannelSinkProvider
    {
        CONST_VTBL struct IClientChannelSinkProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IClientChannelSinkProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IClientChannelSinkProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IClientChannelSinkProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IClientChannelSinkProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IClientChannelSinkProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IClientChannelSinkProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IClientChannelSinkProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IClientChannelSinkProvider_CreateSink(This,channel,Url,remoteChannelData,pRetVal)	\
    ( (This)->lpVtbl -> CreateSink(This,channel,Url,remoteChannelData,pRetVal) ) 

#define IClientChannelSinkProvider_get_Next(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Next(This,pRetVal) ) 

#define IClientChannelSinkProvider_putref_Next(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_Next(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IClientChannelSinkProvider_INTERFACE_DEFINED__ */


#ifndef __IClientFormatterSinkProvider_INTERFACE_DEFINED__
#define __IClientFormatterSinkProvider_INTERFACE_DEFINED__

/* interface IClientFormatterSinkProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IClientFormatterSinkProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D94B6F3-DA91-3C2F-B876-083769667468")
    IClientFormatterSinkProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IClientFormatterSinkProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IClientFormatterSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IClientFormatterSinkProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IClientFormatterSinkProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IClientFormatterSinkProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IClientFormatterSinkProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IClientFormatterSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IClientFormatterSinkProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } IClientFormatterSinkProviderVtbl;

    interface IClientFormatterSinkProvider
    {
        CONST_VTBL struct IClientFormatterSinkProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IClientFormatterSinkProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IClientFormatterSinkProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IClientFormatterSinkProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IClientFormatterSinkProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IClientFormatterSinkProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IClientFormatterSinkProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IClientFormatterSinkProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IClientFormatterSinkProvider_INTERFACE_DEFINED__ */


#ifndef __IServerFormatterSinkProvider_INTERFACE_DEFINED__
#define __IServerFormatterSinkProvider_INTERFACE_DEFINED__

/* interface IServerFormatterSinkProvider */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IServerFormatterSinkProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("042B5200-4317-3E4D-B653-7E9A08F1A5F2")
    IServerFormatterSinkProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IServerFormatterSinkProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IServerFormatterSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IServerFormatterSinkProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IServerFormatterSinkProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IServerFormatterSinkProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IServerFormatterSinkProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IServerFormatterSinkProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IServerFormatterSinkProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } IServerFormatterSinkProviderVtbl;

    interface IServerFormatterSinkProvider
    {
        CONST_VTBL struct IServerFormatterSinkProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IServerFormatterSinkProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IServerFormatterSinkProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IServerFormatterSinkProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IServerFormatterSinkProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IServerFormatterSinkProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IServerFormatterSinkProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IServerFormatterSinkProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IServerFormatterSinkProvider_INTERFACE_DEFINED__ */


#ifndef __IClientChannelSink_INTERFACE_DEFINED__
#define __IClientChannelSink_INTERFACE_DEFINED__

/* interface IClientChannelSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IClientChannelSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF726320-6B92-3E6C-AAAC-F97063D0B142")
    IClientChannelSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProcessMessage( 
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *requestHeaders,
            /* [in] */ _Stream *requestStream,
            /* [out] */ ITransportHeaders **responseHeaders,
            /* [out] */ _Stream **responseStream) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AsyncProcessRequest( 
            /* [in] */ IClientChannelSinkStack *sinkStack,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE AsyncProcessResponse( 
            /* [in] */ IClientResponseChannelSinkStack *sinkStack,
            /* [in] */ VARIANT state,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetRequestStream( 
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [retval][out] */ _Stream **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_NextChannelSink( 
            /* [retval][out] */ IClientChannelSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IClientChannelSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IClientChannelSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IClientChannelSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IClientChannelSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IClientChannelSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IClientChannelSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IClientChannelSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IClientChannelSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessMessage )( 
            IClientChannelSink * This,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *requestHeaders,
            /* [in] */ _Stream *requestStream,
            /* [out] */ ITransportHeaders **responseHeaders,
            /* [out] */ _Stream **responseStream);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessRequest )( 
            IClientChannelSink * This,
            /* [in] */ IClientChannelSinkStack *sinkStack,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *AsyncProcessResponse )( 
            IClientChannelSink * This,
            /* [in] */ IClientResponseChannelSinkStack *sinkStack,
            /* [in] */ VARIANT state,
            /* [in] */ ITransportHeaders *headers,
            /* [in] */ _Stream *Stream);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetRequestStream )( 
            IClientChannelSink * This,
            /* [in] */ IMessage *msg,
            /* [in] */ ITransportHeaders *headers,
            /* [retval][out] */ _Stream **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_NextChannelSink )( 
            IClientChannelSink * This,
            /* [retval][out] */ IClientChannelSink **pRetVal);
        
        END_INTERFACE
    } IClientChannelSinkVtbl;

    interface IClientChannelSink
    {
        CONST_VTBL struct IClientChannelSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IClientChannelSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IClientChannelSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IClientChannelSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IClientChannelSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IClientChannelSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IClientChannelSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IClientChannelSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IClientChannelSink_ProcessMessage(This,msg,requestHeaders,requestStream,responseHeaders,responseStream)	\
    ( (This)->lpVtbl -> ProcessMessage(This,msg,requestHeaders,requestStream,responseHeaders,responseStream) ) 

#define IClientChannelSink_AsyncProcessRequest(This,sinkStack,msg,headers,Stream)	\
    ( (This)->lpVtbl -> AsyncProcessRequest(This,sinkStack,msg,headers,Stream) ) 

#define IClientChannelSink_AsyncProcessResponse(This,sinkStack,state,headers,Stream)	\
    ( (This)->lpVtbl -> AsyncProcessResponse(This,sinkStack,state,headers,Stream) ) 

#define IClientChannelSink_GetRequestStream(This,msg,headers,pRetVal)	\
    ( (This)->lpVtbl -> GetRequestStream(This,msg,headers,pRetVal) ) 

#define IClientChannelSink_get_NextChannelSink(This,pRetVal)	\
    ( (This)->lpVtbl -> get_NextChannelSink(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IClientChannelSink_INTERFACE_DEFINED__ */


#ifndef __IClientFormatterSink_INTERFACE_DEFINED__
#define __IClientFormatterSink_INTERFACE_DEFINED__

/* interface IClientFormatterSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IClientFormatterSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("46527C03-B144-3CF0-86B3-B8776148A6E9")
    IClientFormatterSink : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct IClientFormatterSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IClientFormatterSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IClientFormatterSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IClientFormatterSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IClientFormatterSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IClientFormatterSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IClientFormatterSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IClientFormatterSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } IClientFormatterSinkVtbl;

    interface IClientFormatterSink
    {
        CONST_VTBL struct IClientFormatterSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IClientFormatterSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IClientFormatterSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IClientFormatterSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IClientFormatterSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IClientFormatterSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IClientFormatterSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IClientFormatterSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IClientFormatterSink_INTERFACE_DEFINED__ */


#ifndef __IChannelDataStore_INTERFACE_DEFINED__
#define __IChannelDataStore_INTERFACE_DEFINED__

/* interface IChannelDataStore */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannelDataStore;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1E250CCD-DC30-3217-A7E4-148F375A0088")
    IChannelDataStore : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelUris( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Item( 
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelDataStoreVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelDataStore * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelDataStore * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelDataStore * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannelDataStore * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannelDataStore * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannelDataStore * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannelDataStore * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelUris )( 
            IChannelDataStore * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            IChannelDataStore * This,
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Item )( 
            IChannelDataStore * This,
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT pRetVal);
        
        END_INTERFACE
    } IChannelDataStoreVtbl;

    interface IChannelDataStore
    {
        CONST_VTBL struct IChannelDataStoreVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelDataStore_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelDataStore_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelDataStore_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelDataStore_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannelDataStore_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannelDataStore_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannelDataStore_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannelDataStore_get_ChannelUris(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelUris(This,pRetVal) ) 

#define IChannelDataStore_get_Item(This,key,pRetVal)	\
    ( (This)->lpVtbl -> get_Item(This,key,pRetVal) ) 

#define IChannelDataStore_putref_Item(This,key,pRetVal)	\
    ( (This)->lpVtbl -> putref_Item(This,key,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelDataStore_INTERFACE_DEFINED__ */


#ifndef __ITransportHeaders_INTERFACE_DEFINED__
#define __ITransportHeaders_INTERFACE_DEFINED__

/* interface ITransportHeaders */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ITransportHeaders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1AC82FBE-4FF0-383C-BBFD-FE40ECB3628D")
    ITransportHeaders : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Item( 
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_Item( 
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetEnumerator( 
            /* [retval][out] */ IEnumVARIANT **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITransportHeadersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITransportHeaders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITransportHeaders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITransportHeaders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ITransportHeaders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ITransportHeaders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ITransportHeaders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ITransportHeaders * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Item )( 
            ITransportHeaders * This,
            /* [in] */ VARIANT key,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_Item )( 
            ITransportHeaders * This,
            /* [in] */ VARIANT key,
            /* [in] */ VARIANT pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetEnumerator )( 
            ITransportHeaders * This,
            /* [retval][out] */ IEnumVARIANT **pRetVal);
        
        END_INTERFACE
    } ITransportHeadersVtbl;

    interface ITransportHeaders
    {
        CONST_VTBL struct ITransportHeadersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITransportHeaders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITransportHeaders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITransportHeaders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITransportHeaders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ITransportHeaders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ITransportHeaders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ITransportHeaders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ITransportHeaders_get_Item(This,key,pRetVal)	\
    ( (This)->lpVtbl -> get_Item(This,key,pRetVal) ) 

#define ITransportHeaders_putref_Item(This,key,pRetVal)	\
    ( (This)->lpVtbl -> putref_Item(This,key,pRetVal) ) 

#define ITransportHeaders_GetEnumerator(This,pRetVal)	\
    ( (This)->lpVtbl -> GetEnumerator(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITransportHeaders_INTERFACE_DEFINED__ */


#ifndef __IContributeClientContextSink_INTERFACE_DEFINED__
#define __IContributeClientContextSink_INTERFACE_DEFINED__

/* interface IContributeClientContextSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContributeClientContextSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4DB956B7-69D0-312A-AA75-44FB55FD5D4B")
    IContributeClientContextSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetClientContextSink( 
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContributeClientContextSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContributeClientContextSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContributeClientContextSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContributeClientContextSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContributeClientContextSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContributeClientContextSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContributeClientContextSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContributeClientContextSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetClientContextSink )( 
            IContributeClientContextSink * This,
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        END_INTERFACE
    } IContributeClientContextSinkVtbl;

    interface IContributeClientContextSink
    {
        CONST_VTBL struct IContributeClientContextSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContributeClientContextSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContributeClientContextSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContributeClientContextSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContributeClientContextSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContributeClientContextSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContributeClientContextSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContributeClientContextSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContributeClientContextSink_GetClientContextSink(This,NextSink,pRetVal)	\
    ( (This)->lpVtbl -> GetClientContextSink(This,NextSink,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContributeClientContextSink_INTERFACE_DEFINED__ */


#ifndef __IContributeDynamicSink_INTERFACE_DEFINED__
#define __IContributeDynamicSink_INTERFACE_DEFINED__

/* interface IContributeDynamicSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContributeDynamicSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A0FE9B86-0C06-32CE-85FA-2FF1B58697FB")
    IContributeDynamicSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetDynamicSink( 
            /* [retval][out] */ IDynamicMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContributeDynamicSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContributeDynamicSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContributeDynamicSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContributeDynamicSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContributeDynamicSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContributeDynamicSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContributeDynamicSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContributeDynamicSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetDynamicSink )( 
            IContributeDynamicSink * This,
            /* [retval][out] */ IDynamicMessageSink **pRetVal);
        
        END_INTERFACE
    } IContributeDynamicSinkVtbl;

    interface IContributeDynamicSink
    {
        CONST_VTBL struct IContributeDynamicSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContributeDynamicSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContributeDynamicSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContributeDynamicSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContributeDynamicSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContributeDynamicSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContributeDynamicSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContributeDynamicSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContributeDynamicSink_GetDynamicSink(This,pRetVal)	\
    ( (This)->lpVtbl -> GetDynamicSink(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContributeDynamicSink_INTERFACE_DEFINED__ */


#ifndef __IContributeEnvoySink_INTERFACE_DEFINED__
#define __IContributeEnvoySink_INTERFACE_DEFINED__

/* interface IContributeEnvoySink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContributeEnvoySink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("124777B6-0308-3569-97E5-E6FE88EAE4EB")
    IContributeEnvoySink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetEnvoySink( 
            /* [in] */ _MarshalByRefObject *obj,
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContributeEnvoySinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContributeEnvoySink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContributeEnvoySink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContributeEnvoySink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContributeEnvoySink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContributeEnvoySink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContributeEnvoySink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContributeEnvoySink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetEnvoySink )( 
            IContributeEnvoySink * This,
            /* [in] */ _MarshalByRefObject *obj,
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        END_INTERFACE
    } IContributeEnvoySinkVtbl;

    interface IContributeEnvoySink
    {
        CONST_VTBL struct IContributeEnvoySinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContributeEnvoySink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContributeEnvoySink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContributeEnvoySink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContributeEnvoySink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContributeEnvoySink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContributeEnvoySink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContributeEnvoySink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContributeEnvoySink_GetEnvoySink(This,obj,NextSink,pRetVal)	\
    ( (This)->lpVtbl -> GetEnvoySink(This,obj,NextSink,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContributeEnvoySink_INTERFACE_DEFINED__ */


#ifndef __IContributeObjectSink_INTERFACE_DEFINED__
#define __IContributeObjectSink_INTERFACE_DEFINED__

/* interface IContributeObjectSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContributeObjectSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6A5D38BC-2789-3546-81A1-F10C0FB59366")
    IContributeObjectSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObjectSink( 
            /* [in] */ _MarshalByRefObject *obj,
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContributeObjectSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContributeObjectSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContributeObjectSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContributeObjectSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContributeObjectSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContributeObjectSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContributeObjectSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContributeObjectSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectSink )( 
            IContributeObjectSink * This,
            /* [in] */ _MarshalByRefObject *obj,
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        END_INTERFACE
    } IContributeObjectSinkVtbl;

    interface IContributeObjectSink
    {
        CONST_VTBL struct IContributeObjectSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContributeObjectSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContributeObjectSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContributeObjectSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContributeObjectSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContributeObjectSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContributeObjectSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContributeObjectSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContributeObjectSink_GetObjectSink(This,obj,NextSink,pRetVal)	\
    ( (This)->lpVtbl -> GetObjectSink(This,obj,NextSink,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContributeObjectSink_INTERFACE_DEFINED__ */


#ifndef __IContributeServerContextSink_INTERFACE_DEFINED__
#define __IContributeServerContextSink_INTERFACE_DEFINED__

/* interface IContributeServerContextSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IContributeServerContextSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CAA23EC-F78C-39C9-8D25-B7A9CE4097A7")
    IContributeServerContextSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetServerContextSink( 
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IContributeServerContextSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IContributeServerContextSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IContributeServerContextSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IContributeServerContextSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IContributeServerContextSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IContributeServerContextSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IContributeServerContextSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IContributeServerContextSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetServerContextSink )( 
            IContributeServerContextSink * This,
            /* [in] */ IMessageSink *NextSink,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        END_INTERFACE
    } IContributeServerContextSinkVtbl;

    interface IContributeServerContextSink
    {
        CONST_VTBL struct IContributeServerContextSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IContributeServerContextSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IContributeServerContextSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IContributeServerContextSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IContributeServerContextSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IContributeServerContextSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IContributeServerContextSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IContributeServerContextSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IContributeServerContextSink_GetServerContextSink(This,NextSink,pRetVal)	\
    ( (This)->lpVtbl -> GetServerContextSink(This,NextSink,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IContributeServerContextSink_INTERFACE_DEFINED__ */


#ifndef __IDynamicProperty_INTERFACE_DEFINED__
#define __IDynamicProperty_INTERFACE_DEFINED__

/* interface IDynamicProperty */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IDynamicProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("00A358D4-4D58-3B9D-8FB6-FB7F6BC1713B")
    IDynamicProperty : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_name( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDynamicPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDynamicProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDynamicProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDynamicProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDynamicProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDynamicProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDynamicProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDynamicProperty * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_name )( 
            IDynamicProperty * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } IDynamicPropertyVtbl;

    interface IDynamicProperty
    {
        CONST_VTBL struct IDynamicPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDynamicProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDynamicProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDynamicProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDynamicProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDynamicProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDynamicProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDynamicProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDynamicProperty_get_name(This,pRetVal)	\
    ( (This)->lpVtbl -> get_name(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDynamicProperty_INTERFACE_DEFINED__ */


#ifndef __IDynamicMessageSink_INTERFACE_DEFINED__
#define __IDynamicMessageSink_INTERFACE_DEFINED__

/* interface IDynamicMessageSink */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IDynamicMessageSink;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C74076BB-8A2D-3C20-A542-625329E9AF04")
    IDynamicMessageSink : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProcessMessageStart( 
            /* [in] */ IMessage *reqMsg,
            /* [in] */ VARIANT_BOOL bCliSide,
            /* [in] */ VARIANT_BOOL bAsync) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ProcessMessageFinish( 
            /* [in] */ IMessage *replyMsg,
            /* [in] */ VARIANT_BOOL bCliSide,
            /* [in] */ VARIANT_BOOL bAsync) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IDynamicMessageSinkVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IDynamicMessageSink * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IDynamicMessageSink * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IDynamicMessageSink * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IDynamicMessageSink * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IDynamicMessageSink * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IDynamicMessageSink * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IDynamicMessageSink * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessMessageStart )( 
            IDynamicMessageSink * This,
            /* [in] */ IMessage *reqMsg,
            /* [in] */ VARIANT_BOOL bCliSide,
            /* [in] */ VARIANT_BOOL bAsync);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ProcessMessageFinish )( 
            IDynamicMessageSink * This,
            /* [in] */ IMessage *replyMsg,
            /* [in] */ VARIANT_BOOL bCliSide,
            /* [in] */ VARIANT_BOOL bAsync);
        
        END_INTERFACE
    } IDynamicMessageSinkVtbl;

    interface IDynamicMessageSink
    {
        CONST_VTBL struct IDynamicMessageSinkVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IDynamicMessageSink_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IDynamicMessageSink_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IDynamicMessageSink_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IDynamicMessageSink_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IDynamicMessageSink_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IDynamicMessageSink_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IDynamicMessageSink_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IDynamicMessageSink_ProcessMessageStart(This,reqMsg,bCliSide,bAsync)	\
    ( (This)->lpVtbl -> ProcessMessageStart(This,reqMsg,bCliSide,bAsync) ) 

#define IDynamicMessageSink_ProcessMessageFinish(This,replyMsg,bCliSide,bAsync)	\
    ( (This)->lpVtbl -> ProcessMessageFinish(This,replyMsg,bCliSide,bAsync) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IDynamicMessageSink_INTERFACE_DEFINED__ */


#ifndef __ILease_INTERFACE_DEFINED__
#define __ILease_INTERFACE_DEFINED__

/* interface ILease */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ILease;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("53A561F2-CBBF-3748-BFFE-2180002DB3DF")
    ILease : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Register( 
            /* [in] */ ISponsor *obj,
            /* [in] */ TimeSpan renewalTime) = 0;
        
        virtual /* [custom][id] */ HRESULT STDMETHODCALLTYPE Register_2( 
            /* [in] */ ISponsor *obj) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unregister( 
            /* [in] */ ISponsor *obj) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Renew( 
            /* [in] */ TimeSpan renewalTime,
            /* [retval][out] */ TimeSpan *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_RenewOnCallTime( 
            /* [retval][out] */ TimeSpan *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_RenewOnCallTime( 
            /* [in] */ TimeSpan pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_SponsorshipTimeout( 
            /* [retval][out] */ TimeSpan *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_SponsorshipTimeout( 
            /* [in] */ TimeSpan pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InitialLeaseTime( 
            /* [retval][out] */ TimeSpan *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_InitialLeaseTime( 
            /* [in] */ TimeSpan pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentLeaseTime( 
            /* [retval][out] */ TimeSpan *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CurrentState( 
            /* [retval][out] */ LeaseState *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ILeaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ILease * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ILease * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ILease * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ILease * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ILease * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ILease * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ILease * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Register )( 
            ILease * This,
            /* [in] */ ISponsor *obj,
            /* [in] */ TimeSpan renewalTime);
        
        /* [custom][id] */ HRESULT ( STDMETHODCALLTYPE *Register_2 )( 
            ILease * This,
            /* [in] */ ISponsor *obj);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unregister )( 
            ILease * This,
            /* [in] */ ISponsor *obj);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Renew )( 
            ILease * This,
            /* [in] */ TimeSpan renewalTime,
            /* [retval][out] */ TimeSpan *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_RenewOnCallTime )( 
            ILease * This,
            /* [retval][out] */ TimeSpan *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_RenewOnCallTime )( 
            ILease * This,
            /* [in] */ TimeSpan pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_SponsorshipTimeout )( 
            ILease * This,
            /* [retval][out] */ TimeSpan *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_SponsorshipTimeout )( 
            ILease * This,
            /* [in] */ TimeSpan pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InitialLeaseTime )( 
            ILease * This,
            /* [retval][out] */ TimeSpan *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_InitialLeaseTime )( 
            ILease * This,
            /* [in] */ TimeSpan pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentLeaseTime )( 
            ILease * This,
            /* [retval][out] */ TimeSpan *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CurrentState )( 
            ILease * This,
            /* [retval][out] */ LeaseState *pRetVal);
        
        END_INTERFACE
    } ILeaseVtbl;

    interface ILease
    {
        CONST_VTBL struct ILeaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ILease_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ILease_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ILease_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ILease_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ILease_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ILease_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ILease_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ILease_Register(This,obj,renewalTime)	\
    ( (This)->lpVtbl -> Register(This,obj,renewalTime) ) 

#define ILease_Register_2(This,obj)	\
    ( (This)->lpVtbl -> Register_2(This,obj) ) 

#define ILease_Unregister(This,obj)	\
    ( (This)->lpVtbl -> Unregister(This,obj) ) 

#define ILease_Renew(This,renewalTime,pRetVal)	\
    ( (This)->lpVtbl -> Renew(This,renewalTime,pRetVal) ) 

#define ILease_get_RenewOnCallTime(This,pRetVal)	\
    ( (This)->lpVtbl -> get_RenewOnCallTime(This,pRetVal) ) 

#define ILease_put_RenewOnCallTime(This,pRetVal)	\
    ( (This)->lpVtbl -> put_RenewOnCallTime(This,pRetVal) ) 

#define ILease_get_SponsorshipTimeout(This,pRetVal)	\
    ( (This)->lpVtbl -> get_SponsorshipTimeout(This,pRetVal) ) 

#define ILease_put_SponsorshipTimeout(This,pRetVal)	\
    ( (This)->lpVtbl -> put_SponsorshipTimeout(This,pRetVal) ) 

#define ILease_get_InitialLeaseTime(This,pRetVal)	\
    ( (This)->lpVtbl -> get_InitialLeaseTime(This,pRetVal) ) 

#define ILease_put_InitialLeaseTime(This,pRetVal)	\
    ( (This)->lpVtbl -> put_InitialLeaseTime(This,pRetVal) ) 

#define ILease_get_CurrentLeaseTime(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CurrentLeaseTime(This,pRetVal) ) 

#define ILease_get_CurrentState(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CurrentState(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ILease_INTERFACE_DEFINED__ */


#ifndef __IMessageCtrl_INTERFACE_DEFINED__
#define __IMessageCtrl_INTERFACE_DEFINED__

/* interface IMessageCtrl */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IMessageCtrl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3677CBB0-784D-3C15-BBC8-75CD7DC3901E")
    IMessageCtrl : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Cancel( 
            /* [in] */ long msToCancel) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IMessageCtrlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IMessageCtrl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IMessageCtrl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IMessageCtrl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IMessageCtrl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IMessageCtrl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IMessageCtrl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IMessageCtrl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Cancel )( 
            IMessageCtrl * This,
            /* [in] */ long msToCancel);
        
        END_INTERFACE
    } IMessageCtrlVtbl;

    interface IMessageCtrl
    {
        CONST_VTBL struct IMessageCtrlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IMessageCtrl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IMessageCtrl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IMessageCtrl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IMessageCtrl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IMessageCtrl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IMessageCtrl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IMessageCtrl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IMessageCtrl_Cancel(This,msToCancel)	\
    ( (This)->lpVtbl -> Cancel(This,msToCancel) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IMessageCtrl_INTERFACE_DEFINED__ */


#ifndef __IRemotingFormatter_INTERFACE_DEFINED__
#define __IRemotingFormatter_INTERFACE_DEFINED__

/* interface IRemotingFormatter */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IRemotingFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AE1850FD-3596-3727-A242-2FC31C5A0312")
    IRemotingFormatter : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Deserialize( 
            /* [in] */ _Stream *serializationStream,
            /* [in] */ _HeaderHandler *handler,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Serialize( 
            /* [in] */ _Stream *serializationStream,
            /* [in] */ VARIANT graph,
            /* [in] */ SAFEARRAY * headers) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRemotingFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRemotingFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRemotingFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRemotingFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRemotingFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRemotingFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRemotingFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRemotingFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Deserialize )( 
            IRemotingFormatter * This,
            /* [in] */ _Stream *serializationStream,
            /* [in] */ _HeaderHandler *handler,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Serialize )( 
            IRemotingFormatter * This,
            /* [in] */ _Stream *serializationStream,
            /* [in] */ VARIANT graph,
            /* [in] */ SAFEARRAY * headers);
        
        END_INTERFACE
    } IRemotingFormatterVtbl;

    interface IRemotingFormatter
    {
        CONST_VTBL struct IRemotingFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRemotingFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRemotingFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRemotingFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRemotingFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRemotingFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRemotingFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRemotingFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRemotingFormatter_Deserialize(This,serializationStream,handler,pRetVal)	\
    ( (This)->lpVtbl -> Deserialize(This,serializationStream,handler,pRetVal) ) 

#define IRemotingFormatter_Serialize(This,serializationStream,graph,headers)	\
    ( (This)->lpVtbl -> Serialize(This,serializationStream,graph,headers) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRemotingFormatter_INTERFACE_DEFINED__ */


#ifndef __IFieldInfo_INTERFACE_DEFINED__
#define __IFieldInfo_INTERFACE_DEFINED__

/* interface IFieldInfo */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IFieldInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CC18FD4D-AA2D-3AB4-9848-584BBAE4AB44")
    IFieldInfo : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FieldNames( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FieldNames( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_FieldTypes( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_FieldTypes( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IFieldInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IFieldInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IFieldInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IFieldInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IFieldInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IFieldInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IFieldInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IFieldInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FieldNames )( 
            IFieldInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FieldNames )( 
            IFieldInfo * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_FieldTypes )( 
            IFieldInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_FieldTypes )( 
            IFieldInfo * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        END_INTERFACE
    } IFieldInfoVtbl;

    interface IFieldInfo
    {
        CONST_VTBL struct IFieldInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IFieldInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IFieldInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IFieldInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IFieldInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IFieldInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IFieldInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IFieldInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IFieldInfo_get_FieldNames(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FieldNames(This,pRetVal) ) 

#define IFieldInfo_put_FieldNames(This,pRetVal)	\
    ( (This)->lpVtbl -> put_FieldNames(This,pRetVal) ) 

#define IFieldInfo_get_FieldTypes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_FieldTypes(This,pRetVal) ) 

#define IFieldInfo_put_FieldTypes(This,pRetVal)	\
    ( (This)->lpVtbl -> put_FieldTypes(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IFieldInfo_INTERFACE_DEFINED__ */


#ifndef __IRemotingTypeInfo_INTERFACE_DEFINED__
#define __IRemotingTypeInfo_INTERFACE_DEFINED__

/* interface IRemotingTypeInfo */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IRemotingTypeInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C09EFFA9-1FFE-3A52-A733-6236CBC45E7B")
    IRemotingTypeInfo : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_typeName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_typeName( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CanCastTo( 
            /* [in] */ _Type *fromType,
            /* [in] */ VARIANT o,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IRemotingTypeInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IRemotingTypeInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IRemotingTypeInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IRemotingTypeInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IRemotingTypeInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IRemotingTypeInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IRemotingTypeInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IRemotingTypeInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_typeName )( 
            IRemotingTypeInfo * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_typeName )( 
            IRemotingTypeInfo * This,
            /* [in] */ BSTR pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CanCastTo )( 
            IRemotingTypeInfo * This,
            /* [in] */ _Type *fromType,
            /* [in] */ VARIANT o,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        END_INTERFACE
    } IRemotingTypeInfoVtbl;

    interface IRemotingTypeInfo
    {
        CONST_VTBL struct IRemotingTypeInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IRemotingTypeInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IRemotingTypeInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IRemotingTypeInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IRemotingTypeInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IRemotingTypeInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IRemotingTypeInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IRemotingTypeInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IRemotingTypeInfo_get_typeName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_typeName(This,pRetVal) ) 

#define IRemotingTypeInfo_put_typeName(This,pRetVal)	\
    ( (This)->lpVtbl -> put_typeName(This,pRetVal) ) 

#define IRemotingTypeInfo_CanCastTo(This,fromType,o,pRetVal)	\
    ( (This)->lpVtbl -> CanCastTo(This,fromType,o,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IRemotingTypeInfo_INTERFACE_DEFINED__ */


#ifndef __IChannelInfo_INTERFACE_DEFINED__
#define __IChannelInfo_INTERFACE_DEFINED__

/* interface IChannelInfo */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IChannelInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("855E6566-014A-3FE8-AA70-1EAC771E3A88")
    IChannelInfo : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ChannelData( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ChannelData( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IChannelInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IChannelInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IChannelInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IChannelInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IChannelInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IChannelInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IChannelInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IChannelInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ChannelData )( 
            IChannelInfo * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ChannelData )( 
            IChannelInfo * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        END_INTERFACE
    } IChannelInfoVtbl;

    interface IChannelInfo
    {
        CONST_VTBL struct IChannelInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IChannelInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IChannelInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IChannelInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IChannelInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IChannelInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IChannelInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IChannelInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IChannelInfo_get_ChannelData(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ChannelData(This,pRetVal) ) 

#define IChannelInfo_put_ChannelData(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ChannelData(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IChannelInfo_INTERFACE_DEFINED__ */


#ifndef __IEnvoyInfo_INTERFACE_DEFINED__
#define __IEnvoyInfo_INTERFACE_DEFINED__

/* interface IEnvoyInfo */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_IEnvoyInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2A6E91B9-A874-38E4-99C2-C5D83D78140D")
    IEnvoyInfo : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_EnvoySinks( 
            /* [retval][out] */ IMessageSink **pRetVal) = 0;
        
        virtual /* [propputref][id] */ HRESULT STDMETHODCALLTYPE putref_EnvoySinks( 
            /* [in] */ IMessageSink *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct IEnvoyInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            IEnvoyInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            IEnvoyInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            IEnvoyInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            IEnvoyInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            IEnvoyInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            IEnvoyInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            IEnvoyInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_EnvoySinks )( 
            IEnvoyInfo * This,
            /* [retval][out] */ IMessageSink **pRetVal);
        
        /* [propputref][id] */ HRESULT ( STDMETHODCALLTYPE *putref_EnvoySinks )( 
            IEnvoyInfo * This,
            /* [in] */ IMessageSink *pRetVal);
        
        END_INTERFACE
    } IEnvoyInfoVtbl;

    interface IEnvoyInfo
    {
        CONST_VTBL struct IEnvoyInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define IEnvoyInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define IEnvoyInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define IEnvoyInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define IEnvoyInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define IEnvoyInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define IEnvoyInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define IEnvoyInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define IEnvoyInfo_get_EnvoySinks(This,pRetVal)	\
    ( (This)->lpVtbl -> get_EnvoySinks(This,pRetVal) ) 

#define IEnvoyInfo_putref_EnvoySinks(This,pRetVal)	\
    ( (This)->lpVtbl -> putref_EnvoySinks(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __IEnvoyInfo_INTERFACE_DEFINED__ */


#ifndef __ISoapXsd_INTERFACE_DEFINED__
#define __ISoapXsd_INTERFACE_DEFINED__

/* interface ISoapXsd */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISoapXsd;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("80031D2A-AD59-3FB4-97F3-B864D71DA86B")
    ISoapXsd : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetXsdType( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISoapXsdVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISoapXsd * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISoapXsd * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISoapXsd * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISoapXsd * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISoapXsd * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISoapXsd * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISoapXsd * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetXsdType )( 
            ISoapXsd * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        END_INTERFACE
    } ISoapXsdVtbl;

    interface ISoapXsd
    {
        CONST_VTBL struct ISoapXsdVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISoapXsd_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISoapXsd_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISoapXsd_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISoapXsd_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISoapXsd_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISoapXsd_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISoapXsd_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISoapXsd_GetXsdType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetXsdType(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISoapXsd_INTERFACE_DEFINED__ */


#ifndef __ITrackingHandler_INTERFACE_DEFINED__
#define __ITrackingHandler_INTERFACE_DEFINED__

/* interface ITrackingHandler */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ITrackingHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("03EC7D10-17A5-3585-9A2E-0596FCAC3870")
    ITrackingHandler : public IDispatch
    {
    public:

//        virtual /* [id] */ HRESULT STDMETHODCALLTYPE MarshaledObject(
//            /* [in] */ VARIANT obj,
//            /* [in] */ _ObjRef *or) = 0;
        
//        virtual /* [id] */ HRESULT STDMETHODCALLTYPE UnmarshaledObject(
//            /* [in] */ VARIANT obj,
//            /* [in] */ _ObjRef *or) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE DisconnectedObject( 
            /* [in] */ VARIANT obj) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ITrackingHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ITrackingHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ITrackingHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ITrackingHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ITrackingHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ITrackingHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ITrackingHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ITrackingHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *MarshaledObject )( 
            ITrackingHandler * This,
            /* [in] */ VARIANT obj,
            /* [in] */ _ObjRef *or);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *UnmarshaledObject )( 
            ITrackingHandler * This,
            /* [in] */ VARIANT obj,
            /* [in] */ _ObjRef *or);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *DisconnectedObject )( 
            ITrackingHandler * This,
            /* [in] */ VARIANT obj);
        
        END_INTERFACE
    } ITrackingHandlerVtbl;

    interface ITrackingHandler
    {
        CONST_VTBL struct ITrackingHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ITrackingHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ITrackingHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ITrackingHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ITrackingHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ITrackingHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ITrackingHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ITrackingHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ITrackingHandler_MarshaledObject(This,obj,or)	\
    ( (This)->lpVtbl -> MarshaledObject(This,obj,or) ) 

#define ITrackingHandler_UnmarshaledObject(This,obj,or)	\
    ( (This)->lpVtbl -> UnmarshaledObject(This,obj,or) ) 

#define ITrackingHandler_DisconnectedObject(This,obj)	\
    ( (This)->lpVtbl -> DisconnectedObject(This,obj) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ITrackingHandler_INTERFACE_DEFINED__ */


#ifndef __INormalizeForIsolatedStorage_INTERFACE_DEFINED__
#define __INormalizeForIsolatedStorage_INTERFACE_DEFINED__

/* interface INormalizeForIsolatedStorage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_INormalizeForIsolatedStorage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5006531-D4D7-319E-9EDA-9B4B65AD8D4F")
    INormalizeForIsolatedStorage : public IDispatch
    {
    public:
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Normalize( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct INormalizeForIsolatedStorageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            INormalizeForIsolatedStorage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            INormalizeForIsolatedStorage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            INormalizeForIsolatedStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            INormalizeForIsolatedStorage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            INormalizeForIsolatedStorage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            INormalizeForIsolatedStorage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            INormalizeForIsolatedStorage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Normalize )( 
            INormalizeForIsolatedStorage * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } INormalizeForIsolatedStorageVtbl;

    interface INormalizeForIsolatedStorage
    {
        CONST_VTBL struct INormalizeForIsolatedStorageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define INormalizeForIsolatedStorage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define INormalizeForIsolatedStorage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define INormalizeForIsolatedStorage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define INormalizeForIsolatedStorage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define INormalizeForIsolatedStorage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define INormalizeForIsolatedStorage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define INormalizeForIsolatedStorage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define INormalizeForIsolatedStorage_Normalize(This,pRetVal)	\
    ( (This)->lpVtbl -> Normalize(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __INormalizeForIsolatedStorage_INTERFACE_DEFINED__ */


#ifndef __ISoapMessage_INTERFACE_DEFINED__
#define __ISoapMessage_INTERFACE_DEFINED__

/* interface ISoapMessage */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ISoapMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E699146C-7793-3455-9BEF-964C90D8F995")
    ISoapMessage : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ParamNames( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ParamNames( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ParamValues( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ParamValues( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_ParamTypes( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_ParamTypes( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_MethodName( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_MethodName( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_XmlNameSpace( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_XmlNameSpace( 
            /* [in] */ BSTR pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_headers( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [propput][id] */ HRESULT STDMETHODCALLTYPE put_headers( 
            /* [in] */ SAFEARRAY * pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ISoapMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ISoapMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ISoapMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ISoapMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ISoapMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ISoapMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ISoapMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ISoapMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParamNames )( 
            ISoapMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ParamNames )( 
            ISoapMessage * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParamValues )( 
            ISoapMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ParamValues )( 
            ISoapMessage * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ParamTypes )( 
            ISoapMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_ParamTypes )( 
            ISoapMessage * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_MethodName )( 
            ISoapMessage * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_MethodName )( 
            ISoapMessage * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_XmlNameSpace )( 
            ISoapMessage * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_XmlNameSpace )( 
            ISoapMessage * This,
            /* [in] */ BSTR pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_headers )( 
            ISoapMessage * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [propput][id] */ HRESULT ( STDMETHODCALLTYPE *put_headers )( 
            ISoapMessage * This,
            /* [in] */ SAFEARRAY * pRetVal);
        
        END_INTERFACE
    } ISoapMessageVtbl;

    interface ISoapMessage
    {
        CONST_VTBL struct ISoapMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ISoapMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ISoapMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ISoapMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ISoapMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ISoapMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ISoapMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ISoapMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ISoapMessage_get_ParamNames(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ParamNames(This,pRetVal) ) 

#define ISoapMessage_put_ParamNames(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ParamNames(This,pRetVal) ) 

#define ISoapMessage_get_ParamValues(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ParamValues(This,pRetVal) ) 

#define ISoapMessage_put_ParamValues(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ParamValues(This,pRetVal) ) 

#define ISoapMessage_get_ParamTypes(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ParamTypes(This,pRetVal) ) 

#define ISoapMessage_put_ParamTypes(This,pRetVal)	\
    ( (This)->lpVtbl -> put_ParamTypes(This,pRetVal) ) 

#define ISoapMessage_get_MethodName(This,pRetVal)	\
    ( (This)->lpVtbl -> get_MethodName(This,pRetVal) ) 

#define ISoapMessage_put_MethodName(This,pRetVal)	\
    ( (This)->lpVtbl -> put_MethodName(This,pRetVal) ) 

#define ISoapMessage_get_XmlNameSpace(This,pRetVal)	\
    ( (This)->lpVtbl -> get_XmlNameSpace(This,pRetVal) ) 

#define ISoapMessage_put_XmlNameSpace(This,pRetVal)	\
    ( (This)->lpVtbl -> put_XmlNameSpace(This,pRetVal) ) 

#define ISoapMessage_get_headers(This,pRetVal)	\
    ( (This)->lpVtbl -> get_headers(This,pRetVal) ) 

#define ISoapMessage_put_headers(This,pRetVal)	\
    ( (This)->lpVtbl -> put_headers(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ISoapMessage_INTERFACE_DEFINED__ */


#ifndef ___AssemblyBuilder_INTERFACE_DEFINED__
#define ___AssemblyBuilder_INTERFACE_DEFINED__

/* interface _AssemblyBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__AssemblyBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BEBB2505-8B54-3443-AEAD-142A16DD9CC7")
    _AssemblyBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _AssemblyBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _AssemblyBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _AssemblyBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _AssemblyBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _AssemblyBuilderVtbl;

    interface _AssemblyBuilder
    {
        CONST_VTBL struct _AssemblyBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _AssemblyBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyBuilder_INTERFACE_DEFINED__ */


#ifndef ___ConstructorBuilder_INTERFACE_DEFINED__
#define ___ConstructorBuilder_INTERFACE_DEFINED__

/* interface _ConstructorBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__ConstructorBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ED3E4384-D7E2-3FA7-8FFD-8940D330519A")
    _ConstructorBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ConstructorBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ConstructorBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ConstructorBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ConstructorBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _ConstructorBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _ConstructorBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _ConstructorBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _ConstructorBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _ConstructorBuilderVtbl;

    interface _ConstructorBuilder
    {
        CONST_VTBL struct _ConstructorBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ConstructorBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ConstructorBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ConstructorBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ConstructorBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _ConstructorBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ConstructorBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ConstructorBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ConstructorBuilder_INTERFACE_DEFINED__ */


#ifndef ___CustomAttributeBuilder_INTERFACE_DEFINED__
#define ___CustomAttributeBuilder_INTERFACE_DEFINED__

/* interface _CustomAttributeBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__CustomAttributeBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE9ACCE8-AAFF-3B91-81AE-8211663F5CAD")
    _CustomAttributeBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _CustomAttributeBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CustomAttributeBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CustomAttributeBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CustomAttributeBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _CustomAttributeBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _CustomAttributeBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _CustomAttributeBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _CustomAttributeBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _CustomAttributeBuilderVtbl;

    interface _CustomAttributeBuilder
    {
        CONST_VTBL struct _CustomAttributeBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CustomAttributeBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CustomAttributeBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CustomAttributeBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CustomAttributeBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _CustomAttributeBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CustomAttributeBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CustomAttributeBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CustomAttributeBuilder_INTERFACE_DEFINED__ */


#ifndef ___EnumBuilder_INTERFACE_DEFINED__
#define ___EnumBuilder_INTERFACE_DEFINED__

/* interface _EnumBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__EnumBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7BD73DE-9F85-3290-88EE-090B8BDFE2DF")
    _EnumBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _EnumBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EnumBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EnumBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EnumBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _EnumBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _EnumBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _EnumBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _EnumBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _EnumBuilderVtbl;

    interface _EnumBuilder
    {
        CONST_VTBL struct _EnumBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EnumBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EnumBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EnumBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EnumBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _EnumBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EnumBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EnumBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EnumBuilder_INTERFACE_DEFINED__ */


#ifndef ___EventBuilder_INTERFACE_DEFINED__
#define ___EventBuilder_INTERFACE_DEFINED__

/* interface _EventBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__EventBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AADABA99-895D-3D65-9760-B1F12621FAE8")
    _EventBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _EventBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EventBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EventBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EventBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _EventBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _EventBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _EventBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _EventBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _EventBuilderVtbl;

    interface _EventBuilder
    {
        CONST_VTBL struct _EventBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EventBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EventBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EventBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EventBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _EventBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EventBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EventBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EventBuilder_INTERFACE_DEFINED__ */


#ifndef ___FieldBuilder_INTERFACE_DEFINED__
#define ___FieldBuilder_INTERFACE_DEFINED__

/* interface _FieldBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__FieldBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE1A3BF5-975E-30CC-97C9-1EF70F8F3993")
    _FieldBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _FieldBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FieldBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FieldBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FieldBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _FieldBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _FieldBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _FieldBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _FieldBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _FieldBuilderVtbl;

    interface _FieldBuilder
    {
        CONST_VTBL struct _FieldBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FieldBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FieldBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FieldBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FieldBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _FieldBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FieldBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FieldBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FieldBuilder_INTERFACE_DEFINED__ */


#ifndef ___ILGenerator_INTERFACE_DEFINED__
#define ___ILGenerator_INTERFACE_DEFINED__

/* interface _ILGenerator */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__ILGenerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A4924B27-6E3B-37F7-9B83-A4501955E6A7")
    _ILGenerator : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ILGeneratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ILGenerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ILGenerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ILGenerator * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _ILGenerator * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _ILGenerator * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _ILGenerator * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _ILGenerator * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _ILGeneratorVtbl;

    interface _ILGenerator
    {
        CONST_VTBL struct _ILGeneratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ILGenerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ILGenerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ILGenerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ILGenerator_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _ILGenerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ILGenerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ILGenerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ILGenerator_INTERFACE_DEFINED__ */


#ifndef ___LocalBuilder_INTERFACE_DEFINED__
#define ___LocalBuilder_INTERFACE_DEFINED__

/* interface _LocalBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__LocalBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4E6350D1-A08B-3DEC-9A3E-C465F9AEEC0C")
    _LocalBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _LocalBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LocalBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LocalBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LocalBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _LocalBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _LocalBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _LocalBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _LocalBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _LocalBuilderVtbl;

    interface _LocalBuilder
    {
        CONST_VTBL struct _LocalBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LocalBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LocalBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LocalBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LocalBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _LocalBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LocalBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LocalBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LocalBuilder_INTERFACE_DEFINED__ */


#ifndef ___MethodBuilder_INTERFACE_DEFINED__
#define ___MethodBuilder_INTERFACE_DEFINED__

/* interface _MethodBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__MethodBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("007D8A14-FDF3-363E-9A0B-FEC0618260A2")
    _MethodBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _MethodBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _MethodBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _MethodBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _MethodBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _MethodBuilderVtbl;

    interface _MethodBuilder
    {
        CONST_VTBL struct _MethodBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _MethodBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodBuilder_INTERFACE_DEFINED__ */


#ifndef ___MethodRental_INTERFACE_DEFINED__
#define ___MethodRental_INTERFACE_DEFINED__

/* interface _MethodRental */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__MethodRental;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2323C25-F57F-3880-8A4D-12EBEA7A5852")
    _MethodRental : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodRentalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodRental * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodRental * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodRental * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _MethodRental * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _MethodRental * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _MethodRental * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _MethodRental * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _MethodRentalVtbl;

    interface _MethodRental
    {
        CONST_VTBL struct _MethodRentalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodRental_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodRental_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodRental_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodRental_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _MethodRental_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodRental_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodRental_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodRental_INTERFACE_DEFINED__ */


#ifndef ___ModuleBuilder_INTERFACE_DEFINED__
#define ___ModuleBuilder_INTERFACE_DEFINED__

/* interface _ModuleBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__ModuleBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D05FFA9A-04AF-3519-8EE1-8D93AD73430B")
    _ModuleBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ModuleBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ModuleBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ModuleBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ModuleBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _ModuleBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _ModuleBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _ModuleBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _ModuleBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _ModuleBuilderVtbl;

    interface _ModuleBuilder
    {
        CONST_VTBL struct _ModuleBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ModuleBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ModuleBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ModuleBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ModuleBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _ModuleBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ModuleBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ModuleBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ModuleBuilder_INTERFACE_DEFINED__ */


#ifndef ___ParameterBuilder_INTERFACE_DEFINED__
#define ___ParameterBuilder_INTERFACE_DEFINED__

/* interface _ParameterBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__ParameterBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36329EBA-F97A-3565-BC07-0ED5C6EF19FC")
    _ParameterBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ParameterBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ParameterBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ParameterBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ParameterBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _ParameterBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _ParameterBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _ParameterBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _ParameterBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _ParameterBuilderVtbl;

    interface _ParameterBuilder
    {
        CONST_VTBL struct _ParameterBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ParameterBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ParameterBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ParameterBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ParameterBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _ParameterBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ParameterBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ParameterBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ParameterBuilder_INTERFACE_DEFINED__ */


#ifndef ___PropertyBuilder_INTERFACE_DEFINED__
#define ___PropertyBuilder_INTERFACE_DEFINED__

/* interface _PropertyBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__PropertyBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("15F9A479-9397-3A63-ACBD-F51977FB0F02")
    _PropertyBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _PropertyBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PropertyBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PropertyBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PropertyBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _PropertyBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _PropertyBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _PropertyBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _PropertyBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _PropertyBuilderVtbl;

    interface _PropertyBuilder
    {
        CONST_VTBL struct _PropertyBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PropertyBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PropertyBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PropertyBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PropertyBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _PropertyBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PropertyBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PropertyBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PropertyBuilder_INTERFACE_DEFINED__ */


#ifndef ___SignatureHelper_INTERFACE_DEFINED__
#define ___SignatureHelper_INTERFACE_DEFINED__

/* interface _SignatureHelper */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__SignatureHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7D13DD37-5A04-393C-BBCA-A5FEA802893D")
    _SignatureHelper : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _SignatureHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SignatureHelper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SignatureHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SignatureHelper * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _SignatureHelper * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _SignatureHelper * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _SignatureHelper * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _SignatureHelper * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _SignatureHelperVtbl;

    interface _SignatureHelper
    {
        CONST_VTBL struct _SignatureHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SignatureHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SignatureHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SignatureHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SignatureHelper_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _SignatureHelper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SignatureHelper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SignatureHelper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SignatureHelper_INTERFACE_DEFINED__ */


#ifndef ___TypeBuilder_INTERFACE_DEFINED__
#define ___TypeBuilder_INTERFACE_DEFINED__

/* interface _TypeBuilder */
/* [object][custom][oleautomation][version][uuid] */ 


EXTERN_C const IID IID__TypeBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E5678EE-48B3-3F83-B076-C58543498A58")
    _TypeBuilder : public IUnknown
    {
    public:
        virtual HRESULT __stdcall GetTypeInfoCount( 
            /* [out] */ unsigned long *pcTInfo) = 0;
        
        virtual HRESULT __stdcall GetTypeInfo( 
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo) = 0;
        
        virtual HRESULT __stdcall GetIDsOfNames( 
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId) = 0;
        
        virtual HRESULT __stdcall Invoke( 
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeBuilder * This);
        
        HRESULT ( __stdcall *GetTypeInfoCount )( 
            _TypeBuilder * This,
            /* [out] */ unsigned long *pcTInfo);
        
        HRESULT ( __stdcall *GetTypeInfo )( 
            _TypeBuilder * This,
            /* [in] */ unsigned long iTInfo,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 ppTInfo);
        
        HRESULT ( __stdcall *GetIDsOfNames )( 
            _TypeBuilder * This,
            /* [in] */ Guid *riid,
            /* [in] */ Int64 rgszNames,
            /* [in] */ unsigned long cNames,
            /* [in] */ unsigned long lcid,
            /* [in] */ Int64 rgDispId);
        
        HRESULT ( __stdcall *Invoke )( 
            _TypeBuilder * This,
            /* [in] */ unsigned long dispIdMember,
            /* [in] */ Guid *riid,
            /* [in] */ unsigned long lcid,
            /* [in] */ short wFlags,
            /* [in] */ Int64 pDispParams,
            /* [in] */ Int64 pVarResult,
            /* [in] */ Int64 pExcepInfo,
            /* [in] */ Int64 puArgErr);
        
        END_INTERFACE
    } _TypeBuilderVtbl;

    interface _TypeBuilder
    {
        CONST_VTBL struct _TypeBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeBuilder_GetTypeInfoCount(This,pcTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pcTInfo) ) 

#define _TypeBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeBuilder_INTERFACE_DEFINED__ */


#ifndef __ICryptoTransform_INTERFACE_DEFINED__
#define __ICryptoTransform_INTERFACE_DEFINED__

/* interface ICryptoTransform */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICryptoTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8ABAD867-F515-3CF6-BB62-5F0C88B3BB11")
    ICryptoTransform : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_InputBlockSize( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_OutputBlockSize( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CanTransformMultipleBlocks( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CanReuseTransform( 
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TransformBlock( 
            /* [in] */ SAFEARRAY * inputBuffer,
            /* [in] */ long inputOffset,
            /* [in] */ long inputCount,
            /* [in] */ SAFEARRAY * outputBuffer,
            /* [in] */ long outputOffset,
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE TransformFinalBlock( 
            /* [in] */ SAFEARRAY * inputBuffer,
            /* [in] */ long inputOffset,
            /* [in] */ long inputCount,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICryptoTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICryptoTransform * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICryptoTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICryptoTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICryptoTransform * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICryptoTransform * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICryptoTransform * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICryptoTransform * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_InputBlockSize )( 
            ICryptoTransform * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_OutputBlockSize )( 
            ICryptoTransform * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanTransformMultipleBlocks )( 
            ICryptoTransform * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CanReuseTransform )( 
            ICryptoTransform * This,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TransformBlock )( 
            ICryptoTransform * This,
            /* [in] */ SAFEARRAY * inputBuffer,
            /* [in] */ long inputOffset,
            /* [in] */ long inputCount,
            /* [in] */ SAFEARRAY * outputBuffer,
            /* [in] */ long outputOffset,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *TransformFinalBlock )( 
            ICryptoTransform * This,
            /* [in] */ SAFEARRAY * inputBuffer,
            /* [in] */ long inputOffset,
            /* [in] */ long inputCount,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        END_INTERFACE
    } ICryptoTransformVtbl;

    interface ICryptoTransform
    {
        CONST_VTBL struct ICryptoTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICryptoTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICryptoTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICryptoTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICryptoTransform_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICryptoTransform_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICryptoTransform_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICryptoTransform_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICryptoTransform_get_InputBlockSize(This,pRetVal)	\
    ( (This)->lpVtbl -> get_InputBlockSize(This,pRetVal) ) 

#define ICryptoTransform_get_OutputBlockSize(This,pRetVal)	\
    ( (This)->lpVtbl -> get_OutputBlockSize(This,pRetVal) ) 

#define ICryptoTransform_get_CanTransformMultipleBlocks(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CanTransformMultipleBlocks(This,pRetVal) ) 

#define ICryptoTransform_get_CanReuseTransform(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CanReuseTransform(This,pRetVal) ) 

#define ICryptoTransform_TransformBlock(This,inputBuffer,inputOffset,inputCount,outputBuffer,outputOffset,pRetVal)	\
    ( (This)->lpVtbl -> TransformBlock(This,inputBuffer,inputOffset,inputCount,outputBuffer,outputOffset,pRetVal) ) 

#define ICryptoTransform_TransformFinalBlock(This,inputBuffer,inputOffset,inputCount,pRetVal)	\
    ( (This)->lpVtbl -> TransformFinalBlock(This,inputBuffer,inputOffset,inputCount,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICryptoTransform_INTERFACE_DEFINED__ */


#ifndef __ICspAsymmetricAlgorithm_INTERFACE_DEFINED__
#define __ICspAsymmetricAlgorithm_INTERFACE_DEFINED__

/* interface ICspAsymmetricAlgorithm */
/* [object][custom][oleautomation][dual][version][uuid] */ 


EXTERN_C const IID IID_ICspAsymmetricAlgorithm;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("494A7583-190E-3693-9EC4-DE54DC6A84A2")
    ICspAsymmetricAlgorithm : public IDispatch
    {
    public:
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_CspKeyContainerInfo( 
            /* [retval][out] */ _CspKeyContainerInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ExportCspBlob( 
            /* [in] */ VARIANT_BOOL includePrivateParameters,
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ImportCspBlob( 
            /* [in] */ SAFEARRAY * rawData) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct ICspAsymmetricAlgorithmVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            ICspAsymmetricAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            ICspAsymmetricAlgorithm * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            ICspAsymmetricAlgorithm * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            ICspAsymmetricAlgorithm * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            ICspAsymmetricAlgorithm * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            ICspAsymmetricAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            ICspAsymmetricAlgorithm * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_CspKeyContainerInfo )( 
            ICspAsymmetricAlgorithm * This,
            /* [retval][out] */ _CspKeyContainerInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ExportCspBlob )( 
            ICspAsymmetricAlgorithm * This,
            /* [in] */ VARIANT_BOOL includePrivateParameters,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ImportCspBlob )( 
            ICspAsymmetricAlgorithm * This,
            /* [in] */ SAFEARRAY * rawData);
        
        END_INTERFACE
    } ICspAsymmetricAlgorithmVtbl;

    interface ICspAsymmetricAlgorithm
    {
        CONST_VTBL struct ICspAsymmetricAlgorithmVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define ICspAsymmetricAlgorithm_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define ICspAsymmetricAlgorithm_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define ICspAsymmetricAlgorithm_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define ICspAsymmetricAlgorithm_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define ICspAsymmetricAlgorithm_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define ICspAsymmetricAlgorithm_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define ICspAsymmetricAlgorithm_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define ICspAsymmetricAlgorithm_get_CspKeyContainerInfo(This,pRetVal)	\
    ( (This)->lpVtbl -> get_CspKeyContainerInfo(This,pRetVal) ) 

#define ICspAsymmetricAlgorithm_ExportCspBlob(This,includePrivateParameters,pRetVal)	\
    ( (This)->lpVtbl -> ExportCspBlob(This,includePrivateParameters,pRetVal) ) 

#define ICspAsymmetricAlgorithm_ImportCspBlob(This,rawData)	\
    ( (This)->lpVtbl -> ImportCspBlob(This,rawData) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* __ICspAsymmetricAlgorithm_INTERFACE_DEFINED__ */


#ifndef ___Object_INTERFACE_DEFINED__
#define ___Object_INTERFACE_DEFINED__

/* interface _Object */
/* [object][custom][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Object;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("65074F7F-63C0-304E-AF0A-D51741CB4A8D")
    _Object : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Object * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Object * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Object * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Object * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Object * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Object * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Object * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            _Object * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            _Object * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            _Object * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            _Object * This,
            /* [retval][out] */ _Type **pRetVal);
        
        END_INTERFACE
    } _ObjectVtbl;

    interface _Object
    {
        CONST_VTBL struct _ObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Object_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Object_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Object_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Object_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Object_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Object_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Object_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Object_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _Object_Equals(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,obj,pRetVal) ) 

#define _Object_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _Object_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Object_INTERFACE_DEFINED__ */


#ifndef ___Array_INTERFACE_DEFINED__
#define ___Array_INTERFACE_DEFINED__

/* interface _Array */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Array;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2B67CECE-71C3-36A9-A136-925CCC1935A8")
    _Array : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArrayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Array * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Array * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Array * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Array * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Array * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Array * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Array * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArrayVtbl;

    interface _Array
    {
        CONST_VTBL struct _ArrayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Array_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Array_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Array_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Array_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Array_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Array_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Array_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Array_INTERFACE_DEFINED__ */


#ifndef ___ValueType_INTERFACE_DEFINED__
#define ___ValueType_INTERFACE_DEFINED__

/* interface _ValueType */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ValueType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("139E041D-0E41-39F5-A302-C4387E9D0A6C")
    _ValueType : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ValueTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ValueType * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ValueType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ValueType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ValueType * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ValueType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ValueType * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ValueType * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ValueTypeVtbl;

    interface _ValueType
    {
        CONST_VTBL struct _ValueTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ValueType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ValueType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ValueType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ValueType_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ValueType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ValueType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ValueType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ValueType_INTERFACE_DEFINED__ */


#ifndef ___Enum_INTERFACE_DEFINED__
#define ___Enum_INTERFACE_DEFINED__

/* interface _Enum */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Enum;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D09D1E04-D590-39A3-B517-B734A49A9277")
    _Enum : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EnumVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Enum * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Enum * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Enum * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Enum * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Enum * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Enum * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Enum * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EnumVtbl;

    interface _Enum
    {
        CONST_VTBL struct _EnumVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Enum_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Enum_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Enum_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Enum_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Enum_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Enum_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Enum_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Enum_INTERFACE_DEFINED__ */


#ifndef ___String_INTERFACE_DEFINED__
#define ___String_INTERFACE_DEFINED__

/* interface _String */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__String;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36936699-FC79-324D-AB43-E33C1F94E263")
    _String : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _String * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _String * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _String * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _String * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _String * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _String * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _String * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StringVtbl;

    interface _String
    {
        CONST_VTBL struct _StringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _String_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _String_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _String_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _String_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _String_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _String_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _String_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___String_INTERFACE_DEFINED__ */


#ifndef ___StringComparer_INTERFACE_DEFINED__
#define ___StringComparer_INTERFACE_DEFINED__

/* interface _StringComparer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StringComparer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7499E7E8-DF01-3948-B8D4-FA4B9661D36B")
    _StringComparer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StringComparerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StringComparer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StringComparer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StringComparer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StringComparer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StringComparer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StringComparer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StringComparer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StringComparerVtbl;

    interface _StringComparer
    {
        CONST_VTBL struct _StringComparerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StringComparer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StringComparer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StringComparer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StringComparer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StringComparer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StringComparer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StringComparer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StringComparer_INTERFACE_DEFINED__ */


#ifndef ___StringBuilder_INTERFACE_DEFINED__
#define ___StringBuilder_INTERFACE_DEFINED__

/* interface _StringBuilder */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StringBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9FB09782-8D39-3B0C-B79E-F7A37A65B3DA")
    _StringBuilder : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StringBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StringBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StringBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StringBuilder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StringBuilder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StringBuilder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StringBuilder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StringBuilder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StringBuilderVtbl;

    interface _StringBuilder
    {
        CONST_VTBL struct _StringBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StringBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StringBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StringBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StringBuilder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StringBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StringBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StringBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StringBuilder_INTERFACE_DEFINED__ */


#ifndef ___SystemException_INTERFACE_DEFINED__
#define ___SystemException_INTERFACE_DEFINED__

/* interface _SystemException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SystemException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4C482CC2-68E9-37C6-8353-9A94BD2D7F0B")
    _SystemException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SystemExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SystemException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SystemException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SystemException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SystemException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SystemException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SystemException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SystemException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SystemExceptionVtbl;

    interface _SystemException
    {
        CONST_VTBL struct _SystemExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SystemException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SystemException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SystemException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SystemException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SystemException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SystemException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SystemException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SystemException_INTERFACE_DEFINED__ */


#ifndef ___OutOfMemoryException_INTERFACE_DEFINED__
#define ___OutOfMemoryException_INTERFACE_DEFINED__

/* interface _OutOfMemoryException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OutOfMemoryException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CF3EDB7E-0574-3383-A44F-292F7C145DB4")
    _OutOfMemoryException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OutOfMemoryExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OutOfMemoryException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OutOfMemoryException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OutOfMemoryException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OutOfMemoryException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OutOfMemoryException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OutOfMemoryException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OutOfMemoryException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OutOfMemoryExceptionVtbl;

    interface _OutOfMemoryException
    {
        CONST_VTBL struct _OutOfMemoryExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OutOfMemoryException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OutOfMemoryException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OutOfMemoryException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OutOfMemoryException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OutOfMemoryException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OutOfMemoryException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OutOfMemoryException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OutOfMemoryException_INTERFACE_DEFINED__ */


#ifndef ___StackOverflowException_INTERFACE_DEFINED__
#define ___StackOverflowException_INTERFACE_DEFINED__

/* interface _StackOverflowException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StackOverflowException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CF4339A-2911-3B8A-8F30-E5C6B5BE9A29")
    _StackOverflowException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StackOverflowExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StackOverflowException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StackOverflowException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StackOverflowException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StackOverflowException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StackOverflowException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StackOverflowException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StackOverflowException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StackOverflowExceptionVtbl;

    interface _StackOverflowException
    {
        CONST_VTBL struct _StackOverflowExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StackOverflowException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StackOverflowException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StackOverflowException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StackOverflowException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StackOverflowException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StackOverflowException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StackOverflowException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StackOverflowException_INTERFACE_DEFINED__ */


#ifndef ___DataMisalignedException_INTERFACE_DEFINED__
#define ___DataMisalignedException_INTERFACE_DEFINED__

/* interface _DataMisalignedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DataMisalignedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("152A6B4D-09AF-3EDF-8CBA-11797EEEEA4E")
    _DataMisalignedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DataMisalignedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DataMisalignedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DataMisalignedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DataMisalignedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DataMisalignedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DataMisalignedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DataMisalignedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DataMisalignedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DataMisalignedExceptionVtbl;

    interface _DataMisalignedException
    {
        CONST_VTBL struct _DataMisalignedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DataMisalignedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DataMisalignedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DataMisalignedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DataMisalignedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DataMisalignedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DataMisalignedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DataMisalignedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DataMisalignedException_INTERFACE_DEFINED__ */


#ifndef ___ExecutionEngineException_INTERFACE_DEFINED__
#define ___ExecutionEngineException_INTERFACE_DEFINED__

/* interface _ExecutionEngineException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ExecutionEngineException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CCF0139C-79F7-3D0A-AFFE-2B0762C65B07")
    _ExecutionEngineException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ExecutionEngineExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ExecutionEngineException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ExecutionEngineException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ExecutionEngineException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ExecutionEngineException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ExecutionEngineException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ExecutionEngineException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ExecutionEngineException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ExecutionEngineExceptionVtbl;

    interface _ExecutionEngineException
    {
        CONST_VTBL struct _ExecutionEngineExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ExecutionEngineException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ExecutionEngineException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ExecutionEngineException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ExecutionEngineException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ExecutionEngineException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ExecutionEngineException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ExecutionEngineException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ExecutionEngineException_INTERFACE_DEFINED__ */


#ifndef ___Delegate_INTERFACE_DEFINED__
#define ___Delegate_INTERFACE_DEFINED__

/* interface _Delegate */
/* [object][custom][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Delegate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FB6AB00F-5096-3AF8-A33D-D7885A5FA829")
    _Delegate : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetInvocationList( 
            /* [retval][out] */ SAFEARRAY * *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Clone( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetObjectData( 
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context) = 0;
        
        virtual /* [vararg][id] */ HRESULT STDMETHODCALLTYPE DynamicInvoke( 
            /* [in] */ SAFEARRAY * args,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Method( 
            /* [retval][out] */ _MethodInfo **pRetVal) = 0;
        
        virtual /* [propget][id] */ HRESULT STDMETHODCALLTYPE get_Target( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _DelegateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Delegate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Delegate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Delegate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Delegate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Delegate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Delegate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Delegate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            _Delegate * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            _Delegate * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            _Delegate * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            _Delegate * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetInvocationList )( 
            _Delegate * This,
            /* [retval][out] */ SAFEARRAY * *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Clone )( 
            _Delegate * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetObjectData )( 
            _Delegate * This,
            /* [in] */ _SerializationInfo *info,
            /* [in] */ StreamingContext Context);
        
        /* [vararg][id] */ HRESULT ( STDMETHODCALLTYPE *DynamicInvoke )( 
            _Delegate * This,
            /* [in] */ SAFEARRAY * args,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Method )( 
            _Delegate * This,
            /* [retval][out] */ _MethodInfo **pRetVal);
        
        /* [propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_Target )( 
            _Delegate * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } _DelegateVtbl;

    interface _Delegate
    {
        CONST_VTBL struct _DelegateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Delegate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Delegate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Delegate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Delegate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Delegate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Delegate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Delegate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Delegate_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _Delegate_Equals(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,obj,pRetVal) ) 

#define _Delegate_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _Delegate_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _Delegate_GetInvocationList(This,pRetVal)	\
    ( (This)->lpVtbl -> GetInvocationList(This,pRetVal) ) 

#define _Delegate_Clone(This,pRetVal)	\
    ( (This)->lpVtbl -> Clone(This,pRetVal) ) 

#define _Delegate_GetObjectData(This,info,Context)	\
    ( (This)->lpVtbl -> GetObjectData(This,info,Context) ) 

#define _Delegate_DynamicInvoke(This,args,pRetVal)	\
    ( (This)->lpVtbl -> DynamicInvoke(This,args,pRetVal) ) 

#define _Delegate_get_Method(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Method(This,pRetVal) ) 

#define _Delegate_get_Target(This,pRetVal)	\
    ( (This)->lpVtbl -> get_Target(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Delegate_INTERFACE_DEFINED__ */


#ifndef ___MulticastDelegate_INTERFACE_DEFINED__
#define ___MulticastDelegate_INTERFACE_DEFINED__

/* interface _MulticastDelegate */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MulticastDelegate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("16FE0885-9129-3884-A232-90B58C5B2AA9")
    _MulticastDelegate : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MulticastDelegateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MulticastDelegate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MulticastDelegate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MulticastDelegate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MulticastDelegate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MulticastDelegate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MulticastDelegate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MulticastDelegate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MulticastDelegateVtbl;

    interface _MulticastDelegate
    {
        CONST_VTBL struct _MulticastDelegateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MulticastDelegate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MulticastDelegate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MulticastDelegate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MulticastDelegate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MulticastDelegate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MulticastDelegate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MulticastDelegate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MulticastDelegate_INTERFACE_DEFINED__ */


#ifndef ___MemberAccessException_INTERFACE_DEFINED__
#define ___MemberAccessException_INTERFACE_DEFINED__

/* interface _MemberAccessException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MemberAccessException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7EABA4E2-1259-3CF2-B084-9854278E5897")
    _MemberAccessException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MemberAccessExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MemberAccessException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MemberAccessException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MemberAccessException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MemberAccessException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MemberAccessException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MemberAccessException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MemberAccessException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MemberAccessExceptionVtbl;

    interface _MemberAccessException
    {
        CONST_VTBL struct _MemberAccessExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MemberAccessException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MemberAccessException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MemberAccessException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MemberAccessException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MemberAccessException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MemberAccessException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MemberAccessException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MemberAccessException_INTERFACE_DEFINED__ */


#ifndef ___AccessViolationException_INTERFACE_DEFINED__
#define ___AccessViolationException_INTERFACE_DEFINED__

/* interface _AccessViolationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AccessViolationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("13EF674A-6327-3CAF-8772-FA0395612669")
    _AccessViolationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AccessViolationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AccessViolationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AccessViolationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AccessViolationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AccessViolationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AccessViolationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AccessViolationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AccessViolationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AccessViolationExceptionVtbl;

    interface _AccessViolationException
    {
        CONST_VTBL struct _AccessViolationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AccessViolationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AccessViolationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AccessViolationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AccessViolationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AccessViolationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AccessViolationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AccessViolationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AccessViolationException_INTERFACE_DEFINED__ */


#ifndef ___ApplicationActivator_INTERFACE_DEFINED__
#define ___ApplicationActivator_INTERFACE_DEFINED__

/* interface _ApplicationActivator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationActivator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D1204423-01F0-336A-8911-A7E8FBE185A3")
    _ApplicationActivator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationActivatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationActivator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationActivator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationActivator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationActivator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationActivator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationActivator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationActivator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationActivatorVtbl;

    interface _ApplicationActivator
    {
        CONST_VTBL struct _ApplicationActivatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationActivator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationActivator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationActivator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationActivator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationActivator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationActivator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationActivator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationActivator_INTERFACE_DEFINED__ */


#ifndef ___ApplicationException_INTERFACE_DEFINED__
#define ___ApplicationException_INTERFACE_DEFINED__

/* interface _ApplicationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D81130BF-D627-3B91-A7C7-CEA597093464")
    _ApplicationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationExceptionVtbl;

    interface _ApplicationException
    {
        CONST_VTBL struct _ApplicationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationException_INTERFACE_DEFINED__ */


#ifndef ___EventArgs_INTERFACE_DEFINED__
#define ___EventArgs_INTERFACE_DEFINED__

/* interface _EventArgs */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F9EC719-343A-3CB3-8040-3927626777C1")
    _EventArgs : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EventArgs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EventArgs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EventArgs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EventArgs * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EventArgsVtbl;

    interface _EventArgs
    {
        CONST_VTBL struct _EventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EventArgs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EventArgs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EventArgs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EventArgs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EventArgs_INTERFACE_DEFINED__ */


#ifndef ___ResolveEventArgs_INTERFACE_DEFINED__
#define ___ResolveEventArgs_INTERFACE_DEFINED__

/* interface _ResolveEventArgs */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ResolveEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98947CF0-77E7-328E-B709-5DD1AA1C9C96")
    _ResolveEventArgs : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ResolveEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ResolveEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ResolveEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ResolveEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ResolveEventArgs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ResolveEventArgs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ResolveEventArgs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ResolveEventArgs * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ResolveEventArgsVtbl;

    interface _ResolveEventArgs
    {
        CONST_VTBL struct _ResolveEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ResolveEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ResolveEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ResolveEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ResolveEventArgs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ResolveEventArgs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ResolveEventArgs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ResolveEventArgs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ResolveEventArgs_INTERFACE_DEFINED__ */


#ifndef ___AssemblyLoadEventArgs_INTERFACE_DEFINED__
#define ___AssemblyLoadEventArgs_INTERFACE_DEFINED__

/* interface _AssemblyLoadEventArgs */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyLoadEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7A0325F0-22C2-31F9-8823-9B8AEE9456B1")
    _AssemblyLoadEventArgs : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyLoadEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyLoadEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyLoadEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyLoadEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyLoadEventArgs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyLoadEventArgs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyLoadEventArgs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyLoadEventArgs * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyLoadEventArgsVtbl;

    interface _AssemblyLoadEventArgs
    {
        CONST_VTBL struct _AssemblyLoadEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyLoadEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyLoadEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyLoadEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyLoadEventArgs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyLoadEventArgs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyLoadEventArgs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyLoadEventArgs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyLoadEventArgs_INTERFACE_DEFINED__ */


#ifndef ___ResolveEventHandler_INTERFACE_DEFINED__
#define ___ResolveEventHandler_INTERFACE_DEFINED__

/* interface _ResolveEventHandler */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ResolveEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E54A9CC-7AA4-34CA-985B-BD7D7527B110")
    _ResolveEventHandler : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ResolveEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ResolveEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ResolveEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ResolveEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ResolveEventHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ResolveEventHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ResolveEventHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ResolveEventHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ResolveEventHandlerVtbl;

    interface _ResolveEventHandler
    {
        CONST_VTBL struct _ResolveEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ResolveEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ResolveEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ResolveEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ResolveEventHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ResolveEventHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ResolveEventHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ResolveEventHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ResolveEventHandler_INTERFACE_DEFINED__ */


#ifndef ___AssemblyLoadEventHandler_INTERFACE_DEFINED__
#define ___AssemblyLoadEventHandler_INTERFACE_DEFINED__

/* interface _AssemblyLoadEventHandler */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyLoadEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DEECE11F-A893-3E35-A4C3-DAB7FA0911EB")
    _AssemblyLoadEventHandler : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyLoadEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyLoadEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyLoadEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyLoadEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyLoadEventHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyLoadEventHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyLoadEventHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyLoadEventHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyLoadEventHandlerVtbl;

    interface _AssemblyLoadEventHandler
    {
        CONST_VTBL struct _AssemblyLoadEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyLoadEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyLoadEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyLoadEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyLoadEventHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyLoadEventHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyLoadEventHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyLoadEventHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyLoadEventHandler_INTERFACE_DEFINED__ */


#ifndef ___AppDomainInitializer_INTERFACE_DEFINED__
#define ___AppDomainInitializer_INTERFACE_DEFINED__

/* interface _AppDomainInitializer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AppDomainInitializer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5E6F9EDB-3CE1-3A56-86D9-CD2DDF7A6FFF")
    _AppDomainInitializer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AppDomainInitializerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AppDomainInitializer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AppDomainInitializer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AppDomainInitializer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AppDomainInitializer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AppDomainInitializer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AppDomainInitializer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AppDomainInitializer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AppDomainInitializerVtbl;

    interface _AppDomainInitializer
    {
        CONST_VTBL struct _AppDomainInitializerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AppDomainInitializer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AppDomainInitializer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AppDomainInitializer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AppDomainInitializer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AppDomainInitializer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AppDomainInitializer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AppDomainInitializer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AppDomainInitializer_INTERFACE_DEFINED__ */


#ifndef ___MarshalByRefObject_INTERFACE_DEFINED__
#define ___MarshalByRefObject_INTERFACE_DEFINED__

/* interface _MarshalByRefObject */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MarshalByRefObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C358E27-8C1A-3C03-B086-A40465625557")
    _MarshalByRefObject : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MarshalByRefObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MarshalByRefObject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MarshalByRefObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MarshalByRefObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MarshalByRefObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MarshalByRefObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MarshalByRefObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MarshalByRefObject * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MarshalByRefObjectVtbl;

    interface _MarshalByRefObject
    {
        CONST_VTBL struct _MarshalByRefObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MarshalByRefObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MarshalByRefObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MarshalByRefObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MarshalByRefObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MarshalByRefObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MarshalByRefObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MarshalByRefObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MarshalByRefObject_INTERFACE_DEFINED__ */


#ifndef ___CrossAppDomainDelegate_INTERFACE_DEFINED__
#define ___CrossAppDomainDelegate_INTERFACE_DEFINED__

/* interface _CrossAppDomainDelegate */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CrossAppDomainDelegate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AF93163F-C2F4-3FAB-9FF1-728A7AAAD1CB")
    _CrossAppDomainDelegate : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CrossAppDomainDelegateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CrossAppDomainDelegate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CrossAppDomainDelegate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CrossAppDomainDelegate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CrossAppDomainDelegate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CrossAppDomainDelegate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CrossAppDomainDelegate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CrossAppDomainDelegate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CrossAppDomainDelegateVtbl;

    interface _CrossAppDomainDelegate
    {
        CONST_VTBL struct _CrossAppDomainDelegateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CrossAppDomainDelegate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CrossAppDomainDelegate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CrossAppDomainDelegate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CrossAppDomainDelegate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CrossAppDomainDelegate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CrossAppDomainDelegate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CrossAppDomainDelegate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CrossAppDomainDelegate_INTERFACE_DEFINED__ */


#ifndef ___AppDomainManager_INTERFACE_DEFINED__
#define ___AppDomainManager_INTERFACE_DEFINED__

/* interface _AppDomainManager */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AppDomainManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63E53E04-D31B-3099-9F0C-C7A1C883C1D9")
    _AppDomainManager : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AppDomainManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AppDomainManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AppDomainManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AppDomainManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AppDomainManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AppDomainManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AppDomainManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AppDomainManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AppDomainManagerVtbl;

    interface _AppDomainManager
    {
        CONST_VTBL struct _AppDomainManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AppDomainManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AppDomainManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AppDomainManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AppDomainManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AppDomainManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AppDomainManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AppDomainManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AppDomainManager_INTERFACE_DEFINED__ */


#ifndef ___LoaderOptimizationAttribute_INTERFACE_DEFINED__
#define ___LoaderOptimizationAttribute_INTERFACE_DEFINED__

/* interface _LoaderOptimizationAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__LoaderOptimizationAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE59D7AD-05CA-33B4-A1DD-06028D46E9D2")
    _LoaderOptimizationAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _LoaderOptimizationAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LoaderOptimizationAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LoaderOptimizationAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LoaderOptimizationAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _LoaderOptimizationAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _LoaderOptimizationAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _LoaderOptimizationAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _LoaderOptimizationAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _LoaderOptimizationAttributeVtbl;

    interface _LoaderOptimizationAttribute
    {
        CONST_VTBL struct _LoaderOptimizationAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LoaderOptimizationAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LoaderOptimizationAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LoaderOptimizationAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LoaderOptimizationAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _LoaderOptimizationAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LoaderOptimizationAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LoaderOptimizationAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LoaderOptimizationAttribute_INTERFACE_DEFINED__ */


#ifndef ___AppDomainUnloadedException_INTERFACE_DEFINED__
#define ___AppDomainUnloadedException_INTERFACE_DEFINED__

/* interface _AppDomainUnloadedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AppDomainUnloadedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6E96AA70-9FFB-399D-96BF-A68436095C54")
    _AppDomainUnloadedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AppDomainUnloadedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AppDomainUnloadedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AppDomainUnloadedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AppDomainUnloadedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AppDomainUnloadedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AppDomainUnloadedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AppDomainUnloadedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AppDomainUnloadedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AppDomainUnloadedExceptionVtbl;

    interface _AppDomainUnloadedException
    {
        CONST_VTBL struct _AppDomainUnloadedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AppDomainUnloadedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AppDomainUnloadedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AppDomainUnloadedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AppDomainUnloadedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AppDomainUnloadedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AppDomainUnloadedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AppDomainUnloadedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AppDomainUnloadedException_INTERFACE_DEFINED__ */


#ifndef ___ActivationArguments_INTERFACE_DEFINED__
#define ___ActivationArguments_INTERFACE_DEFINED__

/* interface _ActivationArguments */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ActivationArguments;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CFD9CA27-F0BA-388A-ACDE-B7E20FCAD79C")
    _ActivationArguments : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ActivationArgumentsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ActivationArguments * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ActivationArguments * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ActivationArguments * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ActivationArguments * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ActivationArguments * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ActivationArguments * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ActivationArguments * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ActivationArgumentsVtbl;

    interface _ActivationArguments
    {
        CONST_VTBL struct _ActivationArgumentsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ActivationArguments_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ActivationArguments_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ActivationArguments_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ActivationArguments_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ActivationArguments_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ActivationArguments_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ActivationArguments_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ActivationArguments_INTERFACE_DEFINED__ */


#ifndef ___ApplicationId_INTERFACE_DEFINED__
#define ___ApplicationId_INTERFACE_DEFINED__

/* interface _ApplicationId */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationId;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2F218F95-4215-3CC6-8A51-BD2770C090E4")
    _ApplicationId : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationIdVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationId * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationId * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationId * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationId * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationId * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationId * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationId * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationIdVtbl;

    interface _ApplicationId
    {
        CONST_VTBL struct _ApplicationIdVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationId_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationId_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationId_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationId_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationId_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationId_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationId_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationId_INTERFACE_DEFINED__ */


#ifndef ___ArgumentException_INTERFACE_DEFINED__
#define ___ArgumentException_INTERFACE_DEFINED__

/* interface _ArgumentException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ArgumentException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4DB2C2B7-CBC2-3185-B966-875D4625B1A8")
    _ArgumentException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArgumentExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ArgumentException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ArgumentException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ArgumentException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ArgumentException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ArgumentException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ArgumentException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ArgumentException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArgumentExceptionVtbl;

    interface _ArgumentException
    {
        CONST_VTBL struct _ArgumentExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ArgumentException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ArgumentException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ArgumentException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ArgumentException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ArgumentException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ArgumentException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ArgumentException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ArgumentException_INTERFACE_DEFINED__ */


#ifndef ___ArgumentNullException_INTERFACE_DEFINED__
#define ___ArgumentNullException_INTERFACE_DEFINED__

/* interface _ArgumentNullException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ArgumentNullException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C991949B-E623-3F24-885C-BBB01FF43564")
    _ArgumentNullException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArgumentNullExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ArgumentNullException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ArgumentNullException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ArgumentNullException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ArgumentNullException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ArgumentNullException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ArgumentNullException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ArgumentNullException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArgumentNullExceptionVtbl;

    interface _ArgumentNullException
    {
        CONST_VTBL struct _ArgumentNullExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ArgumentNullException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ArgumentNullException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ArgumentNullException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ArgumentNullException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ArgumentNullException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ArgumentNullException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ArgumentNullException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ArgumentNullException_INTERFACE_DEFINED__ */


#ifndef ___ArgumentOutOfRangeException_INTERFACE_DEFINED__
#define ___ArgumentOutOfRangeException_INTERFACE_DEFINED__

/* interface _ArgumentOutOfRangeException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ArgumentOutOfRangeException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77DA3028-BC45-3E82-BF76-2C123EE2C021")
    _ArgumentOutOfRangeException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArgumentOutOfRangeExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ArgumentOutOfRangeException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ArgumentOutOfRangeException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ArgumentOutOfRangeException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ArgumentOutOfRangeException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ArgumentOutOfRangeException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ArgumentOutOfRangeException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ArgumentOutOfRangeException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArgumentOutOfRangeExceptionVtbl;

    interface _ArgumentOutOfRangeException
    {
        CONST_VTBL struct _ArgumentOutOfRangeExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ArgumentOutOfRangeException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ArgumentOutOfRangeException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ArgumentOutOfRangeException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ArgumentOutOfRangeException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ArgumentOutOfRangeException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ArgumentOutOfRangeException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ArgumentOutOfRangeException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ArgumentOutOfRangeException_INTERFACE_DEFINED__ */


#ifndef ___ArithmeticException_INTERFACE_DEFINED__
#define ___ArithmeticException_INTERFACE_DEFINED__

/* interface _ArithmeticException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ArithmeticException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9B012CF1-ACF6-3389-A336-C023040C62A2")
    _ArithmeticException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArithmeticExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ArithmeticException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ArithmeticException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ArithmeticException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ArithmeticException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ArithmeticException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ArithmeticException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ArithmeticException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArithmeticExceptionVtbl;

    interface _ArithmeticException
    {
        CONST_VTBL struct _ArithmeticExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ArithmeticException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ArithmeticException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ArithmeticException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ArithmeticException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ArithmeticException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ArithmeticException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ArithmeticException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ArithmeticException_INTERFACE_DEFINED__ */


#ifndef ___ArrayTypeMismatchException_INTERFACE_DEFINED__
#define ___ArrayTypeMismatchException_INTERFACE_DEFINED__

/* interface _ArrayTypeMismatchException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ArrayTypeMismatchException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DD7488A6-1B3F-3823-9556-C2772B15150F")
    _ArrayTypeMismatchException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArrayTypeMismatchExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ArrayTypeMismatchException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ArrayTypeMismatchException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ArrayTypeMismatchException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ArrayTypeMismatchException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ArrayTypeMismatchException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ArrayTypeMismatchException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ArrayTypeMismatchException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArrayTypeMismatchExceptionVtbl;

    interface _ArrayTypeMismatchException
    {
        CONST_VTBL struct _ArrayTypeMismatchExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ArrayTypeMismatchException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ArrayTypeMismatchException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ArrayTypeMismatchException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ArrayTypeMismatchException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ArrayTypeMismatchException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ArrayTypeMismatchException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ArrayTypeMismatchException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ArrayTypeMismatchException_INTERFACE_DEFINED__ */


#ifndef ___AsyncCallback_INTERFACE_DEFINED__
#define ___AsyncCallback_INTERFACE_DEFINED__

/* interface _AsyncCallback */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsyncCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3612706E-0239-35FD-B900-0819D16D442D")
    _AsyncCallback : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsyncCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsyncCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsyncCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsyncCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsyncCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsyncCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsyncCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsyncCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsyncCallbackVtbl;

    interface _AsyncCallback
    {
        CONST_VTBL struct _AsyncCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsyncCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsyncCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsyncCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsyncCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsyncCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsyncCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsyncCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsyncCallback_INTERFACE_DEFINED__ */


#ifndef ___AttributeUsageAttribute_INTERFACE_DEFINED__
#define ___AttributeUsageAttribute_INTERFACE_DEFINED__

/* interface _AttributeUsageAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AttributeUsageAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A902A192-49BA-3EC8-B444-AF5F7743F61A")
    _AttributeUsageAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AttributeUsageAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AttributeUsageAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AttributeUsageAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AttributeUsageAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AttributeUsageAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AttributeUsageAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AttributeUsageAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AttributeUsageAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AttributeUsageAttributeVtbl;

    interface _AttributeUsageAttribute
    {
        CONST_VTBL struct _AttributeUsageAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AttributeUsageAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AttributeUsageAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AttributeUsageAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AttributeUsageAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AttributeUsageAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AttributeUsageAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AttributeUsageAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AttributeUsageAttribute_INTERFACE_DEFINED__ */


#ifndef ___BadImageFormatException_INTERFACE_DEFINED__
#define ___BadImageFormatException_INTERFACE_DEFINED__

/* interface _BadImageFormatException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BadImageFormatException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F98BCE04-4A4B-398C-A512-FD8348D51E3B")
    _BadImageFormatException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BadImageFormatExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BadImageFormatException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BadImageFormatException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BadImageFormatException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BadImageFormatException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BadImageFormatException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BadImageFormatException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BadImageFormatException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BadImageFormatExceptionVtbl;

    interface _BadImageFormatException
    {
        CONST_VTBL struct _BadImageFormatExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BadImageFormatException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BadImageFormatException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BadImageFormatException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BadImageFormatException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BadImageFormatException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BadImageFormatException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BadImageFormatException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BadImageFormatException_INTERFACE_DEFINED__ */


#ifndef ___Buffer_INTERFACE_DEFINED__
#define ___Buffer_INTERFACE_DEFINED__

/* interface _Buffer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Buffer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F036BCA4-F8DF-3682-8290-75285CE7456C")
    _Buffer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BufferVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Buffer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Buffer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Buffer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Buffer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Buffer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Buffer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Buffer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BufferVtbl;

    interface _Buffer
    {
        CONST_VTBL struct _BufferVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Buffer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Buffer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Buffer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Buffer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Buffer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Buffer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Buffer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Buffer_INTERFACE_DEFINED__ */


#ifndef ___CannotUnloadAppDomainException_INTERFACE_DEFINED__
#define ___CannotUnloadAppDomainException_INTERFACE_DEFINED__

/* interface _CannotUnloadAppDomainException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CannotUnloadAppDomainException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6D4B6ADB-B9FA-3809-B5EA-FA57B56C546F")
    _CannotUnloadAppDomainException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CannotUnloadAppDomainExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CannotUnloadAppDomainException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CannotUnloadAppDomainException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CannotUnloadAppDomainException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CannotUnloadAppDomainException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CannotUnloadAppDomainException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CannotUnloadAppDomainException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CannotUnloadAppDomainException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CannotUnloadAppDomainExceptionVtbl;

    interface _CannotUnloadAppDomainException
    {
        CONST_VTBL struct _CannotUnloadAppDomainExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CannotUnloadAppDomainException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CannotUnloadAppDomainException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CannotUnloadAppDomainException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CannotUnloadAppDomainException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CannotUnloadAppDomainException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CannotUnloadAppDomainException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CannotUnloadAppDomainException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CannotUnloadAppDomainException_INTERFACE_DEFINED__ */


#ifndef ___CharEnumerator_INTERFACE_DEFINED__
#define ___CharEnumerator_INTERFACE_DEFINED__

/* interface _CharEnumerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CharEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1DD627FC-89E3-384F-BB9D-58CB4EFB9456")
    _CharEnumerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CharEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CharEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CharEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CharEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CharEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CharEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CharEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CharEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CharEnumeratorVtbl;

    interface _CharEnumerator
    {
        CONST_VTBL struct _CharEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CharEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CharEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CharEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CharEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CharEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CharEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CharEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CharEnumerator_INTERFACE_DEFINED__ */


#ifndef ___CLSCompliantAttribute_INTERFACE_DEFINED__
#define ___CLSCompliantAttribute_INTERFACE_DEFINED__

/* interface _CLSCompliantAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CLSCompliantAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BF1AF177-94CA-3E6D-9D91-55CF9E859D22")
    _CLSCompliantAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CLSCompliantAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CLSCompliantAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CLSCompliantAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CLSCompliantAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CLSCompliantAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CLSCompliantAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CLSCompliantAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CLSCompliantAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CLSCompliantAttributeVtbl;

    interface _CLSCompliantAttribute
    {
        CONST_VTBL struct _CLSCompliantAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CLSCompliantAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CLSCompliantAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CLSCompliantAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CLSCompliantAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CLSCompliantAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CLSCompliantAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CLSCompliantAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CLSCompliantAttribute_INTERFACE_DEFINED__ */


#ifndef ___TypeUnloadedException_INTERFACE_DEFINED__
#define ___TypeUnloadedException_INTERFACE_DEFINED__

/* interface _TypeUnloadedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeUnloadedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2A10F3A-356A-3C77-AAB9-8991D73A2561")
    _TypeUnloadedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeUnloadedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeUnloadedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeUnloadedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeUnloadedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeUnloadedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeUnloadedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeUnloadedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeUnloadedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeUnloadedExceptionVtbl;

    interface _TypeUnloadedException
    {
        CONST_VTBL struct _TypeUnloadedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeUnloadedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeUnloadedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeUnloadedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeUnloadedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeUnloadedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeUnloadedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeUnloadedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeUnloadedException_INTERFACE_DEFINED__ */


#ifndef ___CriticalFinalizerObject_INTERFACE_DEFINED__
#define ___CriticalFinalizerObject_INTERFACE_DEFINED__

/* interface _CriticalFinalizerObject */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CriticalFinalizerObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6B3F9834-1725-38C5-955E-20F051D067BD")
    _CriticalFinalizerObject : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CriticalFinalizerObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CriticalFinalizerObject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CriticalFinalizerObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CriticalFinalizerObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CriticalFinalizerObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CriticalFinalizerObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CriticalFinalizerObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CriticalFinalizerObject * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CriticalFinalizerObjectVtbl;

    interface _CriticalFinalizerObject
    {
        CONST_VTBL struct _CriticalFinalizerObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CriticalFinalizerObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CriticalFinalizerObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CriticalFinalizerObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CriticalFinalizerObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CriticalFinalizerObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CriticalFinalizerObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CriticalFinalizerObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CriticalFinalizerObject_INTERFACE_DEFINED__ */


#ifndef ___ContextMarshalException_INTERFACE_DEFINED__
#define ___ContextMarshalException_INTERFACE_DEFINED__

/* interface _ContextMarshalException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ContextMarshalException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7386F4D7-7C11-389F-BB75-895714B12BB5")
    _ContextMarshalException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextMarshalExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContextMarshalException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContextMarshalException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContextMarshalException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContextMarshalException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContextMarshalException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContextMarshalException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContextMarshalException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextMarshalExceptionVtbl;

    interface _ContextMarshalException
    {
        CONST_VTBL struct _ContextMarshalExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContextMarshalException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContextMarshalException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContextMarshalException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContextMarshalException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContextMarshalException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContextMarshalException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContextMarshalException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContextMarshalException_INTERFACE_DEFINED__ */


#ifndef ___ContextBoundObject_INTERFACE_DEFINED__
#define ___ContextBoundObject_INTERFACE_DEFINED__

/* interface _ContextBoundObject */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ContextBoundObject;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3EB1D909-E8BF-3C6B-ADA5-0E86E31E186E")
    _ContextBoundObject : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextBoundObjectVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContextBoundObject * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContextBoundObject * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContextBoundObject * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContextBoundObject * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContextBoundObject * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContextBoundObject * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContextBoundObject * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextBoundObjectVtbl;

    interface _ContextBoundObject
    {
        CONST_VTBL struct _ContextBoundObjectVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContextBoundObject_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContextBoundObject_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContextBoundObject_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContextBoundObject_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContextBoundObject_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContextBoundObject_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContextBoundObject_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContextBoundObject_INTERFACE_DEFINED__ */


#ifndef ___ContextStaticAttribute_INTERFACE_DEFINED__
#define ___ContextStaticAttribute_INTERFACE_DEFINED__

/* interface _ContextStaticAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ContextStaticAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("160D517F-F175-3B61-8264-6D2305B8246C")
    _ContextStaticAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextStaticAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContextStaticAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContextStaticAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContextStaticAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContextStaticAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContextStaticAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContextStaticAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContextStaticAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextStaticAttributeVtbl;

    interface _ContextStaticAttribute
    {
        CONST_VTBL struct _ContextStaticAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContextStaticAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContextStaticAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContextStaticAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContextStaticAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContextStaticAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContextStaticAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContextStaticAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContextStaticAttribute_INTERFACE_DEFINED__ */


#ifndef ___TimeZone_INTERFACE_DEFINED__
#define ___TimeZone_INTERFACE_DEFINED__

/* interface _TimeZone */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TimeZone;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3025F666-7891-33D7-AACD-23D169EF354E")
    _TimeZone : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TimeZoneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TimeZone * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TimeZone * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TimeZone * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TimeZone * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TimeZone * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TimeZone * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TimeZone * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TimeZoneVtbl;

    interface _TimeZone
    {
        CONST_VTBL struct _TimeZoneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TimeZone_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TimeZone_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TimeZone_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TimeZone_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TimeZone_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TimeZone_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TimeZone_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TimeZone_INTERFACE_DEFINED__ */


#ifndef ___DBNull_INTERFACE_DEFINED__
#define ___DBNull_INTERFACE_DEFINED__

/* interface _DBNull */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DBNull;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0D9F1B65-6D27-3E9F-BAF3-0597837E0F33")
    _DBNull : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DBNullVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DBNull * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DBNull * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DBNull * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DBNull * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DBNull * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DBNull * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DBNull * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DBNullVtbl;

    interface _DBNull
    {
        CONST_VTBL struct _DBNullVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DBNull_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DBNull_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DBNull_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DBNull_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DBNull_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DBNull_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DBNull_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DBNull_INTERFACE_DEFINED__ */


#ifndef ___Binder_INTERFACE_DEFINED__
#define ___Binder_INTERFACE_DEFINED__

/* interface _Binder */
/* [object][custom][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Binder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3169AB11-7109-3808-9A61-EF4BA0534FD9")
    _Binder : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BindToMethod( 
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [out][in] */ SAFEARRAY * *args,
            /* [in] */ SAFEARRAY * modifiers,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * names,
            /* [out] */ VARIANT *state,
            /* [retval][out] */ _MethodBase **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE BindToField( 
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [in] */ VARIANT value,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ _FieldInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SelectMethod( 
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodBase **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE SelectProperty( 
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * indexes,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ChangeType( 
            /* [in] */ VARIANT value,
            /* [in] */ _Type *Type,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE ReorderArgumentArray( 
            /* [out][in] */ SAFEARRAY * *args,
            /* [in] */ VARIANT state) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _BinderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Binder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Binder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Binder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Binder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Binder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Binder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Binder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            _Binder * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            _Binder * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            _Binder * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            _Binder * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BindToMethod )( 
            _Binder * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [out][in] */ SAFEARRAY * *args,
            /* [in] */ SAFEARRAY * modifiers,
            /* [in] */ _CultureInfo *culture,
            /* [in] */ SAFEARRAY * names,
            /* [out] */ VARIANT *state,
            /* [retval][out] */ _MethodBase **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *BindToField )( 
            _Binder * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [in] */ VARIANT value,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ _FieldInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SelectMethod )( 
            _Binder * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [in] */ SAFEARRAY * types,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _MethodBase **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *SelectProperty )( 
            _Binder * This,
            /* [in] */ BindingFlags bindingAttr,
            /* [in] */ SAFEARRAY * match,
            /* [in] */ _Type *returnType,
            /* [in] */ SAFEARRAY * indexes,
            /* [in] */ SAFEARRAY * modifiers,
            /* [retval][out] */ _PropertyInfo **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ChangeType )( 
            _Binder * This,
            /* [in] */ VARIANT value,
            /* [in] */ _Type *Type,
            /* [in] */ _CultureInfo *culture,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *ReorderArgumentArray )( 
            _Binder * This,
            /* [out][in] */ SAFEARRAY * *args,
            /* [in] */ VARIANT state);
        
        END_INTERFACE
    } _BinderVtbl;

    interface _Binder
    {
        CONST_VTBL struct _BinderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Binder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Binder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Binder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Binder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Binder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Binder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Binder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _Binder_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _Binder_Equals(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,obj,pRetVal) ) 

#define _Binder_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _Binder_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _Binder_BindToMethod(This,bindingAttr,match,args,modifiers,culture,names,state,pRetVal)	\
    ( (This)->lpVtbl -> BindToMethod(This,bindingAttr,match,args,modifiers,culture,names,state,pRetVal) ) 

#define _Binder_BindToField(This,bindingAttr,match,value,culture,pRetVal)	\
    ( (This)->lpVtbl -> BindToField(This,bindingAttr,match,value,culture,pRetVal) ) 

#define _Binder_SelectMethod(This,bindingAttr,match,types,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> SelectMethod(This,bindingAttr,match,types,modifiers,pRetVal) ) 

#define _Binder_SelectProperty(This,bindingAttr,match,returnType,indexes,modifiers,pRetVal)	\
    ( (This)->lpVtbl -> SelectProperty(This,bindingAttr,match,returnType,indexes,modifiers,pRetVal) ) 

#define _Binder_ChangeType(This,value,Type,culture,pRetVal)	\
    ( (This)->lpVtbl -> ChangeType(This,value,Type,culture,pRetVal) ) 

#define _Binder_ReorderArgumentArray(This,args,state)	\
    ( (This)->lpVtbl -> ReorderArgumentArray(This,args,state) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Binder_INTERFACE_DEFINED__ */


#ifndef ___DivideByZeroException_INTERFACE_DEFINED__
#define ___DivideByZeroException_INTERFACE_DEFINED__

/* interface _DivideByZeroException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DivideByZeroException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BDEEA460-8241-3B41-9ED3-6E3E9977AC7F")
    _DivideByZeroException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DivideByZeroExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DivideByZeroException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DivideByZeroException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DivideByZeroException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DivideByZeroException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DivideByZeroException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DivideByZeroException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DivideByZeroException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DivideByZeroExceptionVtbl;

    interface _DivideByZeroException
    {
        CONST_VTBL struct _DivideByZeroExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DivideByZeroException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DivideByZeroException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DivideByZeroException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DivideByZeroException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DivideByZeroException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DivideByZeroException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DivideByZeroException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DivideByZeroException_INTERFACE_DEFINED__ */


#ifndef ___DuplicateWaitObjectException_INTERFACE_DEFINED__
#define ___DuplicateWaitObjectException_INTERFACE_DEFINED__

/* interface _DuplicateWaitObjectException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DuplicateWaitObjectException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D345A42B-CFE0-3EEE-861C-F3322812B388")
    _DuplicateWaitObjectException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DuplicateWaitObjectExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DuplicateWaitObjectException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DuplicateWaitObjectException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DuplicateWaitObjectException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DuplicateWaitObjectException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DuplicateWaitObjectException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DuplicateWaitObjectException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DuplicateWaitObjectException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DuplicateWaitObjectExceptionVtbl;

    interface _DuplicateWaitObjectException
    {
        CONST_VTBL struct _DuplicateWaitObjectExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DuplicateWaitObjectException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DuplicateWaitObjectException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DuplicateWaitObjectException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DuplicateWaitObjectException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DuplicateWaitObjectException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DuplicateWaitObjectException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DuplicateWaitObjectException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DuplicateWaitObjectException_INTERFACE_DEFINED__ */


#ifndef ___TypeLoadException_INTERFACE_DEFINED__
#define ___TypeLoadException_INTERFACE_DEFINED__

/* interface _TypeLoadException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeLoadException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("82D6B3BF-A633-3B3B-A09E-2363E4B24A41")
    _TypeLoadException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeLoadExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeLoadException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeLoadException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeLoadException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeLoadException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeLoadException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeLoadException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeLoadException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeLoadExceptionVtbl;

    interface _TypeLoadException
    {
        CONST_VTBL struct _TypeLoadExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeLoadException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeLoadException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeLoadException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeLoadException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeLoadException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeLoadException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeLoadException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeLoadException_INTERFACE_DEFINED__ */


#ifndef ___EntryPointNotFoundException_INTERFACE_DEFINED__
#define ___EntryPointNotFoundException_INTERFACE_DEFINED__

/* interface _EntryPointNotFoundException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EntryPointNotFoundException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("67388F3F-B600-3BCF-84AA-BB2B88DD9EE2")
    _EntryPointNotFoundException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EntryPointNotFoundExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EntryPointNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EntryPointNotFoundException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EntryPointNotFoundException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EntryPointNotFoundException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EntryPointNotFoundException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EntryPointNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EntryPointNotFoundException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EntryPointNotFoundExceptionVtbl;

    interface _EntryPointNotFoundException
    {
        CONST_VTBL struct _EntryPointNotFoundExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EntryPointNotFoundException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EntryPointNotFoundException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EntryPointNotFoundException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EntryPointNotFoundException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EntryPointNotFoundException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EntryPointNotFoundException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EntryPointNotFoundException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EntryPointNotFoundException_INTERFACE_DEFINED__ */


#ifndef ___DllNotFoundException_INTERFACE_DEFINED__
#define ___DllNotFoundException_INTERFACE_DEFINED__

/* interface _DllNotFoundException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DllNotFoundException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("24AE6464-2834-32CD-83D6-FA06953DE62A")
    _DllNotFoundException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DllNotFoundExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DllNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DllNotFoundException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DllNotFoundException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DllNotFoundException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DllNotFoundException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DllNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DllNotFoundException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DllNotFoundExceptionVtbl;

    interface _DllNotFoundException
    {
        CONST_VTBL struct _DllNotFoundExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DllNotFoundException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DllNotFoundException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DllNotFoundException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DllNotFoundException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DllNotFoundException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DllNotFoundException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DllNotFoundException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DllNotFoundException_INTERFACE_DEFINED__ */


#ifndef ___Environment_INTERFACE_DEFINED__
#define ___Environment_INTERFACE_DEFINED__

/* interface _Environment */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Environment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("29DC56CF-B981-3432-97C8-3680AB6D862D")
    _Environment : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EnvironmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Environment * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Environment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Environment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Environment * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Environment * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Environment * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Environment * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EnvironmentVtbl;

    interface _Environment
    {
        CONST_VTBL struct _EnvironmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Environment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Environment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Environment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Environment_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Environment_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Environment_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Environment_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Environment_INTERFACE_DEFINED__ */


#ifndef ___EventHandler_INTERFACE_DEFINED__
#define ___EventHandler_INTERFACE_DEFINED__

/* interface _EventHandler */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7CEFC46E-16E0-3E65-9C38-55B4342BA7F0")
    _EventHandler : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EventHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EventHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EventHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EventHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EventHandlerVtbl;

    interface _EventHandler
    {
        CONST_VTBL struct _EventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EventHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EventHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EventHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EventHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EventHandler_INTERFACE_DEFINED__ */


#ifndef ___FieldAccessException_INTERFACE_DEFINED__
#define ___FieldAccessException_INTERFACE_DEFINED__

/* interface _FieldAccessException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FieldAccessException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8D5F5811-FFA1-3306-93E3-8AFC572B9B82")
    _FieldAccessException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FieldAccessExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FieldAccessException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FieldAccessException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FieldAccessException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FieldAccessException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FieldAccessException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FieldAccessException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FieldAccessException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FieldAccessExceptionVtbl;

    interface _FieldAccessException
    {
        CONST_VTBL struct _FieldAccessExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FieldAccessException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FieldAccessException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FieldAccessException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FieldAccessException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FieldAccessException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FieldAccessException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FieldAccessException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FieldAccessException_INTERFACE_DEFINED__ */


#ifndef ___FlagsAttribute_INTERFACE_DEFINED__
#define ___FlagsAttribute_INTERFACE_DEFINED__

/* interface _FlagsAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FlagsAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EBE3746D-DDEC-3D23-8E8D-9361BA87BAC6")
    _FlagsAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FlagsAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FlagsAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FlagsAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FlagsAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FlagsAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FlagsAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FlagsAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FlagsAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FlagsAttributeVtbl;

    interface _FlagsAttribute
    {
        CONST_VTBL struct _FlagsAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FlagsAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FlagsAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FlagsAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FlagsAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FlagsAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FlagsAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FlagsAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FlagsAttribute_INTERFACE_DEFINED__ */


#ifndef ___FormatException_INTERFACE_DEFINED__
#define ___FormatException_INTERFACE_DEFINED__

/* interface _FormatException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FormatException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("07F92156-398A-3548-90B7-2E58026353D0")
    _FormatException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FormatExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FormatException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FormatException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FormatException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FormatException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FormatException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FormatException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FormatException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FormatExceptionVtbl;

    interface _FormatException
    {
        CONST_VTBL struct _FormatExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FormatException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FormatException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FormatException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FormatException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FormatException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FormatException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FormatException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FormatException_INTERFACE_DEFINED__ */


#ifndef ___IndexOutOfRangeException_INTERFACE_DEFINED__
#define ___IndexOutOfRangeException_INTERFACE_DEFINED__

/* interface _IndexOutOfRangeException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IndexOutOfRangeException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E5A5F1E4-82C1-391F-A1C6-F39EAE9DC72F")
    _IndexOutOfRangeException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IndexOutOfRangeExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IndexOutOfRangeException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IndexOutOfRangeException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IndexOutOfRangeException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IndexOutOfRangeException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IndexOutOfRangeException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IndexOutOfRangeException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IndexOutOfRangeException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IndexOutOfRangeExceptionVtbl;

    interface _IndexOutOfRangeException
    {
        CONST_VTBL struct _IndexOutOfRangeExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IndexOutOfRangeException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IndexOutOfRangeException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IndexOutOfRangeException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IndexOutOfRangeException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IndexOutOfRangeException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IndexOutOfRangeException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IndexOutOfRangeException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IndexOutOfRangeException_INTERFACE_DEFINED__ */


#ifndef ___InvalidCastException_INTERFACE_DEFINED__
#define ___InvalidCastException_INTERFACE_DEFINED__

/* interface _InvalidCastException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InvalidCastException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA047CBD-9BA5-3A13-9B1F-6694D622CD76")
    _InvalidCastException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InvalidCastExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InvalidCastException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InvalidCastException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InvalidCastException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InvalidCastException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InvalidCastException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InvalidCastException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InvalidCastException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InvalidCastExceptionVtbl;

    interface _InvalidCastException
    {
        CONST_VTBL struct _InvalidCastExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InvalidCastException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InvalidCastException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InvalidCastException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InvalidCastException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InvalidCastException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InvalidCastException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InvalidCastException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InvalidCastException_INTERFACE_DEFINED__ */


#ifndef ___InvalidOperationException_INTERFACE_DEFINED__
#define ___InvalidOperationException_INTERFACE_DEFINED__

/* interface _InvalidOperationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InvalidOperationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8D520D10-0B8A-3553-8874-D30A4AD2FF4C")
    _InvalidOperationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InvalidOperationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InvalidOperationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InvalidOperationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InvalidOperationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InvalidOperationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InvalidOperationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InvalidOperationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InvalidOperationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InvalidOperationExceptionVtbl;

    interface _InvalidOperationException
    {
        CONST_VTBL struct _InvalidOperationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InvalidOperationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InvalidOperationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InvalidOperationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InvalidOperationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InvalidOperationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InvalidOperationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InvalidOperationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InvalidOperationException_INTERFACE_DEFINED__ */


#ifndef ___InvalidProgramException_INTERFACE_DEFINED__
#define ___InvalidProgramException_INTERFACE_DEFINED__

/* interface _InvalidProgramException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InvalidProgramException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3410E0FB-636F-3CD1-8045-3993CA113F25")
    _InvalidProgramException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InvalidProgramExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InvalidProgramException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InvalidProgramException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InvalidProgramException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InvalidProgramException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InvalidProgramException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InvalidProgramException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InvalidProgramException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InvalidProgramExceptionVtbl;

    interface _InvalidProgramException
    {
        CONST_VTBL struct _InvalidProgramExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InvalidProgramException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InvalidProgramException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InvalidProgramException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InvalidProgramException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InvalidProgramException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InvalidProgramException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InvalidProgramException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InvalidProgramException_INTERFACE_DEFINED__ */


#ifndef ___LocalDataStoreSlot_INTERFACE_DEFINED__
#define ___LocalDataStoreSlot_INTERFACE_DEFINED__

/* interface _LocalDataStoreSlot */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__LocalDataStoreSlot;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DC77F976-318D-3A1A-9B60-ABB9DD9406D6")
    _LocalDataStoreSlot : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _LocalDataStoreSlotVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LocalDataStoreSlot * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LocalDataStoreSlot * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LocalDataStoreSlot * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _LocalDataStoreSlot * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _LocalDataStoreSlot * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _LocalDataStoreSlot * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _LocalDataStoreSlot * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _LocalDataStoreSlotVtbl;

    interface _LocalDataStoreSlot
    {
        CONST_VTBL struct _LocalDataStoreSlotVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LocalDataStoreSlot_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LocalDataStoreSlot_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LocalDataStoreSlot_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LocalDataStoreSlot_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _LocalDataStoreSlot_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LocalDataStoreSlot_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LocalDataStoreSlot_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LocalDataStoreSlot_INTERFACE_DEFINED__ */


#ifndef ___MethodAccessException_INTERFACE_DEFINED__
#define ___MethodAccessException_INTERFACE_DEFINED__

/* interface _MethodAccessException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodAccessException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF0BF77D-8F81-3D31-A3BB-6F54440FA7E5")
    _MethodAccessException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodAccessExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodAccessException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodAccessException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodAccessException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodAccessException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodAccessException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodAccessException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodAccessException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodAccessExceptionVtbl;

    interface _MethodAccessException
    {
        CONST_VTBL struct _MethodAccessExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodAccessException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodAccessException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodAccessException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodAccessException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodAccessException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodAccessException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodAccessException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodAccessException_INTERFACE_DEFINED__ */


#ifndef ___MissingMemberException_INTERFACE_DEFINED__
#define ___MissingMemberException_INTERFACE_DEFINED__

/* interface _MissingMemberException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MissingMemberException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8897D14B-7FB3-3D8B-9EE4-221C3DBAD6FE")
    _MissingMemberException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MissingMemberExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MissingMemberException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MissingMemberException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MissingMemberException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MissingMemberException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MissingMemberException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MissingMemberException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MissingMemberException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MissingMemberExceptionVtbl;

    interface _MissingMemberException
    {
        CONST_VTBL struct _MissingMemberExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MissingMemberException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MissingMemberException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MissingMemberException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MissingMemberException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MissingMemberException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MissingMemberException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MissingMemberException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MissingMemberException_INTERFACE_DEFINED__ */


#ifndef ___MissingFieldException_INTERFACE_DEFINED__
#define ___MissingFieldException_INTERFACE_DEFINED__

/* interface _MissingFieldException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MissingFieldException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9717176D-1179-3487-8849-CF5F63DE356E")
    _MissingFieldException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MissingFieldExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MissingFieldException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MissingFieldException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MissingFieldException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MissingFieldException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MissingFieldException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MissingFieldException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MissingFieldException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MissingFieldExceptionVtbl;

    interface _MissingFieldException
    {
        CONST_VTBL struct _MissingFieldExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MissingFieldException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MissingFieldException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MissingFieldException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MissingFieldException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MissingFieldException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MissingFieldException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MissingFieldException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MissingFieldException_INTERFACE_DEFINED__ */


#ifndef ___MissingMethodException_INTERFACE_DEFINED__
#define ___MissingMethodException_INTERFACE_DEFINED__

/* interface _MissingMethodException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MissingMethodException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E5C659F6-92C8-3887-A07E-74D0D9C6267A")
    _MissingMethodException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MissingMethodExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MissingMethodException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MissingMethodException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MissingMethodException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MissingMethodException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MissingMethodException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MissingMethodException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MissingMethodException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MissingMethodExceptionVtbl;

    interface _MissingMethodException
    {
        CONST_VTBL struct _MissingMethodExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MissingMethodException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MissingMethodException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MissingMethodException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MissingMethodException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MissingMethodException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MissingMethodException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MissingMethodException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MissingMethodException_INTERFACE_DEFINED__ */


#ifndef ___MulticastNotSupportedException_INTERFACE_DEFINED__
#define ___MulticastNotSupportedException_INTERFACE_DEFINED__

/* interface _MulticastNotSupportedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MulticastNotSupportedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D2BA71CC-1B3D-3966-A0D7-C61E957AD325")
    _MulticastNotSupportedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MulticastNotSupportedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MulticastNotSupportedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MulticastNotSupportedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MulticastNotSupportedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MulticastNotSupportedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MulticastNotSupportedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MulticastNotSupportedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MulticastNotSupportedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MulticastNotSupportedExceptionVtbl;

    interface _MulticastNotSupportedException
    {
        CONST_VTBL struct _MulticastNotSupportedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MulticastNotSupportedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MulticastNotSupportedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MulticastNotSupportedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MulticastNotSupportedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MulticastNotSupportedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MulticastNotSupportedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MulticastNotSupportedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MulticastNotSupportedException_INTERFACE_DEFINED__ */


#ifndef ___NonSerializedAttribute_INTERFACE_DEFINED__
#define ___NonSerializedAttribute_INTERFACE_DEFINED__

/* interface _NonSerializedAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NonSerializedAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("665C9669-B9C6-3ADD-9213-099F0127C893")
    _NonSerializedAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NonSerializedAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NonSerializedAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NonSerializedAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NonSerializedAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NonSerializedAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NonSerializedAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NonSerializedAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NonSerializedAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NonSerializedAttributeVtbl;

    interface _NonSerializedAttribute
    {
        CONST_VTBL struct _NonSerializedAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NonSerializedAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NonSerializedAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NonSerializedAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NonSerializedAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NonSerializedAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NonSerializedAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NonSerializedAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NonSerializedAttribute_INTERFACE_DEFINED__ */


#ifndef ___NotFiniteNumberException_INTERFACE_DEFINED__
#define ___NotFiniteNumberException_INTERFACE_DEFINED__

/* interface _NotFiniteNumberException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NotFiniteNumberException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E21CE22-4F17-347B-B3B5-6A6DF3E0E58A")
    _NotFiniteNumberException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NotFiniteNumberExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NotFiniteNumberException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NotFiniteNumberException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NotFiniteNumberException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NotFiniteNumberException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NotFiniteNumberException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NotFiniteNumberException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NotFiniteNumberException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NotFiniteNumberExceptionVtbl;

    interface _NotFiniteNumberException
    {
        CONST_VTBL struct _NotFiniteNumberExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NotFiniteNumberException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NotFiniteNumberException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NotFiniteNumberException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NotFiniteNumberException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NotFiniteNumberException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NotFiniteNumberException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NotFiniteNumberException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NotFiniteNumberException_INTERFACE_DEFINED__ */


#ifndef ___NotImplementedException_INTERFACE_DEFINED__
#define ___NotImplementedException_INTERFACE_DEFINED__

/* interface _NotImplementedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NotImplementedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1E4D31A2-63EA-397A-A77E-B20AD87A9614")
    _NotImplementedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NotImplementedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NotImplementedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NotImplementedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NotImplementedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NotImplementedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NotImplementedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NotImplementedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NotImplementedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NotImplementedExceptionVtbl;

    interface _NotImplementedException
    {
        CONST_VTBL struct _NotImplementedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NotImplementedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NotImplementedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NotImplementedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NotImplementedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NotImplementedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NotImplementedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NotImplementedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NotImplementedException_INTERFACE_DEFINED__ */


#ifndef ___NotSupportedException_INTERFACE_DEFINED__
#define ___NotSupportedException_INTERFACE_DEFINED__

/* interface _NotSupportedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NotSupportedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("40E5451F-B237-33F8-945B-0230DB700BBB")
    _NotSupportedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NotSupportedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NotSupportedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NotSupportedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NotSupportedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NotSupportedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NotSupportedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NotSupportedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NotSupportedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NotSupportedExceptionVtbl;

    interface _NotSupportedException
    {
        CONST_VTBL struct _NotSupportedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NotSupportedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NotSupportedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NotSupportedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NotSupportedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NotSupportedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NotSupportedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NotSupportedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NotSupportedException_INTERFACE_DEFINED__ */


#ifndef ___NullReferenceException_INTERFACE_DEFINED__
#define ___NullReferenceException_INTERFACE_DEFINED__

/* interface _NullReferenceException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NullReferenceException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ECBE2313-CF41-34B4-9FD0-B6CD602B023F")
    _NullReferenceException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NullReferenceExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NullReferenceException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NullReferenceException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NullReferenceException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NullReferenceException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NullReferenceException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NullReferenceException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NullReferenceException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NullReferenceExceptionVtbl;

    interface _NullReferenceException
    {
        CONST_VTBL struct _NullReferenceExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NullReferenceException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NullReferenceException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NullReferenceException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NullReferenceException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NullReferenceException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NullReferenceException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NullReferenceException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NullReferenceException_INTERFACE_DEFINED__ */


#ifndef ___ObjectDisposedException_INTERFACE_DEFINED__
#define ___ObjectDisposedException_INTERFACE_DEFINED__

/* interface _ObjectDisposedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObjectDisposedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("17B730BA-45EF-3DDF-9F8D-A490BAC731F4")
    _ObjectDisposedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjectDisposedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObjectDisposedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObjectDisposedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObjectDisposedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObjectDisposedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObjectDisposedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObjectDisposedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObjectDisposedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObjectDisposedExceptionVtbl;

    interface _ObjectDisposedException
    {
        CONST_VTBL struct _ObjectDisposedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObjectDisposedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObjectDisposedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObjectDisposedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObjectDisposedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObjectDisposedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObjectDisposedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObjectDisposedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObjectDisposedException_INTERFACE_DEFINED__ */


#ifndef ___ObsoleteAttribute_INTERFACE_DEFINED__
#define ___ObsoleteAttribute_INTERFACE_DEFINED__

/* interface _ObsoleteAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObsoleteAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E84307BE-3036-307A-ACC2-5D5DE8A006A8")
    _ObsoleteAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObsoleteAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObsoleteAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObsoleteAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObsoleteAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObsoleteAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObsoleteAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObsoleteAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObsoleteAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObsoleteAttributeVtbl;

    interface _ObsoleteAttribute
    {
        CONST_VTBL struct _ObsoleteAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObsoleteAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObsoleteAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObsoleteAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObsoleteAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObsoleteAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObsoleteAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObsoleteAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObsoleteAttribute_INTERFACE_DEFINED__ */


#ifndef ___OperatingSystem_INTERFACE_DEFINED__
#define ___OperatingSystem_INTERFACE_DEFINED__

/* interface _OperatingSystem */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OperatingSystem;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9E230640-A5D0-30E1-B217-9D2B6CC0FC40")
    _OperatingSystem : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OperatingSystemVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OperatingSystem * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OperatingSystem * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OperatingSystem * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OperatingSystem * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OperatingSystem * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OperatingSystem * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OperatingSystem * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OperatingSystemVtbl;

    interface _OperatingSystem
    {
        CONST_VTBL struct _OperatingSystemVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OperatingSystem_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OperatingSystem_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OperatingSystem_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OperatingSystem_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OperatingSystem_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OperatingSystem_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OperatingSystem_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OperatingSystem_INTERFACE_DEFINED__ */


#ifndef ___OperationCanceledException_INTERFACE_DEFINED__
#define ___OperationCanceledException_INTERFACE_DEFINED__

/* interface _OperationCanceledException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OperationCanceledException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9DF9AF5A-7853-3D55-9B48-BD1F5D8367AB")
    _OperationCanceledException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OperationCanceledExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OperationCanceledException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OperationCanceledException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OperationCanceledException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OperationCanceledException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OperationCanceledException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OperationCanceledException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OperationCanceledException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OperationCanceledExceptionVtbl;

    interface _OperationCanceledException
    {
        CONST_VTBL struct _OperationCanceledExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OperationCanceledException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OperationCanceledException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OperationCanceledException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OperationCanceledException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OperationCanceledException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OperationCanceledException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OperationCanceledException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OperationCanceledException_INTERFACE_DEFINED__ */


#ifndef ___OverflowException_INTERFACE_DEFINED__
#define ___OverflowException_INTERFACE_DEFINED__

/* interface _OverflowException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OverflowException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("37C69A5D-7619-3A0F-A96B-9C9578AE00EF")
    _OverflowException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OverflowExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OverflowException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OverflowException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OverflowException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OverflowException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OverflowException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OverflowException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OverflowException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OverflowExceptionVtbl;

    interface _OverflowException
    {
        CONST_VTBL struct _OverflowExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OverflowException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OverflowException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OverflowException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OverflowException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OverflowException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OverflowException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OverflowException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OverflowException_INTERFACE_DEFINED__ */


#ifndef ___ParamArrayAttribute_INTERFACE_DEFINED__
#define ___ParamArrayAttribute_INTERFACE_DEFINED__

/* interface _ParamArrayAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ParamArrayAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D54500AE-8CF4-3092-9054-90DC91AC65C9")
    _ParamArrayAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ParamArrayAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ParamArrayAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ParamArrayAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ParamArrayAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ParamArrayAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ParamArrayAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ParamArrayAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ParamArrayAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ParamArrayAttributeVtbl;

    interface _ParamArrayAttribute
    {
        CONST_VTBL struct _ParamArrayAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ParamArrayAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ParamArrayAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ParamArrayAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ParamArrayAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ParamArrayAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ParamArrayAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ParamArrayAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ParamArrayAttribute_INTERFACE_DEFINED__ */


#ifndef ___PlatformNotSupportedException_INTERFACE_DEFINED__
#define ___PlatformNotSupportedException_INTERFACE_DEFINED__

/* interface _PlatformNotSupportedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PlatformNotSupportedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1EB8340B-8190-3D9D-92F8-51244B9804C5")
    _PlatformNotSupportedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PlatformNotSupportedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PlatformNotSupportedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PlatformNotSupportedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PlatformNotSupportedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PlatformNotSupportedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PlatformNotSupportedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PlatformNotSupportedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PlatformNotSupportedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PlatformNotSupportedExceptionVtbl;

    interface _PlatformNotSupportedException
    {
        CONST_VTBL struct _PlatformNotSupportedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PlatformNotSupportedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PlatformNotSupportedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PlatformNotSupportedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PlatformNotSupportedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PlatformNotSupportedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PlatformNotSupportedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PlatformNotSupportedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PlatformNotSupportedException_INTERFACE_DEFINED__ */


#ifndef ___Random_INTERFACE_DEFINED__
#define ___Random_INTERFACE_DEFINED__

/* interface _Random */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Random;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0F240708-629A-31AB-94A5-2BB476FE1783")
    _Random : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RandomVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Random * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Random * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Random * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Random * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Random * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Random * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Random * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RandomVtbl;

    interface _Random
    {
        CONST_VTBL struct _RandomVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Random_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Random_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Random_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Random_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Random_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Random_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Random_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Random_INTERFACE_DEFINED__ */


#ifndef ___RankException_INTERFACE_DEFINED__
#define ___RankException_INTERFACE_DEFINED__

/* interface _RankException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RankException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("871DDC46-B68E-3FEE-A09A-C808B0F827E6")
    _RankException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RankExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RankException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RankException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RankException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RankException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RankException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RankException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RankException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RankExceptionVtbl;

    interface _RankException
    {
        CONST_VTBL struct _RankExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RankException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RankException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RankException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RankException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RankException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RankException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RankException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RankException_INTERFACE_DEFINED__ */


#ifndef ___SerializableAttribute_INTERFACE_DEFINED__
#define ___SerializableAttribute_INTERFACE_DEFINED__

/* interface _SerializableAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SerializableAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B96E53C-4028-38BC-9DC3-8D7A9555C311")
    _SerializableAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SerializableAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SerializableAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SerializableAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SerializableAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SerializableAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SerializableAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SerializableAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SerializableAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SerializableAttributeVtbl;

    interface _SerializableAttribute
    {
        CONST_VTBL struct _SerializableAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SerializableAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SerializableAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SerializableAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SerializableAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SerializableAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SerializableAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SerializableAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SerializableAttribute_INTERFACE_DEFINED__ */


#ifndef ___TimeoutException_INTERFACE_DEFINED__
#define ___TimeoutException_INTERFACE_DEFINED__

/* interface _TimeoutException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TimeoutException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7AB88CA9-17F4-385E-AD41-4EE0AA316FA1")
    _TimeoutException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TimeoutExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TimeoutException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TimeoutException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TimeoutException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TimeoutException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TimeoutException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TimeoutException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TimeoutException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TimeoutExceptionVtbl;

    interface _TimeoutException
    {
        CONST_VTBL struct _TimeoutExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TimeoutException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TimeoutException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TimeoutException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TimeoutException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TimeoutException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TimeoutException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TimeoutException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TimeoutException_INTERFACE_DEFINED__ */


#ifndef ___TypeInitializationException_INTERFACE_DEFINED__
#define ___TypeInitializationException_INTERFACE_DEFINED__

/* interface _TypeInitializationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeInitializationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FEB0323D-8CE4-36A4-A41E-0BA0C32E1A6A")
    _TypeInitializationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeInitializationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeInitializationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeInitializationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeInitializationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeInitializationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeInitializationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeInitializationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeInitializationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeInitializationExceptionVtbl;

    interface _TypeInitializationException
    {
        CONST_VTBL struct _TypeInitializationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeInitializationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeInitializationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeInitializationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeInitializationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeInitializationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeInitializationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeInitializationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeInitializationException_INTERFACE_DEFINED__ */


#ifndef ___UnauthorizedAccessException_INTERFACE_DEFINED__
#define ___UnauthorizedAccessException_INTERFACE_DEFINED__

/* interface _UnauthorizedAccessException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnauthorizedAccessException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6193C5F6-6807-3561-A7F3-B64C80B5F00F")
    _UnauthorizedAccessException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnauthorizedAccessExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnauthorizedAccessException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnauthorizedAccessException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnauthorizedAccessException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnauthorizedAccessException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnauthorizedAccessException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnauthorizedAccessException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnauthorizedAccessException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnauthorizedAccessExceptionVtbl;

    interface _UnauthorizedAccessException
    {
        CONST_VTBL struct _UnauthorizedAccessExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnauthorizedAccessException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnauthorizedAccessException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnauthorizedAccessException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnauthorizedAccessException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnauthorizedAccessException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnauthorizedAccessException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnauthorizedAccessException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnauthorizedAccessException_INTERFACE_DEFINED__ */


#ifndef ___UnhandledExceptionEventArgs_INTERFACE_DEFINED__
#define ___UnhandledExceptionEventArgs_INTERFACE_DEFINED__

/* interface _UnhandledExceptionEventArgs */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnhandledExceptionEventArgs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A218E20A-0905-3741-B0B3-9E3193162E50")
    _UnhandledExceptionEventArgs : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnhandledExceptionEventArgsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnhandledExceptionEventArgs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnhandledExceptionEventArgs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnhandledExceptionEventArgs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnhandledExceptionEventArgs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnhandledExceptionEventArgs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnhandledExceptionEventArgs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnhandledExceptionEventArgs * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnhandledExceptionEventArgsVtbl;

    interface _UnhandledExceptionEventArgs
    {
        CONST_VTBL struct _UnhandledExceptionEventArgsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnhandledExceptionEventArgs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnhandledExceptionEventArgs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnhandledExceptionEventArgs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnhandledExceptionEventArgs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnhandledExceptionEventArgs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnhandledExceptionEventArgs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnhandledExceptionEventArgs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnhandledExceptionEventArgs_INTERFACE_DEFINED__ */


#ifndef ___UnhandledExceptionEventHandler_INTERFACE_DEFINED__
#define ___UnhandledExceptionEventHandler_INTERFACE_DEFINED__

/* interface _UnhandledExceptionEventHandler */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnhandledExceptionEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84199E64-439C-3011-B249-3C9065735ADB")
    _UnhandledExceptionEventHandler : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnhandledExceptionEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnhandledExceptionEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnhandledExceptionEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnhandledExceptionEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnhandledExceptionEventHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnhandledExceptionEventHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnhandledExceptionEventHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnhandledExceptionEventHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnhandledExceptionEventHandlerVtbl;

    interface _UnhandledExceptionEventHandler
    {
        CONST_VTBL struct _UnhandledExceptionEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnhandledExceptionEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnhandledExceptionEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnhandledExceptionEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnhandledExceptionEventHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnhandledExceptionEventHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnhandledExceptionEventHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnhandledExceptionEventHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnhandledExceptionEventHandler_INTERFACE_DEFINED__ */


#ifndef ___Version_INTERFACE_DEFINED__
#define ___Version_INTERFACE_DEFINED__

/* interface _Version */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Version;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("011A90C5-4910-3C29-BBB7-50D05CCBAA4A")
    _Version : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _VersionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Version * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Version * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Version * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Version * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Version * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Version * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Version * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _VersionVtbl;

    interface _Version
    {
        CONST_VTBL struct _VersionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Version_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Version_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Version_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Version_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Version_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Version_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Version_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Version_INTERFACE_DEFINED__ */


#ifndef ___WeakReference_INTERFACE_DEFINED__
#define ___WeakReference_INTERFACE_DEFINED__

/* interface _WeakReference */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WeakReference;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5DF3568-C251-3C58-AFB4-32E79E8261F0")
    _WeakReference : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WeakReferenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WeakReference * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WeakReference * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WeakReference * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WeakReference * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WeakReference * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WeakReference * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WeakReference * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WeakReferenceVtbl;

    interface _WeakReference
    {
        CONST_VTBL struct _WeakReferenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WeakReference_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WeakReference_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WeakReference_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WeakReference_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WeakReference_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WeakReference_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WeakReference_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WeakReference_INTERFACE_DEFINED__ */


#ifndef ___WaitHandle_INTERFACE_DEFINED__
#define ___WaitHandle_INTERFACE_DEFINED__

/* interface _WaitHandle */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WaitHandle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("40DFC50A-E93A-3C08-B9EF-E2B4F28B5676")
    _WaitHandle : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WaitHandleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WaitHandle * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WaitHandle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WaitHandle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WaitHandle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WaitHandle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WaitHandle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WaitHandle * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WaitHandleVtbl;

    interface _WaitHandle
    {
        CONST_VTBL struct _WaitHandleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WaitHandle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WaitHandle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WaitHandle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WaitHandle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WaitHandle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WaitHandle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WaitHandle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WaitHandle_INTERFACE_DEFINED__ */


#ifndef ___EventWaitHandle_INTERFACE_DEFINED__
#define ___EventWaitHandle_INTERFACE_DEFINED__

/* interface _EventWaitHandle */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EventWaitHandle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E142DB4A-1A52-34CE-965E-13AFFD5447D0")
    _EventWaitHandle : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EventWaitHandleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EventWaitHandle * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EventWaitHandle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EventWaitHandle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EventWaitHandle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EventWaitHandle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EventWaitHandle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EventWaitHandle * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EventWaitHandleVtbl;

    interface _EventWaitHandle
    {
        CONST_VTBL struct _EventWaitHandleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EventWaitHandle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EventWaitHandle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EventWaitHandle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EventWaitHandle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EventWaitHandle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EventWaitHandle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EventWaitHandle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EventWaitHandle_INTERFACE_DEFINED__ */


#ifndef ___AutoResetEvent_INTERFACE_DEFINED__
#define ___AutoResetEvent_INTERFACE_DEFINED__

/* interface _AutoResetEvent */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AutoResetEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F243EBD-612F-3DB8-9E03-BD92343A8371")
    _AutoResetEvent : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AutoResetEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AutoResetEvent * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AutoResetEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AutoResetEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AutoResetEvent * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AutoResetEvent * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AutoResetEvent * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AutoResetEvent * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AutoResetEventVtbl;

    interface _AutoResetEvent
    {
        CONST_VTBL struct _AutoResetEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AutoResetEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AutoResetEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AutoResetEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AutoResetEvent_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AutoResetEvent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AutoResetEvent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AutoResetEvent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AutoResetEvent_INTERFACE_DEFINED__ */


#ifndef ___ContextCallback_INTERFACE_DEFINED__
#define ___ContextCallback_INTERFACE_DEFINED__

/* interface _ContextCallback */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ContextCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56D201F1-3E5D-39D9-B5DE-064710818905")
    _ContextCallback : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContextCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContextCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContextCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContextCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContextCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContextCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContextCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextCallbackVtbl;

    interface _ContextCallback
    {
        CONST_VTBL struct _ContextCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContextCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContextCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContextCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContextCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContextCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContextCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContextCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContextCallback_INTERFACE_DEFINED__ */


#ifndef ___ManualResetEvent_INTERFACE_DEFINED__
#define ___ManualResetEvent_INTERFACE_DEFINED__

/* interface _ManualResetEvent */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ManualResetEvent;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C0BB9361-268F-3E72-BF6F-4120175A1500")
    _ManualResetEvent : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ManualResetEventVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ManualResetEvent * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ManualResetEvent * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ManualResetEvent * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ManualResetEvent * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ManualResetEvent * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ManualResetEvent * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ManualResetEvent * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ManualResetEventVtbl;

    interface _ManualResetEvent
    {
        CONST_VTBL struct _ManualResetEventVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ManualResetEvent_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ManualResetEvent_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ManualResetEvent_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ManualResetEvent_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ManualResetEvent_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ManualResetEvent_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ManualResetEvent_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ManualResetEvent_INTERFACE_DEFINED__ */


#ifndef ___Monitor_INTERFACE_DEFINED__
#define ___Monitor_INTERFACE_DEFINED__

/* interface _Monitor */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Monitor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EE22485E-4C45-3C9D-9027-A8D61C5F53F2")
    _Monitor : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MonitorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Monitor * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Monitor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Monitor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Monitor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Monitor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Monitor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Monitor * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MonitorVtbl;

    interface _Monitor
    {
        CONST_VTBL struct _MonitorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Monitor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Monitor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Monitor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Monitor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Monitor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Monitor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Monitor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Monitor_INTERFACE_DEFINED__ */


#ifndef ___Mutex_INTERFACE_DEFINED__
#define ___Mutex_INTERFACE_DEFINED__

/* interface _Mutex */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Mutex;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36CB559B-87C6-3AD2-9225-62A7ED499B37")
    _Mutex : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MutexVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Mutex * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Mutex * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Mutex * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Mutex * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Mutex * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Mutex * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Mutex * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MutexVtbl;

    interface _Mutex
    {
        CONST_VTBL struct _MutexVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Mutex_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Mutex_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Mutex_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Mutex_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Mutex_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Mutex_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Mutex_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Mutex_INTERFACE_DEFINED__ */


#ifndef ___Overlapped_INTERFACE_DEFINED__
#define ___Overlapped_INTERFACE_DEFINED__

/* interface _Overlapped */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Overlapped;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DD846FCC-8D04-3665-81B6-AACBE99C19C3")
    _Overlapped : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OverlappedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Overlapped * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Overlapped * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Overlapped * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Overlapped * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Overlapped * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Overlapped * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Overlapped * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OverlappedVtbl;

    interface _Overlapped
    {
        CONST_VTBL struct _OverlappedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Overlapped_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Overlapped_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Overlapped_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Overlapped_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Overlapped_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Overlapped_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Overlapped_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Overlapped_INTERFACE_DEFINED__ */


#ifndef ___ReaderWriterLock_INTERFACE_DEFINED__
#define ___ReaderWriterLock_INTERFACE_DEFINED__

/* interface _ReaderWriterLock */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ReaderWriterLock;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AD89B568-4FD4-3F8D-8327-B396B20A460E")
    _ReaderWriterLock : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ReaderWriterLockVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReaderWriterLock * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReaderWriterLock * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReaderWriterLock * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReaderWriterLock * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReaderWriterLock * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReaderWriterLock * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReaderWriterLock * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ReaderWriterLockVtbl;

    interface _ReaderWriterLock
    {
        CONST_VTBL struct _ReaderWriterLockVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReaderWriterLock_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReaderWriterLock_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReaderWriterLock_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReaderWriterLock_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReaderWriterLock_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReaderWriterLock_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReaderWriterLock_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReaderWriterLock_INTERFACE_DEFINED__ */


#ifndef ___SynchronizationLockException_INTERFACE_DEFINED__
#define ___SynchronizationLockException_INTERFACE_DEFINED__

/* interface _SynchronizationLockException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SynchronizationLockException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("87F55344-17E0-30FD-8EB9-38EAF6A19B3F")
    _SynchronizationLockException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SynchronizationLockExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SynchronizationLockException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SynchronizationLockException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SynchronizationLockException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SynchronizationLockException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SynchronizationLockException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SynchronizationLockException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SynchronizationLockException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SynchronizationLockExceptionVtbl;

    interface _SynchronizationLockException
    {
        CONST_VTBL struct _SynchronizationLockExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SynchronizationLockException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SynchronizationLockException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SynchronizationLockException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SynchronizationLockException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SynchronizationLockException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SynchronizationLockException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SynchronizationLockException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SynchronizationLockException_INTERFACE_DEFINED__ */


#ifndef ___ThreadAbortException_INTERFACE_DEFINED__
#define ___ThreadAbortException_INTERFACE_DEFINED__

/* interface _ThreadAbortException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ThreadAbortException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95B525DB-6B81-3CDC-8FE7-713F7FC793C0")
    _ThreadAbortException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ThreadAbortExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ThreadAbortException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ThreadAbortException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ThreadAbortException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ThreadAbortException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ThreadAbortException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ThreadAbortException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ThreadAbortException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ThreadAbortExceptionVtbl;

    interface _ThreadAbortException
    {
        CONST_VTBL struct _ThreadAbortExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ThreadAbortException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ThreadAbortException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ThreadAbortException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ThreadAbortException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ThreadAbortException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ThreadAbortException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ThreadAbortException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ThreadAbortException_INTERFACE_DEFINED__ */


#ifndef ___ThreadInterruptedException_INTERFACE_DEFINED__
#define ___ThreadInterruptedException_INTERFACE_DEFINED__

/* interface _ThreadInterruptedException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ThreadInterruptedException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B9E07599-7C44-33BE-A70E-EFA16F51F54A")
    _ThreadInterruptedException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ThreadInterruptedExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ThreadInterruptedException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ThreadInterruptedException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ThreadInterruptedException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ThreadInterruptedException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ThreadInterruptedException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ThreadInterruptedException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ThreadInterruptedException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ThreadInterruptedExceptionVtbl;

    interface _ThreadInterruptedException
    {
        CONST_VTBL struct _ThreadInterruptedExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ThreadInterruptedException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ThreadInterruptedException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ThreadInterruptedException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ThreadInterruptedException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ThreadInterruptedException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ThreadInterruptedException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ThreadInterruptedException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ThreadInterruptedException_INTERFACE_DEFINED__ */


#ifndef ___RegisteredWaitHandle_INTERFACE_DEFINED__
#define ___RegisteredWaitHandle_INTERFACE_DEFINED__

/* interface _RegisteredWaitHandle */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RegisteredWaitHandle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64409425-F8C9-370E-809E-3241CE804541")
    _RegisteredWaitHandle : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RegisteredWaitHandleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RegisteredWaitHandle * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RegisteredWaitHandle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RegisteredWaitHandle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RegisteredWaitHandle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RegisteredWaitHandle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RegisteredWaitHandle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RegisteredWaitHandle * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RegisteredWaitHandleVtbl;

    interface _RegisteredWaitHandle
    {
        CONST_VTBL struct _RegisteredWaitHandleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RegisteredWaitHandle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RegisteredWaitHandle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RegisteredWaitHandle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RegisteredWaitHandle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RegisteredWaitHandle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RegisteredWaitHandle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RegisteredWaitHandle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RegisteredWaitHandle_INTERFACE_DEFINED__ */


#ifndef ___WaitCallback_INTERFACE_DEFINED__
#define ___WaitCallback_INTERFACE_DEFINED__

/* interface _WaitCallback */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WaitCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE949142-4D4C-358D-89A9-E69A531AA363")
    _WaitCallback : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WaitCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WaitCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WaitCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WaitCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WaitCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WaitCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WaitCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WaitCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WaitCallbackVtbl;

    interface _WaitCallback
    {
        CONST_VTBL struct _WaitCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WaitCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WaitCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WaitCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WaitCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WaitCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WaitCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WaitCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WaitCallback_INTERFACE_DEFINED__ */


#ifndef ___WaitOrTimerCallback_INTERFACE_DEFINED__
#define ___WaitOrTimerCallback_INTERFACE_DEFINED__

/* interface _WaitOrTimerCallback */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WaitOrTimerCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F078F795-F452-3D2D-8CC8-16D66AE46C67")
    _WaitOrTimerCallback : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WaitOrTimerCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WaitOrTimerCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WaitOrTimerCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WaitOrTimerCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WaitOrTimerCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WaitOrTimerCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WaitOrTimerCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WaitOrTimerCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WaitOrTimerCallbackVtbl;

    interface _WaitOrTimerCallback
    {
        CONST_VTBL struct _WaitOrTimerCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WaitOrTimerCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WaitOrTimerCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WaitOrTimerCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WaitOrTimerCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WaitOrTimerCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WaitOrTimerCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WaitOrTimerCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WaitOrTimerCallback_INTERFACE_DEFINED__ */


#ifndef ___IOCompletionCallback_INTERFACE_DEFINED__
#define ___IOCompletionCallback_INTERFACE_DEFINED__

/* interface _IOCompletionCallback */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IOCompletionCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BBAE942D-BFF4-36E2-A3BC-508BB3801F4F")
    _IOCompletionCallback : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IOCompletionCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IOCompletionCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IOCompletionCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IOCompletionCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IOCompletionCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IOCompletionCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IOCompletionCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IOCompletionCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IOCompletionCallbackVtbl;

    interface _IOCompletionCallback
    {
        CONST_VTBL struct _IOCompletionCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IOCompletionCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IOCompletionCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IOCompletionCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IOCompletionCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IOCompletionCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IOCompletionCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IOCompletionCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IOCompletionCallback_INTERFACE_DEFINED__ */


#ifndef ___ThreadStart_INTERFACE_DEFINED__
#define ___ThreadStart_INTERFACE_DEFINED__

/* interface _ThreadStart */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ThreadStart;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B45BBD7E-A977-3F56-A626-7A693E5DBBC5")
    _ThreadStart : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ThreadStartVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ThreadStart * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ThreadStart * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ThreadStart * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ThreadStart * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ThreadStart * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ThreadStart * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ThreadStart * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ThreadStartVtbl;

    interface _ThreadStart
    {
        CONST_VTBL struct _ThreadStartVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ThreadStart_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ThreadStart_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ThreadStart_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ThreadStart_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ThreadStart_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ThreadStart_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ThreadStart_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ThreadStart_INTERFACE_DEFINED__ */


#ifndef ___ThreadStateException_INTERFACE_DEFINED__
#define ___ThreadStateException_INTERFACE_DEFINED__

/* interface _ThreadStateException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ThreadStateException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A13A41CF-E066-3B90-82F4-73109104E348")
    _ThreadStateException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ThreadStateExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ThreadStateException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ThreadStateException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ThreadStateException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ThreadStateException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ThreadStateException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ThreadStateException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ThreadStateException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ThreadStateExceptionVtbl;

    interface _ThreadStateException
    {
        CONST_VTBL struct _ThreadStateExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ThreadStateException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ThreadStateException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ThreadStateException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ThreadStateException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ThreadStateException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ThreadStateException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ThreadStateException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ThreadStateException_INTERFACE_DEFINED__ */


#ifndef ___ThreadStaticAttribute_INTERFACE_DEFINED__
#define ___ThreadStaticAttribute_INTERFACE_DEFINED__

/* interface _ThreadStaticAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ThreadStaticAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A6B94B6D-854E-3172-A4EC-A17EDD16F85E")
    _ThreadStaticAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ThreadStaticAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ThreadStaticAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ThreadStaticAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ThreadStaticAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ThreadStaticAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ThreadStaticAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ThreadStaticAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ThreadStaticAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ThreadStaticAttributeVtbl;

    interface _ThreadStaticAttribute
    {
        CONST_VTBL struct _ThreadStaticAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ThreadStaticAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ThreadStaticAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ThreadStaticAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ThreadStaticAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ThreadStaticAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ThreadStaticAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ThreadStaticAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ThreadStaticAttribute_INTERFACE_DEFINED__ */


#ifndef ___Timeout_INTERFACE_DEFINED__
#define ___Timeout_INTERFACE_DEFINED__

/* interface _Timeout */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Timeout;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("81456E86-22AF-31D1-A91A-9C370C0E2530")
    _Timeout : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TimeoutVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Timeout * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Timeout * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Timeout * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Timeout * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Timeout * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Timeout * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Timeout * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TimeoutVtbl;

    interface _Timeout
    {
        CONST_VTBL struct _TimeoutVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Timeout_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Timeout_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Timeout_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Timeout_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Timeout_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Timeout_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Timeout_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Timeout_INTERFACE_DEFINED__ */


#ifndef ___TimerCallback_INTERFACE_DEFINED__
#define ___TimerCallback_INTERFACE_DEFINED__

/* interface _TimerCallback */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TimerCallback;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3741BC6F-101B-36D7-A9D5-03FCC0ECDA35")
    _TimerCallback : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TimerCallbackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TimerCallback * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TimerCallback * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TimerCallback * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TimerCallback * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TimerCallback * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TimerCallback * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TimerCallback * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TimerCallbackVtbl;

    interface _TimerCallback
    {
        CONST_VTBL struct _TimerCallbackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TimerCallback_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TimerCallback_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TimerCallback_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TimerCallback_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TimerCallback_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TimerCallback_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TimerCallback_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TimerCallback_INTERFACE_DEFINED__ */


#ifndef ___Timer_INTERFACE_DEFINED__
#define ___Timer_INTERFACE_DEFINED__

/* interface _Timer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Timer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B49A029B-406B-3B1E-88E4-F86690D20364")
    _Timer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TimerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Timer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Timer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Timer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Timer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Timer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Timer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Timer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TimerVtbl;

    interface _Timer
    {
        CONST_VTBL struct _TimerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Timer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Timer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Timer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Timer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Timer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Timer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Timer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Timer_INTERFACE_DEFINED__ */


#ifndef ___STAThreadAttribute_INTERFACE_DEFINED__
#define ___STAThreadAttribute_INTERFACE_DEFINED__

/* interface _STAThreadAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__STAThreadAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85D72F83-BE91-3CB1-B4F0-76B56FF04033")
    _STAThreadAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _STAThreadAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _STAThreadAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _STAThreadAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _STAThreadAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _STAThreadAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _STAThreadAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _STAThreadAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _STAThreadAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _STAThreadAttributeVtbl;

    interface _STAThreadAttribute
    {
        CONST_VTBL struct _STAThreadAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _STAThreadAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _STAThreadAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _STAThreadAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _STAThreadAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _STAThreadAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _STAThreadAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _STAThreadAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___STAThreadAttribute_INTERFACE_DEFINED__ */


#ifndef ___MTAThreadAttribute_INTERFACE_DEFINED__
#define ___MTAThreadAttribute_INTERFACE_DEFINED__

/* interface _MTAThreadAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MTAThreadAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C02468D1-8713-3225-BDA3-49B2FE37DDBB")
    _MTAThreadAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MTAThreadAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MTAThreadAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MTAThreadAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MTAThreadAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MTAThreadAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MTAThreadAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MTAThreadAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MTAThreadAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MTAThreadAttributeVtbl;

    interface _MTAThreadAttribute
    {
        CONST_VTBL struct _MTAThreadAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MTAThreadAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MTAThreadAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MTAThreadAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MTAThreadAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MTAThreadAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MTAThreadAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MTAThreadAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MTAThreadAttribute_INTERFACE_DEFINED__ */


#ifndef ___ArrayList_INTERFACE_DEFINED__
#define ___ArrayList_INTERFACE_DEFINED__

/* interface _ArrayList */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ArrayList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("401F89CB-C127-3041-82FD-B67035395C56")
    _ArrayList : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ArrayListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ArrayList * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ArrayList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ArrayList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ArrayList * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ArrayList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ArrayList * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ArrayList * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ArrayListVtbl;

    interface _ArrayList
    {
        CONST_VTBL struct _ArrayListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ArrayList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ArrayList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ArrayList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ArrayList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ArrayList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ArrayList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ArrayList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ArrayList_INTERFACE_DEFINED__ */


#ifndef ___BitArray_INTERFACE_DEFINED__
#define ___BitArray_INTERFACE_DEFINED__

/* interface _BitArray */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BitArray;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F145C46A-D170-3170-B52F-4678DFCA0300")
    _BitArray : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BitArrayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BitArray * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BitArray * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BitArray * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BitArray * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BitArray * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BitArray * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BitArray * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BitArrayVtbl;

    interface _BitArray
    {
        CONST_VTBL struct _BitArrayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BitArray_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BitArray_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BitArray_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BitArray_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BitArray_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BitArray_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BitArray_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BitArray_INTERFACE_DEFINED__ */


#ifndef ___CaseInsensitiveComparer_INTERFACE_DEFINED__
#define ___CaseInsensitiveComparer_INTERFACE_DEFINED__

/* interface _CaseInsensitiveComparer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CaseInsensitiveComparer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EA6795AC-97D6-3377-BE64-829ABD67607B")
    _CaseInsensitiveComparer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CaseInsensitiveComparerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CaseInsensitiveComparer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CaseInsensitiveComparer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CaseInsensitiveComparer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CaseInsensitiveComparer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CaseInsensitiveComparer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CaseInsensitiveComparer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CaseInsensitiveComparer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CaseInsensitiveComparerVtbl;

    interface _CaseInsensitiveComparer
    {
        CONST_VTBL struct _CaseInsensitiveComparerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CaseInsensitiveComparer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CaseInsensitiveComparer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CaseInsensitiveComparer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CaseInsensitiveComparer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CaseInsensitiveComparer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CaseInsensitiveComparer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CaseInsensitiveComparer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CaseInsensitiveComparer_INTERFACE_DEFINED__ */


#ifndef ___CaseInsensitiveHashCodeProvider_INTERFACE_DEFINED__
#define ___CaseInsensitiveHashCodeProvider_INTERFACE_DEFINED__

/* interface _CaseInsensitiveHashCodeProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CaseInsensitiveHashCodeProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0422B845-B636-3688-8F61-9B6D93096336")
    _CaseInsensitiveHashCodeProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CaseInsensitiveHashCodeProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CaseInsensitiveHashCodeProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CaseInsensitiveHashCodeProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CaseInsensitiveHashCodeProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CaseInsensitiveHashCodeProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CaseInsensitiveHashCodeProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CaseInsensitiveHashCodeProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CaseInsensitiveHashCodeProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CaseInsensitiveHashCodeProviderVtbl;

    interface _CaseInsensitiveHashCodeProvider
    {
        CONST_VTBL struct _CaseInsensitiveHashCodeProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CaseInsensitiveHashCodeProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CaseInsensitiveHashCodeProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CaseInsensitiveHashCodeProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CaseInsensitiveHashCodeProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CaseInsensitiveHashCodeProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CaseInsensitiveHashCodeProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CaseInsensitiveHashCodeProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CaseInsensitiveHashCodeProvider_INTERFACE_DEFINED__ */


#ifndef ___CollectionBase_INTERFACE_DEFINED__
#define ___CollectionBase_INTERFACE_DEFINED__

/* interface _CollectionBase */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CollectionBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B7D29E26-7798-3FA4-90F4-E6A22D2099F9")
    _CollectionBase : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CollectionBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CollectionBase * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CollectionBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CollectionBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CollectionBase * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CollectionBase * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CollectionBase * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CollectionBase * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CollectionBaseVtbl;

    interface _CollectionBase
    {
        CONST_VTBL struct _CollectionBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CollectionBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CollectionBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CollectionBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CollectionBase_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CollectionBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CollectionBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CollectionBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CollectionBase_INTERFACE_DEFINED__ */


#ifndef ___Comparer_INTERFACE_DEFINED__
#define ___Comparer_INTERFACE_DEFINED__

/* interface _Comparer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Comparer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8064A157-B5C8-3A4A-AD3D-02DC1A39C417")
    _Comparer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComparerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Comparer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Comparer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Comparer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Comparer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Comparer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Comparer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Comparer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComparerVtbl;

    interface _Comparer
    {
        CONST_VTBL struct _ComparerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Comparer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Comparer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Comparer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Comparer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Comparer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Comparer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Comparer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Comparer_INTERFACE_DEFINED__ */


#ifndef ___DictionaryBase_INTERFACE_DEFINED__
#define ___DictionaryBase_INTERFACE_DEFINED__

/* interface _DictionaryBase */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DictionaryBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDD44DA2-BC6B-3620-9317-C0372968C741")
    _DictionaryBase : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DictionaryBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DictionaryBase * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DictionaryBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DictionaryBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DictionaryBase * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DictionaryBase * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DictionaryBase * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DictionaryBase * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DictionaryBaseVtbl;

    interface _DictionaryBase
    {
        CONST_VTBL struct _DictionaryBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DictionaryBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DictionaryBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DictionaryBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DictionaryBase_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DictionaryBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DictionaryBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DictionaryBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DictionaryBase_INTERFACE_DEFINED__ */


#ifndef ___Hashtable_INTERFACE_DEFINED__
#define ___Hashtable_INTERFACE_DEFINED__

/* interface _Hashtable */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Hashtable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D25A197E-3E69-3271-A989-23D85E97F920")
    _Hashtable : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HashtableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Hashtable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Hashtable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Hashtable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Hashtable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Hashtable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Hashtable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Hashtable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HashtableVtbl;

    interface _Hashtable
    {
        CONST_VTBL struct _HashtableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Hashtable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Hashtable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Hashtable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Hashtable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Hashtable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Hashtable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Hashtable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Hashtable_INTERFACE_DEFINED__ */


#ifndef ___Queue_INTERFACE_DEFINED__
#define ___Queue_INTERFACE_DEFINED__

/* interface _Queue */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Queue;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A7D3CA4-B7D1-3A2A-800C-8FC2ACFCBDA4")
    _Queue : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _QueueVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Queue * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Queue * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Queue * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Queue * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Queue * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Queue * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Queue * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _QueueVtbl;

    interface _Queue
    {
        CONST_VTBL struct _QueueVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Queue_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Queue_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Queue_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Queue_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Queue_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Queue_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Queue_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Queue_INTERFACE_DEFINED__ */


#ifndef ___ReadOnlyCollectionBase_INTERFACE_DEFINED__
#define ___ReadOnlyCollectionBase_INTERFACE_DEFINED__

/* interface _ReadOnlyCollectionBase */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ReadOnlyCollectionBase;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BD32D878-A59B-3E5C-BFE0-A96B1A1E9D6F")
    _ReadOnlyCollectionBase : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ReadOnlyCollectionBaseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReadOnlyCollectionBase * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReadOnlyCollectionBase * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReadOnlyCollectionBase * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReadOnlyCollectionBase * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReadOnlyCollectionBase * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReadOnlyCollectionBase * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReadOnlyCollectionBase * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ReadOnlyCollectionBaseVtbl;

    interface _ReadOnlyCollectionBase
    {
        CONST_VTBL struct _ReadOnlyCollectionBaseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReadOnlyCollectionBase_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReadOnlyCollectionBase_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReadOnlyCollectionBase_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReadOnlyCollectionBase_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReadOnlyCollectionBase_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReadOnlyCollectionBase_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReadOnlyCollectionBase_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReadOnlyCollectionBase_INTERFACE_DEFINED__ */


#ifndef ___SortedList_INTERFACE_DEFINED__
#define ___SortedList_INTERFACE_DEFINED__

/* interface _SortedList */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SortedList;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("56421139-A143-3AE9-9852-1DBDFE3D6BFA")
    _SortedList : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SortedListVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SortedList * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SortedList * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SortedList * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SortedList * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SortedList * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SortedList * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SortedList * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SortedListVtbl;

    interface _SortedList
    {
        CONST_VTBL struct _SortedListVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SortedList_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SortedList_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SortedList_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SortedList_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SortedList_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SortedList_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SortedList_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SortedList_INTERFACE_DEFINED__ */


#ifndef ___Stack_INTERFACE_DEFINED__
#define ___Stack_INTERFACE_DEFINED__

/* interface _Stack */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Stack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB538809-3C2F-35D9-80E6-7BAD540484A1")
    _Stack : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Stack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Stack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Stack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Stack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Stack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Stack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Stack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StackVtbl;

    interface _Stack
    {
        CONST_VTBL struct _StackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Stack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Stack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Stack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Stack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Stack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Stack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Stack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Stack_INTERFACE_DEFINED__ */


#ifndef ___Nullable_INTERFACE_DEFINED__
#define ___Nullable_INTERFACE_DEFINED__

/* interface _Nullable */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Nullable;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("84E7AC09-795A-3EA9-A36A-5B81EBAB0558")
    _Nullable : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NullableVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Nullable * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Nullable * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Nullable * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Nullable * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Nullable * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Nullable * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Nullable * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NullableVtbl;

    interface _Nullable
    {
        CONST_VTBL struct _NullableVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Nullable_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Nullable_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Nullable_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Nullable_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Nullable_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Nullable_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Nullable_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Nullable_INTERFACE_DEFINED__ */


#ifndef ___KeyNotFoundException_INTERFACE_DEFINED__
#define ___KeyNotFoundException_INTERFACE_DEFINED__

/* interface _KeyNotFoundException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyNotFoundException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8039C41F-4399-38A2-99B7-D234B5CF7A7B")
    _KeyNotFoundException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyNotFoundExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyNotFoundException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyNotFoundException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyNotFoundException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyNotFoundException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyNotFoundException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyNotFoundExceptionVtbl;

    interface _KeyNotFoundException
    {
        CONST_VTBL struct _KeyNotFoundExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyNotFoundException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyNotFoundException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyNotFoundException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyNotFoundException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyNotFoundException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyNotFoundException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyNotFoundException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyNotFoundException_INTERFACE_DEFINED__ */


#ifndef ___ConditionalAttribute_INTERFACE_DEFINED__
#define ___ConditionalAttribute_INTERFACE_DEFINED__

/* interface _ConditionalAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ConditionalAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E40A025C-645B-3C8E-A1AC-9C5CCA279625")
    _ConditionalAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ConditionalAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ConditionalAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ConditionalAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ConditionalAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ConditionalAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ConditionalAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ConditionalAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ConditionalAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ConditionalAttributeVtbl;

    interface _ConditionalAttribute
    {
        CONST_VTBL struct _ConditionalAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ConditionalAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ConditionalAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ConditionalAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ConditionalAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ConditionalAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ConditionalAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ConditionalAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ConditionalAttribute_INTERFACE_DEFINED__ */


#ifndef ___Debugger_INTERFACE_DEFINED__
#define ___Debugger_INTERFACE_DEFINED__

/* interface _Debugger */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Debugger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A9B4786C-08E3-344F-A651-2F9926DEAC5E")
    _Debugger : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Debugger * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Debugger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Debugger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Debugger * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Debugger * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Debugger * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Debugger * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerVtbl;

    interface _Debugger
    {
        CONST_VTBL struct _DebuggerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Debugger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Debugger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Debugger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Debugger_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Debugger_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Debugger_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Debugger_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Debugger_INTERFACE_DEFINED__ */


#ifndef ___DebuggerStepThroughAttribute_INTERFACE_DEFINED__
#define ___DebuggerStepThroughAttribute_INTERFACE_DEFINED__

/* interface _DebuggerStepThroughAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerStepThroughAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3344E8B4-A5C3-3882-8D30-63792485ECCF")
    _DebuggerStepThroughAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerStepThroughAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerStepThroughAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerStepThroughAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerStepThroughAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerStepThroughAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerStepThroughAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerStepThroughAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerStepThroughAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerStepThroughAttributeVtbl;

    interface _DebuggerStepThroughAttribute
    {
        CONST_VTBL struct _DebuggerStepThroughAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerStepThroughAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerStepThroughAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerStepThroughAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerStepThroughAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerStepThroughAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerStepThroughAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerStepThroughAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerStepThroughAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerStepperBoundaryAttribute_INTERFACE_DEFINED__
#define ___DebuggerStepperBoundaryAttribute_INTERFACE_DEFINED__

/* interface _DebuggerStepperBoundaryAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerStepperBoundaryAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B3276180-B23E-3034-B18F-E0122BA4E4CF")
    _DebuggerStepperBoundaryAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerStepperBoundaryAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerStepperBoundaryAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerStepperBoundaryAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerStepperBoundaryAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerStepperBoundaryAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerStepperBoundaryAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerStepperBoundaryAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerStepperBoundaryAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerStepperBoundaryAttributeVtbl;

    interface _DebuggerStepperBoundaryAttribute
    {
        CONST_VTBL struct _DebuggerStepperBoundaryAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerStepperBoundaryAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerStepperBoundaryAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerStepperBoundaryAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerStepperBoundaryAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerStepperBoundaryAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerStepperBoundaryAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerStepperBoundaryAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerStepperBoundaryAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerHiddenAttribute_INTERFACE_DEFINED__
#define ___DebuggerHiddenAttribute_INTERFACE_DEFINED__

/* interface _DebuggerHiddenAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerHiddenAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("55B6903B-55FE-35E0-804F-E42A096D2EB0")
    _DebuggerHiddenAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerHiddenAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerHiddenAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerHiddenAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerHiddenAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerHiddenAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerHiddenAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerHiddenAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerHiddenAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerHiddenAttributeVtbl;

    interface _DebuggerHiddenAttribute
    {
        CONST_VTBL struct _DebuggerHiddenAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerHiddenAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerHiddenAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerHiddenAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerHiddenAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerHiddenAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerHiddenAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerHiddenAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerHiddenAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerNonUserCodeAttribute_INTERFACE_DEFINED__
#define ___DebuggerNonUserCodeAttribute_INTERFACE_DEFINED__

/* interface _DebuggerNonUserCodeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerNonUserCodeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CC6DCAFD-0185-308A-891C-83812FE574E7")
    _DebuggerNonUserCodeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerNonUserCodeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerNonUserCodeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerNonUserCodeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerNonUserCodeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerNonUserCodeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerNonUserCodeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerNonUserCodeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerNonUserCodeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerNonUserCodeAttributeVtbl;

    interface _DebuggerNonUserCodeAttribute
    {
        CONST_VTBL struct _DebuggerNonUserCodeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerNonUserCodeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerNonUserCodeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerNonUserCodeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerNonUserCodeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerNonUserCodeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerNonUserCodeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerNonUserCodeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerNonUserCodeAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggableAttribute_INTERFACE_DEFINED__
#define ___DebuggableAttribute_INTERFACE_DEFINED__

/* interface _DebuggableAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggableAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("428E3627-2B1F-302C-A7E6-6388CD535E75")
    _DebuggableAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggableAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggableAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggableAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggableAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggableAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggableAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggableAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggableAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggableAttributeVtbl;

    interface _DebuggableAttribute
    {
        CONST_VTBL struct _DebuggableAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggableAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggableAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggableAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggableAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggableAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggableAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggableAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggableAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerBrowsableAttribute_INTERFACE_DEFINED__
#define ___DebuggerBrowsableAttribute_INTERFACE_DEFINED__

/* interface _DebuggerBrowsableAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerBrowsableAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3FC6319-7355-3D7D-8621-B598561152FC")
    _DebuggerBrowsableAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerBrowsableAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerBrowsableAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerBrowsableAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerBrowsableAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerBrowsableAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerBrowsableAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerBrowsableAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerBrowsableAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerBrowsableAttributeVtbl;

    interface _DebuggerBrowsableAttribute
    {
        CONST_VTBL struct _DebuggerBrowsableAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerBrowsableAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerBrowsableAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerBrowsableAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerBrowsableAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerBrowsableAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerBrowsableAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerBrowsableAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerBrowsableAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerTypeProxyAttribute_INTERFACE_DEFINED__
#define ___DebuggerTypeProxyAttribute_INTERFACE_DEFINED__

/* interface _DebuggerTypeProxyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerTypeProxyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("404FAFDD-1E3F-3602-BFF6-755C00613ED8")
    _DebuggerTypeProxyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerTypeProxyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerTypeProxyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerTypeProxyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerTypeProxyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerTypeProxyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerTypeProxyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerTypeProxyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerTypeProxyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerTypeProxyAttributeVtbl;

    interface _DebuggerTypeProxyAttribute
    {
        CONST_VTBL struct _DebuggerTypeProxyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerTypeProxyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerTypeProxyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerTypeProxyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerTypeProxyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerTypeProxyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerTypeProxyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerTypeProxyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerTypeProxyAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerDisplayAttribute_INTERFACE_DEFINED__
#define ___DebuggerDisplayAttribute_INTERFACE_DEFINED__

/* interface _DebuggerDisplayAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerDisplayAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("22FDABC0-EEC7-33E0-B4F2-F3B739E19A5E")
    _DebuggerDisplayAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerDisplayAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerDisplayAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerDisplayAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerDisplayAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerDisplayAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerDisplayAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerDisplayAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerDisplayAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerDisplayAttributeVtbl;

    interface _DebuggerDisplayAttribute
    {
        CONST_VTBL struct _DebuggerDisplayAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerDisplayAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerDisplayAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerDisplayAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerDisplayAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerDisplayAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerDisplayAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerDisplayAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerDisplayAttribute_INTERFACE_DEFINED__ */


#ifndef ___DebuggerVisualizerAttribute_INTERFACE_DEFINED__
#define ___DebuggerVisualizerAttribute_INTERFACE_DEFINED__

/* interface _DebuggerVisualizerAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DebuggerVisualizerAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E19EA1A2-67FF-31A5-B95C-E0B753403F6B")
    _DebuggerVisualizerAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DebuggerVisualizerAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DebuggerVisualizerAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DebuggerVisualizerAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DebuggerVisualizerAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DebuggerVisualizerAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DebuggerVisualizerAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DebuggerVisualizerAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DebuggerVisualizerAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DebuggerVisualizerAttributeVtbl;

    interface _DebuggerVisualizerAttribute
    {
        CONST_VTBL struct _DebuggerVisualizerAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DebuggerVisualizerAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DebuggerVisualizerAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DebuggerVisualizerAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DebuggerVisualizerAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DebuggerVisualizerAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DebuggerVisualizerAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DebuggerVisualizerAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DebuggerVisualizerAttribute_INTERFACE_DEFINED__ */


#ifndef ___StackTrace_INTERFACE_DEFINED__
#define ___StackTrace_INTERFACE_DEFINED__

/* interface _StackTrace */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StackTrace;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9A2669EC-FF84-3726-89A0-663A3EF3B5CD")
    _StackTrace : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StackTraceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StackTrace * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StackTrace * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StackTrace * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StackTrace * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StackTrace * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StackTrace * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StackTrace * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StackTraceVtbl;

    interface _StackTrace
    {
        CONST_VTBL struct _StackTraceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StackTrace_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StackTrace_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StackTrace_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StackTrace_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StackTrace_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StackTrace_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StackTrace_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StackTrace_INTERFACE_DEFINED__ */


#ifndef ___StackFrame_INTERFACE_DEFINED__
#define ___StackFrame_INTERFACE_DEFINED__

/* interface _StackFrame */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StackFrame;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E9B8E47-CA67-38B6-B9DB-2C42EE757B08")
    _StackFrame : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StackFrameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StackFrame * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StackFrame * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StackFrame * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StackFrame * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StackFrame * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StackFrame * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StackFrame * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StackFrameVtbl;

    interface _StackFrame
    {
        CONST_VTBL struct _StackFrameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StackFrame_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StackFrame_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StackFrame_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StackFrame_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StackFrame_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StackFrame_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StackFrame_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StackFrame_INTERFACE_DEFINED__ */


#ifndef ___SymDocumentType_INTERFACE_DEFINED__
#define ___SymDocumentType_INTERFACE_DEFINED__

/* interface _SymDocumentType */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SymDocumentType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5141D79C-7B01-37DA-B7E9-53E5A271BAF8")
    _SymDocumentType : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SymDocumentTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SymDocumentType * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SymDocumentType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SymDocumentType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SymDocumentType * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SymDocumentType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SymDocumentType * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SymDocumentType * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SymDocumentTypeVtbl;

    interface _SymDocumentType
    {
        CONST_VTBL struct _SymDocumentTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SymDocumentType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SymDocumentType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SymDocumentType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SymDocumentType_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SymDocumentType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SymDocumentType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SymDocumentType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SymDocumentType_INTERFACE_DEFINED__ */


#ifndef ___SymLanguageType_INTERFACE_DEFINED__
#define ___SymLanguageType_INTERFACE_DEFINED__

/* interface _SymLanguageType */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SymLanguageType;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("22BB8891-FD21-313D-92E4-8A892DC0B39C")
    _SymLanguageType : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SymLanguageTypeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SymLanguageType * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SymLanguageType * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SymLanguageType * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SymLanguageType * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SymLanguageType * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SymLanguageType * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SymLanguageType * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SymLanguageTypeVtbl;

    interface _SymLanguageType
    {
        CONST_VTBL struct _SymLanguageTypeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SymLanguageType_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SymLanguageType_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SymLanguageType_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SymLanguageType_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SymLanguageType_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SymLanguageType_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SymLanguageType_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SymLanguageType_INTERFACE_DEFINED__ */


#ifndef ___SymLanguageVendor_INTERFACE_DEFINED__
#define ___SymLanguageVendor_INTERFACE_DEFINED__

/* interface _SymLanguageVendor */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SymLanguageVendor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01364E7B-C983-3651-B7D8-FD1B64FC0E00")
    _SymLanguageVendor : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SymLanguageVendorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SymLanguageVendor * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SymLanguageVendor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SymLanguageVendor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SymLanguageVendor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SymLanguageVendor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SymLanguageVendor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SymLanguageVendor * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SymLanguageVendorVtbl;

    interface _SymLanguageVendor
    {
        CONST_VTBL struct _SymLanguageVendorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SymLanguageVendor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SymLanguageVendor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SymLanguageVendor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SymLanguageVendor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SymLanguageVendor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SymLanguageVendor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SymLanguageVendor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SymLanguageVendor_INTERFACE_DEFINED__ */


#ifndef ___AmbiguousMatchException_INTERFACE_DEFINED__
#define ___AmbiguousMatchException_INTERFACE_DEFINED__

/* interface _AmbiguousMatchException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AmbiguousMatchException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("81AA0D59-C3B1-36A3-B2E7-054928FBFC1A")
    _AmbiguousMatchException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AmbiguousMatchExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AmbiguousMatchException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AmbiguousMatchException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AmbiguousMatchException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AmbiguousMatchException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AmbiguousMatchException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AmbiguousMatchException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AmbiguousMatchException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AmbiguousMatchExceptionVtbl;

    interface _AmbiguousMatchException
    {
        CONST_VTBL struct _AmbiguousMatchExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AmbiguousMatchException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AmbiguousMatchException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AmbiguousMatchException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AmbiguousMatchException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AmbiguousMatchException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AmbiguousMatchException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AmbiguousMatchException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AmbiguousMatchException_INTERFACE_DEFINED__ */


#ifndef ___ModuleResolveEventHandler_INTERFACE_DEFINED__
#define ___ModuleResolveEventHandler_INTERFACE_DEFINED__

/* interface _ModuleResolveEventHandler */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ModuleResolveEventHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05532E88-E0F2-3263-9B57-805AC6B6BB72")
    _ModuleResolveEventHandler : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ModuleResolveEventHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ModuleResolveEventHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ModuleResolveEventHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ModuleResolveEventHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ModuleResolveEventHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ModuleResolveEventHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ModuleResolveEventHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ModuleResolveEventHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ModuleResolveEventHandlerVtbl;

    interface _ModuleResolveEventHandler
    {
        CONST_VTBL struct _ModuleResolveEventHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ModuleResolveEventHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ModuleResolveEventHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ModuleResolveEventHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ModuleResolveEventHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ModuleResolveEventHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ModuleResolveEventHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ModuleResolveEventHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ModuleResolveEventHandler_INTERFACE_DEFINED__ */


#ifndef ___AssemblyCopyrightAttribute_INTERFACE_DEFINED__
#define ___AssemblyCopyrightAttribute_INTERFACE_DEFINED__

/* interface _AssemblyCopyrightAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyCopyrightAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6163F792-3CD6-38F1-B5F7-000B96A5082B")
    _AssemblyCopyrightAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyCopyrightAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyCopyrightAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyCopyrightAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyCopyrightAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyCopyrightAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyCopyrightAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyCopyrightAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyCopyrightAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyCopyrightAttributeVtbl;

    interface _AssemblyCopyrightAttribute
    {
        CONST_VTBL struct _AssemblyCopyrightAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyCopyrightAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyCopyrightAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyCopyrightAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyCopyrightAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyCopyrightAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyCopyrightAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyCopyrightAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyCopyrightAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyTrademarkAttribute_INTERFACE_DEFINED__
#define ___AssemblyTrademarkAttribute_INTERFACE_DEFINED__

/* interface _AssemblyTrademarkAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyTrademarkAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("64C26BF9-C9E5-3F66-AD74-BEBAADE36214")
    _AssemblyTrademarkAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyTrademarkAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyTrademarkAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyTrademarkAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyTrademarkAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyTrademarkAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyTrademarkAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyTrademarkAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyTrademarkAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyTrademarkAttributeVtbl;

    interface _AssemblyTrademarkAttribute
    {
        CONST_VTBL struct _AssemblyTrademarkAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyTrademarkAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyTrademarkAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyTrademarkAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyTrademarkAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyTrademarkAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyTrademarkAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyTrademarkAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyTrademarkAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyProductAttribute_INTERFACE_DEFINED__
#define ___AssemblyProductAttribute_INTERFACE_DEFINED__

/* interface _AssemblyProductAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyProductAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE10D587-A188-3DCB-8000-92DFDB9B8021")
    _AssemblyProductAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyProductAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyProductAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyProductAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyProductAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyProductAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyProductAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyProductAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyProductAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyProductAttributeVtbl;

    interface _AssemblyProductAttribute
    {
        CONST_VTBL struct _AssemblyProductAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyProductAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyProductAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyProductAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyProductAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyProductAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyProductAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyProductAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyProductAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyCompanyAttribute_INTERFACE_DEFINED__
#define ___AssemblyCompanyAttribute_INTERFACE_DEFINED__

/* interface _AssemblyCompanyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyCompanyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C6802233-EF82-3C91-AD72-B3A5D7230ED5")
    _AssemblyCompanyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyCompanyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyCompanyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyCompanyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyCompanyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyCompanyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyCompanyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyCompanyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyCompanyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyCompanyAttributeVtbl;

    interface _AssemblyCompanyAttribute
    {
        CONST_VTBL struct _AssemblyCompanyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyCompanyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyCompanyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyCompanyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyCompanyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyCompanyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyCompanyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyCompanyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyCompanyAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyDescriptionAttribute_INTERFACE_DEFINED__
#define ___AssemblyDescriptionAttribute_INTERFACE_DEFINED__

/* interface _AssemblyDescriptionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyDescriptionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6B2C0BC4-DDB7-38EA-8A86-F0B59E192816")
    _AssemblyDescriptionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyDescriptionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyDescriptionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyDescriptionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyDescriptionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyDescriptionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyDescriptionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyDescriptionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyDescriptionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyDescriptionAttributeVtbl;

    interface _AssemblyDescriptionAttribute
    {
        CONST_VTBL struct _AssemblyDescriptionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyDescriptionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyDescriptionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyDescriptionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyDescriptionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyDescriptionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyDescriptionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyDescriptionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyDescriptionAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyTitleAttribute_INTERFACE_DEFINED__
#define ___AssemblyTitleAttribute_INTERFACE_DEFINED__

/* interface _AssemblyTitleAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyTitleAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DF44CAD3-CEF2-36A9-B013-383CC03177D7")
    _AssemblyTitleAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyTitleAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyTitleAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyTitleAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyTitleAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyTitleAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyTitleAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyTitleAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyTitleAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyTitleAttributeVtbl;

    interface _AssemblyTitleAttribute
    {
        CONST_VTBL struct _AssemblyTitleAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyTitleAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyTitleAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyTitleAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyTitleAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyTitleAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyTitleAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyTitleAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyTitleAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyConfigurationAttribute_INTERFACE_DEFINED__
#define ___AssemblyConfigurationAttribute_INTERFACE_DEFINED__

/* interface _AssemblyConfigurationAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyConfigurationAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("746D1D1E-EE37-393B-B6FA-E387D37553AA")
    _AssemblyConfigurationAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyConfigurationAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyConfigurationAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyConfigurationAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyConfigurationAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyConfigurationAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyConfigurationAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyConfigurationAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyConfigurationAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyConfigurationAttributeVtbl;

    interface _AssemblyConfigurationAttribute
    {
        CONST_VTBL struct _AssemblyConfigurationAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyConfigurationAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyConfigurationAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyConfigurationAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyConfigurationAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyConfigurationAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyConfigurationAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyConfigurationAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyConfigurationAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyDefaultAliasAttribute_INTERFACE_DEFINED__
#define ___AssemblyDefaultAliasAttribute_INTERFACE_DEFINED__

/* interface _AssemblyDefaultAliasAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyDefaultAliasAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04311D35-75EC-347B-BEDF-969487CE4014")
    _AssemblyDefaultAliasAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyDefaultAliasAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyDefaultAliasAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyDefaultAliasAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyDefaultAliasAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyDefaultAliasAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyDefaultAliasAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyDefaultAliasAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyDefaultAliasAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyDefaultAliasAttributeVtbl;

    interface _AssemblyDefaultAliasAttribute
    {
        CONST_VTBL struct _AssemblyDefaultAliasAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyDefaultAliasAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyDefaultAliasAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyDefaultAliasAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyDefaultAliasAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyDefaultAliasAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyDefaultAliasAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyDefaultAliasAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyDefaultAliasAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyInformationalVersionAttribute_INTERFACE_DEFINED__
#define ___AssemblyInformationalVersionAttribute_INTERFACE_DEFINED__

/* interface _AssemblyInformationalVersionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyInformationalVersionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C6F5946C-143A-3747-A7C0-ABFADA6BDEB7")
    _AssemblyInformationalVersionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyInformationalVersionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyInformationalVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyInformationalVersionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyInformationalVersionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyInformationalVersionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyInformationalVersionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyInformationalVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyInformationalVersionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyInformationalVersionAttributeVtbl;

    interface _AssemblyInformationalVersionAttribute
    {
        CONST_VTBL struct _AssemblyInformationalVersionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyInformationalVersionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyInformationalVersionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyInformationalVersionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyInformationalVersionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyInformationalVersionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyInformationalVersionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyInformationalVersionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyInformationalVersionAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyFileVersionAttribute_INTERFACE_DEFINED__
#define ___AssemblyFileVersionAttribute_INTERFACE_DEFINED__

/* interface _AssemblyFileVersionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyFileVersionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B101FE3C-4479-311A-A945-1225EE1731E8")
    _AssemblyFileVersionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyFileVersionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyFileVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyFileVersionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyFileVersionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyFileVersionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyFileVersionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyFileVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyFileVersionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyFileVersionAttributeVtbl;

    interface _AssemblyFileVersionAttribute
    {
        CONST_VTBL struct _AssemblyFileVersionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyFileVersionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyFileVersionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyFileVersionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyFileVersionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyFileVersionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyFileVersionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyFileVersionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyFileVersionAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyCultureAttribute_INTERFACE_DEFINED__
#define ___AssemblyCultureAttribute_INTERFACE_DEFINED__

/* interface _AssemblyCultureAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyCultureAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("177C4E63-9E0B-354D-838B-B52AA8683EF6")
    _AssemblyCultureAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyCultureAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyCultureAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyCultureAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyCultureAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyCultureAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyCultureAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyCultureAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyCultureAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyCultureAttributeVtbl;

    interface _AssemblyCultureAttribute
    {
        CONST_VTBL struct _AssemblyCultureAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyCultureAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyCultureAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyCultureAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyCultureAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyCultureAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyCultureAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyCultureAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyCultureAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyVersionAttribute_INTERFACE_DEFINED__
#define ___AssemblyVersionAttribute_INTERFACE_DEFINED__

/* interface _AssemblyVersionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyVersionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A1693C5C-101F-3557-94DB-C480CEB4C16B")
    _AssemblyVersionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyVersionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyVersionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyVersionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyVersionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyVersionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyVersionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyVersionAttributeVtbl;

    interface _AssemblyVersionAttribute
    {
        CONST_VTBL struct _AssemblyVersionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyVersionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyVersionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyVersionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyVersionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyVersionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyVersionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyVersionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyVersionAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyKeyFileAttribute_INTERFACE_DEFINED__
#define ___AssemblyKeyFileAttribute_INTERFACE_DEFINED__

/* interface _AssemblyKeyFileAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyKeyFileAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A9FCDA18-C237-3C6F-A6EF-749BE22BA2BF")
    _AssemblyKeyFileAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyKeyFileAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyKeyFileAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyKeyFileAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyKeyFileAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyKeyFileAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyKeyFileAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyKeyFileAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyKeyFileAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyKeyFileAttributeVtbl;

    interface _AssemblyKeyFileAttribute
    {
        CONST_VTBL struct _AssemblyKeyFileAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyKeyFileAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyKeyFileAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyKeyFileAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyKeyFileAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyKeyFileAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyKeyFileAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyKeyFileAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyKeyFileAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyDelaySignAttribute_INTERFACE_DEFINED__
#define ___AssemblyDelaySignAttribute_INTERFACE_DEFINED__

/* interface _AssemblyDelaySignAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyDelaySignAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6CF1C077-C974-38E1-90A4-976E4835E165")
    _AssemblyDelaySignAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyDelaySignAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyDelaySignAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyDelaySignAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyDelaySignAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyDelaySignAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyDelaySignAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyDelaySignAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyDelaySignAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyDelaySignAttributeVtbl;

    interface _AssemblyDelaySignAttribute
    {
        CONST_VTBL struct _AssemblyDelaySignAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyDelaySignAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyDelaySignAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyDelaySignAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyDelaySignAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyDelaySignAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyDelaySignAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyDelaySignAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyDelaySignAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyAlgorithmIdAttribute_INTERFACE_DEFINED__
#define ___AssemblyAlgorithmIdAttribute_INTERFACE_DEFINED__

/* interface _AssemblyAlgorithmIdAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyAlgorithmIdAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("57B849AA-D8EF-3EA6-9538-C5B4D498C2F7")
    _AssemblyAlgorithmIdAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyAlgorithmIdAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyAlgorithmIdAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyAlgorithmIdAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyAlgorithmIdAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyAlgorithmIdAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyAlgorithmIdAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyAlgorithmIdAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyAlgorithmIdAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyAlgorithmIdAttributeVtbl;

    interface _AssemblyAlgorithmIdAttribute
    {
        CONST_VTBL struct _AssemblyAlgorithmIdAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyAlgorithmIdAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyAlgorithmIdAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyAlgorithmIdAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyAlgorithmIdAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyAlgorithmIdAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyAlgorithmIdAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyAlgorithmIdAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyAlgorithmIdAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyFlagsAttribute_INTERFACE_DEFINED__
#define ___AssemblyFlagsAttribute_INTERFACE_DEFINED__

/* interface _AssemblyFlagsAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyFlagsAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0ECD8635-F5EB-3E4A-8989-4D684D67C48A")
    _AssemblyFlagsAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyFlagsAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyFlagsAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyFlagsAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyFlagsAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyFlagsAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyFlagsAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyFlagsAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyFlagsAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyFlagsAttributeVtbl;

    interface _AssemblyFlagsAttribute
    {
        CONST_VTBL struct _AssemblyFlagsAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyFlagsAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyFlagsAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyFlagsAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyFlagsAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyFlagsAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyFlagsAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyFlagsAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyFlagsAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyKeyNameAttribute_INTERFACE_DEFINED__
#define ___AssemblyKeyNameAttribute_INTERFACE_DEFINED__

/* interface _AssemblyKeyNameAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyKeyNameAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("322A304D-11AC-3814-A905-A019F6E3DAE9")
    _AssemblyKeyNameAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyKeyNameAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyKeyNameAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyKeyNameAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyKeyNameAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyKeyNameAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyKeyNameAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyKeyNameAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyKeyNameAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyKeyNameAttributeVtbl;

    interface _AssemblyKeyNameAttribute
    {
        CONST_VTBL struct _AssemblyKeyNameAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyKeyNameAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyKeyNameAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyKeyNameAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyKeyNameAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyKeyNameAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyKeyNameAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyKeyNameAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyKeyNameAttribute_INTERFACE_DEFINED__ */


#ifndef ___AssemblyNameProxy_INTERFACE_DEFINED__
#define ___AssemblyNameProxy_INTERFACE_DEFINED__

/* interface _AssemblyNameProxy */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AssemblyNameProxy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FE52F19A-8AA8-309C-BF99-9D0A566FB76A")
    _AssemblyNameProxy : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AssemblyNameProxyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AssemblyNameProxy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AssemblyNameProxy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AssemblyNameProxy * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AssemblyNameProxy * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AssemblyNameProxy * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AssemblyNameProxy * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AssemblyNameProxy * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AssemblyNameProxyVtbl;

    interface _AssemblyNameProxy
    {
        CONST_VTBL struct _AssemblyNameProxyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AssemblyNameProxy_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AssemblyNameProxy_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AssemblyNameProxy_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AssemblyNameProxy_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AssemblyNameProxy_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AssemblyNameProxy_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AssemblyNameProxy_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AssemblyNameProxy_INTERFACE_DEFINED__ */


#ifndef ___CustomAttributeFormatException_INTERFACE_DEFINED__
#define ___CustomAttributeFormatException_INTERFACE_DEFINED__

/* interface _CustomAttributeFormatException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CustomAttributeFormatException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1660EB67-EE41-363E-BEB0-C2DE09214ABF")
    _CustomAttributeFormatException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CustomAttributeFormatExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CustomAttributeFormatException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CustomAttributeFormatException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CustomAttributeFormatException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CustomAttributeFormatException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CustomAttributeFormatException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CustomAttributeFormatException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CustomAttributeFormatException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CustomAttributeFormatExceptionVtbl;

    interface _CustomAttributeFormatException
    {
        CONST_VTBL struct _CustomAttributeFormatExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CustomAttributeFormatException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CustomAttributeFormatException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CustomAttributeFormatException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CustomAttributeFormatException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CustomAttributeFormatException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CustomAttributeFormatException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CustomAttributeFormatException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CustomAttributeFormatException_INTERFACE_DEFINED__ */


#ifndef ___CustomAttributeData_INTERFACE_DEFINED__
#define ___CustomAttributeData_INTERFACE_DEFINED__

/* interface _CustomAttributeData */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CustomAttributeData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4E5539D-0A65-3073-BF27-8DCE8EF1DEF1")
    _CustomAttributeData : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CustomAttributeDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CustomAttributeData * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CustomAttributeData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CustomAttributeData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CustomAttributeData * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CustomAttributeData * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CustomAttributeData * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CustomAttributeData * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CustomAttributeDataVtbl;

    interface _CustomAttributeData
    {
        CONST_VTBL struct _CustomAttributeDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CustomAttributeData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CustomAttributeData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CustomAttributeData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CustomAttributeData_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CustomAttributeData_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CustomAttributeData_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CustomAttributeData_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CustomAttributeData_INTERFACE_DEFINED__ */


#ifndef ___DefaultMemberAttribute_INTERFACE_DEFINED__
#define ___DefaultMemberAttribute_INTERFACE_DEFINED__

/* interface _DefaultMemberAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DefaultMemberAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C462B072-FE6E-3BDC-9FAB-4CDBFCBCD124")
    _DefaultMemberAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DefaultMemberAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DefaultMemberAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DefaultMemberAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DefaultMemberAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DefaultMemberAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DefaultMemberAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DefaultMemberAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DefaultMemberAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DefaultMemberAttributeVtbl;

    interface _DefaultMemberAttribute
    {
        CONST_VTBL struct _DefaultMemberAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DefaultMemberAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DefaultMemberAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DefaultMemberAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DefaultMemberAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DefaultMemberAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DefaultMemberAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DefaultMemberAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DefaultMemberAttribute_INTERFACE_DEFINED__ */


#ifndef ___InvalidFilterCriteriaException_INTERFACE_DEFINED__
#define ___InvalidFilterCriteriaException_INTERFACE_DEFINED__

/* interface _InvalidFilterCriteriaException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InvalidFilterCriteriaException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E6DF0AE7-BA15-3F80-8AFA-27773AE414FC")
    _InvalidFilterCriteriaException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InvalidFilterCriteriaExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InvalidFilterCriteriaException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InvalidFilterCriteriaException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InvalidFilterCriteriaException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InvalidFilterCriteriaException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InvalidFilterCriteriaException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InvalidFilterCriteriaException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InvalidFilterCriteriaException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InvalidFilterCriteriaExceptionVtbl;

    interface _InvalidFilterCriteriaException
    {
        CONST_VTBL struct _InvalidFilterCriteriaExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InvalidFilterCriteriaException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InvalidFilterCriteriaException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InvalidFilterCriteriaException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InvalidFilterCriteriaException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InvalidFilterCriteriaException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InvalidFilterCriteriaException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InvalidFilterCriteriaException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InvalidFilterCriteriaException_INTERFACE_DEFINED__ */


#ifndef ___ManifestResourceInfo_INTERFACE_DEFINED__
#define ___ManifestResourceInfo_INTERFACE_DEFINED__

/* interface _ManifestResourceInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ManifestResourceInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3188878C-DEB3-3558-80E8-84E9ED95F92C")
    _ManifestResourceInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ManifestResourceInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ManifestResourceInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ManifestResourceInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ManifestResourceInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ManifestResourceInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ManifestResourceInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ManifestResourceInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ManifestResourceInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ManifestResourceInfoVtbl;

    interface _ManifestResourceInfo
    {
        CONST_VTBL struct _ManifestResourceInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ManifestResourceInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ManifestResourceInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ManifestResourceInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ManifestResourceInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ManifestResourceInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ManifestResourceInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ManifestResourceInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ManifestResourceInfo_INTERFACE_DEFINED__ */


#ifndef ___MemberFilter_INTERFACE_DEFINED__
#define ___MemberFilter_INTERFACE_DEFINED__

/* interface _MemberFilter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MemberFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FAE5D9B7-40C1-3DE1-BE06-A91C9DA1BA9F")
    _MemberFilter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MemberFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MemberFilter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MemberFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MemberFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MemberFilter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MemberFilter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MemberFilter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MemberFilter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MemberFilterVtbl;

    interface _MemberFilter
    {
        CONST_VTBL struct _MemberFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MemberFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MemberFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MemberFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MemberFilter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MemberFilter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MemberFilter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MemberFilter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MemberFilter_INTERFACE_DEFINED__ */


#ifndef ___Missing_INTERFACE_DEFINED__
#define ___Missing_INTERFACE_DEFINED__

/* interface _Missing */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Missing;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C48F55D-5240-30C7-A8F1-AF87A640CEFE")
    _Missing : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MissingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Missing * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Missing * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Missing * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Missing * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Missing * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Missing * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Missing * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MissingVtbl;

    interface _Missing
    {
        CONST_VTBL struct _MissingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Missing_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Missing_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Missing_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Missing_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Missing_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Missing_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Missing_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Missing_INTERFACE_DEFINED__ */


#ifndef ___ObfuscateAssemblyAttribute_INTERFACE_DEFINED__
#define ___ObfuscateAssemblyAttribute_INTERFACE_DEFINED__

/* interface _ObfuscateAssemblyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObfuscateAssemblyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8A5F0DA2-7B43-3767-B623-2424CF7CD268")
    _ObfuscateAssemblyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObfuscateAssemblyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObfuscateAssemblyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObfuscateAssemblyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObfuscateAssemblyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObfuscateAssemblyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObfuscateAssemblyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObfuscateAssemblyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObfuscateAssemblyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObfuscateAssemblyAttributeVtbl;

    interface _ObfuscateAssemblyAttribute
    {
        CONST_VTBL struct _ObfuscateAssemblyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObfuscateAssemblyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObfuscateAssemblyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObfuscateAssemblyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObfuscateAssemblyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObfuscateAssemblyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObfuscateAssemblyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObfuscateAssemblyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObfuscateAssemblyAttribute_INTERFACE_DEFINED__ */


#ifndef ___ObfuscationAttribute_INTERFACE_DEFINED__
#define ___ObfuscationAttribute_INTERFACE_DEFINED__

/* interface _ObfuscationAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObfuscationAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("71FB8DCF-3FA7-3483-8464-9D8200E57C43")
    _ObfuscationAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObfuscationAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObfuscationAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObfuscationAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObfuscationAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObfuscationAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObfuscationAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObfuscationAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObfuscationAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObfuscationAttributeVtbl;

    interface _ObfuscationAttribute
    {
        CONST_VTBL struct _ObfuscationAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObfuscationAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObfuscationAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObfuscationAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObfuscationAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObfuscationAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObfuscationAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObfuscationAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObfuscationAttribute_INTERFACE_DEFINED__ */


#ifndef ___ExceptionHandlingClause_INTERFACE_DEFINED__
#define ___ExceptionHandlingClause_INTERFACE_DEFINED__

/* interface _ExceptionHandlingClause */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ExceptionHandlingClause;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("643A4016-1B16-3CCF-AE86-9C2D9135ECB0")
    _ExceptionHandlingClause : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ExceptionHandlingClauseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ExceptionHandlingClause * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ExceptionHandlingClause * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ExceptionHandlingClause * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ExceptionHandlingClause * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ExceptionHandlingClause * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ExceptionHandlingClause * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ExceptionHandlingClause * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ExceptionHandlingClauseVtbl;

    interface _ExceptionHandlingClause
    {
        CONST_VTBL struct _ExceptionHandlingClauseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ExceptionHandlingClause_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ExceptionHandlingClause_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ExceptionHandlingClause_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ExceptionHandlingClause_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ExceptionHandlingClause_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ExceptionHandlingClause_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ExceptionHandlingClause_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ExceptionHandlingClause_INTERFACE_DEFINED__ */


#ifndef ___MethodBody_INTERFACE_DEFINED__
#define ___MethodBody_INTERFACE_DEFINED__

/* interface _MethodBody */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodBody;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B072EFE2-C943-3977-BFD9-91D5232B0D53")
    _MethodBody : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodBodyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodBody * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodBody * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodBody * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodBody * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodBody * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodBody * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodBody * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodBodyVtbl;

    interface _MethodBody
    {
        CONST_VTBL struct _MethodBodyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodBody_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodBody_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodBody_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodBody_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodBody_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodBody_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodBody_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodBody_INTERFACE_DEFINED__ */


#ifndef ___LocalVariableInfo_INTERFACE_DEFINED__
#define ___LocalVariableInfo_INTERFACE_DEFINED__

/* interface _LocalVariableInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__LocalVariableInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F2ECD8CA-91A2-31E8-B808-E028B4F5CA67")
    _LocalVariableInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _LocalVariableInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LocalVariableInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LocalVariableInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LocalVariableInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _LocalVariableInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _LocalVariableInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _LocalVariableInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _LocalVariableInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _LocalVariableInfoVtbl;

    interface _LocalVariableInfo
    {
        CONST_VTBL struct _LocalVariableInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LocalVariableInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LocalVariableInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LocalVariableInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LocalVariableInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _LocalVariableInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LocalVariableInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LocalVariableInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LocalVariableInfo_INTERFACE_DEFINED__ */


#ifndef ___Pointer_INTERFACE_DEFINED__
#define ___Pointer_INTERFACE_DEFINED__

/* interface _Pointer */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Pointer;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F0DEAFE9-5EBA-3737-9950-C1795739CDCD")
    _Pointer : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PointerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Pointer * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Pointer * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Pointer * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Pointer * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Pointer * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Pointer * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Pointer * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PointerVtbl;

    interface _Pointer
    {
        CONST_VTBL struct _PointerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Pointer_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Pointer_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Pointer_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Pointer_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Pointer_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Pointer_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Pointer_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Pointer_INTERFACE_DEFINED__ */


#ifndef ___ReflectionTypeLoadException_INTERFACE_DEFINED__
#define ___ReflectionTypeLoadException_INTERFACE_DEFINED__

/* interface _ReflectionTypeLoadException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ReflectionTypeLoadException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("22C26A41-5FA3-34E3-A76F-BA480252D8EC")
    _ReflectionTypeLoadException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ReflectionTypeLoadExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReflectionTypeLoadException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReflectionTypeLoadException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReflectionTypeLoadException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReflectionTypeLoadException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReflectionTypeLoadException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReflectionTypeLoadException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReflectionTypeLoadException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ReflectionTypeLoadExceptionVtbl;

    interface _ReflectionTypeLoadException
    {
        CONST_VTBL struct _ReflectionTypeLoadExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReflectionTypeLoadException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReflectionTypeLoadException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReflectionTypeLoadException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReflectionTypeLoadException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReflectionTypeLoadException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReflectionTypeLoadException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReflectionTypeLoadException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReflectionTypeLoadException_INTERFACE_DEFINED__ */


#ifndef ___StrongNameKeyPair_INTERFACE_DEFINED__
#define ___StrongNameKeyPair_INTERFACE_DEFINED__

/* interface _StrongNameKeyPair */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StrongNameKeyPair;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FC4963CB-E52B-32D8-A418-D058FA51A1FA")
    _StrongNameKeyPair : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StrongNameKeyPairVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StrongNameKeyPair * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StrongNameKeyPair * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StrongNameKeyPair * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StrongNameKeyPair * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StrongNameKeyPair * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StrongNameKeyPair * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StrongNameKeyPair * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StrongNameKeyPairVtbl;

    interface _StrongNameKeyPair
    {
        CONST_VTBL struct _StrongNameKeyPairVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StrongNameKeyPair_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StrongNameKeyPair_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StrongNameKeyPair_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StrongNameKeyPair_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StrongNameKeyPair_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StrongNameKeyPair_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StrongNameKeyPair_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StrongNameKeyPair_INTERFACE_DEFINED__ */


#ifndef ___TargetException_INTERFACE_DEFINED__
#define ___TargetException_INTERFACE_DEFINED__

/* interface _TargetException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TargetException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98B1524D-DA12-3C4B-8A69-7539A6DEC4FA")
    _TargetException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TargetExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TargetException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TargetException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TargetException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TargetException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TargetException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TargetException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TargetException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TargetExceptionVtbl;

    interface _TargetException
    {
        CONST_VTBL struct _TargetExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TargetException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TargetException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TargetException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TargetException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TargetException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TargetException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TargetException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TargetException_INTERFACE_DEFINED__ */


#ifndef ___TargetInvocationException_INTERFACE_DEFINED__
#define ___TargetInvocationException_INTERFACE_DEFINED__

/* interface _TargetInvocationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TargetInvocationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A90106ED-9099-3329-8A5A-2044B3D8552B")
    _TargetInvocationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TargetInvocationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TargetInvocationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TargetInvocationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TargetInvocationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TargetInvocationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TargetInvocationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TargetInvocationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TargetInvocationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TargetInvocationExceptionVtbl;

    interface _TargetInvocationException
    {
        CONST_VTBL struct _TargetInvocationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TargetInvocationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TargetInvocationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TargetInvocationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TargetInvocationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TargetInvocationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TargetInvocationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TargetInvocationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TargetInvocationException_INTERFACE_DEFINED__ */


#ifndef ___TargetParameterCountException_INTERFACE_DEFINED__
#define ___TargetParameterCountException_INTERFACE_DEFINED__

/* interface _TargetParameterCountException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TargetParameterCountException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6032B3CD-9BED-351C-A145-9D500B0F636F")
    _TargetParameterCountException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TargetParameterCountExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TargetParameterCountException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TargetParameterCountException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TargetParameterCountException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TargetParameterCountException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TargetParameterCountException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TargetParameterCountException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TargetParameterCountException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TargetParameterCountExceptionVtbl;

    interface _TargetParameterCountException
    {
        CONST_VTBL struct _TargetParameterCountExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TargetParameterCountException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TargetParameterCountException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TargetParameterCountException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TargetParameterCountException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TargetParameterCountException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TargetParameterCountException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TargetParameterCountException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TargetParameterCountException_INTERFACE_DEFINED__ */


#ifndef ___TypeDelegator_INTERFACE_DEFINED__
#define ___TypeDelegator_INTERFACE_DEFINED__

/* interface _TypeDelegator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeDelegator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34E00EF9-83E2-3BBC-B6AF-4CAE703838BD")
    _TypeDelegator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeDelegatorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeDelegator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeDelegator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeDelegator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeDelegator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeDelegator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeDelegator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeDelegator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeDelegatorVtbl;

    interface _TypeDelegator
    {
        CONST_VTBL struct _TypeDelegatorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeDelegator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeDelegator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeDelegator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeDelegator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeDelegator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeDelegator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeDelegator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeDelegator_INTERFACE_DEFINED__ */


#ifndef ___TypeFilter_INTERFACE_DEFINED__
#define ___TypeFilter_INTERFACE_DEFINED__

/* interface _TypeFilter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E1817846-3745-3C97-B4A6-EE20A1641B29")
    _TypeFilter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeFilter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeFilter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeFilter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeFilter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeFilter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeFilterVtbl;

    interface _TypeFilter
    {
        CONST_VTBL struct _TypeFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeFilter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeFilter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeFilter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeFilter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeFilter_INTERFACE_DEFINED__ */


#ifndef ___Formatter_INTERFACE_DEFINED__
#define ___Formatter_INTERFACE_DEFINED__

/* interface _Formatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Formatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D9BD3C8D-9395-3657-B6EE-D1B509C38B70")
    _Formatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Formatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Formatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Formatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Formatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Formatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Formatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Formatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FormatterVtbl;

    interface _Formatter
    {
        CONST_VTBL struct _FormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Formatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Formatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Formatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Formatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Formatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Formatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Formatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Formatter_INTERFACE_DEFINED__ */


#ifndef ___FormatterConverter_INTERFACE_DEFINED__
#define ___FormatterConverter_INTERFACE_DEFINED__

/* interface _FormatterConverter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FormatterConverter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3FAA35EE-C867-3E2E-BF48-2DA271F88303")
    _FormatterConverter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FormatterConverterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FormatterConverter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FormatterConverter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FormatterConverter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FormatterConverter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FormatterConverter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FormatterConverter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FormatterConverter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FormatterConverterVtbl;

    interface _FormatterConverter
    {
        CONST_VTBL struct _FormatterConverterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FormatterConverter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FormatterConverter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FormatterConverter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FormatterConverter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FormatterConverter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FormatterConverter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FormatterConverter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FormatterConverter_INTERFACE_DEFINED__ */


#ifndef ___FormatterServices_INTERFACE_DEFINED__
#define ___FormatterServices_INTERFACE_DEFINED__

/* interface _FormatterServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FormatterServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F859954A-78CF-3D00-86AB-EF661E6A4B8D")
    _FormatterServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FormatterServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FormatterServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FormatterServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FormatterServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FormatterServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FormatterServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FormatterServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FormatterServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FormatterServicesVtbl;

    interface _FormatterServices
    {
        CONST_VTBL struct _FormatterServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FormatterServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FormatterServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FormatterServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FormatterServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FormatterServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FormatterServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FormatterServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FormatterServices_INTERFACE_DEFINED__ */


#ifndef ___ObjectIDGenerator_INTERFACE_DEFINED__
#define ___ObjectIDGenerator_INTERFACE_DEFINED__

/* interface _ObjectIDGenerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObjectIDGenerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A30646CC-F710-3BFA-A356-B4C858D4ED8E")
    _ObjectIDGenerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjectIDGeneratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObjectIDGenerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObjectIDGenerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObjectIDGenerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObjectIDGenerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObjectIDGenerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObjectIDGenerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObjectIDGenerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObjectIDGeneratorVtbl;

    interface _ObjectIDGenerator
    {
        CONST_VTBL struct _ObjectIDGeneratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObjectIDGenerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObjectIDGenerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObjectIDGenerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObjectIDGenerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObjectIDGenerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObjectIDGenerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObjectIDGenerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObjectIDGenerator_INTERFACE_DEFINED__ */


#ifndef ___ObjectManager_INTERFACE_DEFINED__
#define ___ObjectManager_INTERFACE_DEFINED__

/* interface _ObjectManager */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObjectManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F28E7D04-3319-3968-8201-C6E55BECD3D4")
    _ObjectManager : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjectManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObjectManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObjectManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObjectManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObjectManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObjectManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObjectManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObjectManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObjectManagerVtbl;

    interface _ObjectManager
    {
        CONST_VTBL struct _ObjectManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObjectManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObjectManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObjectManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObjectManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObjectManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObjectManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObjectManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObjectManager_INTERFACE_DEFINED__ */


#ifndef ___OptionalFieldAttribute_INTERFACE_DEFINED__
#define ___OptionalFieldAttribute_INTERFACE_DEFINED__

/* interface _OptionalFieldAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OptionalFieldAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FECA70D4-AE27-3D94-93DD-A90F02E299D5")
    _OptionalFieldAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OptionalFieldAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OptionalFieldAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OptionalFieldAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OptionalFieldAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OptionalFieldAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OptionalFieldAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OptionalFieldAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OptionalFieldAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OptionalFieldAttributeVtbl;

    interface _OptionalFieldAttribute
    {
        CONST_VTBL struct _OptionalFieldAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OptionalFieldAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OptionalFieldAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OptionalFieldAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OptionalFieldAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OptionalFieldAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OptionalFieldAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OptionalFieldAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OptionalFieldAttribute_INTERFACE_DEFINED__ */


#ifndef ___OnSerializingAttribute_INTERFACE_DEFINED__
#define ___OnSerializingAttribute_INTERFACE_DEFINED__

/* interface _OnSerializingAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OnSerializingAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9EC28D2C-04C0-35F3-A7EE-0013271FF65E")
    _OnSerializingAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OnSerializingAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OnSerializingAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OnSerializingAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OnSerializingAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OnSerializingAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OnSerializingAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OnSerializingAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OnSerializingAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OnSerializingAttributeVtbl;

    interface _OnSerializingAttribute
    {
        CONST_VTBL struct _OnSerializingAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OnSerializingAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OnSerializingAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OnSerializingAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OnSerializingAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OnSerializingAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OnSerializingAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OnSerializingAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OnSerializingAttribute_INTERFACE_DEFINED__ */


#ifndef ___OnSerializedAttribute_INTERFACE_DEFINED__
#define ___OnSerializedAttribute_INTERFACE_DEFINED__

/* interface _OnSerializedAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OnSerializedAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("547BF8CD-F2A8-3B41-966D-98DB33DED06D")
    _OnSerializedAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OnSerializedAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OnSerializedAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OnSerializedAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OnSerializedAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OnSerializedAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OnSerializedAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OnSerializedAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OnSerializedAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OnSerializedAttributeVtbl;

    interface _OnSerializedAttribute
    {
        CONST_VTBL struct _OnSerializedAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OnSerializedAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OnSerializedAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OnSerializedAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OnSerializedAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OnSerializedAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OnSerializedAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OnSerializedAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OnSerializedAttribute_INTERFACE_DEFINED__ */


#ifndef ___OnDeserializingAttribute_INTERFACE_DEFINED__
#define ___OnDeserializingAttribute_INTERFACE_DEFINED__

/* interface _OnDeserializingAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OnDeserializingAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F5AEF88F-9AC4-320C-95D2-88E863A35762")
    _OnDeserializingAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OnDeserializingAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OnDeserializingAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OnDeserializingAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OnDeserializingAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OnDeserializingAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OnDeserializingAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OnDeserializingAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OnDeserializingAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OnDeserializingAttributeVtbl;

    interface _OnDeserializingAttribute
    {
        CONST_VTBL struct _OnDeserializingAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OnDeserializingAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OnDeserializingAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OnDeserializingAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OnDeserializingAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OnDeserializingAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OnDeserializingAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OnDeserializingAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OnDeserializingAttribute_INTERFACE_DEFINED__ */


#ifndef ___OnDeserializedAttribute_INTERFACE_DEFINED__
#define ___OnDeserializedAttribute_INTERFACE_DEFINED__

/* interface _OnDeserializedAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OnDeserializedAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DD36C803-73D1-338D-88BA-DC9EB7620EF7")
    _OnDeserializedAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OnDeserializedAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OnDeserializedAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OnDeserializedAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OnDeserializedAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OnDeserializedAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OnDeserializedAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OnDeserializedAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OnDeserializedAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OnDeserializedAttributeVtbl;

    interface _OnDeserializedAttribute
    {
        CONST_VTBL struct _OnDeserializedAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OnDeserializedAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OnDeserializedAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OnDeserializedAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OnDeserializedAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OnDeserializedAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OnDeserializedAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OnDeserializedAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OnDeserializedAttribute_INTERFACE_DEFINED__ */


#ifndef ___SerializationBinder_INTERFACE_DEFINED__
#define ___SerializationBinder_INTERFACE_DEFINED__

/* interface _SerializationBinder */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SerializationBinder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("450222D0-87CA-3699-A7B4-D8A0FDB72357")
    _SerializationBinder : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SerializationBinderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SerializationBinder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SerializationBinder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SerializationBinder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SerializationBinder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SerializationBinder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SerializationBinder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SerializationBinder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SerializationBinderVtbl;

    interface _SerializationBinder
    {
        CONST_VTBL struct _SerializationBinderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SerializationBinder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SerializationBinder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SerializationBinder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SerializationBinder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SerializationBinder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SerializationBinder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SerializationBinder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SerializationBinder_INTERFACE_DEFINED__ */


#ifndef ___SerializationInfo_INTERFACE_DEFINED__
#define ___SerializationInfo_INTERFACE_DEFINED__

/* interface _SerializationInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SerializationInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B58D62CF-B03A-3A14-B0B6-B1E5AD4E4AD5")
    _SerializationInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SerializationInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SerializationInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SerializationInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SerializationInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SerializationInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SerializationInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SerializationInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SerializationInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SerializationInfoVtbl;

    interface _SerializationInfo
    {
        CONST_VTBL struct _SerializationInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SerializationInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SerializationInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SerializationInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SerializationInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SerializationInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SerializationInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SerializationInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SerializationInfo_INTERFACE_DEFINED__ */


#ifndef ___SerializationInfoEnumerator_INTERFACE_DEFINED__
#define ___SerializationInfoEnumerator_INTERFACE_DEFINED__

/* interface _SerializationInfoEnumerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SerializationInfoEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("607056C6-1BCA-36C8-AB87-33B202EBF0D8")
    _SerializationInfoEnumerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SerializationInfoEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SerializationInfoEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SerializationInfoEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SerializationInfoEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SerializationInfoEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SerializationInfoEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SerializationInfoEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SerializationInfoEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SerializationInfoEnumeratorVtbl;

    interface _SerializationInfoEnumerator
    {
        CONST_VTBL struct _SerializationInfoEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SerializationInfoEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SerializationInfoEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SerializationInfoEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SerializationInfoEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SerializationInfoEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SerializationInfoEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SerializationInfoEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SerializationInfoEnumerator_INTERFACE_DEFINED__ */


#ifndef ___SerializationException_INTERFACE_DEFINED__
#define ___SerializationException_INTERFACE_DEFINED__

/* interface _SerializationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SerializationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("245FE7FD-E020-3053-B5F6-7467FD2C6883")
    _SerializationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SerializationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SerializationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SerializationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SerializationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SerializationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SerializationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SerializationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SerializationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SerializationExceptionVtbl;

    interface _SerializationException
    {
        CONST_VTBL struct _SerializationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SerializationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SerializationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SerializationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SerializationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SerializationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SerializationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SerializationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SerializationException_INTERFACE_DEFINED__ */


#ifndef ___SurrogateSelector_INTERFACE_DEFINED__
#define ___SurrogateSelector_INTERFACE_DEFINED__

/* interface _SurrogateSelector */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SurrogateSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6DE1230E-1F52-3779-9619-F5184103466C")
    _SurrogateSelector : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SurrogateSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SurrogateSelector * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SurrogateSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SurrogateSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SurrogateSelector * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SurrogateSelector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SurrogateSelector * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SurrogateSelector * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SurrogateSelectorVtbl;

    interface _SurrogateSelector
    {
        CONST_VTBL struct _SurrogateSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SurrogateSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SurrogateSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SurrogateSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SurrogateSelector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SurrogateSelector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SurrogateSelector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SurrogateSelector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SurrogateSelector_INTERFACE_DEFINED__ */


#ifndef ___Calendar_INTERFACE_DEFINED__
#define ___Calendar_INTERFACE_DEFINED__

/* interface _Calendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Calendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4CCA29E4-584B-3CD0-AD25-855DC5799C16")
    _Calendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Calendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Calendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Calendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Calendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Calendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Calendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Calendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CalendarVtbl;

    interface _Calendar
    {
        CONST_VTBL struct _CalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Calendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Calendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Calendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Calendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Calendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Calendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Calendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Calendar_INTERFACE_DEFINED__ */


#ifndef ___EastAsianLunisolarCalendar_INTERFACE_DEFINED__
#define ___EastAsianLunisolarCalendar_INTERFACE_DEFINED__

/* interface _EastAsianLunisolarCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EastAsianLunisolarCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89E148C4-2424-30AE-80F5-C5D21EA3366C")
    _EastAsianLunisolarCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EastAsianLunisolarCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EastAsianLunisolarCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EastAsianLunisolarCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EastAsianLunisolarCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EastAsianLunisolarCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EastAsianLunisolarCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EastAsianLunisolarCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EastAsianLunisolarCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EastAsianLunisolarCalendarVtbl;

    interface _EastAsianLunisolarCalendar
    {
        CONST_VTBL struct _EastAsianLunisolarCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EastAsianLunisolarCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EastAsianLunisolarCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EastAsianLunisolarCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EastAsianLunisolarCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EastAsianLunisolarCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EastAsianLunisolarCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EastAsianLunisolarCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EastAsianLunisolarCalendar_INTERFACE_DEFINED__ */


#ifndef ___CompareInfo_INTERFACE_DEFINED__
#define ___CompareInfo_INTERFACE_DEFINED__

/* interface _CompareInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CompareInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("505DEFE5-AEFA-3E23-82B0-D5EB085BB840")
    _CompareInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CompareInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CompareInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CompareInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CompareInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CompareInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CompareInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CompareInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CompareInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CompareInfoVtbl;

    interface _CompareInfo
    {
        CONST_VTBL struct _CompareInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CompareInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CompareInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CompareInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CompareInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CompareInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CompareInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CompareInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CompareInfo_INTERFACE_DEFINED__ */


#ifndef ___CultureInfo_INTERFACE_DEFINED__
#define ___CultureInfo_INTERFACE_DEFINED__

/* interface _CultureInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CultureInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("152722C2-F0B1-3D19-ADA8-F40CA5CAECB8")
    _CultureInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CultureInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CultureInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CultureInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CultureInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CultureInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CultureInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CultureInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CultureInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CultureInfoVtbl;

    interface _CultureInfo
    {
        CONST_VTBL struct _CultureInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CultureInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CultureInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CultureInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CultureInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CultureInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CultureInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CultureInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CultureInfo_INTERFACE_DEFINED__ */


#ifndef ___DateTimeFormatInfo_INTERFACE_DEFINED__
#define ___DateTimeFormatInfo_INTERFACE_DEFINED__

/* interface _DateTimeFormatInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DateTimeFormatInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("015E9F67-337C-398A-A0C1-DA4AF1905571")
    _DateTimeFormatInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DateTimeFormatInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DateTimeFormatInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DateTimeFormatInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DateTimeFormatInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DateTimeFormatInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DateTimeFormatInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DateTimeFormatInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DateTimeFormatInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DateTimeFormatInfoVtbl;

    interface _DateTimeFormatInfo
    {
        CONST_VTBL struct _DateTimeFormatInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DateTimeFormatInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DateTimeFormatInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DateTimeFormatInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DateTimeFormatInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DateTimeFormatInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DateTimeFormatInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DateTimeFormatInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DateTimeFormatInfo_INTERFACE_DEFINED__ */


#ifndef ___DaylightTime_INTERFACE_DEFINED__
#define ___DaylightTime_INTERFACE_DEFINED__

/* interface _DaylightTime */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DaylightTime;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EFEA8FEB-EE7F-3E48-8A36-6206A6ACBF73")
    _DaylightTime : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DaylightTimeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DaylightTime * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DaylightTime * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DaylightTime * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DaylightTime * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DaylightTime * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DaylightTime * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DaylightTime * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DaylightTimeVtbl;

    interface _DaylightTime
    {
        CONST_VTBL struct _DaylightTimeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DaylightTime_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DaylightTime_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DaylightTime_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DaylightTime_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DaylightTime_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DaylightTime_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DaylightTime_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DaylightTime_INTERFACE_DEFINED__ */


#ifndef ___GregorianCalendar_INTERFACE_DEFINED__
#define ___GregorianCalendar_INTERFACE_DEFINED__

/* interface _GregorianCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GregorianCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("677AD8B5-8A0E-3C39-92FB-72FB817CF694")
    _GregorianCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GregorianCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GregorianCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GregorianCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GregorianCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GregorianCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GregorianCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GregorianCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GregorianCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GregorianCalendarVtbl;

    interface _GregorianCalendar
    {
        CONST_VTBL struct _GregorianCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GregorianCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GregorianCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GregorianCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GregorianCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GregorianCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GregorianCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GregorianCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GregorianCalendar_INTERFACE_DEFINED__ */


#ifndef ___HebrewCalendar_INTERFACE_DEFINED__
#define ___HebrewCalendar_INTERFACE_DEFINED__

/* interface _HebrewCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HebrewCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("96A62D6C-72A9-387A-81FA-E6DD5998CAEE")
    _HebrewCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HebrewCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HebrewCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HebrewCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HebrewCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HebrewCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HebrewCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HebrewCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HebrewCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HebrewCalendarVtbl;

    interface _HebrewCalendar
    {
        CONST_VTBL struct _HebrewCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HebrewCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HebrewCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HebrewCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HebrewCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HebrewCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HebrewCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HebrewCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HebrewCalendar_INTERFACE_DEFINED__ */


#ifndef ___HijriCalendar_INTERFACE_DEFINED__
#define ___HijriCalendar_INTERFACE_DEFINED__

/* interface _HijriCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HijriCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("28DDC187-56B2-34CF-A078-48BD1E113D1E")
    _HijriCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HijriCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HijriCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HijriCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HijriCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HijriCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HijriCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HijriCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HijriCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HijriCalendarVtbl;

    interface _HijriCalendar
    {
        CONST_VTBL struct _HijriCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HijriCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HijriCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HijriCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HijriCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HijriCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HijriCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HijriCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HijriCalendar_INTERFACE_DEFINED__ */


#ifndef ___JapaneseCalendar_INTERFACE_DEFINED__
#define ___JapaneseCalendar_INTERFACE_DEFINED__

/* interface _JapaneseCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__JapaneseCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D662AE3F-CEF9-38B4-BB8E-5D8DD1DBF806")
    _JapaneseCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _JapaneseCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _JapaneseCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _JapaneseCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _JapaneseCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _JapaneseCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _JapaneseCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _JapaneseCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _JapaneseCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _JapaneseCalendarVtbl;

    interface _JapaneseCalendar
    {
        CONST_VTBL struct _JapaneseCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _JapaneseCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _JapaneseCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _JapaneseCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _JapaneseCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _JapaneseCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _JapaneseCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _JapaneseCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___JapaneseCalendar_INTERFACE_DEFINED__ */


#ifndef ___JulianCalendar_INTERFACE_DEFINED__
#define ___JulianCalendar_INTERFACE_DEFINED__

/* interface _JulianCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__JulianCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("36E2DE92-1FB3-3D7D-BA26-9CAD5B98DD52")
    _JulianCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _JulianCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _JulianCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _JulianCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _JulianCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _JulianCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _JulianCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _JulianCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _JulianCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _JulianCalendarVtbl;

    interface _JulianCalendar
    {
        CONST_VTBL struct _JulianCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _JulianCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _JulianCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _JulianCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _JulianCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _JulianCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _JulianCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _JulianCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___JulianCalendar_INTERFACE_DEFINED__ */


#ifndef ___KoreanCalendar_INTERFACE_DEFINED__
#define ___KoreanCalendar_INTERFACE_DEFINED__

/* interface _KoreanCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KoreanCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48BEA6C4-752E-3974-8CA8-CFB6274E2379")
    _KoreanCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KoreanCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KoreanCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KoreanCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KoreanCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KoreanCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KoreanCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KoreanCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KoreanCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KoreanCalendarVtbl;

    interface _KoreanCalendar
    {
        CONST_VTBL struct _KoreanCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KoreanCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KoreanCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KoreanCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KoreanCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KoreanCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KoreanCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KoreanCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KoreanCalendar_INTERFACE_DEFINED__ */


#ifndef ___RegionInfo_INTERFACE_DEFINED__
#define ___RegionInfo_INTERFACE_DEFINED__

/* interface _RegionInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RegionInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F9E97E04-4E1E-368F-B6C6-5E96CE4362D6")
    _RegionInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RegionInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RegionInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RegionInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RegionInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RegionInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RegionInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RegionInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RegionInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RegionInfoVtbl;

    interface _RegionInfo
    {
        CONST_VTBL struct _RegionInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RegionInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RegionInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RegionInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RegionInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RegionInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RegionInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RegionInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RegionInfo_INTERFACE_DEFINED__ */


#ifndef ___SortKey_INTERFACE_DEFINED__
#define ___SortKey_INTERFACE_DEFINED__

/* interface _SortKey */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SortKey;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4C70E15-2CA6-3E90-96ED-92E28491F538")
    _SortKey : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SortKeyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SortKey * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SortKey * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SortKey * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SortKey * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SortKey * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SortKey * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SortKey * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SortKeyVtbl;

    interface _SortKey
    {
        CONST_VTBL struct _SortKeyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SortKey_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SortKey_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SortKey_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SortKey_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SortKey_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SortKey_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SortKey_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SortKey_INTERFACE_DEFINED__ */


#ifndef ___StringInfo_INTERFACE_DEFINED__
#define ___StringInfo_INTERFACE_DEFINED__

/* interface _StringInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StringInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0A25141F-51B3-3121-AA30-0AF4556A52D9")
    _StringInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StringInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StringInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StringInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StringInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StringInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StringInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StringInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StringInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StringInfoVtbl;

    interface _StringInfo
    {
        CONST_VTBL struct _StringInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StringInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StringInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StringInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StringInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StringInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StringInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StringInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StringInfo_INTERFACE_DEFINED__ */


#ifndef ___TaiwanCalendar_INTERFACE_DEFINED__
#define ___TaiwanCalendar_INTERFACE_DEFINED__

/* interface _TaiwanCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TaiwanCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C08ED74-0ACF-32A9-99DF-09A9DC4786DD")
    _TaiwanCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TaiwanCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TaiwanCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TaiwanCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TaiwanCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TaiwanCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TaiwanCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TaiwanCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TaiwanCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TaiwanCalendarVtbl;

    interface _TaiwanCalendar
    {
        CONST_VTBL struct _TaiwanCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TaiwanCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TaiwanCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TaiwanCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TaiwanCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TaiwanCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TaiwanCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TaiwanCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TaiwanCalendar_INTERFACE_DEFINED__ */


#ifndef ___TextElementEnumerator_INTERFACE_DEFINED__
#define ___TextElementEnumerator_INTERFACE_DEFINED__

/* interface _TextElementEnumerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TextElementEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8C248251-3E6C-3151-9F8E-A255FB8D2B12")
    _TextElementEnumerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TextElementEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextElementEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextElementEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextElementEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextElementEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextElementEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextElementEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextElementEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TextElementEnumeratorVtbl;

    interface _TextElementEnumerator
    {
        CONST_VTBL struct _TextElementEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextElementEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextElementEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextElementEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextElementEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextElementEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextElementEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextElementEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextElementEnumerator_INTERFACE_DEFINED__ */


#ifndef ___TextInfo_INTERFACE_DEFINED__
#define ___TextInfo_INTERFACE_DEFINED__

/* interface _TextInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TextInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB8DE23F-F264-39AC-B61C-CC1E7EB4A5E6")
    _TextInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TextInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TextInfoVtbl;

    interface _TextInfo
    {
        CONST_VTBL struct _TextInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextInfo_INTERFACE_DEFINED__ */


#ifndef ___ThaiBuddhistCalendar_INTERFACE_DEFINED__
#define ___ThaiBuddhistCalendar_INTERFACE_DEFINED__

/* interface _ThaiBuddhistCalendar */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ThaiBuddhistCalendar;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C70C8AE8-925B-37CE-8944-34F15FF94307")
    _ThaiBuddhistCalendar : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ThaiBuddhistCalendarVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ThaiBuddhistCalendar * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ThaiBuddhistCalendar * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ThaiBuddhistCalendar * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ThaiBuddhistCalendar * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ThaiBuddhistCalendar * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ThaiBuddhistCalendar * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ThaiBuddhistCalendar * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ThaiBuddhistCalendarVtbl;

    interface _ThaiBuddhistCalendar
    {
        CONST_VTBL struct _ThaiBuddhistCalendarVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ThaiBuddhistCalendar_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ThaiBuddhistCalendar_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ThaiBuddhistCalendar_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ThaiBuddhistCalendar_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ThaiBuddhistCalendar_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ThaiBuddhistCalendar_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ThaiBuddhistCalendar_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ThaiBuddhistCalendar_INTERFACE_DEFINED__ */


#ifndef ___NumberFormatInfo_INTERFACE_DEFINED__
#define ___NumberFormatInfo_INTERFACE_DEFINED__

/* interface _NumberFormatInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NumberFormatInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("25E47D71-20DD-31BE-B261-7AE76497D6B9")
    _NumberFormatInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NumberFormatInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NumberFormatInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NumberFormatInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NumberFormatInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NumberFormatInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NumberFormatInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NumberFormatInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NumberFormatInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NumberFormatInfoVtbl;

    interface _NumberFormatInfo
    {
        CONST_VTBL struct _NumberFormatInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NumberFormatInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NumberFormatInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NumberFormatInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NumberFormatInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NumberFormatInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NumberFormatInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NumberFormatInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NumberFormatInfo_INTERFACE_DEFINED__ */


#ifndef ___Encoding_INTERFACE_DEFINED__
#define ___Encoding_INTERFACE_DEFINED__

/* interface _Encoding */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Encoding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DDEDB94D-4F3F-35C1-97C9-3F1D87628D9E")
    _Encoding : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EncodingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Encoding * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Encoding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Encoding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Encoding * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Encoding * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Encoding * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Encoding * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EncodingVtbl;

    interface _Encoding
    {
        CONST_VTBL struct _EncodingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Encoding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Encoding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Encoding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Encoding_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Encoding_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Encoding_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Encoding_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Encoding_INTERFACE_DEFINED__ */


#ifndef ___Encoder_INTERFACE_DEFINED__
#define ___Encoder_INTERFACE_DEFINED__

/* interface _Encoder */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Encoder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8FD56502-8724-3DF0-A1B5-9D0E8D4E4F78")
    _Encoder : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EncoderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Encoder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Encoder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Encoder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Encoder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Encoder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Encoder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Encoder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EncoderVtbl;

    interface _Encoder
    {
        CONST_VTBL struct _EncoderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Encoder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Encoder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Encoder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Encoder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Encoder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Encoder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Encoder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Encoder_INTERFACE_DEFINED__ */


#ifndef ___Decoder_INTERFACE_DEFINED__
#define ___Decoder_INTERFACE_DEFINED__

/* interface _Decoder */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Decoder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2ADB0D4A-5976-38E4-852B-C131797430F5")
    _Decoder : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DecoderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Decoder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Decoder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Decoder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Decoder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Decoder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Decoder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Decoder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DecoderVtbl;

    interface _Decoder
    {
        CONST_VTBL struct _DecoderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Decoder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Decoder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Decoder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Decoder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Decoder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Decoder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Decoder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Decoder_INTERFACE_DEFINED__ */


#ifndef ___ASCIIEncoding_INTERFACE_DEFINED__
#define ___ASCIIEncoding_INTERFACE_DEFINED__

/* interface _ASCIIEncoding */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ASCIIEncoding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CBE0204-12A1-3D40-9D9E-195DE6AAA534")
    _ASCIIEncoding : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ASCIIEncodingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ASCIIEncoding * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ASCIIEncoding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ASCIIEncoding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ASCIIEncoding * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ASCIIEncoding * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ASCIIEncoding * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ASCIIEncoding * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ASCIIEncodingVtbl;

    interface _ASCIIEncoding
    {
        CONST_VTBL struct _ASCIIEncodingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ASCIIEncoding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ASCIIEncoding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ASCIIEncoding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ASCIIEncoding_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ASCIIEncoding_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ASCIIEncoding_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ASCIIEncoding_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ASCIIEncoding_INTERFACE_DEFINED__ */


#ifndef ___UnicodeEncoding_INTERFACE_DEFINED__
#define ___UnicodeEncoding_INTERFACE_DEFINED__

/* interface _UnicodeEncoding */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnicodeEncoding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7DD3B7F-2B05-3894-8EDA-59CDF9395B6A")
    _UnicodeEncoding : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnicodeEncodingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnicodeEncoding * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnicodeEncoding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnicodeEncoding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnicodeEncoding * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnicodeEncoding * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnicodeEncoding * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnicodeEncoding * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnicodeEncodingVtbl;

    interface _UnicodeEncoding
    {
        CONST_VTBL struct _UnicodeEncodingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnicodeEncoding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnicodeEncoding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnicodeEncoding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnicodeEncoding_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnicodeEncoding_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnicodeEncoding_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnicodeEncoding_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnicodeEncoding_INTERFACE_DEFINED__ */


#ifndef ___UTF7Encoding_INTERFACE_DEFINED__
#define ___UTF7Encoding_INTERFACE_DEFINED__

/* interface _UTF7Encoding */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UTF7Encoding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89B9F00B-AA2A-3A49-91B4-E8D1F1C00E58")
    _UTF7Encoding : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UTF7EncodingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UTF7Encoding * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UTF7Encoding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UTF7Encoding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UTF7Encoding * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UTF7Encoding * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UTF7Encoding * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UTF7Encoding * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UTF7EncodingVtbl;

    interface _UTF7Encoding
    {
        CONST_VTBL struct _UTF7EncodingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UTF7Encoding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UTF7Encoding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UTF7Encoding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UTF7Encoding_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UTF7Encoding_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UTF7Encoding_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UTF7Encoding_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UTF7Encoding_INTERFACE_DEFINED__ */


#ifndef ___UTF8Encoding_INTERFACE_DEFINED__
#define ___UTF8Encoding_INTERFACE_DEFINED__

/* interface _UTF8Encoding */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UTF8Encoding;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("010FC1D0-3EF9-3F3B-AA0A-B78A1FF83A37")
    _UTF8Encoding : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UTF8EncodingVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UTF8Encoding * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UTF8Encoding * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UTF8Encoding * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UTF8Encoding * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UTF8Encoding * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UTF8Encoding * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UTF8Encoding * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UTF8EncodingVtbl;

    interface _UTF8Encoding
    {
        CONST_VTBL struct _UTF8EncodingVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UTF8Encoding_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UTF8Encoding_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UTF8Encoding_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UTF8Encoding_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UTF8Encoding_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UTF8Encoding_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UTF8Encoding_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UTF8Encoding_INTERFACE_DEFINED__ */


#ifndef ___MissingManifestResourceException_INTERFACE_DEFINED__
#define ___MissingManifestResourceException_INTERFACE_DEFINED__

/* interface _MissingManifestResourceException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MissingManifestResourceException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1A4E1878-FE8C-3F59-B6A9-21AB82BE57E9")
    _MissingManifestResourceException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MissingManifestResourceExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MissingManifestResourceException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MissingManifestResourceException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MissingManifestResourceException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MissingManifestResourceException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MissingManifestResourceException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MissingManifestResourceException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MissingManifestResourceException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MissingManifestResourceExceptionVtbl;

    interface _MissingManifestResourceException
    {
        CONST_VTBL struct _MissingManifestResourceExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MissingManifestResourceException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MissingManifestResourceException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MissingManifestResourceException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MissingManifestResourceException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MissingManifestResourceException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MissingManifestResourceException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MissingManifestResourceException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MissingManifestResourceException_INTERFACE_DEFINED__ */


#ifndef ___MissingSatelliteAssemblyException_INTERFACE_DEFINED__
#define ___MissingSatelliteAssemblyException_INTERFACE_DEFINED__

/* interface _MissingSatelliteAssemblyException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MissingSatelliteAssemblyException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5A8DE087-D9D7-3BBA-92B4-FE1034A1242F")
    _MissingSatelliteAssemblyException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MissingSatelliteAssemblyExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MissingSatelliteAssemblyException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MissingSatelliteAssemblyException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MissingSatelliteAssemblyException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MissingSatelliteAssemblyException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MissingSatelliteAssemblyException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MissingSatelliteAssemblyException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MissingSatelliteAssemblyException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MissingSatelliteAssemblyExceptionVtbl;

    interface _MissingSatelliteAssemblyException
    {
        CONST_VTBL struct _MissingSatelliteAssemblyExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MissingSatelliteAssemblyException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MissingSatelliteAssemblyException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MissingSatelliteAssemblyException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MissingSatelliteAssemblyException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MissingSatelliteAssemblyException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MissingSatelliteAssemblyException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MissingSatelliteAssemblyException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MissingSatelliteAssemblyException_INTERFACE_DEFINED__ */


#ifndef ___NeutralResourcesLanguageAttribute_INTERFACE_DEFINED__
#define ___NeutralResourcesLanguageAttribute_INTERFACE_DEFINED__

/* interface _NeutralResourcesLanguageAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NeutralResourcesLanguageAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F48DF808-8B7D-3F4E-9159-1DFD60F298D6")
    _NeutralResourcesLanguageAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NeutralResourcesLanguageAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NeutralResourcesLanguageAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NeutralResourcesLanguageAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NeutralResourcesLanguageAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NeutralResourcesLanguageAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NeutralResourcesLanguageAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NeutralResourcesLanguageAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NeutralResourcesLanguageAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NeutralResourcesLanguageAttributeVtbl;

    interface _NeutralResourcesLanguageAttribute
    {
        CONST_VTBL struct _NeutralResourcesLanguageAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NeutralResourcesLanguageAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NeutralResourcesLanguageAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NeutralResourcesLanguageAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NeutralResourcesLanguageAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NeutralResourcesLanguageAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NeutralResourcesLanguageAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NeutralResourcesLanguageAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NeutralResourcesLanguageAttribute_INTERFACE_DEFINED__ */


#ifndef ___ResourceManager_INTERFACE_DEFINED__
#define ___ResourceManager_INTERFACE_DEFINED__

/* interface _ResourceManager */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ResourceManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4DE671B7-7C85-37E9-AFF8-1222ABE4883E")
    _ResourceManager : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ResourceManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ResourceManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ResourceManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ResourceManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ResourceManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ResourceManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ResourceManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ResourceManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ResourceManagerVtbl;

    interface _ResourceManager
    {
        CONST_VTBL struct _ResourceManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ResourceManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ResourceManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ResourceManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ResourceManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ResourceManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ResourceManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ResourceManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ResourceManager_INTERFACE_DEFINED__ */


#ifndef ___ResourceReader_INTERFACE_DEFINED__
#define ___ResourceReader_INTERFACE_DEFINED__

/* interface _ResourceReader */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ResourceReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7FBCFDC7-5CEC-3945-8095-DAED61BE5FB1")
    _ResourceReader : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ResourceReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ResourceReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ResourceReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ResourceReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ResourceReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ResourceReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ResourceReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ResourceReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ResourceReaderVtbl;

    interface _ResourceReader
    {
        CONST_VTBL struct _ResourceReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ResourceReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ResourceReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ResourceReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ResourceReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ResourceReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ResourceReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ResourceReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ResourceReader_INTERFACE_DEFINED__ */


#ifndef ___ResourceSet_INTERFACE_DEFINED__
#define ___ResourceSet_INTERFACE_DEFINED__

/* interface _ResourceSet */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ResourceSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44D5F81A-727C-35AE-8DF8-9FF6722F1C6C")
    _ResourceSet : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ResourceSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ResourceSet * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ResourceSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ResourceSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ResourceSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ResourceSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ResourceSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ResourceSet * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ResourceSetVtbl;

    interface _ResourceSet
    {
        CONST_VTBL struct _ResourceSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ResourceSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ResourceSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ResourceSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ResourceSet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ResourceSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ResourceSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ResourceSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ResourceSet_INTERFACE_DEFINED__ */


#ifndef ___ResourceWriter_INTERFACE_DEFINED__
#define ___ResourceWriter_INTERFACE_DEFINED__

/* interface _ResourceWriter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ResourceWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AF170258-AAC6-3A86-BD34-303E62CED10E")
    _ResourceWriter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ResourceWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ResourceWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ResourceWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ResourceWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ResourceWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ResourceWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ResourceWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ResourceWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ResourceWriterVtbl;

    interface _ResourceWriter
    {
        CONST_VTBL struct _ResourceWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ResourceWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ResourceWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ResourceWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ResourceWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ResourceWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ResourceWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ResourceWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ResourceWriter_INTERFACE_DEFINED__ */


#ifndef ___SatelliteContractVersionAttribute_INTERFACE_DEFINED__
#define ___SatelliteContractVersionAttribute_INTERFACE_DEFINED__

/* interface _SatelliteContractVersionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SatelliteContractVersionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5CBB1F47-FBA5-33B9-9D4A-57D6E3D133D2")
    _SatelliteContractVersionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SatelliteContractVersionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SatelliteContractVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SatelliteContractVersionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SatelliteContractVersionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SatelliteContractVersionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SatelliteContractVersionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SatelliteContractVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SatelliteContractVersionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SatelliteContractVersionAttributeVtbl;

    interface _SatelliteContractVersionAttribute
    {
        CONST_VTBL struct _SatelliteContractVersionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SatelliteContractVersionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SatelliteContractVersionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SatelliteContractVersionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SatelliteContractVersionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SatelliteContractVersionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SatelliteContractVersionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SatelliteContractVersionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SatelliteContractVersionAttribute_INTERFACE_DEFINED__ */


#ifndef ___Registry_INTERFACE_DEFINED__
#define ___Registry_INTERFACE_DEFINED__

/* interface _Registry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Registry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23BAE0C0-3A36-32F0-9DAD-0E95ADD67D23")
    _Registry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RegistryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Registry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Registry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Registry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Registry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Registry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Registry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Registry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RegistryVtbl;

    interface _Registry
    {
        CONST_VTBL struct _RegistryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Registry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Registry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Registry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Registry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Registry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Registry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Registry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Registry_INTERFACE_DEFINED__ */


#ifndef ___RegistryKey_INTERFACE_DEFINED__
#define ___RegistryKey_INTERFACE_DEFINED__

/* interface _RegistryKey */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RegistryKey;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2EAC6733-8D92-31D9-BE04-DC467EFC3EB1")
    _RegistryKey : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RegistryKeyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RegistryKey * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RegistryKey * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RegistryKey * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RegistryKey * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RegistryKey * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RegistryKey * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RegistryKey * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RegistryKeyVtbl;

    interface _RegistryKey
    {
        CONST_VTBL struct _RegistryKeyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RegistryKey_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RegistryKey_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RegistryKey_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RegistryKey_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RegistryKey_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RegistryKey_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RegistryKey_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RegistryKey_INTERFACE_DEFINED__ */


#ifndef ___AllMembershipCondition_INTERFACE_DEFINED__
#define ___AllMembershipCondition_INTERFACE_DEFINED__

/* interface _AllMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AllMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("99F01720-3CC2-366D-9AB9-50E36647617F")
    _AllMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AllMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AllMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AllMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AllMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AllMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AllMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AllMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AllMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AllMembershipConditionVtbl;

    interface _AllMembershipCondition
    {
        CONST_VTBL struct _AllMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AllMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AllMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AllMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AllMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AllMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AllMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AllMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AllMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___ApplicationDirectory_INTERFACE_DEFINED__
#define ___ApplicationDirectory_INTERFACE_DEFINED__

/* interface _ApplicationDirectory */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationDirectory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9CCC831B-1BA7-34BE-A966-56D5A6DB5AAD")
    _ApplicationDirectory : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationDirectoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationDirectory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationDirectory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationDirectory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationDirectory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationDirectory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationDirectory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationDirectory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationDirectoryVtbl;

    interface _ApplicationDirectory
    {
        CONST_VTBL struct _ApplicationDirectoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationDirectory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationDirectory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationDirectory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationDirectory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationDirectory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationDirectory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationDirectory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationDirectory_INTERFACE_DEFINED__ */


#ifndef ___ApplicationDirectoryMembershipCondition_INTERFACE_DEFINED__
#define ___ApplicationDirectoryMembershipCondition_INTERFACE_DEFINED__

/* interface _ApplicationDirectoryMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationDirectoryMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A02A2B22-1DBA-3F92-9F84-5563182851BB")
    _ApplicationDirectoryMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationDirectoryMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationDirectoryMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationDirectoryMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationDirectoryMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationDirectoryMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationDirectoryMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationDirectoryMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationDirectoryMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationDirectoryMembershipConditionVtbl;

    interface _ApplicationDirectoryMembershipCondition
    {
        CONST_VTBL struct _ApplicationDirectoryMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationDirectoryMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationDirectoryMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationDirectoryMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationDirectoryMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationDirectoryMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationDirectoryMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationDirectoryMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationDirectoryMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___ApplicationSecurityInfo_INTERFACE_DEFINED__
#define ___ApplicationSecurityInfo_INTERFACE_DEFINED__

/* interface _ApplicationSecurityInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationSecurityInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("18E473F6-637B-3C01-8D46-D011AAD26C95")
    _ApplicationSecurityInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationSecurityInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationSecurityInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationSecurityInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationSecurityInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationSecurityInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationSecurityInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationSecurityInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationSecurityInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationSecurityInfoVtbl;

    interface _ApplicationSecurityInfo
    {
        CONST_VTBL struct _ApplicationSecurityInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationSecurityInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationSecurityInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationSecurityInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationSecurityInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationSecurityInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationSecurityInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationSecurityInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationSecurityInfo_INTERFACE_DEFINED__ */


#ifndef ___ApplicationSecurityManager_INTERFACE_DEFINED__
#define ___ApplicationSecurityManager_INTERFACE_DEFINED__

/* interface _ApplicationSecurityManager */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationSecurityManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C664FE09-0A55-316D-B25B-6B3200ECAF70")
    _ApplicationSecurityManager : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationSecurityManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationSecurityManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationSecurityManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationSecurityManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationSecurityManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationSecurityManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationSecurityManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationSecurityManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationSecurityManagerVtbl;

    interface _ApplicationSecurityManager
    {
        CONST_VTBL struct _ApplicationSecurityManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationSecurityManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationSecurityManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationSecurityManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationSecurityManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationSecurityManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationSecurityManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationSecurityManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationSecurityManager_INTERFACE_DEFINED__ */


#ifndef ___ApplicationTrust_INTERFACE_DEFINED__
#define ___ApplicationTrust_INTERFACE_DEFINED__

/* interface _ApplicationTrust */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationTrust;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E66A9755-58E2-3FCB-A265-835851CBF063")
    _ApplicationTrust : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationTrustVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationTrust * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationTrust * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationTrust * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationTrust * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationTrust * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationTrust * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationTrust * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationTrustVtbl;

    interface _ApplicationTrust
    {
        CONST_VTBL struct _ApplicationTrustVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationTrust_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationTrust_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationTrust_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationTrust_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationTrust_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationTrust_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationTrust_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationTrust_INTERFACE_DEFINED__ */


#ifndef ___ApplicationTrustCollection_INTERFACE_DEFINED__
#define ___ApplicationTrustCollection_INTERFACE_DEFINED__

/* interface _ApplicationTrustCollection */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationTrustCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB03C920-1C05-3ECB-982D-53324D5AC9FF")
    _ApplicationTrustCollection : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationTrustCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationTrustCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationTrustCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationTrustCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationTrustCollection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationTrustCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationTrustCollection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationTrustCollection * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationTrustCollectionVtbl;

    interface _ApplicationTrustCollection
    {
        CONST_VTBL struct _ApplicationTrustCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationTrustCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationTrustCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationTrustCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationTrustCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationTrustCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationTrustCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationTrustCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationTrustCollection_INTERFACE_DEFINED__ */


#ifndef ___ApplicationTrustEnumerator_INTERFACE_DEFINED__
#define ___ApplicationTrustEnumerator_INTERFACE_DEFINED__

/* interface _ApplicationTrustEnumerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ApplicationTrustEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("01AFD447-60CA-3B67-803A-E57B727F3A5B")
    _ApplicationTrustEnumerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ApplicationTrustEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ApplicationTrustEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ApplicationTrustEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ApplicationTrustEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ApplicationTrustEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ApplicationTrustEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ApplicationTrustEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ApplicationTrustEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ApplicationTrustEnumeratorVtbl;

    interface _ApplicationTrustEnumerator
    {
        CONST_VTBL struct _ApplicationTrustEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ApplicationTrustEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ApplicationTrustEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ApplicationTrustEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ApplicationTrustEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ApplicationTrustEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ApplicationTrustEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ApplicationTrustEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ApplicationTrustEnumerator_INTERFACE_DEFINED__ */


#ifndef ___CodeGroup_INTERFACE_DEFINED__
#define ___CodeGroup_INTERFACE_DEFINED__

/* interface _CodeGroup */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CodeGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D7093F61-ED6B-343F-B1E9-02472FCC710E")
    _CodeGroup : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CodeGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CodeGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CodeGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CodeGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CodeGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CodeGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CodeGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CodeGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CodeGroupVtbl;

    interface _CodeGroup
    {
        CONST_VTBL struct _CodeGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CodeGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CodeGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CodeGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CodeGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CodeGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CodeGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CodeGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CodeGroup_INTERFACE_DEFINED__ */


#ifndef ___Evidence_INTERFACE_DEFINED__
#define ___Evidence_INTERFACE_DEFINED__

/* interface _Evidence */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Evidence;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A505EDBC-380E-3B23-9E1A-0974D4EF02EF")
    _Evidence : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EvidenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Evidence * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Evidence * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Evidence * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Evidence * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Evidence * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Evidence * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Evidence * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EvidenceVtbl;

    interface _Evidence
    {
        CONST_VTBL struct _EvidenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Evidence_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Evidence_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Evidence_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Evidence_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Evidence_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Evidence_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Evidence_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Evidence_INTERFACE_DEFINED__ */


#ifndef ___FileCodeGroup_INTERFACE_DEFINED__
#define ___FileCodeGroup_INTERFACE_DEFINED__

/* interface _FileCodeGroup */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileCodeGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DFAD74DC-8390-32F6-9612-1BD293B233F4")
    _FileCodeGroup : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileCodeGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileCodeGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileCodeGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileCodeGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileCodeGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileCodeGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileCodeGroupVtbl;

    interface _FileCodeGroup
    {
        CONST_VTBL struct _FileCodeGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileCodeGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileCodeGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileCodeGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileCodeGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileCodeGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileCodeGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileCodeGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileCodeGroup_INTERFACE_DEFINED__ */


#ifndef ___FirstMatchCodeGroup_INTERFACE_DEFINED__
#define ___FirstMatchCodeGroup_INTERFACE_DEFINED__

/* interface _FirstMatchCodeGroup */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FirstMatchCodeGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("54B0AFB1-E7D3-3770-BB0E-75A95E8D2656")
    _FirstMatchCodeGroup : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FirstMatchCodeGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FirstMatchCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FirstMatchCodeGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FirstMatchCodeGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FirstMatchCodeGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FirstMatchCodeGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FirstMatchCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FirstMatchCodeGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FirstMatchCodeGroupVtbl;

    interface _FirstMatchCodeGroup
    {
        CONST_VTBL struct _FirstMatchCodeGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FirstMatchCodeGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FirstMatchCodeGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FirstMatchCodeGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FirstMatchCodeGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FirstMatchCodeGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FirstMatchCodeGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FirstMatchCodeGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FirstMatchCodeGroup_INTERFACE_DEFINED__ */


#ifndef ___TrustManagerContext_INTERFACE_DEFINED__
#define ___TrustManagerContext_INTERFACE_DEFINED__

/* interface _TrustManagerContext */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TrustManagerContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D89EAC5E-0331-3FCD-9C16-4F1ED3FE1BE2")
    _TrustManagerContext : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TrustManagerContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TrustManagerContext * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TrustManagerContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TrustManagerContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TrustManagerContext * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TrustManagerContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TrustManagerContext * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TrustManagerContext * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TrustManagerContextVtbl;

    interface _TrustManagerContext
    {
        CONST_VTBL struct _TrustManagerContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TrustManagerContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TrustManagerContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TrustManagerContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TrustManagerContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TrustManagerContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TrustManagerContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TrustManagerContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TrustManagerContext_INTERFACE_DEFINED__ */


#ifndef ___CodeConnectAccess_INTERFACE_DEFINED__
#define ___CodeConnectAccess_INTERFACE_DEFINED__

/* interface _CodeConnectAccess */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CodeConnectAccess;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FE8A2546-3478-3FAD-BE1D-DA7BC25C4E4E")
    _CodeConnectAccess : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CodeConnectAccessVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CodeConnectAccess * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CodeConnectAccess * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CodeConnectAccess * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CodeConnectAccess * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CodeConnectAccess * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CodeConnectAccess * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CodeConnectAccess * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CodeConnectAccessVtbl;

    interface _CodeConnectAccess
    {
        CONST_VTBL struct _CodeConnectAccessVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CodeConnectAccess_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CodeConnectAccess_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CodeConnectAccess_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CodeConnectAccess_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CodeConnectAccess_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CodeConnectAccess_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CodeConnectAccess_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CodeConnectAccess_INTERFACE_DEFINED__ */


#ifndef ___NetCodeGroup_INTERFACE_DEFINED__
#define ___NetCodeGroup_INTERFACE_DEFINED__

/* interface _NetCodeGroup */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NetCodeGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8F69ECA-8C48-3B5E-92A1-654925058059")
    _NetCodeGroup : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NetCodeGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NetCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NetCodeGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NetCodeGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NetCodeGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NetCodeGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NetCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NetCodeGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NetCodeGroupVtbl;

    interface _NetCodeGroup
    {
        CONST_VTBL struct _NetCodeGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NetCodeGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NetCodeGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NetCodeGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NetCodeGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NetCodeGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NetCodeGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NetCodeGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NetCodeGroup_INTERFACE_DEFINED__ */


#ifndef ___PermissionRequestEvidence_INTERFACE_DEFINED__
#define ___PermissionRequestEvidence_INTERFACE_DEFINED__

/* interface _PermissionRequestEvidence */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PermissionRequestEvidence;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34B0417E-E71D-304C-9FAC-689350A1B41C")
    _PermissionRequestEvidence : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PermissionRequestEvidenceVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PermissionRequestEvidence * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PermissionRequestEvidence * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PermissionRequestEvidence * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PermissionRequestEvidence * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PermissionRequestEvidence * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PermissionRequestEvidence * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PermissionRequestEvidence * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PermissionRequestEvidenceVtbl;

    interface _PermissionRequestEvidence
    {
        CONST_VTBL struct _PermissionRequestEvidenceVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PermissionRequestEvidence_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PermissionRequestEvidence_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PermissionRequestEvidence_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PermissionRequestEvidence_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PermissionRequestEvidence_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PermissionRequestEvidence_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PermissionRequestEvidence_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PermissionRequestEvidence_INTERFACE_DEFINED__ */


#ifndef ___PolicyException_INTERFACE_DEFINED__
#define ___PolicyException_INTERFACE_DEFINED__

/* interface _PolicyException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PolicyException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A9C9F3D9-E153-39B8-A533-B8DF4664407B")
    _PolicyException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PolicyExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PolicyException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PolicyException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PolicyException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PolicyException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PolicyException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PolicyException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PolicyException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PolicyExceptionVtbl;

    interface _PolicyException
    {
        CONST_VTBL struct _PolicyExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PolicyException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PolicyException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PolicyException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PolicyException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PolicyException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PolicyException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PolicyException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PolicyException_INTERFACE_DEFINED__ */


#ifndef ___PolicyLevel_INTERFACE_DEFINED__
#define ___PolicyLevel_INTERFACE_DEFINED__

/* interface _PolicyLevel */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PolicyLevel;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44494E35-C370-3014-BC78-0F2ECBF83F53")
    _PolicyLevel : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PolicyLevelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PolicyLevel * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PolicyLevel * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PolicyLevel * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PolicyLevel * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PolicyLevel * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PolicyLevel * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PolicyLevel * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PolicyLevelVtbl;

    interface _PolicyLevel
    {
        CONST_VTBL struct _PolicyLevelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PolicyLevel_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PolicyLevel_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PolicyLevel_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PolicyLevel_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PolicyLevel_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PolicyLevel_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PolicyLevel_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PolicyLevel_INTERFACE_DEFINED__ */


#ifndef ___PolicyStatement_INTERFACE_DEFINED__
#define ___PolicyStatement_INTERFACE_DEFINED__

/* interface _PolicyStatement */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PolicyStatement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3EEFD1FC-4D8D-3177-99F6-6C19D9E088D3")
    _PolicyStatement : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PolicyStatementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PolicyStatement * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PolicyStatement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PolicyStatement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PolicyStatement * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PolicyStatement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PolicyStatement * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PolicyStatement * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PolicyStatementVtbl;

    interface _PolicyStatement
    {
        CONST_VTBL struct _PolicyStatementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PolicyStatement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PolicyStatement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PolicyStatement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PolicyStatement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PolicyStatement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PolicyStatement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PolicyStatement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PolicyStatement_INTERFACE_DEFINED__ */


#ifndef ___Site_INTERFACE_DEFINED__
#define ___Site_INTERFACE_DEFINED__

/* interface _Site */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Site;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("90C40B4C-B0D0-30F5-B520-FDBA97BC31A0")
    _Site : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SiteVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Site * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Site * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Site * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Site * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Site * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Site * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Site * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SiteVtbl;

    interface _Site
    {
        CONST_VTBL struct _SiteVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Site_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Site_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Site_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Site_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Site_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Site_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Site_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Site_INTERFACE_DEFINED__ */


#ifndef ___SiteMembershipCondition_INTERFACE_DEFINED__
#define ___SiteMembershipCondition_INTERFACE_DEFINED__

/* interface _SiteMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SiteMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0A7C3542-8031-3593-872C-78D85D7CC273")
    _SiteMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SiteMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SiteMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SiteMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SiteMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SiteMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SiteMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SiteMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SiteMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SiteMembershipConditionVtbl;

    interface _SiteMembershipCondition
    {
        CONST_VTBL struct _SiteMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SiteMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SiteMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SiteMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SiteMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SiteMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SiteMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SiteMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SiteMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___StrongName_INTERFACE_DEFINED__
#define ___StrongName_INTERFACE_DEFINED__

/* interface _StrongName */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StrongName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2A75C1FD-06B0-3CBB-B467-2545D4D6C865")
    _StrongName : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StrongNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StrongName * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StrongName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StrongName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StrongName * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StrongName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StrongName * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StrongName * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StrongNameVtbl;

    interface _StrongName
    {
        CONST_VTBL struct _StrongNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StrongName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StrongName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StrongName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StrongName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StrongName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StrongName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StrongName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StrongName_INTERFACE_DEFINED__ */


#ifndef ___StrongNameMembershipCondition_INTERFACE_DEFINED__
#define ___StrongNameMembershipCondition_INTERFACE_DEFINED__

/* interface _StrongNameMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StrongNameMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("579E93BC-FFAB-3B8D-9181-CE9C22B51915")
    _StrongNameMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StrongNameMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StrongNameMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StrongNameMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StrongNameMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StrongNameMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StrongNameMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StrongNameMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StrongNameMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StrongNameMembershipConditionVtbl;

    interface _StrongNameMembershipCondition
    {
        CONST_VTBL struct _StrongNameMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StrongNameMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StrongNameMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StrongNameMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StrongNameMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StrongNameMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StrongNameMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StrongNameMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StrongNameMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___UnionCodeGroup_INTERFACE_DEFINED__
#define ___UnionCodeGroup_INTERFACE_DEFINED__

/* interface _UnionCodeGroup */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnionCodeGroup;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D9D822DE-44E5-33CE-A43F-173E475CECB1")
    _UnionCodeGroup : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnionCodeGroupVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnionCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnionCodeGroup * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnionCodeGroup * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnionCodeGroup * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnionCodeGroup * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnionCodeGroup * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnionCodeGroup * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnionCodeGroupVtbl;

    interface _UnionCodeGroup
    {
        CONST_VTBL struct _UnionCodeGroupVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnionCodeGroup_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnionCodeGroup_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnionCodeGroup_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnionCodeGroup_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnionCodeGroup_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnionCodeGroup_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnionCodeGroup_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnionCodeGroup_INTERFACE_DEFINED__ */


#ifndef ___Url_INTERFACE_DEFINED__
#define ___Url_INTERFACE_DEFINED__

/* interface _Url */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Url;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D94ED9BF-C065-3703-81A2-2F76EA8E312F")
    _Url : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UrlVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Url * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Url * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Url * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Url * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Url * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Url * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Url * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UrlVtbl;

    interface _Url
    {
        CONST_VTBL struct _UrlVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Url_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Url_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Url_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Url_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Url_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Url_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Url_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Url_INTERFACE_DEFINED__ */


#ifndef ___UrlMembershipCondition_INTERFACE_DEFINED__
#define ___UrlMembershipCondition_INTERFACE_DEFINED__

/* interface _UrlMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UrlMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BB7A158D-DBD9-3E13-B137-8E61E87E1128")
    _UrlMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UrlMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UrlMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UrlMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UrlMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UrlMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UrlMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UrlMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UrlMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UrlMembershipConditionVtbl;

    interface _UrlMembershipCondition
    {
        CONST_VTBL struct _UrlMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UrlMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UrlMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UrlMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UrlMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UrlMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UrlMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UrlMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UrlMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___Zone_INTERFACE_DEFINED__
#define ___Zone_INTERFACE_DEFINED__

/* interface _Zone */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Zone;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("742E0C26-0E23-3D20-968C-D221094909AA")
    _Zone : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ZoneVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Zone * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Zone * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Zone * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Zone * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Zone * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Zone * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Zone * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ZoneVtbl;

    interface _Zone
    {
        CONST_VTBL struct _ZoneVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Zone_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Zone_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Zone_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Zone_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Zone_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Zone_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Zone_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Zone_INTERFACE_DEFINED__ */


#ifndef ___ZoneMembershipCondition_INTERFACE_DEFINED__
#define ___ZoneMembershipCondition_INTERFACE_DEFINED__

/* interface _ZoneMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ZoneMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ADBC3463-0101-3429-A06C-DB2F1DD6B724")
    _ZoneMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ZoneMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ZoneMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ZoneMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ZoneMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ZoneMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ZoneMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ZoneMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ZoneMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ZoneMembershipConditionVtbl;

    interface _ZoneMembershipCondition
    {
        CONST_VTBL struct _ZoneMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ZoneMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ZoneMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ZoneMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ZoneMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ZoneMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ZoneMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ZoneMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ZoneMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___GacInstalled_INTERFACE_DEFINED__
#define ___GacInstalled_INTERFACE_DEFINED__

/* interface _GacInstalled */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GacInstalled;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A7AEF52C-B47B-3660-BB3E-34347D56DB46")
    _GacInstalled : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GacInstalledVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GacInstalled * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GacInstalled * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GacInstalled * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GacInstalled * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GacInstalled * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GacInstalled * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GacInstalled * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GacInstalledVtbl;

    interface _GacInstalled
    {
        CONST_VTBL struct _GacInstalledVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GacInstalled_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GacInstalled_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GacInstalled_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GacInstalled_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GacInstalled_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GacInstalled_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GacInstalled_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GacInstalled_INTERFACE_DEFINED__ */


#ifndef ___GacMembershipCondition_INTERFACE_DEFINED__
#define ___GacMembershipCondition_INTERFACE_DEFINED__

/* interface _GacMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GacMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B2217AB5-6E55-3FF6-A1A9-1B0DC0585040")
    _GacMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GacMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GacMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GacMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GacMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GacMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GacMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GacMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GacMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GacMembershipConditionVtbl;

    interface _GacMembershipCondition
    {
        CONST_VTBL struct _GacMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GacMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GacMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GacMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GacMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GacMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GacMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GacMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GacMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___Hash_INTERFACE_DEFINED__
#define ___Hash_INTERFACE_DEFINED__

/* interface _Hash */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Hash;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7574E121-74A6-3626-B578-0783BADB19D2")
    _Hash : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HashVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Hash * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Hash * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Hash * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Hash * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Hash * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Hash * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Hash * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HashVtbl;

    interface _Hash
    {
        CONST_VTBL struct _HashVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Hash_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Hash_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Hash_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Hash_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Hash_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Hash_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Hash_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Hash_INTERFACE_DEFINED__ */


#ifndef ___HashMembershipCondition_INTERFACE_DEFINED__
#define ___HashMembershipCondition_INTERFACE_DEFINED__

/* interface _HashMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HashMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BA6EA7A-C9FC-3E73-82EC-18F29D83EEFD")
    _HashMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HashMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HashMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HashMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HashMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HashMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HashMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HashMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HashMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HashMembershipConditionVtbl;

    interface _HashMembershipCondition
    {
        CONST_VTBL struct _HashMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HashMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HashMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HashMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HashMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HashMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HashMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HashMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HashMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___Publisher_INTERFACE_DEFINED__
#define ___Publisher_INTERFACE_DEFINED__

/* interface _Publisher */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Publisher;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77CCA693-ABF6-3773-BF58-C0B02701A744")
    _Publisher : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PublisherVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Publisher * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Publisher * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Publisher * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Publisher * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Publisher * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Publisher * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Publisher * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PublisherVtbl;

    interface _Publisher
    {
        CONST_VTBL struct _PublisherVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Publisher_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Publisher_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Publisher_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Publisher_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Publisher_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Publisher_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Publisher_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Publisher_INTERFACE_DEFINED__ */


#ifndef ___PublisherMembershipCondition_INTERFACE_DEFINED__
#define ___PublisherMembershipCondition_INTERFACE_DEFINED__

/* interface _PublisherMembershipCondition */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PublisherMembershipCondition;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3515CF63-9863-3044-B3E1-210E98EFC702")
    _PublisherMembershipCondition : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PublisherMembershipConditionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PublisherMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PublisherMembershipCondition * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PublisherMembershipCondition * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PublisherMembershipCondition * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PublisherMembershipCondition * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PublisherMembershipCondition * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PublisherMembershipCondition * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PublisherMembershipConditionVtbl;

    interface _PublisherMembershipCondition
    {
        CONST_VTBL struct _PublisherMembershipConditionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PublisherMembershipCondition_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PublisherMembershipCondition_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PublisherMembershipCondition_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PublisherMembershipCondition_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PublisherMembershipCondition_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PublisherMembershipCondition_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PublisherMembershipCondition_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PublisherMembershipCondition_INTERFACE_DEFINED__ */


#ifndef ___GenericIdentity_INTERFACE_DEFINED__
#define ___GenericIdentity_INTERFACE_DEFINED__

/* interface _GenericIdentity */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GenericIdentity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9A37D8B2-2256-3FE3-8BF0-4FC421A1244F")
    _GenericIdentity : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GenericIdentityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GenericIdentity * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GenericIdentity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GenericIdentity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GenericIdentity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GenericIdentity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GenericIdentity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GenericIdentity * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GenericIdentityVtbl;

    interface _GenericIdentity
    {
        CONST_VTBL struct _GenericIdentityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GenericIdentity_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GenericIdentity_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GenericIdentity_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GenericIdentity_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GenericIdentity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GenericIdentity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GenericIdentity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GenericIdentity_INTERFACE_DEFINED__ */


#ifndef ___GenericPrincipal_INTERFACE_DEFINED__
#define ___GenericPrincipal_INTERFACE_DEFINED__

/* interface _GenericPrincipal */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GenericPrincipal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B4701C26-1509-3726-B2E1-409A636C9B4F")
    _GenericPrincipal : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GenericPrincipalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GenericPrincipal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GenericPrincipal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GenericPrincipal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GenericPrincipal * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GenericPrincipal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GenericPrincipal * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GenericPrincipal * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GenericPrincipalVtbl;

    interface _GenericPrincipal
    {
        CONST_VTBL struct _GenericPrincipalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GenericPrincipal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GenericPrincipal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GenericPrincipal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GenericPrincipal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GenericPrincipal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GenericPrincipal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GenericPrincipal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GenericPrincipal_INTERFACE_DEFINED__ */


#ifndef ___WindowsIdentity_INTERFACE_DEFINED__
#define ___WindowsIdentity_INTERFACE_DEFINED__

/* interface _WindowsIdentity */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WindowsIdentity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D8CF3F23-1A66-3344-8230-07EB53970B85")
    _WindowsIdentity : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WindowsIdentityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WindowsIdentity * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WindowsIdentity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WindowsIdentity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WindowsIdentity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WindowsIdentity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WindowsIdentity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WindowsIdentity * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WindowsIdentityVtbl;

    interface _WindowsIdentity
    {
        CONST_VTBL struct _WindowsIdentityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WindowsIdentity_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WindowsIdentity_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WindowsIdentity_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WindowsIdentity_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WindowsIdentity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WindowsIdentity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WindowsIdentity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WindowsIdentity_INTERFACE_DEFINED__ */


#ifndef ___WindowsImpersonationContext_INTERFACE_DEFINED__
#define ___WindowsImpersonationContext_INTERFACE_DEFINED__

/* interface _WindowsImpersonationContext */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WindowsImpersonationContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("60ECFDDA-650A-324C-B4B3-F4D75B563BB1")
    _WindowsImpersonationContext : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WindowsImpersonationContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WindowsImpersonationContext * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WindowsImpersonationContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WindowsImpersonationContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WindowsImpersonationContext * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WindowsImpersonationContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WindowsImpersonationContext * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WindowsImpersonationContext * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WindowsImpersonationContextVtbl;

    interface _WindowsImpersonationContext
    {
        CONST_VTBL struct _WindowsImpersonationContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WindowsImpersonationContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WindowsImpersonationContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WindowsImpersonationContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WindowsImpersonationContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WindowsImpersonationContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WindowsImpersonationContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WindowsImpersonationContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WindowsImpersonationContext_INTERFACE_DEFINED__ */


#ifndef ___WindowsPrincipal_INTERFACE_DEFINED__
#define ___WindowsPrincipal_INTERFACE_DEFINED__

/* interface _WindowsPrincipal */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WindowsPrincipal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6C42BAF9-1893-34FC-B3AF-06931E9B34A3")
    _WindowsPrincipal : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WindowsPrincipalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WindowsPrincipal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WindowsPrincipal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WindowsPrincipal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WindowsPrincipal * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WindowsPrincipal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WindowsPrincipal * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WindowsPrincipal * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WindowsPrincipalVtbl;

    interface _WindowsPrincipal
    {
        CONST_VTBL struct _WindowsPrincipalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WindowsPrincipal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WindowsPrincipal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WindowsPrincipal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WindowsPrincipal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WindowsPrincipal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WindowsPrincipal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WindowsPrincipal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WindowsPrincipal_INTERFACE_DEFINED__ */


#ifndef ___UnmanagedFunctionPointerAttribute_INTERFACE_DEFINED__
#define ___UnmanagedFunctionPointerAttribute_INTERFACE_DEFINED__

/* interface _UnmanagedFunctionPointerAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnmanagedFunctionPointerAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B6ED26A-4B7F-34FC-B2C8-8109D684B3DF")
    _UnmanagedFunctionPointerAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnmanagedFunctionPointerAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnmanagedFunctionPointerAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnmanagedFunctionPointerAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnmanagedFunctionPointerAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnmanagedFunctionPointerAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnmanagedFunctionPointerAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnmanagedFunctionPointerAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnmanagedFunctionPointerAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnmanagedFunctionPointerAttributeVtbl;

    interface _UnmanagedFunctionPointerAttribute
    {
        CONST_VTBL struct _UnmanagedFunctionPointerAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnmanagedFunctionPointerAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnmanagedFunctionPointerAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnmanagedFunctionPointerAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnmanagedFunctionPointerAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnmanagedFunctionPointerAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnmanagedFunctionPointerAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnmanagedFunctionPointerAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnmanagedFunctionPointerAttribute_INTERFACE_DEFINED__ */


#ifndef ___DispIdAttribute_INTERFACE_DEFINED__
#define ___DispIdAttribute_INTERFACE_DEFINED__

/* interface _DispIdAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DispIdAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BBE41AC5-8692-3427-9AE1-C1058A38D492")
    _DispIdAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DispIdAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DispIdAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DispIdAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DispIdAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DispIdAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DispIdAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DispIdAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DispIdAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DispIdAttributeVtbl;

    interface _DispIdAttribute
    {
        CONST_VTBL struct _DispIdAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DispIdAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DispIdAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DispIdAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DispIdAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DispIdAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DispIdAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DispIdAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DispIdAttribute_INTERFACE_DEFINED__ */


#ifndef ___InterfaceTypeAttribute_INTERFACE_DEFINED__
#define ___InterfaceTypeAttribute_INTERFACE_DEFINED__

/* interface _InterfaceTypeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InterfaceTypeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A2145F38-CAC1-33DD-A318-21948AF6825D")
    _InterfaceTypeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InterfaceTypeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InterfaceTypeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InterfaceTypeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InterfaceTypeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InterfaceTypeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InterfaceTypeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InterfaceTypeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InterfaceTypeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InterfaceTypeAttributeVtbl;

    interface _InterfaceTypeAttribute
    {
        CONST_VTBL struct _InterfaceTypeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InterfaceTypeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InterfaceTypeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InterfaceTypeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InterfaceTypeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InterfaceTypeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InterfaceTypeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InterfaceTypeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InterfaceTypeAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComDefaultInterfaceAttribute_INTERFACE_DEFINED__
#define ___ComDefaultInterfaceAttribute_INTERFACE_DEFINED__

/* interface _ComDefaultInterfaceAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComDefaultInterfaceAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0C1E7B57-B9B1-36E4-8396-549C29062A81")
    _ComDefaultInterfaceAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComDefaultInterfaceAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComDefaultInterfaceAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComDefaultInterfaceAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComDefaultInterfaceAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComDefaultInterfaceAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComDefaultInterfaceAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComDefaultInterfaceAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComDefaultInterfaceAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComDefaultInterfaceAttributeVtbl;

    interface _ComDefaultInterfaceAttribute
    {
        CONST_VTBL struct _ComDefaultInterfaceAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComDefaultInterfaceAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComDefaultInterfaceAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComDefaultInterfaceAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComDefaultInterfaceAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComDefaultInterfaceAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComDefaultInterfaceAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComDefaultInterfaceAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComDefaultInterfaceAttribute_INTERFACE_DEFINED__ */


#ifndef ___ClassInterfaceAttribute_INTERFACE_DEFINED__
#define ___ClassInterfaceAttribute_INTERFACE_DEFINED__

/* interface _ClassInterfaceAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ClassInterfaceAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6B6391EE-842F-3E9A-8EEE-F13325E10996")
    _ClassInterfaceAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ClassInterfaceAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ClassInterfaceAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ClassInterfaceAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ClassInterfaceAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ClassInterfaceAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ClassInterfaceAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ClassInterfaceAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ClassInterfaceAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ClassInterfaceAttributeVtbl;

    interface _ClassInterfaceAttribute
    {
        CONST_VTBL struct _ClassInterfaceAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ClassInterfaceAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ClassInterfaceAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ClassInterfaceAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ClassInterfaceAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ClassInterfaceAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ClassInterfaceAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ClassInterfaceAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ClassInterfaceAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComVisibleAttribute_INTERFACE_DEFINED__
#define ___ComVisibleAttribute_INTERFACE_DEFINED__

/* interface _ComVisibleAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComVisibleAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1E7FFFE2-AAD9-34EE-8A9F-3C016B880FF0")
    _ComVisibleAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComVisibleAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComVisibleAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComVisibleAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComVisibleAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComVisibleAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComVisibleAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComVisibleAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComVisibleAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComVisibleAttributeVtbl;

    interface _ComVisibleAttribute
    {
        CONST_VTBL struct _ComVisibleAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComVisibleAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComVisibleAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComVisibleAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComVisibleAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComVisibleAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComVisibleAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComVisibleAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComVisibleAttribute_INTERFACE_DEFINED__ */


#ifndef ___TypeLibImportClassAttribute_INTERFACE_DEFINED__
#define ___TypeLibImportClassAttribute_INTERFACE_DEFINED__

/* interface _TypeLibImportClassAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeLibImportClassAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("288A86D1-6F4F-39C9-9E42-162CF1C37226")
    _TypeLibImportClassAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeLibImportClassAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeLibImportClassAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeLibImportClassAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeLibImportClassAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeLibImportClassAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeLibImportClassAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeLibImportClassAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeLibImportClassAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeLibImportClassAttributeVtbl;

    interface _TypeLibImportClassAttribute
    {
        CONST_VTBL struct _TypeLibImportClassAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeLibImportClassAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeLibImportClassAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeLibImportClassAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeLibImportClassAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeLibImportClassAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeLibImportClassAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeLibImportClassAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeLibImportClassAttribute_INTERFACE_DEFINED__ */


#ifndef ___LCIDConversionAttribute_INTERFACE_DEFINED__
#define ___LCIDConversionAttribute_INTERFACE_DEFINED__

/* interface _LCIDConversionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__LCIDConversionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4AB67927-3C86-328A-8186-F85357DD5527")
    _LCIDConversionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _LCIDConversionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LCIDConversionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LCIDConversionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LCIDConversionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _LCIDConversionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _LCIDConversionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _LCIDConversionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _LCIDConversionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _LCIDConversionAttributeVtbl;

    interface _LCIDConversionAttribute
    {
        CONST_VTBL struct _LCIDConversionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LCIDConversionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LCIDConversionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LCIDConversionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LCIDConversionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _LCIDConversionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LCIDConversionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LCIDConversionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LCIDConversionAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComRegisterFunctionAttribute_INTERFACE_DEFINED__
#define ___ComRegisterFunctionAttribute_INTERFACE_DEFINED__

/* interface _ComRegisterFunctionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComRegisterFunctionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("51BA926F-AAB5-3945-B8A6-C8F0F4A7D12B")
    _ComRegisterFunctionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComRegisterFunctionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComRegisterFunctionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComRegisterFunctionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComRegisterFunctionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComRegisterFunctionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComRegisterFunctionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComRegisterFunctionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComRegisterFunctionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComRegisterFunctionAttributeVtbl;

    interface _ComRegisterFunctionAttribute
    {
        CONST_VTBL struct _ComRegisterFunctionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComRegisterFunctionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComRegisterFunctionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComRegisterFunctionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComRegisterFunctionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComRegisterFunctionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComRegisterFunctionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComRegisterFunctionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComRegisterFunctionAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComUnregisterFunctionAttribute_INTERFACE_DEFINED__
#define ___ComUnregisterFunctionAttribute_INTERFACE_DEFINED__

/* interface _ComUnregisterFunctionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComUnregisterFunctionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9F164188-34EB-3F86-9F74-0BBE4155E65E")
    _ComUnregisterFunctionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComUnregisterFunctionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComUnregisterFunctionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComUnregisterFunctionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComUnregisterFunctionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComUnregisterFunctionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComUnregisterFunctionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComUnregisterFunctionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComUnregisterFunctionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComUnregisterFunctionAttributeVtbl;

    interface _ComUnregisterFunctionAttribute
    {
        CONST_VTBL struct _ComUnregisterFunctionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComUnregisterFunctionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComUnregisterFunctionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComUnregisterFunctionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComUnregisterFunctionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComUnregisterFunctionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComUnregisterFunctionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComUnregisterFunctionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComUnregisterFunctionAttribute_INTERFACE_DEFINED__ */


#ifndef ___ProgIdAttribute_INTERFACE_DEFINED__
#define ___ProgIdAttribute_INTERFACE_DEFINED__

/* interface _ProgIdAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ProgIdAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2B9F01DF-5A12-3688-98D6-C34BF5ED1865")
    _ProgIdAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ProgIdAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ProgIdAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ProgIdAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ProgIdAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ProgIdAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ProgIdAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ProgIdAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ProgIdAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ProgIdAttributeVtbl;

    interface _ProgIdAttribute
    {
        CONST_VTBL struct _ProgIdAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ProgIdAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ProgIdAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ProgIdAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ProgIdAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ProgIdAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ProgIdAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ProgIdAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ProgIdAttribute_INTERFACE_DEFINED__ */


#ifndef ___ImportedFromTypeLibAttribute_INTERFACE_DEFINED__
#define ___ImportedFromTypeLibAttribute_INTERFACE_DEFINED__

/* interface _ImportedFromTypeLibAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ImportedFromTypeLibAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3F3311CE-6BAF-3FB0-B855-489AFF740B6E")
    _ImportedFromTypeLibAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ImportedFromTypeLibAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ImportedFromTypeLibAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ImportedFromTypeLibAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ImportedFromTypeLibAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ImportedFromTypeLibAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ImportedFromTypeLibAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ImportedFromTypeLibAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ImportedFromTypeLibAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ImportedFromTypeLibAttributeVtbl;

    interface _ImportedFromTypeLibAttribute
    {
        CONST_VTBL struct _ImportedFromTypeLibAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ImportedFromTypeLibAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ImportedFromTypeLibAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ImportedFromTypeLibAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ImportedFromTypeLibAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ImportedFromTypeLibAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ImportedFromTypeLibAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ImportedFromTypeLibAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ImportedFromTypeLibAttribute_INTERFACE_DEFINED__ */


#ifndef ___IDispatchImplAttribute_INTERFACE_DEFINED__
#define ___IDispatchImplAttribute_INTERFACE_DEFINED__

/* interface _IDispatchImplAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IDispatchImplAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5778E7C7-2040-330E-B47A-92974DFFCFD4")
    _IDispatchImplAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IDispatchImplAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IDispatchImplAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IDispatchImplAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IDispatchImplAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IDispatchImplAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IDispatchImplAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IDispatchImplAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IDispatchImplAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IDispatchImplAttributeVtbl;

    interface _IDispatchImplAttribute
    {
        CONST_VTBL struct _IDispatchImplAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IDispatchImplAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IDispatchImplAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IDispatchImplAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IDispatchImplAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IDispatchImplAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IDispatchImplAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IDispatchImplAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IDispatchImplAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComSourceInterfacesAttribute_INTERFACE_DEFINED__
#define ___ComSourceInterfacesAttribute_INTERFACE_DEFINED__

/* interface _ComSourceInterfacesAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComSourceInterfacesAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E1984175-55F5-3065-82D8-A683FDFCF0AC")
    _ComSourceInterfacesAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComSourceInterfacesAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComSourceInterfacesAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComSourceInterfacesAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComSourceInterfacesAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComSourceInterfacesAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComSourceInterfacesAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComSourceInterfacesAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComSourceInterfacesAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComSourceInterfacesAttributeVtbl;

    interface _ComSourceInterfacesAttribute
    {
        CONST_VTBL struct _ComSourceInterfacesAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComSourceInterfacesAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComSourceInterfacesAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComSourceInterfacesAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComSourceInterfacesAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComSourceInterfacesAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComSourceInterfacesAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComSourceInterfacesAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComSourceInterfacesAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComConversionLossAttribute_INTERFACE_DEFINED__
#define ___ComConversionLossAttribute_INTERFACE_DEFINED__

/* interface _ComConversionLossAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComConversionLossAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD5B6AAC-FF8C-3472-B894-CD6DFADB6939")
    _ComConversionLossAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComConversionLossAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComConversionLossAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComConversionLossAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComConversionLossAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComConversionLossAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComConversionLossAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComConversionLossAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComConversionLossAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComConversionLossAttributeVtbl;

    interface _ComConversionLossAttribute
    {
        CONST_VTBL struct _ComConversionLossAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComConversionLossAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComConversionLossAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComConversionLossAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComConversionLossAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComConversionLossAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComConversionLossAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComConversionLossAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComConversionLossAttribute_INTERFACE_DEFINED__ */


#ifndef ___TypeLibTypeAttribute_INTERFACE_DEFINED__
#define ___TypeLibTypeAttribute_INTERFACE_DEFINED__

/* interface _TypeLibTypeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeLibTypeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B5A1729E-B721-3121-A838-FDE43AF13468")
    _TypeLibTypeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeLibTypeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeLibTypeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeLibTypeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeLibTypeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeLibTypeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeLibTypeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeLibTypeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeLibTypeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeLibTypeAttributeVtbl;

    interface _TypeLibTypeAttribute
    {
        CONST_VTBL struct _TypeLibTypeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeLibTypeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeLibTypeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeLibTypeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeLibTypeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeLibTypeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeLibTypeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeLibTypeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeLibTypeAttribute_INTERFACE_DEFINED__ */


#ifndef ___TypeLibFuncAttribute_INTERFACE_DEFINED__
#define ___TypeLibFuncAttribute_INTERFACE_DEFINED__

/* interface _TypeLibFuncAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeLibFuncAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3D18A8E2-EEDE-3139-B29D-8CAC057955DF")
    _TypeLibFuncAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeLibFuncAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeLibFuncAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeLibFuncAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeLibFuncAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeLibFuncAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeLibFuncAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeLibFuncAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeLibFuncAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeLibFuncAttributeVtbl;

    interface _TypeLibFuncAttribute
    {
        CONST_VTBL struct _TypeLibFuncAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeLibFuncAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeLibFuncAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeLibFuncAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeLibFuncAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeLibFuncAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeLibFuncAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeLibFuncAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeLibFuncAttribute_INTERFACE_DEFINED__ */


#ifndef ___TypeLibVarAttribute_INTERFACE_DEFINED__
#define ___TypeLibVarAttribute_INTERFACE_DEFINED__

/* interface _TypeLibVarAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeLibVarAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7B89862A-02A4-3279-8B42-4095FA3A778E")
    _TypeLibVarAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeLibVarAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeLibVarAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeLibVarAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeLibVarAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeLibVarAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeLibVarAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeLibVarAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeLibVarAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeLibVarAttributeVtbl;

    interface _TypeLibVarAttribute
    {
        CONST_VTBL struct _TypeLibVarAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeLibVarAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeLibVarAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeLibVarAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeLibVarAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeLibVarAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeLibVarAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeLibVarAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeLibVarAttribute_INTERFACE_DEFINED__ */


#ifndef ___MarshalAsAttribute_INTERFACE_DEFINED__
#define ___MarshalAsAttribute_INTERFACE_DEFINED__

/* interface _MarshalAsAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MarshalAsAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D858399F-E19E-3423-A720-AC12ABE2E5E8")
    _MarshalAsAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MarshalAsAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MarshalAsAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MarshalAsAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MarshalAsAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MarshalAsAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MarshalAsAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MarshalAsAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MarshalAsAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MarshalAsAttributeVtbl;

    interface _MarshalAsAttribute
    {
        CONST_VTBL struct _MarshalAsAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MarshalAsAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MarshalAsAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MarshalAsAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MarshalAsAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MarshalAsAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MarshalAsAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MarshalAsAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MarshalAsAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComImportAttribute_INTERFACE_DEFINED__
#define ___ComImportAttribute_INTERFACE_DEFINED__

/* interface _ComImportAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComImportAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1B093056-5454-386F-8971-BBCBC4E9A8F3")
    _ComImportAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComImportAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComImportAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComImportAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComImportAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComImportAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComImportAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComImportAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComImportAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComImportAttributeVtbl;

    interface _ComImportAttribute
    {
        CONST_VTBL struct _ComImportAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComImportAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComImportAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComImportAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComImportAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComImportAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComImportAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComImportAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComImportAttribute_INTERFACE_DEFINED__ */


#ifndef ___GuidAttribute_INTERFACE_DEFINED__
#define ___GuidAttribute_INTERFACE_DEFINED__

/* interface _GuidAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GuidAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("74435DAD-EC55-354B-8F5B-FA70D13B6293")
    _GuidAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GuidAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GuidAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GuidAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GuidAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GuidAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GuidAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GuidAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GuidAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GuidAttributeVtbl;

    interface _GuidAttribute
    {
        CONST_VTBL struct _GuidAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GuidAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GuidAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GuidAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GuidAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GuidAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GuidAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GuidAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GuidAttribute_INTERFACE_DEFINED__ */


#ifndef ___PreserveSigAttribute_INTERFACE_DEFINED__
#define ___PreserveSigAttribute_INTERFACE_DEFINED__

/* interface _PreserveSigAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PreserveSigAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FDF2A2EE-C882-3198-A48B-E37F0E574DFA")
    _PreserveSigAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PreserveSigAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PreserveSigAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PreserveSigAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PreserveSigAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PreserveSigAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PreserveSigAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PreserveSigAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PreserveSigAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PreserveSigAttributeVtbl;

    interface _PreserveSigAttribute
    {
        CONST_VTBL struct _PreserveSigAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PreserveSigAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PreserveSigAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PreserveSigAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PreserveSigAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PreserveSigAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PreserveSigAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PreserveSigAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PreserveSigAttribute_INTERFACE_DEFINED__ */


#ifndef ___InAttribute_INTERFACE_DEFINED__
#define ___InAttribute_INTERFACE_DEFINED__

/* interface _InAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8474B65C-C39A-3D05-893D-577B9A314615")
    _InAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InAttributeVtbl;

    interface _InAttribute
    {
        CONST_VTBL struct _InAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InAttribute_INTERFACE_DEFINED__ */


#ifndef ___OutAttribute_INTERFACE_DEFINED__
#define ___OutAttribute_INTERFACE_DEFINED__

/* interface _OutAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OutAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0697FC8C-9B04-3783-95C7-45ECCAC1CA27")
    _OutAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OutAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OutAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OutAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OutAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OutAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OutAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OutAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OutAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OutAttributeVtbl;

    interface _OutAttribute
    {
        CONST_VTBL struct _OutAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OutAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OutAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OutAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OutAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OutAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OutAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OutAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OutAttribute_INTERFACE_DEFINED__ */


#ifndef ___OptionalAttribute_INTERFACE_DEFINED__
#define ___OptionalAttribute_INTERFACE_DEFINED__

/* interface _OptionalAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OptionalAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0D6BD9AD-198E-3904-AD99-F6F82A2787C4")
    _OptionalAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OptionalAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OptionalAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OptionalAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OptionalAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OptionalAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OptionalAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OptionalAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OptionalAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OptionalAttributeVtbl;

    interface _OptionalAttribute
    {
        CONST_VTBL struct _OptionalAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OptionalAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OptionalAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OptionalAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OptionalAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OptionalAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OptionalAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OptionalAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OptionalAttribute_INTERFACE_DEFINED__ */


#ifndef ___DllImportAttribute_INTERFACE_DEFINED__
#define ___DllImportAttribute_INTERFACE_DEFINED__

/* interface _DllImportAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DllImportAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A1A26181-D55E-3EE2-96E6-70B354EF9371")
    _DllImportAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DllImportAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DllImportAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DllImportAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DllImportAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DllImportAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DllImportAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DllImportAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DllImportAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DllImportAttributeVtbl;

    interface _DllImportAttribute
    {
        CONST_VTBL struct _DllImportAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DllImportAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DllImportAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DllImportAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DllImportAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DllImportAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DllImportAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DllImportAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DllImportAttribute_INTERFACE_DEFINED__ */


#ifndef ___StructLayoutAttribute_INTERFACE_DEFINED__
#define ___StructLayoutAttribute_INTERFACE_DEFINED__

/* interface _StructLayoutAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StructLayoutAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23753322-C7B3-3F9A-AC96-52672C1B1CA9")
    _StructLayoutAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StructLayoutAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StructLayoutAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StructLayoutAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StructLayoutAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StructLayoutAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StructLayoutAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StructLayoutAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StructLayoutAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StructLayoutAttributeVtbl;

    interface _StructLayoutAttribute
    {
        CONST_VTBL struct _StructLayoutAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StructLayoutAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StructLayoutAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StructLayoutAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StructLayoutAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StructLayoutAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StructLayoutAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StructLayoutAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StructLayoutAttribute_INTERFACE_DEFINED__ */


#ifndef ___FieldOffsetAttribute_INTERFACE_DEFINED__
#define ___FieldOffsetAttribute_INTERFACE_DEFINED__

/* interface _FieldOffsetAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FieldOffsetAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C14342B8-BAFD-322A-BB71-62C672DA284E")
    _FieldOffsetAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FieldOffsetAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FieldOffsetAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FieldOffsetAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FieldOffsetAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FieldOffsetAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FieldOffsetAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FieldOffsetAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FieldOffsetAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FieldOffsetAttributeVtbl;

    interface _FieldOffsetAttribute
    {
        CONST_VTBL struct _FieldOffsetAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FieldOffsetAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FieldOffsetAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FieldOffsetAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FieldOffsetAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FieldOffsetAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FieldOffsetAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FieldOffsetAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FieldOffsetAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComAliasNameAttribute_INTERFACE_DEFINED__
#define ___ComAliasNameAttribute_INTERFACE_DEFINED__

/* interface _ComAliasNameAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComAliasNameAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E78785C4-3A73-3C15-9390-618BF3A14719")
    _ComAliasNameAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComAliasNameAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComAliasNameAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComAliasNameAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComAliasNameAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComAliasNameAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComAliasNameAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComAliasNameAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComAliasNameAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComAliasNameAttributeVtbl;

    interface _ComAliasNameAttribute
    {
        CONST_VTBL struct _ComAliasNameAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComAliasNameAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComAliasNameAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComAliasNameAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComAliasNameAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComAliasNameAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComAliasNameAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComAliasNameAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComAliasNameAttribute_INTERFACE_DEFINED__ */


#ifndef ___AutomationProxyAttribute_INTERFACE_DEFINED__
#define ___AutomationProxyAttribute_INTERFACE_DEFINED__

/* interface _AutomationProxyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AutomationProxyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("57B908A8-C082-3581-8A47-6B41B86E8FDC")
    _AutomationProxyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AutomationProxyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AutomationProxyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AutomationProxyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AutomationProxyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AutomationProxyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AutomationProxyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AutomationProxyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AutomationProxyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AutomationProxyAttributeVtbl;

    interface _AutomationProxyAttribute
    {
        CONST_VTBL struct _AutomationProxyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AutomationProxyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AutomationProxyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AutomationProxyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AutomationProxyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AutomationProxyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AutomationProxyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AutomationProxyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AutomationProxyAttribute_INTERFACE_DEFINED__ */


#ifndef ___PrimaryInteropAssemblyAttribute_INTERFACE_DEFINED__
#define ___PrimaryInteropAssemblyAttribute_INTERFACE_DEFINED__

/* interface _PrimaryInteropAssemblyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PrimaryInteropAssemblyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C69E96B2-6161-3621-B165-5805198C6B8D")
    _PrimaryInteropAssemblyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PrimaryInteropAssemblyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PrimaryInteropAssemblyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PrimaryInteropAssemblyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PrimaryInteropAssemblyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PrimaryInteropAssemblyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PrimaryInteropAssemblyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PrimaryInteropAssemblyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PrimaryInteropAssemblyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PrimaryInteropAssemblyAttributeVtbl;

    interface _PrimaryInteropAssemblyAttribute
    {
        CONST_VTBL struct _PrimaryInteropAssemblyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PrimaryInteropAssemblyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PrimaryInteropAssemblyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PrimaryInteropAssemblyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PrimaryInteropAssemblyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PrimaryInteropAssemblyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PrimaryInteropAssemblyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PrimaryInteropAssemblyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PrimaryInteropAssemblyAttribute_INTERFACE_DEFINED__ */


#ifndef ___CoClassAttribute_INTERFACE_DEFINED__
#define ___CoClassAttribute_INTERFACE_DEFINED__

/* interface _CoClassAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CoClassAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("15D54C00-7C95-38D7-B859-E19346677DCD")
    _CoClassAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CoClassAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CoClassAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CoClassAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CoClassAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CoClassAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CoClassAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CoClassAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CoClassAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CoClassAttributeVtbl;

    interface _CoClassAttribute
    {
        CONST_VTBL struct _CoClassAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CoClassAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CoClassAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CoClassAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CoClassAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CoClassAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CoClassAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CoClassAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CoClassAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComEventInterfaceAttribute_INTERFACE_DEFINED__
#define ___ComEventInterfaceAttribute_INTERFACE_DEFINED__

/* interface _ComEventInterfaceAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComEventInterfaceAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76CC0491-9A10-35C0-8A66-7931EC345B7F")
    _ComEventInterfaceAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComEventInterfaceAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComEventInterfaceAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComEventInterfaceAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComEventInterfaceAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComEventInterfaceAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComEventInterfaceAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComEventInterfaceAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComEventInterfaceAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComEventInterfaceAttributeVtbl;

    interface _ComEventInterfaceAttribute
    {
        CONST_VTBL struct _ComEventInterfaceAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComEventInterfaceAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComEventInterfaceAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComEventInterfaceAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComEventInterfaceAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComEventInterfaceAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComEventInterfaceAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComEventInterfaceAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComEventInterfaceAttribute_INTERFACE_DEFINED__ */


#ifndef ___TypeLibVersionAttribute_INTERFACE_DEFINED__
#define ___TypeLibVersionAttribute_INTERFACE_DEFINED__

/* interface _TypeLibVersionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeLibVersionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A03B61A4-CA61-3460-8232-2F4EC96AA88F")
    _TypeLibVersionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeLibVersionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeLibVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeLibVersionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeLibVersionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeLibVersionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeLibVersionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeLibVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeLibVersionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeLibVersionAttributeVtbl;

    interface _TypeLibVersionAttribute
    {
        CONST_VTBL struct _TypeLibVersionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeLibVersionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeLibVersionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeLibVersionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeLibVersionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeLibVersionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeLibVersionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeLibVersionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeLibVersionAttribute_INTERFACE_DEFINED__ */


#ifndef ___ComCompatibleVersionAttribute_INTERFACE_DEFINED__
#define ___ComCompatibleVersionAttribute_INTERFACE_DEFINED__

/* interface _ComCompatibleVersionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ComCompatibleVersionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AD419379-2AC8-3588-AB1E-0115413277C4")
    _ComCompatibleVersionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ComCompatibleVersionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ComCompatibleVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ComCompatibleVersionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ComCompatibleVersionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ComCompatibleVersionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ComCompatibleVersionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ComCompatibleVersionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ComCompatibleVersionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ComCompatibleVersionAttributeVtbl;

    interface _ComCompatibleVersionAttribute
    {
        CONST_VTBL struct _ComCompatibleVersionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ComCompatibleVersionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ComCompatibleVersionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ComCompatibleVersionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ComCompatibleVersionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ComCompatibleVersionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ComCompatibleVersionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ComCompatibleVersionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ComCompatibleVersionAttribute_INTERFACE_DEFINED__ */


#ifndef ___BestFitMappingAttribute_INTERFACE_DEFINED__
#define ___BestFitMappingAttribute_INTERFACE_DEFINED__

/* interface _BestFitMappingAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BestFitMappingAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ED47ABE7-C84B-39F9-BE1B-828CFB925AFE")
    _BestFitMappingAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BestFitMappingAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BestFitMappingAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BestFitMappingAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BestFitMappingAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BestFitMappingAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BestFitMappingAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BestFitMappingAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BestFitMappingAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BestFitMappingAttributeVtbl;

    interface _BestFitMappingAttribute
    {
        CONST_VTBL struct _BestFitMappingAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BestFitMappingAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BestFitMappingAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BestFitMappingAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BestFitMappingAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BestFitMappingAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BestFitMappingAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BestFitMappingAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BestFitMappingAttribute_INTERFACE_DEFINED__ */


#ifndef ___DefaultCharSetAttribute_INTERFACE_DEFINED__
#define ___DefaultCharSetAttribute_INTERFACE_DEFINED__

/* interface _DefaultCharSetAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DefaultCharSetAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B26B3465-28E4-33B5-B9BF-DD7C4F6461F5")
    _DefaultCharSetAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DefaultCharSetAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DefaultCharSetAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DefaultCharSetAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DefaultCharSetAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DefaultCharSetAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DefaultCharSetAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DefaultCharSetAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DefaultCharSetAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DefaultCharSetAttributeVtbl;

    interface _DefaultCharSetAttribute
    {
        CONST_VTBL struct _DefaultCharSetAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DefaultCharSetAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DefaultCharSetAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DefaultCharSetAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DefaultCharSetAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DefaultCharSetAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DefaultCharSetAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DefaultCharSetAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DefaultCharSetAttribute_INTERFACE_DEFINED__ */


#ifndef ___SetWin32ContextInIDispatchAttribute_INTERFACE_DEFINED__
#define ___SetWin32ContextInIDispatchAttribute_INTERFACE_DEFINED__

/* interface _SetWin32ContextInIDispatchAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SetWin32ContextInIDispatchAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A54AC093-BFCE-37B0-A81F-148DFED0971F")
    _SetWin32ContextInIDispatchAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SetWin32ContextInIDispatchAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SetWin32ContextInIDispatchAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SetWin32ContextInIDispatchAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SetWin32ContextInIDispatchAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SetWin32ContextInIDispatchAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SetWin32ContextInIDispatchAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SetWin32ContextInIDispatchAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SetWin32ContextInIDispatchAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SetWin32ContextInIDispatchAttributeVtbl;

    interface _SetWin32ContextInIDispatchAttribute
    {
        CONST_VTBL struct _SetWin32ContextInIDispatchAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SetWin32ContextInIDispatchAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SetWin32ContextInIDispatchAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SetWin32ContextInIDispatchAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SetWin32ContextInIDispatchAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SetWin32ContextInIDispatchAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SetWin32ContextInIDispatchAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SetWin32ContextInIDispatchAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SetWin32ContextInIDispatchAttribute_INTERFACE_DEFINED__ */


#ifndef ___ExternalException_INTERFACE_DEFINED__
#define ___ExternalException_INTERFACE_DEFINED__

/* interface _ExternalException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ExternalException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A83F04E9-FD28-384A-9DFF-410688AC23AB")
    _ExternalException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ExternalExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ExternalException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ExternalException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ExternalException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ExternalException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ExternalException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ExternalException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ExternalException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ExternalExceptionVtbl;

    interface _ExternalException
    {
        CONST_VTBL struct _ExternalExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ExternalException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ExternalException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ExternalException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ExternalException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ExternalException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ExternalException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ExternalException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ExternalException_INTERFACE_DEFINED__ */


#ifndef ___COMException_INTERFACE_DEFINED__
#define ___COMException_INTERFACE_DEFINED__

/* interface _COMException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__COMException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A28C19DF-B488-34AE-BECC-7DE744D17F7B")
    _COMException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _COMExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _COMException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _COMException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _COMException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _COMException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _COMException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _COMException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _COMException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _COMExceptionVtbl;

    interface _COMException
    {
        CONST_VTBL struct _COMExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _COMException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _COMException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _COMException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _COMException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _COMException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _COMException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _COMException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___COMException_INTERFACE_DEFINED__ */


#ifndef ___InvalidOleVariantTypeException_INTERFACE_DEFINED__
#define ___InvalidOleVariantTypeException_INTERFACE_DEFINED__

/* interface _InvalidOleVariantTypeException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InvalidOleVariantTypeException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("76E5DBD6-F960-3C65-8EA6-FC8AD6A67022")
    _InvalidOleVariantTypeException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InvalidOleVariantTypeExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InvalidOleVariantTypeException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InvalidOleVariantTypeException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InvalidOleVariantTypeException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InvalidOleVariantTypeException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InvalidOleVariantTypeException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InvalidOleVariantTypeException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InvalidOleVariantTypeException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InvalidOleVariantTypeExceptionVtbl;

    interface _InvalidOleVariantTypeException
    {
        CONST_VTBL struct _InvalidOleVariantTypeExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InvalidOleVariantTypeException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InvalidOleVariantTypeException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InvalidOleVariantTypeException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InvalidOleVariantTypeException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InvalidOleVariantTypeException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InvalidOleVariantTypeException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InvalidOleVariantTypeException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InvalidOleVariantTypeException_INTERFACE_DEFINED__ */


#ifndef ___MarshalDirectiveException_INTERFACE_DEFINED__
#define ___MarshalDirectiveException_INTERFACE_DEFINED__

/* interface _MarshalDirectiveException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MarshalDirectiveException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("523F42A5-1FD2-355D-82BF-0D67C4A0A0E7")
    _MarshalDirectiveException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MarshalDirectiveExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MarshalDirectiveException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MarshalDirectiveException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MarshalDirectiveException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MarshalDirectiveException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MarshalDirectiveException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MarshalDirectiveException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MarshalDirectiveException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MarshalDirectiveExceptionVtbl;

    interface _MarshalDirectiveException
    {
        CONST_VTBL struct _MarshalDirectiveExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MarshalDirectiveException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MarshalDirectiveException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MarshalDirectiveException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MarshalDirectiveException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MarshalDirectiveException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MarshalDirectiveException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MarshalDirectiveException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MarshalDirectiveException_INTERFACE_DEFINED__ */


#ifndef ___RuntimeEnvironment_INTERFACE_DEFINED__
#define ___RuntimeEnvironment_INTERFACE_DEFINED__

/* interface _RuntimeEnvironment */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RuntimeEnvironment;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EDCEE21A-3E3A-331E-A86D-274028BE6716")
    _RuntimeEnvironment : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RuntimeEnvironmentVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RuntimeEnvironment * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RuntimeEnvironment * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RuntimeEnvironment * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RuntimeEnvironment * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RuntimeEnvironment * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RuntimeEnvironment * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RuntimeEnvironment * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RuntimeEnvironmentVtbl;

    interface _RuntimeEnvironment
    {
        CONST_VTBL struct _RuntimeEnvironmentVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RuntimeEnvironment_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RuntimeEnvironment_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RuntimeEnvironment_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RuntimeEnvironment_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RuntimeEnvironment_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RuntimeEnvironment_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RuntimeEnvironment_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RuntimeEnvironment_INTERFACE_DEFINED__ */


#ifndef ___SEHException_INTERFACE_DEFINED__
#define ___SEHException_INTERFACE_DEFINED__

/* interface _SEHException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SEHException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3E72E067-4C5E-36C8-BBEF-1E2978C7780D")
    _SEHException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SEHExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SEHException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SEHException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SEHException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SEHException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SEHException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SEHException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SEHException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SEHExceptionVtbl;

    interface _SEHException
    {
        CONST_VTBL struct _SEHExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SEHException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SEHException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SEHException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SEHException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SEHException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SEHException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SEHException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SEHException_INTERFACE_DEFINED__ */


#ifndef ___BStrWrapper_INTERFACE_DEFINED__
#define ___BStrWrapper_INTERFACE_DEFINED__

/* interface _BStrWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BStrWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("80DA5818-609F-32B8-A9F8-95FCFBDB9C8E")
    _BStrWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BStrWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BStrWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BStrWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BStrWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BStrWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BStrWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BStrWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BStrWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BStrWrapperVtbl;

    interface _BStrWrapper
    {
        CONST_VTBL struct _BStrWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BStrWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BStrWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BStrWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BStrWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BStrWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BStrWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BStrWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BStrWrapper_INTERFACE_DEFINED__ */


#ifndef ___CurrencyWrapper_INTERFACE_DEFINED__
#define ___CurrencyWrapper_INTERFACE_DEFINED__

/* interface _CurrencyWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CurrencyWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DF6F279-DA62-3C9F-8944-4DD3C0F08170")
    _CurrencyWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CurrencyWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CurrencyWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CurrencyWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CurrencyWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CurrencyWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CurrencyWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CurrencyWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CurrencyWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CurrencyWrapperVtbl;

    interface _CurrencyWrapper
    {
        CONST_VTBL struct _CurrencyWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CurrencyWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CurrencyWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CurrencyWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CurrencyWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CurrencyWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CurrencyWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CurrencyWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CurrencyWrapper_INTERFACE_DEFINED__ */


#ifndef ___DispatchWrapper_INTERFACE_DEFINED__
#define ___DispatchWrapper_INTERFACE_DEFINED__

/* interface _DispatchWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DispatchWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("72103C67-D511-329C-B19A-DD5EC3F1206C")
    _DispatchWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DispatchWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DispatchWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DispatchWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DispatchWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DispatchWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DispatchWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DispatchWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DispatchWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DispatchWrapperVtbl;

    interface _DispatchWrapper
    {
        CONST_VTBL struct _DispatchWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DispatchWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DispatchWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DispatchWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DispatchWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DispatchWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DispatchWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DispatchWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DispatchWrapper_INTERFACE_DEFINED__ */


#ifndef ___ErrorWrapper_INTERFACE_DEFINED__
#define ___ErrorWrapper_INTERFACE_DEFINED__

/* interface _ErrorWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ErrorWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F79DB336-06BE-3959-A5AB-58B2AB6C5FD1")
    _ErrorWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ErrorWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ErrorWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ErrorWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ErrorWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ErrorWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ErrorWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ErrorWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ErrorWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ErrorWrapperVtbl;

    interface _ErrorWrapper
    {
        CONST_VTBL struct _ErrorWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ErrorWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ErrorWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ErrorWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ErrorWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ErrorWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ErrorWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ErrorWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ErrorWrapper_INTERFACE_DEFINED__ */


#ifndef ___ExtensibleClassFactory_INTERFACE_DEFINED__
#define ___ExtensibleClassFactory_INTERFACE_DEFINED__

/* interface _ExtensibleClassFactory */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ExtensibleClassFactory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("519EB857-7A2D-3A95-A2A3-8BB8ED63D41B")
    _ExtensibleClassFactory : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ExtensibleClassFactoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ExtensibleClassFactory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ExtensibleClassFactory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ExtensibleClassFactory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ExtensibleClassFactory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ExtensibleClassFactory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ExtensibleClassFactory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ExtensibleClassFactory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ExtensibleClassFactoryVtbl;

    interface _ExtensibleClassFactory
    {
        CONST_VTBL struct _ExtensibleClassFactoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ExtensibleClassFactory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ExtensibleClassFactory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ExtensibleClassFactory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ExtensibleClassFactory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ExtensibleClassFactory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ExtensibleClassFactory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ExtensibleClassFactory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ExtensibleClassFactory_INTERFACE_DEFINED__ */


#ifndef ___InvalidComObjectException_INTERFACE_DEFINED__
#define ___InvalidComObjectException_INTERFACE_DEFINED__

/* interface _InvalidComObjectException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InvalidComObjectException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE9156B5-5E7A-3041-BF45-A29A6C2CF48A")
    _InvalidComObjectException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InvalidComObjectExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InvalidComObjectException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InvalidComObjectException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InvalidComObjectException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InvalidComObjectException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InvalidComObjectException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InvalidComObjectException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InvalidComObjectException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InvalidComObjectExceptionVtbl;

    interface _InvalidComObjectException
    {
        CONST_VTBL struct _InvalidComObjectExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InvalidComObjectException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InvalidComObjectException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InvalidComObjectException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InvalidComObjectException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InvalidComObjectException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InvalidComObjectException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InvalidComObjectException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InvalidComObjectException_INTERFACE_DEFINED__ */


#ifndef ___ObjectCreationDelegate_INTERFACE_DEFINED__
#define ___ObjectCreationDelegate_INTERFACE_DEFINED__

/* interface _ObjectCreationDelegate */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObjectCreationDelegate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E4A369D3-6CF0-3B05-9C0C-1A91E331641A")
    _ObjectCreationDelegate : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjectCreationDelegateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObjectCreationDelegate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObjectCreationDelegate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObjectCreationDelegate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObjectCreationDelegate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObjectCreationDelegate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObjectCreationDelegate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObjectCreationDelegate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObjectCreationDelegateVtbl;

    interface _ObjectCreationDelegate
    {
        CONST_VTBL struct _ObjectCreationDelegateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObjectCreationDelegate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObjectCreationDelegate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObjectCreationDelegate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObjectCreationDelegate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObjectCreationDelegate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObjectCreationDelegate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObjectCreationDelegate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObjectCreationDelegate_INTERFACE_DEFINED__ */


#ifndef ___SafeArrayRankMismatchException_INTERFACE_DEFINED__
#define ___SafeArrayRankMismatchException_INTERFACE_DEFINED__

/* interface _SafeArrayRankMismatchException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SafeArrayRankMismatchException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8608FE7B-2FDC-318A-B711-6F7B2FEDED06")
    _SafeArrayRankMismatchException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SafeArrayRankMismatchExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SafeArrayRankMismatchException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SafeArrayRankMismatchException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SafeArrayRankMismatchException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SafeArrayRankMismatchException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SafeArrayRankMismatchException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SafeArrayRankMismatchException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SafeArrayRankMismatchException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SafeArrayRankMismatchExceptionVtbl;

    interface _SafeArrayRankMismatchException
    {
        CONST_VTBL struct _SafeArrayRankMismatchExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SafeArrayRankMismatchException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SafeArrayRankMismatchException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SafeArrayRankMismatchException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SafeArrayRankMismatchException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SafeArrayRankMismatchException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SafeArrayRankMismatchException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SafeArrayRankMismatchException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SafeArrayRankMismatchException_INTERFACE_DEFINED__ */


#ifndef ___SafeArrayTypeMismatchException_INTERFACE_DEFINED__
#define ___SafeArrayTypeMismatchException_INTERFACE_DEFINED__

/* interface _SafeArrayTypeMismatchException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SafeArrayTypeMismatchException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E093FB32-E43B-3B3F-A163-742C920C2AF3")
    _SafeArrayTypeMismatchException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SafeArrayTypeMismatchExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SafeArrayTypeMismatchException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SafeArrayTypeMismatchException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SafeArrayTypeMismatchException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SafeArrayTypeMismatchException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SafeArrayTypeMismatchException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SafeArrayTypeMismatchException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SafeArrayTypeMismatchException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SafeArrayTypeMismatchExceptionVtbl;

    interface _SafeArrayTypeMismatchException
    {
        CONST_VTBL struct _SafeArrayTypeMismatchExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SafeArrayTypeMismatchException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SafeArrayTypeMismatchException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SafeArrayTypeMismatchException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SafeArrayTypeMismatchException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SafeArrayTypeMismatchException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SafeArrayTypeMismatchException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SafeArrayTypeMismatchException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SafeArrayTypeMismatchException_INTERFACE_DEFINED__ */


#ifndef ___UnknownWrapper_INTERFACE_DEFINED__
#define ___UnknownWrapper_INTERFACE_DEFINED__

/* interface _UnknownWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnknownWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1C8D8B14-4589-3DCA-8E0F-A30E80FBD1A8")
    _UnknownWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnknownWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnknownWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnknownWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnknownWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnknownWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnknownWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnknownWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnknownWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnknownWrapperVtbl;

    interface _UnknownWrapper
    {
        CONST_VTBL struct _UnknownWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnknownWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnknownWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnknownWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnknownWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnknownWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnknownWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnknownWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnknownWrapper_INTERFACE_DEFINED__ */


#ifndef ___Stream_INTERFACE_DEFINED__
#define ___Stream_INTERFACE_DEFINED__

/* interface _Stream */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Stream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2752364A-924F-3603-8F6F-6586DF98B292")
    _Stream : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Stream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Stream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Stream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Stream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Stream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Stream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Stream * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StreamVtbl;

    interface _Stream
    {
        CONST_VTBL struct _StreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Stream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Stream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Stream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Stream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Stream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Stream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Stream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Stream_INTERFACE_DEFINED__ */


#ifndef ___BinaryReader_INTERFACE_DEFINED__
#define ___BinaryReader_INTERFACE_DEFINED__

/* interface _BinaryReader */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BinaryReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("442E3C03-A205-3F21-AA4D-31768BB8EA28")
    _BinaryReader : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BinaryReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BinaryReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BinaryReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BinaryReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BinaryReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BinaryReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BinaryReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BinaryReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BinaryReaderVtbl;

    interface _BinaryReader
    {
        CONST_VTBL struct _BinaryReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BinaryReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BinaryReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BinaryReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BinaryReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BinaryReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BinaryReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BinaryReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BinaryReader_INTERFACE_DEFINED__ */


#ifndef ___BinaryWriter_INTERFACE_DEFINED__
#define ___BinaryWriter_INTERFACE_DEFINED__

/* interface _BinaryWriter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BinaryWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4CA8147E-BAA3-3A7F-92CE-A4FD7F17D8DA")
    _BinaryWriter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BinaryWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BinaryWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BinaryWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BinaryWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BinaryWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BinaryWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BinaryWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BinaryWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BinaryWriterVtbl;

    interface _BinaryWriter
    {
        CONST_VTBL struct _BinaryWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BinaryWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BinaryWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BinaryWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BinaryWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BinaryWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BinaryWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BinaryWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BinaryWriter_INTERFACE_DEFINED__ */


#ifndef ___BufferedStream_INTERFACE_DEFINED__
#define ___BufferedStream_INTERFACE_DEFINED__

/* interface _BufferedStream */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BufferedStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B7571C3-1275-3457-8FEE-9976FD3937E3")
    _BufferedStream : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BufferedStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BufferedStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BufferedStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BufferedStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BufferedStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BufferedStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BufferedStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BufferedStream * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BufferedStreamVtbl;

    interface _BufferedStream
    {
        CONST_VTBL struct _BufferedStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BufferedStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BufferedStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BufferedStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BufferedStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BufferedStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BufferedStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BufferedStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BufferedStream_INTERFACE_DEFINED__ */


#ifndef ___Directory_INTERFACE_DEFINED__
#define ___Directory_INTERFACE_DEFINED__

/* interface _Directory */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Directory;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8CE58FF5-F26D-38A4-9195-0E2ECB3B56B9")
    _Directory : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DirectoryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Directory * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Directory * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Directory * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Directory * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Directory * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Directory * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Directory * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DirectoryVtbl;

    interface _Directory
    {
        CONST_VTBL struct _DirectoryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Directory_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Directory_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Directory_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Directory_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Directory_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Directory_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Directory_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Directory_INTERFACE_DEFINED__ */


#ifndef ___FileSystemInfo_INTERFACE_DEFINED__
#define ___FileSystemInfo_INTERFACE_DEFINED__

/* interface _FileSystemInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileSystemInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A5D29A57-36A8-3E36-A099-7458B1FABAA2")
    _FileSystemInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileSystemInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileSystemInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileSystemInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileSystemInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileSystemInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileSystemInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileSystemInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileSystemInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileSystemInfoVtbl;

    interface _FileSystemInfo
    {
        CONST_VTBL struct _FileSystemInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileSystemInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileSystemInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileSystemInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileSystemInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileSystemInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileSystemInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileSystemInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileSystemInfo_INTERFACE_DEFINED__ */


#ifndef ___DirectoryInfo_INTERFACE_DEFINED__
#define ___DirectoryInfo_INTERFACE_DEFINED__

/* interface _DirectoryInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DirectoryInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("487E52F1-2BB9-3BD0-A0CA-6728B3A1D051")
    _DirectoryInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DirectoryInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DirectoryInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DirectoryInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DirectoryInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DirectoryInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DirectoryInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DirectoryInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DirectoryInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DirectoryInfoVtbl;

    interface _DirectoryInfo
    {
        CONST_VTBL struct _DirectoryInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DirectoryInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DirectoryInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DirectoryInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DirectoryInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DirectoryInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DirectoryInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DirectoryInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DirectoryInfo_INTERFACE_DEFINED__ */


#ifndef ___IOException_INTERFACE_DEFINED__
#define ___IOException_INTERFACE_DEFINED__

/* interface _IOException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IOException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5BFC9BF-27A7-3A59-A986-44C85F3521BF")
    _IOException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IOExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IOException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IOException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IOException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IOException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IOException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IOException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IOException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IOExceptionVtbl;

    interface _IOException
    {
        CONST_VTBL struct _IOExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IOException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IOException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IOException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IOException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IOException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IOException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IOException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IOException_INTERFACE_DEFINED__ */


#ifndef ___DirectoryNotFoundException_INTERFACE_DEFINED__
#define ___DirectoryNotFoundException_INTERFACE_DEFINED__

/* interface _DirectoryNotFoundException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DirectoryNotFoundException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C8A200E4-9735-30E4-B168-ED861A3020F2")
    _DirectoryNotFoundException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DirectoryNotFoundExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DirectoryNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DirectoryNotFoundException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DirectoryNotFoundException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DirectoryNotFoundException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DirectoryNotFoundException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DirectoryNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DirectoryNotFoundException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DirectoryNotFoundExceptionVtbl;

    interface _DirectoryNotFoundException
    {
        CONST_VTBL struct _DirectoryNotFoundExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DirectoryNotFoundException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DirectoryNotFoundException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DirectoryNotFoundException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DirectoryNotFoundException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DirectoryNotFoundException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DirectoryNotFoundException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DirectoryNotFoundException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DirectoryNotFoundException_INTERFACE_DEFINED__ */


#ifndef ___DriveInfo_INTERFACE_DEFINED__
#define ___DriveInfo_INTERFACE_DEFINED__

/* interface _DriveInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DriveInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CE83A763-940F-341F-B880-332325EB6F4B")
    _DriveInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DriveInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DriveInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DriveInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DriveInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DriveInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DriveInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DriveInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DriveInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DriveInfoVtbl;

    interface _DriveInfo
    {
        CONST_VTBL struct _DriveInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DriveInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DriveInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DriveInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DriveInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DriveInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DriveInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DriveInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DriveInfo_INTERFACE_DEFINED__ */


#ifndef ___DriveNotFoundException_INTERFACE_DEFINED__
#define ___DriveNotFoundException_INTERFACE_DEFINED__

/* interface _DriveNotFoundException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DriveNotFoundException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B24E9559-A662-3762-AE33-BC7DFDD538F4")
    _DriveNotFoundException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DriveNotFoundExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DriveNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DriveNotFoundException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DriveNotFoundException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DriveNotFoundException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DriveNotFoundException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DriveNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DriveNotFoundException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DriveNotFoundExceptionVtbl;

    interface _DriveNotFoundException
    {
        CONST_VTBL struct _DriveNotFoundExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DriveNotFoundException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DriveNotFoundException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DriveNotFoundException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DriveNotFoundException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DriveNotFoundException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DriveNotFoundException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DriveNotFoundException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DriveNotFoundException_INTERFACE_DEFINED__ */


#ifndef ___EndOfStreamException_INTERFACE_DEFINED__
#define ___EndOfStreamException_INTERFACE_DEFINED__

/* interface _EndOfStreamException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EndOfStreamException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D625AFD0-8FD9-3113-A900-43912A54C421")
    _EndOfStreamException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EndOfStreamExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EndOfStreamException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EndOfStreamException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EndOfStreamException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EndOfStreamException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EndOfStreamException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EndOfStreamException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EndOfStreamException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EndOfStreamExceptionVtbl;

    interface _EndOfStreamException
    {
        CONST_VTBL struct _EndOfStreamExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EndOfStreamException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EndOfStreamException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EndOfStreamException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EndOfStreamException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EndOfStreamException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EndOfStreamException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EndOfStreamException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EndOfStreamException_INTERFACE_DEFINED__ */


#ifndef ___File_INTERFACE_DEFINED__
#define ___File_INTERFACE_DEFINED__

/* interface _File */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__File;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5D59051F-E19D-329A-9962-FD00D552E13D")
    _File : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _File * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _File * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _File * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _File * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _File * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _File * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _File * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileVtbl;

    interface _File
    {
        CONST_VTBL struct _FileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _File_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _File_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _File_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _File_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _File_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _File_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _File_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___File_INTERFACE_DEFINED__ */


#ifndef ___FileInfo_INTERFACE_DEFINED__
#define ___FileInfo_INTERFACE_DEFINED__

/* interface _FileInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C3C429F9-8590-3A01-B2B2-434837F3D16D")
    _FileInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileInfoVtbl;

    interface _FileInfo
    {
        CONST_VTBL struct _FileInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileInfo_INTERFACE_DEFINED__ */


#ifndef ___FileLoadException_INTERFACE_DEFINED__
#define ___FileLoadException_INTERFACE_DEFINED__

/* interface _FileLoadException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileLoadException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("51D2C393-9B70-3551-84B5-FF5409FB3ADA")
    _FileLoadException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileLoadExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileLoadException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileLoadException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileLoadException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileLoadException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileLoadException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileLoadException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileLoadException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileLoadExceptionVtbl;

    interface _FileLoadException
    {
        CONST_VTBL struct _FileLoadExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileLoadException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileLoadException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileLoadException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileLoadException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileLoadException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileLoadException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileLoadException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileLoadException_INTERFACE_DEFINED__ */


#ifndef ___FileNotFoundException_INTERFACE_DEFINED__
#define ___FileNotFoundException_INTERFACE_DEFINED__

/* interface _FileNotFoundException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileNotFoundException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A15A976B-81E3-3EF4-8FF1-D75DDBE20AEF")
    _FileNotFoundException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileNotFoundExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileNotFoundException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileNotFoundException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileNotFoundException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileNotFoundException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileNotFoundException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileNotFoundException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileNotFoundExceptionVtbl;

    interface _FileNotFoundException
    {
        CONST_VTBL struct _FileNotFoundExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileNotFoundException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileNotFoundException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileNotFoundException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileNotFoundException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileNotFoundException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileNotFoundException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileNotFoundException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileNotFoundException_INTERFACE_DEFINED__ */


#ifndef ___FileStream_INTERFACE_DEFINED__
#define ___FileStream_INTERFACE_DEFINED__

/* interface _FileStream */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("74265195-4A46-3D6F-A9DD-69C367EA39C8")
    _FileStream : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileStream * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileStreamVtbl;

    interface _FileStream
    {
        CONST_VTBL struct _FileStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileStream_INTERFACE_DEFINED__ */


#ifndef ___MemoryStream_INTERFACE_DEFINED__
#define ___MemoryStream_INTERFACE_DEFINED__

/* interface _MemoryStream */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MemoryStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2DBC46FE-B3DD-3858-AFC2-D3A2D492A588")
    _MemoryStream : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MemoryStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MemoryStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MemoryStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MemoryStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MemoryStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MemoryStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MemoryStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MemoryStream * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MemoryStreamVtbl;

    interface _MemoryStream
    {
        CONST_VTBL struct _MemoryStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MemoryStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MemoryStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MemoryStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MemoryStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MemoryStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MemoryStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MemoryStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MemoryStream_INTERFACE_DEFINED__ */


#ifndef ___Path_INTERFACE_DEFINED__
#define ___Path_INTERFACE_DEFINED__

/* interface _Path */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Path;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6DF93530-D276-31D9-8573-346778C650AF")
    _Path : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PathVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Path * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Path * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Path * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Path * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Path * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Path * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Path * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PathVtbl;

    interface _Path
    {
        CONST_VTBL struct _PathVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Path_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Path_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Path_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Path_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Path_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Path_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Path_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Path_INTERFACE_DEFINED__ */


#ifndef ___PathTooLongException_INTERFACE_DEFINED__
#define ___PathTooLongException_INTERFACE_DEFINED__

/* interface _PathTooLongException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PathTooLongException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("468B8EB4-89AC-381B-8F86-5E47EC0648B4")
    _PathTooLongException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PathTooLongExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PathTooLongException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PathTooLongException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PathTooLongException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PathTooLongException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PathTooLongException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PathTooLongException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PathTooLongException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PathTooLongExceptionVtbl;

    interface _PathTooLongException
    {
        CONST_VTBL struct _PathTooLongExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PathTooLongException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PathTooLongException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PathTooLongException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PathTooLongException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PathTooLongException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PathTooLongException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PathTooLongException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PathTooLongException_INTERFACE_DEFINED__ */


#ifndef ___TextReader_INTERFACE_DEFINED__
#define ___TextReader_INTERFACE_DEFINED__

/* interface _TextReader */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TextReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("897471F2-9450-3F03-A41F-D2E1F1397854")
    _TextReader : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TextReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TextReaderVtbl;

    interface _TextReader
    {
        CONST_VTBL struct _TextReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextReader_INTERFACE_DEFINED__ */


#ifndef ___StreamReader_INTERFACE_DEFINED__
#define ___StreamReader_INTERFACE_DEFINED__

/* interface _StreamReader */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StreamReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E645B470-DC3F-3CE0-8104-5837FEDA04B3")
    _StreamReader : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StreamReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StreamReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StreamReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StreamReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StreamReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StreamReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StreamReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StreamReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StreamReaderVtbl;

    interface _StreamReader
    {
        CONST_VTBL struct _StreamReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StreamReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StreamReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StreamReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StreamReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StreamReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StreamReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StreamReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StreamReader_INTERFACE_DEFINED__ */


#ifndef ___TextWriter_INTERFACE_DEFINED__
#define ___TextWriter_INTERFACE_DEFINED__

/* interface _TextWriter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TextWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("556137EA-8825-30BC-9D49-E47A9DB034EE")
    _TextWriter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TextWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TextWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TextWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TextWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TextWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TextWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TextWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TextWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TextWriterVtbl;

    interface _TextWriter
    {
        CONST_VTBL struct _TextWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TextWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TextWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TextWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TextWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TextWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TextWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TextWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TextWriter_INTERFACE_DEFINED__ */


#ifndef ___StreamWriter_INTERFACE_DEFINED__
#define ___StreamWriter_INTERFACE_DEFINED__

/* interface _StreamWriter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StreamWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F124E1C-D05D-3643-A59F-C3DE6051994F")
    _StreamWriter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StreamWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StreamWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StreamWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StreamWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StreamWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StreamWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StreamWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StreamWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StreamWriterVtbl;

    interface _StreamWriter
    {
        CONST_VTBL struct _StreamWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StreamWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StreamWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StreamWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StreamWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StreamWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StreamWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StreamWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StreamWriter_INTERFACE_DEFINED__ */


#ifndef ___StringReader_INTERFACE_DEFINED__
#define ___StringReader_INTERFACE_DEFINED__

/* interface _StringReader */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StringReader;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("59733B03-0EA5-358C-95B5-659FCD9AA0B4")
    _StringReader : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StringReaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StringReader * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StringReader * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StringReader * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StringReader * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StringReader * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StringReader * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StringReader * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StringReaderVtbl;

    interface _StringReader
    {
        CONST_VTBL struct _StringReaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StringReader_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StringReader_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StringReader_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StringReader_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StringReader_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StringReader_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StringReader_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StringReader_INTERFACE_DEFINED__ */


#ifndef ___StringWriter_INTERFACE_DEFINED__
#define ___StringWriter_INTERFACE_DEFINED__

/* interface _StringWriter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StringWriter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CB9F94C0-D691-3B62-B0B2-3CE5309CFA62")
    _StringWriter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StringWriterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StringWriter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StringWriter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StringWriter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StringWriter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StringWriter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StringWriter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StringWriter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StringWriterVtbl;

    interface _StringWriter
    {
        CONST_VTBL struct _StringWriterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StringWriter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StringWriter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StringWriter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StringWriter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StringWriter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StringWriter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StringWriter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StringWriter_INTERFACE_DEFINED__ */


#ifndef ___AccessedThroughPropertyAttribute_INTERFACE_DEFINED__
#define ___AccessedThroughPropertyAttribute_INTERFACE_DEFINED__

/* interface _AccessedThroughPropertyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AccessedThroughPropertyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("998DCF16-F603-355D-8C89-3B675947997F")
    _AccessedThroughPropertyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AccessedThroughPropertyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AccessedThroughPropertyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AccessedThroughPropertyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AccessedThroughPropertyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AccessedThroughPropertyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AccessedThroughPropertyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AccessedThroughPropertyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AccessedThroughPropertyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AccessedThroughPropertyAttributeVtbl;

    interface _AccessedThroughPropertyAttribute
    {
        CONST_VTBL struct _AccessedThroughPropertyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AccessedThroughPropertyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AccessedThroughPropertyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AccessedThroughPropertyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AccessedThroughPropertyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AccessedThroughPropertyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AccessedThroughPropertyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AccessedThroughPropertyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AccessedThroughPropertyAttribute_INTERFACE_DEFINED__ */


#ifndef ___CallConvCdecl_INTERFACE_DEFINED__
#define ___CallConvCdecl_INTERFACE_DEFINED__

/* interface _CallConvCdecl */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CallConvCdecl;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A6C2239B-08E6-3822-9769-E3D4B0431B82")
    _CallConvCdecl : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CallConvCdeclVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CallConvCdecl * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CallConvCdecl * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CallConvCdecl * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CallConvCdecl * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CallConvCdecl * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CallConvCdecl * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CallConvCdecl * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CallConvCdeclVtbl;

    interface _CallConvCdecl
    {
        CONST_VTBL struct _CallConvCdeclVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CallConvCdecl_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CallConvCdecl_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CallConvCdecl_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CallConvCdecl_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CallConvCdecl_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CallConvCdecl_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CallConvCdecl_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CallConvCdecl_INTERFACE_DEFINED__ */


#ifndef ___CallConvStdcall_INTERFACE_DEFINED__
#define ___CallConvStdcall_INTERFACE_DEFINED__

/* interface _CallConvStdcall */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CallConvStdcall;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8E17A5CD-1160-32DC-8548-407E7C3827C9")
    _CallConvStdcall : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CallConvStdcallVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CallConvStdcall * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CallConvStdcall * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CallConvStdcall * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CallConvStdcall * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CallConvStdcall * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CallConvStdcall * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CallConvStdcall * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CallConvStdcallVtbl;

    interface _CallConvStdcall
    {
        CONST_VTBL struct _CallConvStdcallVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CallConvStdcall_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CallConvStdcall_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CallConvStdcall_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CallConvStdcall_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CallConvStdcall_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CallConvStdcall_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CallConvStdcall_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CallConvStdcall_INTERFACE_DEFINED__ */


#ifndef ___CallConvThiscall_INTERFACE_DEFINED__
#define ___CallConvThiscall_INTERFACE_DEFINED__

/* interface _CallConvThiscall */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CallConvThiscall;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FA73DD3D-A472-35ED-B8BE-F99A13581F72")
    _CallConvThiscall : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CallConvThiscallVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CallConvThiscall * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CallConvThiscall * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CallConvThiscall * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CallConvThiscall * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CallConvThiscall * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CallConvThiscall * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CallConvThiscall * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CallConvThiscallVtbl;

    interface _CallConvThiscall
    {
        CONST_VTBL struct _CallConvThiscallVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CallConvThiscall_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CallConvThiscall_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CallConvThiscall_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CallConvThiscall_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CallConvThiscall_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CallConvThiscall_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CallConvThiscall_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CallConvThiscall_INTERFACE_DEFINED__ */


#ifndef ___CallConvFastcall_INTERFACE_DEFINED__
#define ___CallConvFastcall_INTERFACE_DEFINED__

/* interface _CallConvFastcall */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CallConvFastcall;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3B452D17-3C5E-36C4-A12D-5E9276036CF8")
    _CallConvFastcall : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CallConvFastcallVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CallConvFastcall * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CallConvFastcall * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CallConvFastcall * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CallConvFastcall * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CallConvFastcall * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CallConvFastcall * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CallConvFastcall * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CallConvFastcallVtbl;

    interface _CallConvFastcall
    {
        CONST_VTBL struct _CallConvFastcallVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CallConvFastcall_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CallConvFastcall_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CallConvFastcall_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CallConvFastcall_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CallConvFastcall_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CallConvFastcall_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CallConvFastcall_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CallConvFastcall_INTERFACE_DEFINED__ */


#ifndef ___CustomConstantAttribute_INTERFACE_DEFINED__
#define ___CustomConstantAttribute_INTERFACE_DEFINED__

/* interface _CustomConstantAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CustomConstantAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("62CAF4A2-6A78-3FC7-AF81-A6BBF930761F")
    _CustomConstantAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CustomConstantAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CustomConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CustomConstantAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CustomConstantAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CustomConstantAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CustomConstantAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CustomConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CustomConstantAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CustomConstantAttributeVtbl;

    interface _CustomConstantAttribute
    {
        CONST_VTBL struct _CustomConstantAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CustomConstantAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CustomConstantAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CustomConstantAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CustomConstantAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CustomConstantAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CustomConstantAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CustomConstantAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CustomConstantAttribute_INTERFACE_DEFINED__ */


#ifndef ___DateTimeConstantAttribute_INTERFACE_DEFINED__
#define ___DateTimeConstantAttribute_INTERFACE_DEFINED__

/* interface _DateTimeConstantAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DateTimeConstantAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EF387020-B664-3ACD-A1D2-806345845953")
    _DateTimeConstantAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DateTimeConstantAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DateTimeConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DateTimeConstantAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DateTimeConstantAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DateTimeConstantAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DateTimeConstantAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DateTimeConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DateTimeConstantAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DateTimeConstantAttributeVtbl;

    interface _DateTimeConstantAttribute
    {
        CONST_VTBL struct _DateTimeConstantAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DateTimeConstantAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DateTimeConstantAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DateTimeConstantAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DateTimeConstantAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DateTimeConstantAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DateTimeConstantAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DateTimeConstantAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DateTimeConstantAttribute_INTERFACE_DEFINED__ */


#ifndef ___DiscardableAttribute_INTERFACE_DEFINED__
#define ___DiscardableAttribute_INTERFACE_DEFINED__

/* interface _DiscardableAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DiscardableAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3C3A8C69-7417-32FA-AA20-762D85E1B594")
    _DiscardableAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DiscardableAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DiscardableAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DiscardableAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DiscardableAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DiscardableAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DiscardableAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DiscardableAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DiscardableAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DiscardableAttributeVtbl;

    interface _DiscardableAttribute
    {
        CONST_VTBL struct _DiscardableAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DiscardableAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DiscardableAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DiscardableAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DiscardableAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DiscardableAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DiscardableAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DiscardableAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DiscardableAttribute_INTERFACE_DEFINED__ */


#ifndef ___DecimalConstantAttribute_INTERFACE_DEFINED__
#define ___DecimalConstantAttribute_INTERFACE_DEFINED__

/* interface _DecimalConstantAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DecimalConstantAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7E133967-CCEC-3E89-8BD2-6CFCA649ECBF")
    _DecimalConstantAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DecimalConstantAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DecimalConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DecimalConstantAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DecimalConstantAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DecimalConstantAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DecimalConstantAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DecimalConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DecimalConstantAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DecimalConstantAttributeVtbl;

    interface _DecimalConstantAttribute
    {
        CONST_VTBL struct _DecimalConstantAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DecimalConstantAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DecimalConstantAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DecimalConstantAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DecimalConstantAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DecimalConstantAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DecimalConstantAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DecimalConstantAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DecimalConstantAttribute_INTERFACE_DEFINED__ */


#ifndef ___CompilationRelaxationsAttribute_INTERFACE_DEFINED__
#define ___CompilationRelaxationsAttribute_INTERFACE_DEFINED__

/* interface _CompilationRelaxationsAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CompilationRelaxationsAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C5C4F625-2329-3382-8994-AAF561E5DFE9")
    _CompilationRelaxationsAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CompilationRelaxationsAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CompilationRelaxationsAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CompilationRelaxationsAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CompilationRelaxationsAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CompilationRelaxationsAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CompilationRelaxationsAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CompilationRelaxationsAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CompilationRelaxationsAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CompilationRelaxationsAttributeVtbl;

    interface _CompilationRelaxationsAttribute
    {
        CONST_VTBL struct _CompilationRelaxationsAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CompilationRelaxationsAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CompilationRelaxationsAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CompilationRelaxationsAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CompilationRelaxationsAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CompilationRelaxationsAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CompilationRelaxationsAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CompilationRelaxationsAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CompilationRelaxationsAttribute_INTERFACE_DEFINED__ */


#ifndef ___CompilerGlobalScopeAttribute_INTERFACE_DEFINED__
#define ___CompilerGlobalScopeAttribute_INTERFACE_DEFINED__

/* interface _CompilerGlobalScopeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CompilerGlobalScopeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1EED213E-656A-3A73-A4B9-0D3B26FD942B")
    _CompilerGlobalScopeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CompilerGlobalScopeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CompilerGlobalScopeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CompilerGlobalScopeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CompilerGlobalScopeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CompilerGlobalScopeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CompilerGlobalScopeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CompilerGlobalScopeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CompilerGlobalScopeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CompilerGlobalScopeAttributeVtbl;

    interface _CompilerGlobalScopeAttribute
    {
        CONST_VTBL struct _CompilerGlobalScopeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CompilerGlobalScopeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CompilerGlobalScopeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CompilerGlobalScopeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CompilerGlobalScopeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CompilerGlobalScopeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CompilerGlobalScopeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CompilerGlobalScopeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CompilerGlobalScopeAttribute_INTERFACE_DEFINED__ */


#ifndef ___IndexerNameAttribute_INTERFACE_DEFINED__
#define ___IndexerNameAttribute_INTERFACE_DEFINED__

/* interface _IndexerNameAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IndexerNameAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("243368F5-67C9-3510-9424-335A8A67772F")
    _IndexerNameAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IndexerNameAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IndexerNameAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IndexerNameAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IndexerNameAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IndexerNameAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IndexerNameAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IndexerNameAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IndexerNameAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IndexerNameAttributeVtbl;

    interface _IndexerNameAttribute
    {
        CONST_VTBL struct _IndexerNameAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IndexerNameAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IndexerNameAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IndexerNameAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IndexerNameAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IndexerNameAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IndexerNameAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IndexerNameAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IndexerNameAttribute_INTERFACE_DEFINED__ */


#ifndef ___IsVolatile_INTERFACE_DEFINED__
#define ___IsVolatile_INTERFACE_DEFINED__

/* interface _IsVolatile */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsVolatile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0278C819-0C06-3756-B053-601A3E566D9B")
    _IsVolatile : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsVolatileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsVolatile * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsVolatile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsVolatile * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsVolatile * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsVolatile * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsVolatile * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsVolatile * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsVolatileVtbl;

    interface _IsVolatile
    {
        CONST_VTBL struct _IsVolatileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsVolatile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsVolatile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsVolatile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsVolatile_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsVolatile_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsVolatile_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsVolatile_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsVolatile_INTERFACE_DEFINED__ */


#ifndef ___MethodImplAttribute_INTERFACE_DEFINED__
#define ___MethodImplAttribute_INTERFACE_DEFINED__

/* interface _MethodImplAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodImplAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("98966503-5D80-3242-83EF-79E136F6B954")
    _MethodImplAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodImplAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodImplAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodImplAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodImplAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodImplAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodImplAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodImplAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodImplAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodImplAttributeVtbl;

    interface _MethodImplAttribute
    {
        CONST_VTBL struct _MethodImplAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodImplAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodImplAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodImplAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodImplAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodImplAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodImplAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodImplAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodImplAttribute_INTERFACE_DEFINED__ */


#ifndef ___RequiredAttributeAttribute_INTERFACE_DEFINED__
#define ___RequiredAttributeAttribute_INTERFACE_DEFINED__

/* interface _RequiredAttributeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RequiredAttributeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DB2C11D9-3870-35E7-A10C-A3DDC3DC79B1")
    _RequiredAttributeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RequiredAttributeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RequiredAttributeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RequiredAttributeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RequiredAttributeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RequiredAttributeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RequiredAttributeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RequiredAttributeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RequiredAttributeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RequiredAttributeAttributeVtbl;

    interface _RequiredAttributeAttribute
    {
        CONST_VTBL struct _RequiredAttributeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RequiredAttributeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RequiredAttributeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RequiredAttributeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RequiredAttributeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RequiredAttributeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RequiredAttributeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RequiredAttributeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RequiredAttributeAttribute_INTERFACE_DEFINED__ */


#ifndef ___IsCopyConstructed_INTERFACE_DEFINED__
#define ___IsCopyConstructed_INTERFACE_DEFINED__

/* interface _IsCopyConstructed */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsCopyConstructed;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F68A4008-AB94-3370-A9AC-8CC99939F534")
    _IsCopyConstructed : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsCopyConstructedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsCopyConstructed * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsCopyConstructed * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsCopyConstructed * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsCopyConstructed * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsCopyConstructed * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsCopyConstructed * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsCopyConstructed * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsCopyConstructedVtbl;

    interface _IsCopyConstructed
    {
        CONST_VTBL struct _IsCopyConstructedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsCopyConstructed_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsCopyConstructed_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsCopyConstructed_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsCopyConstructed_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsCopyConstructed_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsCopyConstructed_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsCopyConstructed_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsCopyConstructed_INTERFACE_DEFINED__ */


#ifndef ___NativeCppClassAttribute_INTERFACE_DEFINED__
#define ___NativeCppClassAttribute_INTERFACE_DEFINED__

/* interface _NativeCppClassAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NativeCppClassAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("40E8E914-DC23-38A6-936B-90E4E3AB01FA")
    _NativeCppClassAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NativeCppClassAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NativeCppClassAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NativeCppClassAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NativeCppClassAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NativeCppClassAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NativeCppClassAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NativeCppClassAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NativeCppClassAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NativeCppClassAttributeVtbl;

    interface _NativeCppClassAttribute
    {
        CONST_VTBL struct _NativeCppClassAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NativeCppClassAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NativeCppClassAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NativeCppClassAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NativeCppClassAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NativeCppClassAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NativeCppClassAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NativeCppClassAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NativeCppClassAttribute_INTERFACE_DEFINED__ */


#ifndef ___IDispatchConstantAttribute_INTERFACE_DEFINED__
#define ___IDispatchConstantAttribute_INTERFACE_DEFINED__

/* interface _IDispatchConstantAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IDispatchConstantAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("97D0B28A-6932-3D74-B67F-6BCD3C921E7D")
    _IDispatchConstantAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IDispatchConstantAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IDispatchConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IDispatchConstantAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IDispatchConstantAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IDispatchConstantAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IDispatchConstantAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IDispatchConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IDispatchConstantAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IDispatchConstantAttributeVtbl;

    interface _IDispatchConstantAttribute
    {
        CONST_VTBL struct _IDispatchConstantAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IDispatchConstantAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IDispatchConstantAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IDispatchConstantAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IDispatchConstantAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IDispatchConstantAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IDispatchConstantAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IDispatchConstantAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IDispatchConstantAttribute_INTERFACE_DEFINED__ */


#ifndef ___IUnknownConstantAttribute_INTERFACE_DEFINED__
#define ___IUnknownConstantAttribute_INTERFACE_DEFINED__

/* interface _IUnknownConstantAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IUnknownConstantAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("54542649-CE64-3F96-BCE5-FDE3BB22F242")
    _IUnknownConstantAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IUnknownConstantAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IUnknownConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IUnknownConstantAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IUnknownConstantAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IUnknownConstantAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IUnknownConstantAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IUnknownConstantAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IUnknownConstantAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IUnknownConstantAttributeVtbl;

    interface _IUnknownConstantAttribute
    {
        CONST_VTBL struct _IUnknownConstantAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IUnknownConstantAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IUnknownConstantAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IUnknownConstantAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IUnknownConstantAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IUnknownConstantAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IUnknownConstantAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IUnknownConstantAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IUnknownConstantAttribute_INTERFACE_DEFINED__ */


#ifndef ___SecurityElement_INTERFACE_DEFINED__
#define ___SecurityElement_INTERFACE_DEFINED__

/* interface _SecurityElement */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SecurityElement;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8D597C42-2CFD-32B6-B6D6-86C9E2CFF00A")
    _SecurityElement : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SecurityElementVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SecurityElement * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SecurityElement * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SecurityElement * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SecurityElement * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SecurityElement * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SecurityElement * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SecurityElement * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SecurityElementVtbl;

    interface _SecurityElement
    {
        CONST_VTBL struct _SecurityElementVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SecurityElement_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SecurityElement_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SecurityElement_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SecurityElement_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SecurityElement_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SecurityElement_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SecurityElement_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SecurityElement_INTERFACE_DEFINED__ */


#ifndef ___XmlSyntaxException_INTERFACE_DEFINED__
#define ___XmlSyntaxException_INTERFACE_DEFINED__

/* interface _XmlSyntaxException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__XmlSyntaxException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D9FCAD88-D869-3788-A802-1B1E007C7A22")
    _XmlSyntaxException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _XmlSyntaxExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _XmlSyntaxException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _XmlSyntaxException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _XmlSyntaxException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _XmlSyntaxException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _XmlSyntaxException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _XmlSyntaxException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _XmlSyntaxException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _XmlSyntaxExceptionVtbl;

    interface _XmlSyntaxException
    {
        CONST_VTBL struct _XmlSyntaxExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _XmlSyntaxException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _XmlSyntaxException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _XmlSyntaxException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _XmlSyntaxException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _XmlSyntaxException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _XmlSyntaxException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _XmlSyntaxException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___XmlSyntaxException_INTERFACE_DEFINED__ */


#ifndef ___CodeAccessPermission_INTERFACE_DEFINED__
#define ___CodeAccessPermission_INTERFACE_DEFINED__

/* interface _CodeAccessPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CodeAccessPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4803CE39-2F30-31FC-B84B-5A0141385269")
    _CodeAccessPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CodeAccessPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CodeAccessPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CodeAccessPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CodeAccessPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CodeAccessPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CodeAccessPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CodeAccessPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CodeAccessPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CodeAccessPermissionVtbl;

    interface _CodeAccessPermission
    {
        CONST_VTBL struct _CodeAccessPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CodeAccessPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CodeAccessPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CodeAccessPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CodeAccessPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CodeAccessPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CodeAccessPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CodeAccessPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CodeAccessPermission_INTERFACE_DEFINED__ */


#ifndef ___EnvironmentPermission_INTERFACE_DEFINED__
#define ___EnvironmentPermission_INTERFACE_DEFINED__

/* interface _EnvironmentPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EnvironmentPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0720590D-5218-352A-A337-5449E6BD19DA")
    _EnvironmentPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EnvironmentPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EnvironmentPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EnvironmentPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EnvironmentPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EnvironmentPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EnvironmentPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EnvironmentPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EnvironmentPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EnvironmentPermissionVtbl;

    interface _EnvironmentPermission
    {
        CONST_VTBL struct _EnvironmentPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EnvironmentPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EnvironmentPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EnvironmentPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EnvironmentPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EnvironmentPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EnvironmentPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EnvironmentPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EnvironmentPermission_INTERFACE_DEFINED__ */


#ifndef ___FileDialogPermission_INTERFACE_DEFINED__
#define ___FileDialogPermission_INTERFACE_DEFINED__

/* interface _FileDialogPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileDialogPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A8B7138C-8932-3D78-A585-A91569C743AC")
    _FileDialogPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileDialogPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileDialogPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileDialogPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileDialogPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileDialogPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileDialogPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileDialogPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileDialogPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileDialogPermissionVtbl;

    interface _FileDialogPermission
    {
        CONST_VTBL struct _FileDialogPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileDialogPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileDialogPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileDialogPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileDialogPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileDialogPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileDialogPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileDialogPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileDialogPermission_INTERFACE_DEFINED__ */


#ifndef ___FileIOPermission_INTERFACE_DEFINED__
#define ___FileIOPermission_INTERFACE_DEFINED__

/* interface _FileIOPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileIOPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A2ED7EFC-8E59-3CCC-AE92-EA2377F4D5EF")
    _FileIOPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileIOPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileIOPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileIOPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileIOPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileIOPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileIOPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileIOPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileIOPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileIOPermissionVtbl;

    interface _FileIOPermission
    {
        CONST_VTBL struct _FileIOPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileIOPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileIOPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileIOPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileIOPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileIOPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileIOPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileIOPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileIOPermission_INTERFACE_DEFINED__ */


#ifndef ___SecurityAttribute_INTERFACE_DEFINED__
#define ___SecurityAttribute_INTERFACE_DEFINED__

/* interface _SecurityAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SecurityAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48815668-6C27-3312-803E-2757F55CE96A")
    _SecurityAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SecurityAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SecurityAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SecurityAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SecurityAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SecurityAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SecurityAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SecurityAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SecurityAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SecurityAttributeVtbl;

    interface _SecurityAttribute
    {
        CONST_VTBL struct _SecurityAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SecurityAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SecurityAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SecurityAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SecurityAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SecurityAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SecurityAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SecurityAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SecurityAttribute_INTERFACE_DEFINED__ */


#ifndef ___CodeAccessSecurityAttribute_INTERFACE_DEFINED__
#define ___CodeAccessSecurityAttribute_INTERFACE_DEFINED__

/* interface _CodeAccessSecurityAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CodeAccessSecurityAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9C5149CB-D3C6-32FD-A0D5-95350DE7B813")
    _CodeAccessSecurityAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CodeAccessSecurityAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CodeAccessSecurityAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CodeAccessSecurityAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CodeAccessSecurityAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CodeAccessSecurityAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CodeAccessSecurityAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CodeAccessSecurityAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CodeAccessSecurityAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CodeAccessSecurityAttributeVtbl;

    interface _CodeAccessSecurityAttribute
    {
        CONST_VTBL struct _CodeAccessSecurityAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CodeAccessSecurityAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CodeAccessSecurityAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CodeAccessSecurityAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CodeAccessSecurityAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CodeAccessSecurityAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CodeAccessSecurityAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CodeAccessSecurityAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CodeAccessSecurityAttribute_INTERFACE_DEFINED__ */


#ifndef ___HostProtectionAttribute_INTERFACE_DEFINED__
#define ___HostProtectionAttribute_INTERFACE_DEFINED__

/* interface _HostProtectionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HostProtectionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9F8F73A3-1E99-3E51-A41B-179A41DC747C")
    _HostProtectionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HostProtectionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HostProtectionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HostProtectionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HostProtectionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HostProtectionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HostProtectionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HostProtectionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HostProtectionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HostProtectionAttributeVtbl;

    interface _HostProtectionAttribute
    {
        CONST_VTBL struct _HostProtectionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HostProtectionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HostProtectionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HostProtectionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HostProtectionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HostProtectionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HostProtectionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HostProtectionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HostProtectionAttribute_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStoragePermission_INTERFACE_DEFINED__
#define ___IsolatedStoragePermission_INTERFACE_DEFINED__

/* interface _IsolatedStoragePermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStoragePermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7FEE7903-F97C-3350-AD42-196B00AD2564")
    _IsolatedStoragePermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStoragePermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStoragePermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStoragePermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStoragePermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStoragePermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStoragePermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStoragePermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStoragePermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStoragePermissionVtbl;

    interface _IsolatedStoragePermission
    {
        CONST_VTBL struct _IsolatedStoragePermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStoragePermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStoragePermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStoragePermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStoragePermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStoragePermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStoragePermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStoragePermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStoragePermission_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStorageFilePermission_INTERFACE_DEFINED__
#define ___IsolatedStorageFilePermission_INTERFACE_DEFINED__

/* interface _IsolatedStorageFilePermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStorageFilePermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0D0C83E8-BDE1-3BA5-B1EF-A8FC686D8BC9")
    _IsolatedStorageFilePermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStorageFilePermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStorageFilePermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStorageFilePermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStorageFilePermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStorageFilePermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStorageFilePermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStorageFilePermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStorageFilePermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStorageFilePermissionVtbl;

    interface _IsolatedStorageFilePermission
    {
        CONST_VTBL struct _IsolatedStorageFilePermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStorageFilePermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStorageFilePermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStorageFilePermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStorageFilePermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStorageFilePermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStorageFilePermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStorageFilePermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStorageFilePermission_INTERFACE_DEFINED__ */


#ifndef ___EnvironmentPermissionAttribute_INTERFACE_DEFINED__
#define ___EnvironmentPermissionAttribute_INTERFACE_DEFINED__

/* interface _EnvironmentPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EnvironmentPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4164071A-ED12-3BDD-AF40-FDABCAA77D5F")
    _EnvironmentPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EnvironmentPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EnvironmentPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EnvironmentPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EnvironmentPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EnvironmentPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EnvironmentPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EnvironmentPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EnvironmentPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EnvironmentPermissionAttributeVtbl;

    interface _EnvironmentPermissionAttribute
    {
        CONST_VTBL struct _EnvironmentPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EnvironmentPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EnvironmentPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EnvironmentPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EnvironmentPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EnvironmentPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EnvironmentPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EnvironmentPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EnvironmentPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___FileDialogPermissionAttribute_INTERFACE_DEFINED__
#define ___FileDialogPermissionAttribute_INTERFACE_DEFINED__

/* interface _FileDialogPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileDialogPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0CCCA629-440F-313E-96CD-BA1B4B4997F7")
    _FileDialogPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileDialogPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileDialogPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileDialogPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileDialogPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileDialogPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileDialogPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileDialogPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileDialogPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileDialogPermissionAttributeVtbl;

    interface _FileDialogPermissionAttribute
    {
        CONST_VTBL struct _FileDialogPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileDialogPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileDialogPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileDialogPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileDialogPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileDialogPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileDialogPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileDialogPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileDialogPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___FileIOPermissionAttribute_INTERFACE_DEFINED__
#define ___FileIOPermissionAttribute_INTERFACE_DEFINED__

/* interface _FileIOPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FileIOPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0DCA817D-F21A-3943-B54C-5E800CE5BC50")
    _FileIOPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FileIOPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FileIOPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FileIOPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FileIOPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FileIOPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FileIOPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FileIOPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FileIOPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FileIOPermissionAttributeVtbl;

    interface _FileIOPermissionAttribute
    {
        CONST_VTBL struct _FileIOPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FileIOPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FileIOPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FileIOPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FileIOPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FileIOPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FileIOPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FileIOPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FileIOPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___KeyContainerPermissionAttribute_INTERFACE_DEFINED__
#define ___KeyContainerPermissionAttribute_INTERFACE_DEFINED__

/* interface _KeyContainerPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyContainerPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EDB51D1C-08AD-346A-BE6F-D74FD6D6F965")
    _KeyContainerPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyContainerPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyContainerPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyContainerPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyContainerPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyContainerPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyContainerPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyContainerPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyContainerPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyContainerPermissionAttributeVtbl;

    interface _KeyContainerPermissionAttribute
    {
        CONST_VTBL struct _KeyContainerPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyContainerPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyContainerPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyContainerPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyContainerPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyContainerPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyContainerPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyContainerPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyContainerPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___PrincipalPermissionAttribute_INTERFACE_DEFINED__
#define ___PrincipalPermissionAttribute_INTERFACE_DEFINED__

/* interface _PrincipalPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PrincipalPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("68AB69E4-5D68-3B51-B74D-1BEAB9F37F2B")
    _PrincipalPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PrincipalPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PrincipalPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PrincipalPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PrincipalPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PrincipalPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PrincipalPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PrincipalPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PrincipalPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PrincipalPermissionAttributeVtbl;

    interface _PrincipalPermissionAttribute
    {
        CONST_VTBL struct _PrincipalPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PrincipalPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PrincipalPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PrincipalPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PrincipalPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PrincipalPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PrincipalPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PrincipalPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PrincipalPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___ReflectionPermissionAttribute_INTERFACE_DEFINED__
#define ___ReflectionPermissionAttribute_INTERFACE_DEFINED__

/* interface _ReflectionPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ReflectionPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D31EED10-A5F0-308F-A951-E557961EC568")
    _ReflectionPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ReflectionPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReflectionPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReflectionPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReflectionPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReflectionPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReflectionPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReflectionPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReflectionPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ReflectionPermissionAttributeVtbl;

    interface _ReflectionPermissionAttribute
    {
        CONST_VTBL struct _ReflectionPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReflectionPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReflectionPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReflectionPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReflectionPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReflectionPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReflectionPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReflectionPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReflectionPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___RegistryPermissionAttribute_INTERFACE_DEFINED__
#define ___RegistryPermissionAttribute_INTERFACE_DEFINED__

/* interface _RegistryPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RegistryPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("38B6068C-1E94-3119-8841-1ECA35ED8578")
    _RegistryPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RegistryPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RegistryPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RegistryPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RegistryPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RegistryPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RegistryPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RegistryPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RegistryPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RegistryPermissionAttributeVtbl;

    interface _RegistryPermissionAttribute
    {
        CONST_VTBL struct _RegistryPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RegistryPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RegistryPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RegistryPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RegistryPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RegistryPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RegistryPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RegistryPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RegistryPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___SecurityPermissionAttribute_INTERFACE_DEFINED__
#define ___SecurityPermissionAttribute_INTERFACE_DEFINED__

/* interface _SecurityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SecurityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3A5B876C-CDE4-32D2-9C7E-020A14ACA332")
    _SecurityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SecurityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SecurityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SecurityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SecurityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SecurityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SecurityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SecurityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SecurityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SecurityPermissionAttributeVtbl;

    interface _SecurityPermissionAttribute
    {
        CONST_VTBL struct _SecurityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SecurityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SecurityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SecurityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SecurityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SecurityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SecurityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SecurityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SecurityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___UIPermissionAttribute_INTERFACE_DEFINED__
#define ___UIPermissionAttribute_INTERFACE_DEFINED__

/* interface _UIPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UIPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1D5C0F70-AF29-38A3-9436-3070A310C73B")
    _UIPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UIPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UIPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UIPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UIPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UIPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UIPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UIPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UIPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UIPermissionAttributeVtbl;

    interface _UIPermissionAttribute
    {
        CONST_VTBL struct _UIPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UIPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UIPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UIPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UIPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UIPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UIPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UIPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UIPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___ZoneIdentityPermissionAttribute_INTERFACE_DEFINED__
#define ___ZoneIdentityPermissionAttribute_INTERFACE_DEFINED__

/* interface _ZoneIdentityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ZoneIdentityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2E3BE3ED-2F22-3B20-9F92-BD29B79D6F42")
    _ZoneIdentityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ZoneIdentityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ZoneIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ZoneIdentityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ZoneIdentityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ZoneIdentityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ZoneIdentityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ZoneIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ZoneIdentityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ZoneIdentityPermissionAttributeVtbl;

    interface _ZoneIdentityPermissionAttribute
    {
        CONST_VTBL struct _ZoneIdentityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ZoneIdentityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ZoneIdentityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ZoneIdentityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ZoneIdentityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ZoneIdentityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ZoneIdentityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ZoneIdentityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ZoneIdentityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___StrongNameIdentityPermissionAttribute_INTERFACE_DEFINED__
#define ___StrongNameIdentityPermissionAttribute_INTERFACE_DEFINED__

/* interface _StrongNameIdentityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StrongNameIdentityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C9A740F4-26E9-39A8-8885-8CA26BD79B21")
    _StrongNameIdentityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StrongNameIdentityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StrongNameIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StrongNameIdentityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StrongNameIdentityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StrongNameIdentityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StrongNameIdentityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StrongNameIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StrongNameIdentityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StrongNameIdentityPermissionAttributeVtbl;

    interface _StrongNameIdentityPermissionAttribute
    {
        CONST_VTBL struct _StrongNameIdentityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StrongNameIdentityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StrongNameIdentityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StrongNameIdentityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StrongNameIdentityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StrongNameIdentityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StrongNameIdentityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StrongNameIdentityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StrongNameIdentityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___SiteIdentityPermissionAttribute_INTERFACE_DEFINED__
#define ___SiteIdentityPermissionAttribute_INTERFACE_DEFINED__

/* interface _SiteIdentityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SiteIdentityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6FE6894A-2A53-3FB6-A06E-348F9BDAD23B")
    _SiteIdentityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SiteIdentityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SiteIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SiteIdentityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SiteIdentityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SiteIdentityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SiteIdentityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SiteIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SiteIdentityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SiteIdentityPermissionAttributeVtbl;

    interface _SiteIdentityPermissionAttribute
    {
        CONST_VTBL struct _SiteIdentityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SiteIdentityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SiteIdentityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SiteIdentityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SiteIdentityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SiteIdentityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SiteIdentityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SiteIdentityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SiteIdentityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___UrlIdentityPermissionAttribute_INTERFACE_DEFINED__
#define ___UrlIdentityPermissionAttribute_INTERFACE_DEFINED__

/* interface _UrlIdentityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UrlIdentityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CA4A2073-48C5-3E61-8349-11701A90DD9B")
    _UrlIdentityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UrlIdentityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UrlIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UrlIdentityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UrlIdentityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UrlIdentityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UrlIdentityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UrlIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UrlIdentityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UrlIdentityPermissionAttributeVtbl;

    interface _UrlIdentityPermissionAttribute
    {
        CONST_VTBL struct _UrlIdentityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UrlIdentityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UrlIdentityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UrlIdentityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UrlIdentityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UrlIdentityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UrlIdentityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UrlIdentityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UrlIdentityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___PublisherIdentityPermissionAttribute_INTERFACE_DEFINED__
#define ___PublisherIdentityPermissionAttribute_INTERFACE_DEFINED__

/* interface _PublisherIdentityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PublisherIdentityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6722C730-1239-3784-AC94-C285AE5B901A")
    _PublisherIdentityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PublisherIdentityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PublisherIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PublisherIdentityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PublisherIdentityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PublisherIdentityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PublisherIdentityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PublisherIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PublisherIdentityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PublisherIdentityPermissionAttributeVtbl;

    interface _PublisherIdentityPermissionAttribute
    {
        CONST_VTBL struct _PublisherIdentityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PublisherIdentityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PublisherIdentityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PublisherIdentityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PublisherIdentityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PublisherIdentityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PublisherIdentityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PublisherIdentityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PublisherIdentityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStoragePermissionAttribute_INTERFACE_DEFINED__
#define ___IsolatedStoragePermissionAttribute_INTERFACE_DEFINED__

/* interface _IsolatedStoragePermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStoragePermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5C4C522F-DE4E-3595-9AA9-9319C86A5283")
    _IsolatedStoragePermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStoragePermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStoragePermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStoragePermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStoragePermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStoragePermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStoragePermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStoragePermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStoragePermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStoragePermissionAttributeVtbl;

    interface _IsolatedStoragePermissionAttribute
    {
        CONST_VTBL struct _IsolatedStoragePermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStoragePermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStoragePermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStoragePermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStoragePermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStoragePermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStoragePermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStoragePermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStoragePermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStorageFilePermissionAttribute_INTERFACE_DEFINED__
#define ___IsolatedStorageFilePermissionAttribute_INTERFACE_DEFINED__

/* interface _IsolatedStorageFilePermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStorageFilePermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6F1F8AAE-D667-39CC-98FA-722BEBBBEAC3")
    _IsolatedStorageFilePermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStorageFilePermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStorageFilePermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStorageFilePermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStorageFilePermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStorageFilePermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStorageFilePermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStorageFilePermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStorageFilePermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStorageFilePermissionAttributeVtbl;

    interface _IsolatedStorageFilePermissionAttribute
    {
        CONST_VTBL struct _IsolatedStorageFilePermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStorageFilePermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStorageFilePermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStorageFilePermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStorageFilePermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStorageFilePermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStorageFilePermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStorageFilePermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStorageFilePermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___PermissionSetAttribute_INTERFACE_DEFINED__
#define ___PermissionSetAttribute_INTERFACE_DEFINED__

/* interface _PermissionSetAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PermissionSetAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("947A1995-BC16-3E7C-B65A-99E71F39C091")
    _PermissionSetAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PermissionSetAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PermissionSetAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PermissionSetAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PermissionSetAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PermissionSetAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PermissionSetAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PermissionSetAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PermissionSetAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PermissionSetAttributeVtbl;

    interface _PermissionSetAttribute
    {
        CONST_VTBL struct _PermissionSetAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PermissionSetAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PermissionSetAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PermissionSetAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PermissionSetAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PermissionSetAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PermissionSetAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PermissionSetAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PermissionSetAttribute_INTERFACE_DEFINED__ */


#ifndef ___ReflectionPermission_INTERFACE_DEFINED__
#define ___ReflectionPermission_INTERFACE_DEFINED__

/* interface _ReflectionPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ReflectionPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AEB3727F-5C3A-34C4-BF18-A38F088AC8C7")
    _ReflectionPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ReflectionPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReflectionPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReflectionPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReflectionPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReflectionPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReflectionPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReflectionPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReflectionPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ReflectionPermissionVtbl;

    interface _ReflectionPermission
    {
        CONST_VTBL struct _ReflectionPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReflectionPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReflectionPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReflectionPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReflectionPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReflectionPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReflectionPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReflectionPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReflectionPermission_INTERFACE_DEFINED__ */


#ifndef ___PrincipalPermission_INTERFACE_DEFINED__
#define ___PrincipalPermission_INTERFACE_DEFINED__

/* interface _PrincipalPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PrincipalPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7C6B06D1-63AD-35EF-A938-149B4AD9A71F")
    _PrincipalPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PrincipalPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PrincipalPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PrincipalPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PrincipalPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PrincipalPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PrincipalPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PrincipalPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PrincipalPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PrincipalPermissionVtbl;

    interface _PrincipalPermission
    {
        CONST_VTBL struct _PrincipalPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PrincipalPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PrincipalPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PrincipalPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PrincipalPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PrincipalPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PrincipalPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PrincipalPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PrincipalPermission_INTERFACE_DEFINED__ */


#ifndef ___SecurityPermission_INTERFACE_DEFINED__
#define ___SecurityPermission_INTERFACE_DEFINED__

/* interface _SecurityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SecurityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("33C54A2D-02BD-3848-80B6-742D537085E5")
    _SecurityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SecurityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SecurityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SecurityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SecurityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SecurityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SecurityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SecurityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SecurityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SecurityPermissionVtbl;

    interface _SecurityPermission
    {
        CONST_VTBL struct _SecurityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SecurityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SecurityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SecurityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SecurityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SecurityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SecurityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SecurityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SecurityPermission_INTERFACE_DEFINED__ */


#ifndef ___SiteIdentityPermission_INTERFACE_DEFINED__
#define ___SiteIdentityPermission_INTERFACE_DEFINED__

/* interface _SiteIdentityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SiteIdentityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("790B3EE9-7E06-3CD0-8243-5848486D6A78")
    _SiteIdentityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SiteIdentityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SiteIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SiteIdentityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SiteIdentityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SiteIdentityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SiteIdentityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SiteIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SiteIdentityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SiteIdentityPermissionVtbl;

    interface _SiteIdentityPermission
    {
        CONST_VTBL struct _SiteIdentityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SiteIdentityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SiteIdentityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SiteIdentityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SiteIdentityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SiteIdentityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SiteIdentityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SiteIdentityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SiteIdentityPermission_INTERFACE_DEFINED__ */


#ifndef ___StrongNameIdentityPermission_INTERFACE_DEFINED__
#define ___StrongNameIdentityPermission_INTERFACE_DEFINED__

/* interface _StrongNameIdentityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StrongNameIdentityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5F1562FB-0160-3655-BAEA-B15BEF609161")
    _StrongNameIdentityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StrongNameIdentityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StrongNameIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StrongNameIdentityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StrongNameIdentityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StrongNameIdentityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StrongNameIdentityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StrongNameIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StrongNameIdentityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StrongNameIdentityPermissionVtbl;

    interface _StrongNameIdentityPermission
    {
        CONST_VTBL struct _StrongNameIdentityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StrongNameIdentityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StrongNameIdentityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StrongNameIdentityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StrongNameIdentityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StrongNameIdentityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StrongNameIdentityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StrongNameIdentityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StrongNameIdentityPermission_INTERFACE_DEFINED__ */


#ifndef ___StrongNamePublicKeyBlob_INTERFACE_DEFINED__
#define ___StrongNamePublicKeyBlob_INTERFACE_DEFINED__

/* interface _StrongNamePublicKeyBlob */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__StrongNamePublicKeyBlob;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AF53D21A-D6AF-3406-B399-7DF9D2AAD48A")
    _StrongNamePublicKeyBlob : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _StrongNamePublicKeyBlobVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _StrongNamePublicKeyBlob * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _StrongNamePublicKeyBlob * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _StrongNamePublicKeyBlob * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _StrongNamePublicKeyBlob * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _StrongNamePublicKeyBlob * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _StrongNamePublicKeyBlob * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _StrongNamePublicKeyBlob * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _StrongNamePublicKeyBlobVtbl;

    interface _StrongNamePublicKeyBlob
    {
        CONST_VTBL struct _StrongNamePublicKeyBlobVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _StrongNamePublicKeyBlob_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _StrongNamePublicKeyBlob_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _StrongNamePublicKeyBlob_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _StrongNamePublicKeyBlob_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _StrongNamePublicKeyBlob_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _StrongNamePublicKeyBlob_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _StrongNamePublicKeyBlob_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___StrongNamePublicKeyBlob_INTERFACE_DEFINED__ */


#ifndef ___UIPermission_INTERFACE_DEFINED__
#define ___UIPermission_INTERFACE_DEFINED__

/* interface _UIPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UIPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("47698389-F182-3A67-87DF-AED490E14DC6")
    _UIPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UIPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UIPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UIPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UIPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UIPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UIPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UIPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UIPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UIPermissionVtbl;

    interface _UIPermission
    {
        CONST_VTBL struct _UIPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UIPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UIPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UIPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UIPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UIPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UIPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UIPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UIPermission_INTERFACE_DEFINED__ */


#ifndef ___UrlIdentityPermission_INTERFACE_DEFINED__
#define ___UrlIdentityPermission_INTERFACE_DEFINED__

/* interface _UrlIdentityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UrlIdentityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EC7CAC31-08A2-393B-BDF2-D052EB53AF2C")
    _UrlIdentityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UrlIdentityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UrlIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UrlIdentityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UrlIdentityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UrlIdentityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UrlIdentityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UrlIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UrlIdentityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UrlIdentityPermissionVtbl;

    interface _UrlIdentityPermission
    {
        CONST_VTBL struct _UrlIdentityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UrlIdentityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UrlIdentityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UrlIdentityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UrlIdentityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UrlIdentityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UrlIdentityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UrlIdentityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UrlIdentityPermission_INTERFACE_DEFINED__ */


#ifndef ___ZoneIdentityPermission_INTERFACE_DEFINED__
#define ___ZoneIdentityPermission_INTERFACE_DEFINED__

/* interface _ZoneIdentityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ZoneIdentityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("38B2F8D7-8CF4-323B-9C17-9C55EE287A63")
    _ZoneIdentityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ZoneIdentityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ZoneIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ZoneIdentityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ZoneIdentityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ZoneIdentityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ZoneIdentityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ZoneIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ZoneIdentityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ZoneIdentityPermissionVtbl;

    interface _ZoneIdentityPermission
    {
        CONST_VTBL struct _ZoneIdentityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ZoneIdentityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ZoneIdentityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ZoneIdentityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ZoneIdentityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ZoneIdentityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ZoneIdentityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ZoneIdentityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ZoneIdentityPermission_INTERFACE_DEFINED__ */


#ifndef ___GacIdentityPermissionAttribute_INTERFACE_DEFINED__
#define ___GacIdentityPermissionAttribute_INTERFACE_DEFINED__

/* interface _GacIdentityPermissionAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GacIdentityPermissionAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5F19E082-26F8-3361-B338-9BACB98809A4")
    _GacIdentityPermissionAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GacIdentityPermissionAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GacIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GacIdentityPermissionAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GacIdentityPermissionAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GacIdentityPermissionAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GacIdentityPermissionAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GacIdentityPermissionAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GacIdentityPermissionAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GacIdentityPermissionAttributeVtbl;

    interface _GacIdentityPermissionAttribute
    {
        CONST_VTBL struct _GacIdentityPermissionAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GacIdentityPermissionAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GacIdentityPermissionAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GacIdentityPermissionAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GacIdentityPermissionAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GacIdentityPermissionAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GacIdentityPermissionAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GacIdentityPermissionAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GacIdentityPermissionAttribute_INTERFACE_DEFINED__ */


#ifndef ___GacIdentityPermission_INTERFACE_DEFINED__
#define ___GacIdentityPermission_INTERFACE_DEFINED__

/* interface _GacIdentityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GacIdentityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A9637792-5BE8-3C93-A501-49F0E840DE38")
    _GacIdentityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GacIdentityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GacIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GacIdentityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GacIdentityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GacIdentityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GacIdentityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GacIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GacIdentityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GacIdentityPermissionVtbl;

    interface _GacIdentityPermission
    {
        CONST_VTBL struct _GacIdentityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GacIdentityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GacIdentityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GacIdentityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GacIdentityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GacIdentityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GacIdentityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GacIdentityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GacIdentityPermission_INTERFACE_DEFINED__ */


#ifndef ___KeyContainerPermissionAccessEntry_INTERFACE_DEFINED__
#define ___KeyContainerPermissionAccessEntry_INTERFACE_DEFINED__

/* interface _KeyContainerPermissionAccessEntry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyContainerPermissionAccessEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("094351EA-DBC1-327F-8A83-913B593A66BE")
    _KeyContainerPermissionAccessEntry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyContainerPermissionAccessEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyContainerPermissionAccessEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyContainerPermissionAccessEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyContainerPermissionAccessEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyContainerPermissionAccessEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyContainerPermissionAccessEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyContainerPermissionAccessEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyContainerPermissionAccessEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyContainerPermissionAccessEntryVtbl;

    interface _KeyContainerPermissionAccessEntry
    {
        CONST_VTBL struct _KeyContainerPermissionAccessEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyContainerPermissionAccessEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyContainerPermissionAccessEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyContainerPermissionAccessEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyContainerPermissionAccessEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyContainerPermissionAccessEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyContainerPermissionAccessEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyContainerPermissionAccessEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyContainerPermissionAccessEntry_INTERFACE_DEFINED__ */


#ifndef ___KeyContainerPermissionAccessEntryCollection_INTERFACE_DEFINED__
#define ___KeyContainerPermissionAccessEntryCollection_INTERFACE_DEFINED__

/* interface _KeyContainerPermissionAccessEntryCollection */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyContainerPermissionAccessEntryCollection;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("28ECF94E-3510-3A3E-8BD1-F866F45F3B06")
    _KeyContainerPermissionAccessEntryCollection : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyContainerPermissionAccessEntryCollectionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyContainerPermissionAccessEntryCollection * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyContainerPermissionAccessEntryCollection * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyContainerPermissionAccessEntryCollection * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyContainerPermissionAccessEntryCollection * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyContainerPermissionAccessEntryCollection * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyContainerPermissionAccessEntryCollection * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyContainerPermissionAccessEntryCollection * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyContainerPermissionAccessEntryCollectionVtbl;

    interface _KeyContainerPermissionAccessEntryCollection
    {
        CONST_VTBL struct _KeyContainerPermissionAccessEntryCollectionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyContainerPermissionAccessEntryCollection_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyContainerPermissionAccessEntryCollection_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyContainerPermissionAccessEntryCollection_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyContainerPermissionAccessEntryCollection_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyContainerPermissionAccessEntryCollection_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyContainerPermissionAccessEntryCollection_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyContainerPermissionAccessEntryCollection_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyContainerPermissionAccessEntryCollection_INTERFACE_DEFINED__ */


#ifndef ___KeyContainerPermissionAccessEntryEnumerator_INTERFACE_DEFINED__
#define ___KeyContainerPermissionAccessEntryEnumerator_INTERFACE_DEFINED__

/* interface _KeyContainerPermissionAccessEntryEnumerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyContainerPermissionAccessEntryEnumerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("293187EA-5F88-316F-86A5-533B0C7B353F")
    _KeyContainerPermissionAccessEntryEnumerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyContainerPermissionAccessEntryEnumeratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyContainerPermissionAccessEntryEnumerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyContainerPermissionAccessEntryEnumerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyContainerPermissionAccessEntryEnumerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyContainerPermissionAccessEntryEnumerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyContainerPermissionAccessEntryEnumerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyContainerPermissionAccessEntryEnumerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyContainerPermissionAccessEntryEnumerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyContainerPermissionAccessEntryEnumeratorVtbl;

    interface _KeyContainerPermissionAccessEntryEnumerator
    {
        CONST_VTBL struct _KeyContainerPermissionAccessEntryEnumeratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyContainerPermissionAccessEntryEnumerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyContainerPermissionAccessEntryEnumerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyContainerPermissionAccessEntryEnumerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyContainerPermissionAccessEntryEnumerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyContainerPermissionAccessEntryEnumerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyContainerPermissionAccessEntryEnumerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyContainerPermissionAccessEntryEnumerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyContainerPermissionAccessEntryEnumerator_INTERFACE_DEFINED__ */


#ifndef ___KeyContainerPermission_INTERFACE_DEFINED__
#define ___KeyContainerPermission_INTERFACE_DEFINED__

/* interface _KeyContainerPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyContainerPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("107A3CF1-B35E-3A23-B660-60264B231225")
    _KeyContainerPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyContainerPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyContainerPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyContainerPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyContainerPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyContainerPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyContainerPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyContainerPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyContainerPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyContainerPermissionVtbl;

    interface _KeyContainerPermission
    {
        CONST_VTBL struct _KeyContainerPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyContainerPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyContainerPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyContainerPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyContainerPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyContainerPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyContainerPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyContainerPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyContainerPermission_INTERFACE_DEFINED__ */


#ifndef ___PublisherIdentityPermission_INTERFACE_DEFINED__
#define ___PublisherIdentityPermission_INTERFACE_DEFINED__

/* interface _PublisherIdentityPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PublisherIdentityPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E86CC74A-1233-3DF3-B13F-8B27EEAAC1F6")
    _PublisherIdentityPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PublisherIdentityPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PublisherIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PublisherIdentityPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PublisherIdentityPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PublisherIdentityPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PublisherIdentityPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PublisherIdentityPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PublisherIdentityPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PublisherIdentityPermissionVtbl;

    interface _PublisherIdentityPermission
    {
        CONST_VTBL struct _PublisherIdentityPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PublisherIdentityPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PublisherIdentityPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PublisherIdentityPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PublisherIdentityPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PublisherIdentityPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PublisherIdentityPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PublisherIdentityPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PublisherIdentityPermission_INTERFACE_DEFINED__ */


#ifndef ___RegistryPermission_INTERFACE_DEFINED__
#define ___RegistryPermission_INTERFACE_DEFINED__

/* interface _RegistryPermission */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RegistryPermission;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C3FB5510-3454-3B31-B64F-DE6AAD6BE820")
    _RegistryPermission : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RegistryPermissionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RegistryPermission * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RegistryPermission * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RegistryPermission * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RegistryPermission * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RegistryPermission * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RegistryPermission * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RegistryPermission * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RegistryPermissionVtbl;

    interface _RegistryPermission
    {
        CONST_VTBL struct _RegistryPermissionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RegistryPermission_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RegistryPermission_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RegistryPermission_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RegistryPermission_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RegistryPermission_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RegistryPermission_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RegistryPermission_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RegistryPermission_INTERFACE_DEFINED__ */


#ifndef ___SuppressUnmanagedCodeSecurityAttribute_INTERFACE_DEFINED__
#define ___SuppressUnmanagedCodeSecurityAttribute_INTERFACE_DEFINED__

/* interface _SuppressUnmanagedCodeSecurityAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SuppressUnmanagedCodeSecurityAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8000E51A-541C-3B20-A8EC-C8A8B41116C4")
    _SuppressUnmanagedCodeSecurityAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SuppressUnmanagedCodeSecurityAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SuppressUnmanagedCodeSecurityAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SuppressUnmanagedCodeSecurityAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SuppressUnmanagedCodeSecurityAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SuppressUnmanagedCodeSecurityAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SuppressUnmanagedCodeSecurityAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SuppressUnmanagedCodeSecurityAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SuppressUnmanagedCodeSecurityAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SuppressUnmanagedCodeSecurityAttributeVtbl;

    interface _SuppressUnmanagedCodeSecurityAttribute
    {
        CONST_VTBL struct _SuppressUnmanagedCodeSecurityAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SuppressUnmanagedCodeSecurityAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SuppressUnmanagedCodeSecurityAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SuppressUnmanagedCodeSecurityAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SuppressUnmanagedCodeSecurityAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SuppressUnmanagedCodeSecurityAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SuppressUnmanagedCodeSecurityAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SuppressUnmanagedCodeSecurityAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SuppressUnmanagedCodeSecurityAttribute_INTERFACE_DEFINED__ */


#ifndef ___UnverifiableCodeAttribute_INTERFACE_DEFINED__
#define ___UnverifiableCodeAttribute_INTERFACE_DEFINED__

/* interface _UnverifiableCodeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnverifiableCodeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("41F41C1B-7B8D-39A3-A28F-AAE20787F469")
    _UnverifiableCodeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnverifiableCodeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnverifiableCodeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnverifiableCodeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnverifiableCodeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnverifiableCodeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnverifiableCodeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnverifiableCodeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnverifiableCodeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnverifiableCodeAttributeVtbl;

    interface _UnverifiableCodeAttribute
    {
        CONST_VTBL struct _UnverifiableCodeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnverifiableCodeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnverifiableCodeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnverifiableCodeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnverifiableCodeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnverifiableCodeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnverifiableCodeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnverifiableCodeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnverifiableCodeAttribute_INTERFACE_DEFINED__ */


#ifndef ___AllowPartiallyTrustedCallersAttribute_INTERFACE_DEFINED__
#define ___AllowPartiallyTrustedCallersAttribute_INTERFACE_DEFINED__

/* interface _AllowPartiallyTrustedCallersAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AllowPartiallyTrustedCallersAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F1C930C4-2233-3924-9840-231D008259B4")
    _AllowPartiallyTrustedCallersAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AllowPartiallyTrustedCallersAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AllowPartiallyTrustedCallersAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AllowPartiallyTrustedCallersAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AllowPartiallyTrustedCallersAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AllowPartiallyTrustedCallersAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AllowPartiallyTrustedCallersAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AllowPartiallyTrustedCallersAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AllowPartiallyTrustedCallersAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AllowPartiallyTrustedCallersAttributeVtbl;

    interface _AllowPartiallyTrustedCallersAttribute
    {
        CONST_VTBL struct _AllowPartiallyTrustedCallersAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AllowPartiallyTrustedCallersAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AllowPartiallyTrustedCallersAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AllowPartiallyTrustedCallersAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AllowPartiallyTrustedCallersAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AllowPartiallyTrustedCallersAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AllowPartiallyTrustedCallersAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AllowPartiallyTrustedCallersAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AllowPartiallyTrustedCallersAttribute_INTERFACE_DEFINED__ */


#ifndef ___HostSecurityManager_INTERFACE_DEFINED__
#define ___HostSecurityManager_INTERFACE_DEFINED__

/* interface _HostSecurityManager */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HostSecurityManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9DEAE196-48C1-3590-9D0A-33716A214ACD")
    _HostSecurityManager : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HostSecurityManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HostSecurityManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HostSecurityManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HostSecurityManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HostSecurityManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HostSecurityManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HostSecurityManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HostSecurityManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HostSecurityManagerVtbl;

    interface _HostSecurityManager
    {
        CONST_VTBL struct _HostSecurityManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HostSecurityManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HostSecurityManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HostSecurityManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HostSecurityManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HostSecurityManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HostSecurityManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HostSecurityManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HostSecurityManager_INTERFACE_DEFINED__ */


#ifndef ___PermissionSet_INTERFACE_DEFINED__
#define ___PermissionSet_INTERFACE_DEFINED__

/* interface _PermissionSet */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PermissionSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C2AF4970-4FB6-319C-A8AA-0614D27F2B2C")
    _PermissionSet : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PermissionSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PermissionSet * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PermissionSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PermissionSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PermissionSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PermissionSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PermissionSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PermissionSet * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PermissionSetVtbl;

    interface _PermissionSet
    {
        CONST_VTBL struct _PermissionSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PermissionSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PermissionSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PermissionSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PermissionSet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PermissionSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PermissionSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PermissionSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PermissionSet_INTERFACE_DEFINED__ */


#ifndef ___NamedPermissionSet_INTERFACE_DEFINED__
#define ___NamedPermissionSet_INTERFACE_DEFINED__

/* interface _NamedPermissionSet */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__NamedPermissionSet;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BA3E053F-ADE3-3233-874A-16E624C9A49B")
    _NamedPermissionSet : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _NamedPermissionSetVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _NamedPermissionSet * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _NamedPermissionSet * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _NamedPermissionSet * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _NamedPermissionSet * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _NamedPermissionSet * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _NamedPermissionSet * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _NamedPermissionSet * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _NamedPermissionSetVtbl;

    interface _NamedPermissionSet
    {
        CONST_VTBL struct _NamedPermissionSetVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _NamedPermissionSet_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _NamedPermissionSet_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _NamedPermissionSet_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _NamedPermissionSet_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _NamedPermissionSet_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _NamedPermissionSet_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _NamedPermissionSet_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___NamedPermissionSet_INTERFACE_DEFINED__ */


#ifndef ___SecurityException_INTERFACE_DEFINED__
#define ___SecurityException_INTERFACE_DEFINED__

/* interface _SecurityException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SecurityException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F174290F-E4CF-3976-88AA-4F8E32EB03DB")
    _SecurityException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SecurityExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SecurityException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SecurityException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SecurityException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SecurityException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SecurityException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SecurityException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SecurityException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SecurityExceptionVtbl;

    interface _SecurityException
    {
        CONST_VTBL struct _SecurityExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SecurityException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SecurityException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SecurityException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SecurityException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SecurityException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SecurityException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SecurityException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SecurityException_INTERFACE_DEFINED__ */


#ifndef ___HostProtectionException_INTERFACE_DEFINED__
#define ___HostProtectionException_INTERFACE_DEFINED__

/* interface _HostProtectionException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HostProtectionException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ED727A9B-6FC5-3FED-BEDD-7B66C847F87A")
    _HostProtectionException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HostProtectionExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HostProtectionException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HostProtectionException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HostProtectionException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HostProtectionException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HostProtectionException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HostProtectionException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HostProtectionException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HostProtectionExceptionVtbl;

    interface _HostProtectionException
    {
        CONST_VTBL struct _HostProtectionExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HostProtectionException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HostProtectionException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HostProtectionException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HostProtectionException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HostProtectionException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HostProtectionException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HostProtectionException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HostProtectionException_INTERFACE_DEFINED__ */


#ifndef ___SecurityManager_INTERFACE_DEFINED__
#define ___SecurityManager_INTERFACE_DEFINED__

/* interface _SecurityManager */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SecurityManager;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ABC04B16-5539-3C7E-92EC-0905A4A24464")
    _SecurityManager : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SecurityManagerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SecurityManager * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SecurityManager * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SecurityManager * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SecurityManager * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SecurityManager * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SecurityManager * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SecurityManager * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SecurityManagerVtbl;

    interface _SecurityManager
    {
        CONST_VTBL struct _SecurityManagerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SecurityManager_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SecurityManager_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SecurityManager_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SecurityManager_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SecurityManager_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SecurityManager_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SecurityManager_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SecurityManager_INTERFACE_DEFINED__ */


#ifndef ___VerificationException_INTERFACE_DEFINED__
#define ___VerificationException_INTERFACE_DEFINED__

/* interface _VerificationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__VerificationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F65070DF-57AF-3AE3-B951-D2AD7D513347")
    _VerificationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _VerificationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _VerificationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _VerificationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _VerificationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _VerificationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _VerificationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _VerificationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _VerificationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _VerificationExceptionVtbl;

    interface _VerificationException
    {
        CONST_VTBL struct _VerificationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _VerificationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _VerificationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _VerificationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _VerificationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _VerificationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _VerificationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _VerificationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___VerificationException_INTERFACE_DEFINED__ */


#ifndef ___ContextAttribute_INTERFACE_DEFINED__
#define ___ContextAttribute_INTERFACE_DEFINED__

/* interface _ContextAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ContextAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F042505B-7AAC-313B-A8C7-3F1AC949C311")
    _ContextAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContextAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContextAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContextAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContextAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContextAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContextAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContextAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextAttributeVtbl;

    interface _ContextAttribute
    {
        CONST_VTBL struct _ContextAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContextAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContextAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContextAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContextAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContextAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContextAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContextAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContextAttribute_INTERFACE_DEFINED__ */


#ifndef ___AsyncResult_INTERFACE_DEFINED__
#define ___AsyncResult_INTERFACE_DEFINED__

/* interface _AsyncResult */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsyncResult;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3936ABE1-B29E-3593-83F1-793D1A7F3898")
    _AsyncResult : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsyncResultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsyncResult * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsyncResult * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsyncResult * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsyncResult * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsyncResult * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsyncResult * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsyncResult * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsyncResultVtbl;

    interface _AsyncResult
    {
        CONST_VTBL struct _AsyncResultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsyncResult_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsyncResult_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsyncResult_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsyncResult_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsyncResult_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsyncResult_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsyncResult_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsyncResult_INTERFACE_DEFINED__ */


#ifndef ___CallContext_INTERFACE_DEFINED__
#define ___CallContext_INTERFACE_DEFINED__

/* interface _CallContext */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CallContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("53BCE4D4-6209-396D-BD4A-0B0A0A177DF9")
    _CallContext : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CallContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CallContext * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CallContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CallContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CallContext * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CallContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CallContext * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CallContext * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CallContextVtbl;

    interface _CallContext
    {
        CONST_VTBL struct _CallContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CallContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CallContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CallContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CallContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CallContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CallContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CallContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CallContext_INTERFACE_DEFINED__ */


#ifndef ___LogicalCallContext_INTERFACE_DEFINED__
#define ___LogicalCallContext_INTERFACE_DEFINED__

/* interface _LogicalCallContext */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__LogicalCallContext;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9AFF21F5-1C9C-35E7-AEA4-C3AA0BEB3B77")
    _LogicalCallContext : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _LogicalCallContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LogicalCallContext * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LogicalCallContext * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LogicalCallContext * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _LogicalCallContext * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _LogicalCallContext * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _LogicalCallContext * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _LogicalCallContext * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _LogicalCallContextVtbl;

    interface _LogicalCallContext
    {
        CONST_VTBL struct _LogicalCallContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LogicalCallContext_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LogicalCallContext_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LogicalCallContext_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LogicalCallContext_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _LogicalCallContext_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LogicalCallContext_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LogicalCallContext_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LogicalCallContext_INTERFACE_DEFINED__ */


#ifndef ___ChannelServices_INTERFACE_DEFINED__
#define ___ChannelServices_INTERFACE_DEFINED__

/* interface _ChannelServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ChannelServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FFB2E16E-E5C7-367C-B326-965ABF510F24")
    _ChannelServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ChannelServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ChannelServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ChannelServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ChannelServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ChannelServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ChannelServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ChannelServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ChannelServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ChannelServicesVtbl;

    interface _ChannelServices
    {
        CONST_VTBL struct _ChannelServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ChannelServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ChannelServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ChannelServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ChannelServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ChannelServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ChannelServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ChannelServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ChannelServices_INTERFACE_DEFINED__ */


#ifndef ___ClientChannelSinkStack_INTERFACE_DEFINED__
#define ___ClientChannelSinkStack_INTERFACE_DEFINED__

/* interface _ClientChannelSinkStack */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ClientChannelSinkStack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E1796120-C324-30D8-86F4-20086711463B")
    _ClientChannelSinkStack : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ClientChannelSinkStackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ClientChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ClientChannelSinkStack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ClientChannelSinkStack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ClientChannelSinkStack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ClientChannelSinkStack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ClientChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ClientChannelSinkStack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ClientChannelSinkStackVtbl;

    interface _ClientChannelSinkStack
    {
        CONST_VTBL struct _ClientChannelSinkStackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ClientChannelSinkStack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ClientChannelSinkStack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ClientChannelSinkStack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ClientChannelSinkStack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ClientChannelSinkStack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ClientChannelSinkStack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ClientChannelSinkStack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ClientChannelSinkStack_INTERFACE_DEFINED__ */


#ifndef ___ServerChannelSinkStack_INTERFACE_DEFINED__
#define ___ServerChannelSinkStack_INTERFACE_DEFINED__

/* interface _ServerChannelSinkStack */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ServerChannelSinkStack;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("52DA9F90-89B3-35AB-907B-3562642967DE")
    _ServerChannelSinkStack : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ServerChannelSinkStackVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ServerChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ServerChannelSinkStack * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ServerChannelSinkStack * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ServerChannelSinkStack * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ServerChannelSinkStack * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ServerChannelSinkStack * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ServerChannelSinkStack * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ServerChannelSinkStackVtbl;

    interface _ServerChannelSinkStack
    {
        CONST_VTBL struct _ServerChannelSinkStackVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ServerChannelSinkStack_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ServerChannelSinkStack_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ServerChannelSinkStack_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ServerChannelSinkStack_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ServerChannelSinkStack_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ServerChannelSinkStack_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ServerChannelSinkStack_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ServerChannelSinkStack_INTERFACE_DEFINED__ */


#ifndef ___ClientSponsor_INTERFACE_DEFINED__
#define ___ClientSponsor_INTERFACE_DEFINED__

/* interface _ClientSponsor */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ClientSponsor;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FF19D114-3BDA-30AC-8E89-36CA64A87120")
    _ClientSponsor : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ClientSponsorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ClientSponsor * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ClientSponsor * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ClientSponsor * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ClientSponsor * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ClientSponsor * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ClientSponsor * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ClientSponsor * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ClientSponsorVtbl;

    interface _ClientSponsor
    {
        CONST_VTBL struct _ClientSponsorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ClientSponsor_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ClientSponsor_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ClientSponsor_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ClientSponsor_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ClientSponsor_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ClientSponsor_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ClientSponsor_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ClientSponsor_INTERFACE_DEFINED__ */


#ifndef ___CrossContextDelegate_INTERFACE_DEFINED__
#define ___CrossContextDelegate_INTERFACE_DEFINED__

/* interface _CrossContextDelegate */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CrossContextDelegate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EE949B7B-439F-363E-B9FC-34DB1FB781D7")
    _CrossContextDelegate : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CrossContextDelegateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CrossContextDelegate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CrossContextDelegate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CrossContextDelegate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CrossContextDelegate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CrossContextDelegate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CrossContextDelegate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CrossContextDelegate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CrossContextDelegateVtbl;

    interface _CrossContextDelegate
    {
        CONST_VTBL struct _CrossContextDelegateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CrossContextDelegate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CrossContextDelegate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CrossContextDelegate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CrossContextDelegate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CrossContextDelegate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CrossContextDelegate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CrossContextDelegate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CrossContextDelegate_INTERFACE_DEFINED__ */


#ifndef ___Context_INTERFACE_DEFINED__
#define ___Context_INTERFACE_DEFINED__

/* interface _Context */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Context;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("11A2EA7A-D600-307B-A606-511A6C7950D1")
    _Context : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Context * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Context * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Context * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Context * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Context * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Context * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Context * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextVtbl;

    interface _Context
    {
        CONST_VTBL struct _ContextVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Context_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Context_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Context_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Context_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Context_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Context_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Context_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Context_INTERFACE_DEFINED__ */


#ifndef ___ContextProperty_INTERFACE_DEFINED__
#define ___ContextProperty_INTERFACE_DEFINED__

/* interface _ContextProperty */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ContextProperty;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4ACB3495-05DB-381B-890A-D12F5340DCA3")
    _ContextProperty : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ContextPropertyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ContextProperty * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ContextProperty * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ContextProperty * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ContextProperty * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ContextProperty * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ContextProperty * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ContextProperty * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ContextPropertyVtbl;

    interface _ContextProperty
    {
        CONST_VTBL struct _ContextPropertyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ContextProperty_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ContextProperty_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ContextProperty_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ContextProperty_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ContextProperty_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ContextProperty_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ContextProperty_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ContextProperty_INTERFACE_DEFINED__ */


#ifndef ___EnterpriseServicesHelper_INTERFACE_DEFINED__
#define ___EnterpriseServicesHelper_INTERFACE_DEFINED__

/* interface _EnterpriseServicesHelper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__EnterpriseServicesHelper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77C9BCEB-9958-33C0-A858-599F66697DA7")
    _EnterpriseServicesHelper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _EnterpriseServicesHelperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _EnterpriseServicesHelper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _EnterpriseServicesHelper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _EnterpriseServicesHelper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _EnterpriseServicesHelper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _EnterpriseServicesHelper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _EnterpriseServicesHelper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _EnterpriseServicesHelper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _EnterpriseServicesHelperVtbl;

    interface _EnterpriseServicesHelper
    {
        CONST_VTBL struct _EnterpriseServicesHelperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _EnterpriseServicesHelper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _EnterpriseServicesHelper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _EnterpriseServicesHelper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _EnterpriseServicesHelper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _EnterpriseServicesHelper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _EnterpriseServicesHelper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _EnterpriseServicesHelper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___EnterpriseServicesHelper_INTERFACE_DEFINED__ */


#ifndef ___Header_INTERFACE_DEFINED__
#define ___Header_INTERFACE_DEFINED__

/* interface _Header */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Header;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0D296515-AD19-3602-B415-D8EC77066081")
    _Header : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HeaderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Header * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Header * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Header * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Header * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Header * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Header * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Header * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HeaderVtbl;

    interface _Header
    {
        CONST_VTBL struct _HeaderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Header_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Header_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Header_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Header_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Header_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Header_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Header_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Header_INTERFACE_DEFINED__ */


#ifndef ___HeaderHandler_INTERFACE_DEFINED__
#define ___HeaderHandler_INTERFACE_DEFINED__

/* interface _HeaderHandler */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HeaderHandler;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5DBBAF39-A3DF-30B7-AAEA-9FD11394123F")
    _HeaderHandler : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HeaderHandlerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HeaderHandler * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HeaderHandler * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HeaderHandler * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HeaderHandler * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HeaderHandler * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HeaderHandler * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HeaderHandler * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HeaderHandlerVtbl;

    interface _HeaderHandler
    {
        CONST_VTBL struct _HeaderHandlerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HeaderHandler_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HeaderHandler_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HeaderHandler_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HeaderHandler_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HeaderHandler_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HeaderHandler_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HeaderHandler_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HeaderHandler_INTERFACE_DEFINED__ */


#ifndef ___ChannelDataStore_INTERFACE_DEFINED__
#define ___ChannelDataStore_INTERFACE_DEFINED__

/* interface _ChannelDataStore */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ChannelDataStore;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AA6DA581-F972-36DE-A53B-7585428A68AB")
    _ChannelDataStore : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ChannelDataStoreVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ChannelDataStore * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ChannelDataStore * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ChannelDataStore * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ChannelDataStore * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ChannelDataStore * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ChannelDataStore * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ChannelDataStore * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ChannelDataStoreVtbl;

    interface _ChannelDataStore
    {
        CONST_VTBL struct _ChannelDataStoreVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ChannelDataStore_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ChannelDataStore_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ChannelDataStore_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ChannelDataStore_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ChannelDataStore_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ChannelDataStore_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ChannelDataStore_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ChannelDataStore_INTERFACE_DEFINED__ */


#ifndef ___TransportHeaders_INTERFACE_DEFINED__
#define ___TransportHeaders_INTERFACE_DEFINED__

/* interface _TransportHeaders */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TransportHeaders;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("65887F70-C646-3A66-8697-8A3F7D8FE94D")
    _TransportHeaders : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TransportHeadersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TransportHeaders * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TransportHeaders * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TransportHeaders * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TransportHeaders * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TransportHeaders * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TransportHeaders * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TransportHeaders * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TransportHeadersVtbl;

    interface _TransportHeaders
    {
        CONST_VTBL struct _TransportHeadersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TransportHeaders_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TransportHeaders_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TransportHeaders_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TransportHeaders_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TransportHeaders_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TransportHeaders_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TransportHeaders_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TransportHeaders_INTERFACE_DEFINED__ */


#ifndef ___SinkProviderData_INTERFACE_DEFINED__
#define ___SinkProviderData_INTERFACE_DEFINED__

/* interface _SinkProviderData */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SinkProviderData;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A18545B7-E5EE-31EE-9B9B-41199B11C995")
    _SinkProviderData : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SinkProviderDataVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SinkProviderData * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SinkProviderData * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SinkProviderData * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SinkProviderData * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SinkProviderData * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SinkProviderData * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SinkProviderData * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SinkProviderDataVtbl;

    interface _SinkProviderData
    {
        CONST_VTBL struct _SinkProviderDataVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SinkProviderData_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SinkProviderData_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SinkProviderData_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SinkProviderData_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SinkProviderData_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SinkProviderData_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SinkProviderData_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SinkProviderData_INTERFACE_DEFINED__ */


#ifndef ___BaseChannelObjectWithProperties_INTERFACE_DEFINED__
#define ___BaseChannelObjectWithProperties_INTERFACE_DEFINED__

/* interface _BaseChannelObjectWithProperties */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BaseChannelObjectWithProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A1329EC9-E567-369F-8258-18366D89EAF8")
    _BaseChannelObjectWithProperties : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BaseChannelObjectWithPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BaseChannelObjectWithProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BaseChannelObjectWithProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BaseChannelObjectWithProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BaseChannelObjectWithProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BaseChannelObjectWithProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BaseChannelObjectWithProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BaseChannelObjectWithProperties * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BaseChannelObjectWithPropertiesVtbl;

    interface _BaseChannelObjectWithProperties
    {
        CONST_VTBL struct _BaseChannelObjectWithPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BaseChannelObjectWithProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BaseChannelObjectWithProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BaseChannelObjectWithProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BaseChannelObjectWithProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BaseChannelObjectWithProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BaseChannelObjectWithProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BaseChannelObjectWithProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BaseChannelObjectWithProperties_INTERFACE_DEFINED__ */


#ifndef ___BaseChannelSinkWithProperties_INTERFACE_DEFINED__
#define ___BaseChannelSinkWithProperties_INTERFACE_DEFINED__

/* interface _BaseChannelSinkWithProperties */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BaseChannelSinkWithProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8AF3451E-154D-3D86-80D8-F8478B9733ED")
    _BaseChannelSinkWithProperties : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BaseChannelSinkWithPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BaseChannelSinkWithProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BaseChannelSinkWithProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BaseChannelSinkWithProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BaseChannelSinkWithProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BaseChannelSinkWithProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BaseChannelSinkWithProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BaseChannelSinkWithProperties * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BaseChannelSinkWithPropertiesVtbl;

    interface _BaseChannelSinkWithProperties
    {
        CONST_VTBL struct _BaseChannelSinkWithPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BaseChannelSinkWithProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BaseChannelSinkWithProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BaseChannelSinkWithProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BaseChannelSinkWithProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BaseChannelSinkWithProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BaseChannelSinkWithProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BaseChannelSinkWithProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BaseChannelSinkWithProperties_INTERFACE_DEFINED__ */


#ifndef ___BaseChannelWithProperties_INTERFACE_DEFINED__
#define ___BaseChannelWithProperties_INTERFACE_DEFINED__

/* interface _BaseChannelWithProperties */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BaseChannelWithProperties;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("94BB98ED-18BB-3843-A7FE-642824AB4E01")
    _BaseChannelWithProperties : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BaseChannelWithPropertiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BaseChannelWithProperties * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BaseChannelWithProperties * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BaseChannelWithProperties * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BaseChannelWithProperties * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BaseChannelWithProperties * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BaseChannelWithProperties * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BaseChannelWithProperties * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BaseChannelWithPropertiesVtbl;

    interface _BaseChannelWithProperties
    {
        CONST_VTBL struct _BaseChannelWithPropertiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BaseChannelWithProperties_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BaseChannelWithProperties_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BaseChannelWithProperties_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BaseChannelWithProperties_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BaseChannelWithProperties_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BaseChannelWithProperties_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BaseChannelWithProperties_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BaseChannelWithProperties_INTERFACE_DEFINED__ */


#ifndef ___LifetimeServices_INTERFACE_DEFINED__
#define ___LifetimeServices_INTERFACE_DEFINED__

/* interface _LifetimeServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__LifetimeServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B0AD9A21-5439-3D88-8975-4018B828D74C")
    _LifetimeServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _LifetimeServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _LifetimeServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _LifetimeServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _LifetimeServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _LifetimeServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _LifetimeServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _LifetimeServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _LifetimeServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _LifetimeServicesVtbl;

    interface _LifetimeServices
    {
        CONST_VTBL struct _LifetimeServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _LifetimeServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _LifetimeServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _LifetimeServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _LifetimeServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _LifetimeServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _LifetimeServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _LifetimeServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___LifetimeServices_INTERFACE_DEFINED__ */


#ifndef ___ReturnMessage_INTERFACE_DEFINED__
#define ___ReturnMessage_INTERFACE_DEFINED__

/* interface _ReturnMessage */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ReturnMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0EEFF4C2-84BF-3E4E-BF22-B7BDBB5DF899")
    _ReturnMessage : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ReturnMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ReturnMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ReturnMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ReturnMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ReturnMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ReturnMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ReturnMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ReturnMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ReturnMessageVtbl;

    interface _ReturnMessage
    {
        CONST_VTBL struct _ReturnMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ReturnMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ReturnMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ReturnMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ReturnMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ReturnMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ReturnMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ReturnMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ReturnMessage_INTERFACE_DEFINED__ */


#ifndef ___MethodCall_INTERFACE_DEFINED__
#define ___MethodCall_INTERFACE_DEFINED__

/* interface _MethodCall */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodCall;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("95E01216-5467-371B-8597-4074402CCB06")
    _MethodCall : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodCallVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodCall * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodCall * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodCall * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodCall * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodCall * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodCall * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodCall * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodCallVtbl;

    interface _MethodCall
    {
        CONST_VTBL struct _MethodCallVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodCall_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodCall_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodCall_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodCall_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodCall_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodCall_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodCall_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodCall_INTERFACE_DEFINED__ */


#ifndef ___ConstructionCall_INTERFACE_DEFINED__
#define ___ConstructionCall_INTERFACE_DEFINED__

/* interface _ConstructionCall */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ConstructionCall;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A2246AE7-EB81-3A20-8E70-C9FA341C7E10")
    _ConstructionCall : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ConstructionCallVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ConstructionCall * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ConstructionCall * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ConstructionCall * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ConstructionCall * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ConstructionCall * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ConstructionCall * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ConstructionCall * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ConstructionCallVtbl;

    interface _ConstructionCall
    {
        CONST_VTBL struct _ConstructionCallVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ConstructionCall_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ConstructionCall_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ConstructionCall_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ConstructionCall_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ConstructionCall_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ConstructionCall_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ConstructionCall_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ConstructionCall_INTERFACE_DEFINED__ */


#ifndef ___MethodResponse_INTERFACE_DEFINED__
#define ___MethodResponse_INTERFACE_DEFINED__

/* interface _MethodResponse */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodResponse;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9E9EA93A-D000-3AB9-BFCA-DDEB398A55B9")
    _MethodResponse : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodResponseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodResponse * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodResponse * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodResponse * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodResponse * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodResponse * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodResponse * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodResponse * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodResponseVtbl;

    interface _MethodResponse
    {
        CONST_VTBL struct _MethodResponseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodResponse_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodResponse_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodResponse_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodResponse_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodResponse_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodResponse_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodResponse_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodResponse_INTERFACE_DEFINED__ */


#ifndef ___ConstructionResponse_INTERFACE_DEFINED__
#define ___ConstructionResponse_INTERFACE_DEFINED__

/* interface _ConstructionResponse */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ConstructionResponse;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE457280-6FFA-3E76-9822-83DE63C0C4E0")
    _ConstructionResponse : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ConstructionResponseVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ConstructionResponse * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ConstructionResponse * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ConstructionResponse * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ConstructionResponse * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ConstructionResponse * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ConstructionResponse * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ConstructionResponse * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ConstructionResponseVtbl;

    interface _ConstructionResponse
    {
        CONST_VTBL struct _ConstructionResponseVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ConstructionResponse_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ConstructionResponse_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ConstructionResponse_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ConstructionResponse_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ConstructionResponse_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ConstructionResponse_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ConstructionResponse_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ConstructionResponse_INTERFACE_DEFINED__ */


#ifndef ___InternalMessageWrapper_INTERFACE_DEFINED__
#define ___InternalMessageWrapper_INTERFACE_DEFINED__

/* interface _InternalMessageWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InternalMessageWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EF926E1F-3EE7-32BC-8B01-C6E98C24BC19")
    _InternalMessageWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InternalMessageWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InternalMessageWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InternalMessageWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InternalMessageWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InternalMessageWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InternalMessageWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InternalMessageWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InternalMessageWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InternalMessageWrapperVtbl;

    interface _InternalMessageWrapper
    {
        CONST_VTBL struct _InternalMessageWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InternalMessageWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InternalMessageWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InternalMessageWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InternalMessageWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InternalMessageWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InternalMessageWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InternalMessageWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InternalMessageWrapper_INTERFACE_DEFINED__ */


#ifndef ___MethodCallMessageWrapper_INTERFACE_DEFINED__
#define ___MethodCallMessageWrapper_INTERFACE_DEFINED__

/* interface _MethodCallMessageWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodCallMessageWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C9614D78-10EA-3310-87EA-821B70632898")
    _MethodCallMessageWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodCallMessageWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodCallMessageWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodCallMessageWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodCallMessageWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodCallMessageWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodCallMessageWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodCallMessageWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodCallMessageWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodCallMessageWrapperVtbl;

    interface _MethodCallMessageWrapper
    {
        CONST_VTBL struct _MethodCallMessageWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodCallMessageWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodCallMessageWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodCallMessageWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodCallMessageWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodCallMessageWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodCallMessageWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodCallMessageWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodCallMessageWrapper_INTERFACE_DEFINED__ */


#ifndef ___MethodReturnMessageWrapper_INTERFACE_DEFINED__
#define ___MethodReturnMessageWrapper_INTERFACE_DEFINED__

/* interface _MethodReturnMessageWrapper */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MethodReturnMessageWrapper;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("89304439-A24F-30F6-9A8F-89CE472D85DA")
    _MethodReturnMessageWrapper : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MethodReturnMessageWrapperVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MethodReturnMessageWrapper * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MethodReturnMessageWrapper * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MethodReturnMessageWrapper * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MethodReturnMessageWrapper * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MethodReturnMessageWrapper * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MethodReturnMessageWrapper * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MethodReturnMessageWrapper * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MethodReturnMessageWrapperVtbl;

    interface _MethodReturnMessageWrapper
    {
        CONST_VTBL struct _MethodReturnMessageWrapperVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MethodReturnMessageWrapper_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MethodReturnMessageWrapper_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MethodReturnMessageWrapper_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MethodReturnMessageWrapper_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MethodReturnMessageWrapper_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MethodReturnMessageWrapper_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MethodReturnMessageWrapper_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MethodReturnMessageWrapper_INTERFACE_DEFINED__ */


#ifndef ___ObjectHandle_INTERFACE_DEFINED__
#define ___ObjectHandle_INTERFACE_DEFINED__

/* interface _ObjectHandle */
/* [object][custom][oleautomation][nonextensible][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObjectHandle;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EA675B47-64E0-3B5F-9BE7-F7DC2990730D")
    _ObjectHandle : public IDispatch
    {
    public:
        virtual /* [custom][propget][id] */ HRESULT STDMETHODCALLTYPE get_ToString( 
            /* [retval][out] */ BSTR *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Equals( 
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetHashCode( 
            /* [retval][out] */ long *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetType( 
            /* [retval][out] */ _Type **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE GetLifetimeService( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE InitializeLifetimeService( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE CreateObjRef( 
            /* [in] */ _Type *requestedType,
            /* [retval][out] */ _ObjRef **pRetVal) = 0;
        
        virtual /* [id] */ HRESULT STDMETHODCALLTYPE Unwrap( 
            /* [retval][out] */ VARIANT *pRetVal) = 0;
        
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjectHandleVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObjectHandle * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObjectHandle * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObjectHandle * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObjectHandle * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObjectHandle * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObjectHandle * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObjectHandle * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        /* [custom][propget][id] */ HRESULT ( STDMETHODCALLTYPE *get_ToString )( 
            _ObjectHandle * This,
            /* [retval][out] */ BSTR *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Equals )( 
            _ObjectHandle * This,
            /* [in] */ VARIANT obj,
            /* [retval][out] */ VARIANT_BOOL *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetHashCode )( 
            _ObjectHandle * This,
            /* [retval][out] */ long *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetType )( 
            _ObjectHandle * This,
            /* [retval][out] */ _Type **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *GetLifetimeService )( 
            _ObjectHandle * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *InitializeLifetimeService )( 
            _ObjectHandle * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *CreateObjRef )( 
            _ObjectHandle * This,
            /* [in] */ _Type *requestedType,
            /* [retval][out] */ _ObjRef **pRetVal);
        
        /* [id] */ HRESULT ( STDMETHODCALLTYPE *Unwrap )( 
            _ObjectHandle * This,
            /* [retval][out] */ VARIANT *pRetVal);
        
        END_INTERFACE
    } _ObjectHandleVtbl;

    interface _ObjectHandle
    {
        CONST_VTBL struct _ObjectHandleVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObjectHandle_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObjectHandle_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObjectHandle_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObjectHandle_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObjectHandle_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObjectHandle_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObjectHandle_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#define _ObjectHandle_get_ToString(This,pRetVal)	\
    ( (This)->lpVtbl -> get_ToString(This,pRetVal) ) 

#define _ObjectHandle_Equals(This,obj,pRetVal)	\
    ( (This)->lpVtbl -> Equals(This,obj,pRetVal) ) 

#define _ObjectHandle_GetHashCode(This,pRetVal)	\
    ( (This)->lpVtbl -> GetHashCode(This,pRetVal) ) 

#define _ObjectHandle_GetType(This,pRetVal)	\
    ( (This)->lpVtbl -> GetType(This,pRetVal) ) 

#define _ObjectHandle_GetLifetimeService(This,pRetVal)	\
    ( (This)->lpVtbl -> GetLifetimeService(This,pRetVal) ) 

#define _ObjectHandle_InitializeLifetimeService(This,pRetVal)	\
    ( (This)->lpVtbl -> InitializeLifetimeService(This,pRetVal) ) 

#define _ObjectHandle_CreateObjRef(This,requestedType,pRetVal)	\
    ( (This)->lpVtbl -> CreateObjRef(This,requestedType,pRetVal) ) 

#define _ObjectHandle_Unwrap(This,pRetVal)	\
    ( (This)->lpVtbl -> Unwrap(This,pRetVal) ) 

#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObjectHandle_INTERFACE_DEFINED__ */


#ifndef ___ObjRef_INTERFACE_DEFINED__
#define ___ObjRef_INTERFACE_DEFINED__

/* interface _ObjRef */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ObjRef;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1DD3CF3D-DF8E-32FF-91EC-E19AA10B63FB")
    _ObjRef : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ObjRefVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ObjRef * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ObjRef * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ObjRef * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ObjRef * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ObjRef * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ObjRef * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ObjRef * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ObjRefVtbl;

    interface _ObjRef
    {
        CONST_VTBL struct _ObjRefVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ObjRef_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ObjRef_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ObjRef_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ObjRef_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ObjRef_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ObjRef_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ObjRef_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ObjRef_INTERFACE_DEFINED__ */


#ifndef ___OneWayAttribute_INTERFACE_DEFINED__
#define ___OneWayAttribute_INTERFACE_DEFINED__

/* interface _OneWayAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OneWayAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8FFEDC68-5233-3FA8-813D-405AABB33ECB")
    _OneWayAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OneWayAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OneWayAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OneWayAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OneWayAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OneWayAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OneWayAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OneWayAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OneWayAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OneWayAttributeVtbl;

    interface _OneWayAttribute
    {
        CONST_VTBL struct _OneWayAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OneWayAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OneWayAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OneWayAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OneWayAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OneWayAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OneWayAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OneWayAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OneWayAttribute_INTERFACE_DEFINED__ */


#ifndef ___ProxyAttribute_INTERFACE_DEFINED__
#define ___ProxyAttribute_INTERFACE_DEFINED__

/* interface _ProxyAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ProxyAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D80FF312-2930-3680-A5E9-B48296C7415F")
    _ProxyAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ProxyAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ProxyAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ProxyAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ProxyAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ProxyAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ProxyAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ProxyAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ProxyAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ProxyAttributeVtbl;

    interface _ProxyAttribute
    {
        CONST_VTBL struct _ProxyAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ProxyAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ProxyAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ProxyAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ProxyAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ProxyAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ProxyAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ProxyAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ProxyAttribute_INTERFACE_DEFINED__ */


#ifndef ___RealProxy_INTERFACE_DEFINED__
#define ___RealProxy_INTERFACE_DEFINED__

/* interface _RealProxy */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RealProxy;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E0CF3F77-C7C3-33DA-BEB4-46147FC905DE")
    _RealProxy : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RealProxyVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RealProxy * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RealProxy * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RealProxy * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RealProxy * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RealProxy * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RealProxy * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RealProxy * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RealProxyVtbl;

    interface _RealProxy
    {
        CONST_VTBL struct _RealProxyVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RealProxy_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RealProxy_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RealProxy_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RealProxy_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RealProxy_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RealProxy_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RealProxy_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RealProxy_INTERFACE_DEFINED__ */


#ifndef ___SoapAttribute_INTERFACE_DEFINED__
#define ___SoapAttribute_INTERFACE_DEFINED__

/* interface _SoapAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("725692A5-9E12-37F6-911C-E3DA77E5FACA")
    _SoapAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapAttributeVtbl;

    interface _SoapAttribute
    {
        CONST_VTBL struct _SoapAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapAttribute_INTERFACE_DEFINED__ */


#ifndef ___SoapTypeAttribute_INTERFACE_DEFINED__
#define ___SoapTypeAttribute_INTERFACE_DEFINED__

/* interface _SoapTypeAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapTypeAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EBCDCD84-8C74-39FD-821C-F5EB3A2704D7")
    _SoapTypeAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapTypeAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapTypeAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapTypeAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapTypeAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapTypeAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapTypeAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapTypeAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapTypeAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapTypeAttributeVtbl;

    interface _SoapTypeAttribute
    {
        CONST_VTBL struct _SoapTypeAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapTypeAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapTypeAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapTypeAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapTypeAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapTypeAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapTypeAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapTypeAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapTypeAttribute_INTERFACE_DEFINED__ */


#ifndef ___SoapMethodAttribute_INTERFACE_DEFINED__
#define ___SoapMethodAttribute_INTERFACE_DEFINED__

/* interface _SoapMethodAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapMethodAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C58145B5-BD5A-3896-95D9-B358F54FBC44")
    _SoapMethodAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapMethodAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapMethodAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapMethodAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapMethodAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapMethodAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapMethodAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapMethodAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapMethodAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapMethodAttributeVtbl;

    interface _SoapMethodAttribute
    {
        CONST_VTBL struct _SoapMethodAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapMethodAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapMethodAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapMethodAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapMethodAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapMethodAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapMethodAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapMethodAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapMethodAttribute_INTERFACE_DEFINED__ */


#ifndef ___SoapFieldAttribute_INTERFACE_DEFINED__
#define ___SoapFieldAttribute_INTERFACE_DEFINED__

/* interface _SoapFieldAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapFieldAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("46A3F9FF-F73C-33C7-BCC3-1BEF4B25E4AE")
    _SoapFieldAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapFieldAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapFieldAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapFieldAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapFieldAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapFieldAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapFieldAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapFieldAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapFieldAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapFieldAttributeVtbl;

    interface _SoapFieldAttribute
    {
        CONST_VTBL struct _SoapFieldAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapFieldAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapFieldAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapFieldAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapFieldAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapFieldAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapFieldAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapFieldAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapFieldAttribute_INTERFACE_DEFINED__ */


#ifndef ___SoapParameterAttribute_INTERFACE_DEFINED__
#define ___SoapParameterAttribute_INTERFACE_DEFINED__

/* interface _SoapParameterAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapParameterAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C32ABFC9-3917-30BF-A7BC-44250BDFC5D8")
    _SoapParameterAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapParameterAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapParameterAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapParameterAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapParameterAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapParameterAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapParameterAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapParameterAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapParameterAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapParameterAttributeVtbl;

    interface _SoapParameterAttribute
    {
        CONST_VTBL struct _SoapParameterAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapParameterAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapParameterAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapParameterAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapParameterAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapParameterAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapParameterAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapParameterAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapParameterAttribute_INTERFACE_DEFINED__ */


#ifndef ___RemotingConfiguration_INTERFACE_DEFINED__
#define ___RemotingConfiguration_INTERFACE_DEFINED__

/* interface _RemotingConfiguration */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RemotingConfiguration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B10971E-D61D-373F-BC8D-2CCF31126215")
    _RemotingConfiguration : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RemotingConfigurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RemotingConfiguration * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RemotingConfiguration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RemotingConfiguration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RemotingConfiguration * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RemotingConfiguration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RemotingConfiguration * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RemotingConfiguration * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RemotingConfigurationVtbl;

    interface _RemotingConfiguration
    {
        CONST_VTBL struct _RemotingConfigurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RemotingConfiguration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RemotingConfiguration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RemotingConfiguration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RemotingConfiguration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RemotingConfiguration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RemotingConfiguration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RemotingConfiguration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RemotingConfiguration_INTERFACE_DEFINED__ */


#ifndef ___TypeEntry_INTERFACE_DEFINED__
#define ___TypeEntry_INTERFACE_DEFINED__

/* interface _TypeEntry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TypeEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8359F3AB-643F-3BCF-91E8-16E779EDEBE1")
    _TypeEntry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TypeEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TypeEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TypeEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TypeEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TypeEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TypeEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TypeEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TypeEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TypeEntryVtbl;

    interface _TypeEntry
    {
        CONST_VTBL struct _TypeEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TypeEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TypeEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TypeEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TypeEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TypeEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TypeEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TypeEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TypeEntry_INTERFACE_DEFINED__ */


#ifndef ___ActivatedClientTypeEntry_INTERFACE_DEFINED__
#define ___ActivatedClientTypeEntry_INTERFACE_DEFINED__

/* interface _ActivatedClientTypeEntry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ActivatedClientTypeEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BAC12781-6865-3558-A8D1-F1CADD2806DD")
    _ActivatedClientTypeEntry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ActivatedClientTypeEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ActivatedClientTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ActivatedClientTypeEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ActivatedClientTypeEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ActivatedClientTypeEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ActivatedClientTypeEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ActivatedClientTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ActivatedClientTypeEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ActivatedClientTypeEntryVtbl;

    interface _ActivatedClientTypeEntry
    {
        CONST_VTBL struct _ActivatedClientTypeEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ActivatedClientTypeEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ActivatedClientTypeEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ActivatedClientTypeEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ActivatedClientTypeEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ActivatedClientTypeEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ActivatedClientTypeEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ActivatedClientTypeEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ActivatedClientTypeEntry_INTERFACE_DEFINED__ */


#ifndef ___ActivatedServiceTypeEntry_INTERFACE_DEFINED__
#define ___ActivatedServiceTypeEntry_INTERFACE_DEFINED__

/* interface _ActivatedServiceTypeEntry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ActivatedServiceTypeEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("94855A3B-5CA2-32CF-B1AB-48FD3915822C")
    _ActivatedServiceTypeEntry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ActivatedServiceTypeEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ActivatedServiceTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ActivatedServiceTypeEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ActivatedServiceTypeEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ActivatedServiceTypeEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ActivatedServiceTypeEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ActivatedServiceTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ActivatedServiceTypeEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ActivatedServiceTypeEntryVtbl;

    interface _ActivatedServiceTypeEntry
    {
        CONST_VTBL struct _ActivatedServiceTypeEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ActivatedServiceTypeEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ActivatedServiceTypeEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ActivatedServiceTypeEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ActivatedServiceTypeEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ActivatedServiceTypeEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ActivatedServiceTypeEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ActivatedServiceTypeEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ActivatedServiceTypeEntry_INTERFACE_DEFINED__ */


#ifndef ___WellKnownClientTypeEntry_INTERFACE_DEFINED__
#define ___WellKnownClientTypeEntry_INTERFACE_DEFINED__

/* interface _WellKnownClientTypeEntry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WellKnownClientTypeEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4D0BC339-E3F9-3E9E-8F68-92168E6F6981")
    _WellKnownClientTypeEntry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WellKnownClientTypeEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WellKnownClientTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WellKnownClientTypeEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WellKnownClientTypeEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WellKnownClientTypeEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WellKnownClientTypeEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WellKnownClientTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WellKnownClientTypeEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WellKnownClientTypeEntryVtbl;

    interface _WellKnownClientTypeEntry
    {
        CONST_VTBL struct _WellKnownClientTypeEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WellKnownClientTypeEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WellKnownClientTypeEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WellKnownClientTypeEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WellKnownClientTypeEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WellKnownClientTypeEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WellKnownClientTypeEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WellKnownClientTypeEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WellKnownClientTypeEntry_INTERFACE_DEFINED__ */


#ifndef ___WellKnownServiceTypeEntry_INTERFACE_DEFINED__
#define ___WellKnownServiceTypeEntry_INTERFACE_DEFINED__

/* interface _WellKnownServiceTypeEntry */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__WellKnownServiceTypeEntry;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("60B8B604-0AED-3093-AC05-EB98FB29FC47")
    _WellKnownServiceTypeEntry : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _WellKnownServiceTypeEntryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _WellKnownServiceTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _WellKnownServiceTypeEntry * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _WellKnownServiceTypeEntry * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _WellKnownServiceTypeEntry * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _WellKnownServiceTypeEntry * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _WellKnownServiceTypeEntry * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _WellKnownServiceTypeEntry * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _WellKnownServiceTypeEntryVtbl;

    interface _WellKnownServiceTypeEntry
    {
        CONST_VTBL struct _WellKnownServiceTypeEntryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _WellKnownServiceTypeEntry_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _WellKnownServiceTypeEntry_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _WellKnownServiceTypeEntry_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _WellKnownServiceTypeEntry_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _WellKnownServiceTypeEntry_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _WellKnownServiceTypeEntry_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _WellKnownServiceTypeEntry_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___WellKnownServiceTypeEntry_INTERFACE_DEFINED__ */


#ifndef ___RemotingException_INTERFACE_DEFINED__
#define ___RemotingException_INTERFACE_DEFINED__

/* interface _RemotingException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RemotingException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7264843F-F60C-39A9-99E1-029126AA0815")
    _RemotingException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RemotingExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RemotingException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RemotingException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RemotingException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RemotingException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RemotingException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RemotingException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RemotingException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RemotingExceptionVtbl;

    interface _RemotingException
    {
        CONST_VTBL struct _RemotingExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RemotingException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RemotingException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RemotingException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RemotingException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RemotingException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RemotingException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RemotingException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RemotingException_INTERFACE_DEFINED__ */


#ifndef ___ServerException_INTERFACE_DEFINED__
#define ___ServerException_INTERFACE_DEFINED__

/* interface _ServerException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ServerException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("19373C44-55B4-3487-9AD8-4C621AAE85EA")
    _ServerException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ServerExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ServerException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ServerException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ServerException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ServerException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ServerException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ServerException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ServerException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ServerExceptionVtbl;

    interface _ServerException
    {
        CONST_VTBL struct _ServerExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ServerException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ServerException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ServerException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ServerException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ServerException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ServerException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ServerException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ServerException_INTERFACE_DEFINED__ */


#ifndef ___RemotingTimeoutException_INTERFACE_DEFINED__
#define ___RemotingTimeoutException_INTERFACE_DEFINED__

/* interface _RemotingTimeoutException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RemotingTimeoutException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("44DB8E15-ACB1-34EE-81F9-56ED7AE37A5C")
    _RemotingTimeoutException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RemotingTimeoutExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RemotingTimeoutException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RemotingTimeoutException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RemotingTimeoutException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RemotingTimeoutException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RemotingTimeoutException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RemotingTimeoutException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RemotingTimeoutException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RemotingTimeoutExceptionVtbl;

    interface _RemotingTimeoutException
    {
        CONST_VTBL struct _RemotingTimeoutExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RemotingTimeoutException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RemotingTimeoutException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RemotingTimeoutException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RemotingTimeoutException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RemotingTimeoutException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RemotingTimeoutException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RemotingTimeoutException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RemotingTimeoutException_INTERFACE_DEFINED__ */


#ifndef ___RemotingServices_INTERFACE_DEFINED__
#define ___RemotingServices_INTERFACE_DEFINED__

/* interface _RemotingServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RemotingServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7B91368D-A50A-3D36-BE8E-5B8836A419AD")
    _RemotingServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RemotingServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RemotingServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RemotingServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RemotingServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RemotingServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RemotingServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RemotingServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RemotingServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RemotingServicesVtbl;

    interface _RemotingServices
    {
        CONST_VTBL struct _RemotingServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RemotingServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RemotingServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RemotingServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RemotingServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RemotingServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RemotingServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RemotingServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RemotingServices_INTERFACE_DEFINED__ */


#ifndef ___InternalRemotingServices_INTERFACE_DEFINED__
#define ___InternalRemotingServices_INTERFACE_DEFINED__

/* interface _InternalRemotingServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InternalRemotingServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4EFB305-CDC4-31C5-8102-33C9B91774F3")
    _InternalRemotingServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InternalRemotingServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InternalRemotingServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InternalRemotingServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InternalRemotingServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InternalRemotingServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InternalRemotingServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InternalRemotingServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InternalRemotingServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InternalRemotingServicesVtbl;

    interface _InternalRemotingServices
    {
        CONST_VTBL struct _InternalRemotingServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InternalRemotingServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InternalRemotingServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InternalRemotingServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InternalRemotingServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InternalRemotingServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InternalRemotingServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InternalRemotingServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InternalRemotingServices_INTERFACE_DEFINED__ */


#ifndef ___MessageSurrogateFilter_INTERFACE_DEFINED__
#define ___MessageSurrogateFilter_INTERFACE_DEFINED__

/* interface _MessageSurrogateFilter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MessageSurrogateFilter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("04A35D22-0B08-34E7-A573-88EF2374375E")
    _MessageSurrogateFilter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MessageSurrogateFilterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MessageSurrogateFilter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MessageSurrogateFilter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MessageSurrogateFilter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MessageSurrogateFilter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MessageSurrogateFilter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MessageSurrogateFilter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MessageSurrogateFilter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MessageSurrogateFilterVtbl;

    interface _MessageSurrogateFilter
    {
        CONST_VTBL struct _MessageSurrogateFilterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MessageSurrogateFilter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MessageSurrogateFilter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MessageSurrogateFilter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MessageSurrogateFilter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MessageSurrogateFilter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MessageSurrogateFilter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MessageSurrogateFilter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MessageSurrogateFilter_INTERFACE_DEFINED__ */


#ifndef ___RemotingSurrogateSelector_INTERFACE_DEFINED__
#define ___RemotingSurrogateSelector_INTERFACE_DEFINED__

/* interface _RemotingSurrogateSelector */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RemotingSurrogateSelector;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("551F7A57-8651-37DB-A94A-6A3CA09C0ED7")
    _RemotingSurrogateSelector : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RemotingSurrogateSelectorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RemotingSurrogateSelector * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RemotingSurrogateSelector * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RemotingSurrogateSelector * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RemotingSurrogateSelector * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RemotingSurrogateSelector * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RemotingSurrogateSelector * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RemotingSurrogateSelector * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RemotingSurrogateSelectorVtbl;

    interface _RemotingSurrogateSelector
    {
        CONST_VTBL struct _RemotingSurrogateSelectorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RemotingSurrogateSelector_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RemotingSurrogateSelector_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RemotingSurrogateSelector_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RemotingSurrogateSelector_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RemotingSurrogateSelector_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RemotingSurrogateSelector_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RemotingSurrogateSelector_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RemotingSurrogateSelector_INTERFACE_DEFINED__ */


#ifndef ___SoapServices_INTERFACE_DEFINED__
#define ___SoapServices_INTERFACE_DEFINED__

/* interface _SoapServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7416B6EE-82E8-3A16-966B-018A40E7B1AA")
    _SoapServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapServicesVtbl;

    interface _SoapServices
    {
        CONST_VTBL struct _SoapServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapServices_INTERFACE_DEFINED__ */


#ifndef ___SoapDateTime_INTERFACE_DEFINED__
#define ___SoapDateTime_INTERFACE_DEFINED__

/* interface _SoapDateTime */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapDateTime;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1738ADBC-156E-3897-844F-C3147C528DEA")
    _SoapDateTime : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapDateTimeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapDateTime * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapDateTime * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapDateTime * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapDateTime * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapDateTime * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapDateTime * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapDateTime * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapDateTimeVtbl;

    interface _SoapDateTime
    {
        CONST_VTBL struct _SoapDateTimeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapDateTime_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapDateTime_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapDateTime_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapDateTime_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapDateTime_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapDateTime_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapDateTime_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapDateTime_INTERFACE_DEFINED__ */


#ifndef ___SoapDuration_INTERFACE_DEFINED__
#define ___SoapDuration_INTERFACE_DEFINED__

/* interface _SoapDuration */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapDuration;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7EF50DDB-32A5-30A1-B412-47FAB911404A")
    _SoapDuration : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapDurationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapDuration * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapDuration * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapDuration * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapDuration * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapDuration * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapDuration * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapDuration * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapDurationVtbl;

    interface _SoapDuration
    {
        CONST_VTBL struct _SoapDurationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapDuration_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapDuration_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapDuration_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapDuration_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapDuration_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapDuration_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapDuration_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapDuration_INTERFACE_DEFINED__ */


#ifndef ___SoapTime_INTERFACE_DEFINED__
#define ___SoapTime_INTERFACE_DEFINED__

/* interface _SoapTime */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapTime;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A3BF0BCD-EC32-38E6-92F2-5F37BAD8030D")
    _SoapTime : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapTimeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapTime * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapTime * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapTime * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapTime * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapTime * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapTime * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapTime * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapTimeVtbl;

    interface _SoapTime
    {
        CONST_VTBL struct _SoapTimeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapTime_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapTime_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapTime_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapTime_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapTime_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapTime_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapTime_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapTime_INTERFACE_DEFINED__ */


#ifndef ___SoapDate_INTERFACE_DEFINED__
#define ___SoapDate_INTERFACE_DEFINED__

/* interface _SoapDate */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapDate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("CFA6E9D2-B3DE-39A6-94D1-CC691DE193F8")
    _SoapDate : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapDateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapDate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapDate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapDate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapDate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapDate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapDate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapDate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapDateVtbl;

    interface _SoapDate
    {
        CONST_VTBL struct _SoapDateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapDate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapDate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapDate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapDate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapDate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapDate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapDate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapDate_INTERFACE_DEFINED__ */


#ifndef ___SoapYearMonth_INTERFACE_DEFINED__
#define ___SoapYearMonth_INTERFACE_DEFINED__

/* interface _SoapYearMonth */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapYearMonth;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("103C7EF9-A9EE-35FB-84C5-3086C9725A20")
    _SoapYearMonth : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapYearMonthVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapYearMonth * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapYearMonth * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapYearMonth * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapYearMonth * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapYearMonth * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapYearMonth * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapYearMonth * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapYearMonthVtbl;

    interface _SoapYearMonth
    {
        CONST_VTBL struct _SoapYearMonthVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapYearMonth_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapYearMonth_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapYearMonth_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapYearMonth_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapYearMonth_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapYearMonth_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapYearMonth_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapYearMonth_INTERFACE_DEFINED__ */


#ifndef ___SoapYear_INTERFACE_DEFINED__
#define ___SoapYear_INTERFACE_DEFINED__

/* interface _SoapYear */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapYear;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C20769F3-858D-316A-BE6D-C347A47948AD")
    _SoapYear : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapYearVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapYear * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapYear * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapYear * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapYear * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapYear * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapYear * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapYear * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapYearVtbl;

    interface _SoapYear
    {
        CONST_VTBL struct _SoapYearVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapYear_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapYear_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapYear_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapYear_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapYear_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapYear_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapYear_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapYear_INTERFACE_DEFINED__ */


#ifndef ___SoapMonthDay_INTERFACE_DEFINED__
#define ___SoapMonthDay_INTERFACE_DEFINED__

/* interface _SoapMonthDay */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapMonthDay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F9EAD0AA-4156-368F-AE05-FD59D70F758D")
    _SoapMonthDay : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapMonthDayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapMonthDay * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapMonthDay * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapMonthDay * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapMonthDay * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapMonthDay * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapMonthDay * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapMonthDay * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapMonthDayVtbl;

    interface _SoapMonthDay
    {
        CONST_VTBL struct _SoapMonthDayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapMonthDay_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapMonthDay_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapMonthDay_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapMonthDay_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapMonthDay_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapMonthDay_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapMonthDay_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapMonthDay_INTERFACE_DEFINED__ */


#ifndef ___SoapDay_INTERFACE_DEFINED__
#define ___SoapDay_INTERFACE_DEFINED__

/* interface _SoapDay */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapDay;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D9E8314D-5053-3497-8A33-97D3DCFE33E2")
    _SoapDay : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapDayVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapDay * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapDay * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapDay * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapDay * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapDay * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapDay * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapDay * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapDayVtbl;

    interface _SoapDay
    {
        CONST_VTBL struct _SoapDayVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapDay_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapDay_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapDay_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapDay_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapDay_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapDay_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapDay_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapDay_INTERFACE_DEFINED__ */


#ifndef ___SoapMonth_INTERFACE_DEFINED__
#define ___SoapMonth_INTERFACE_DEFINED__

/* interface _SoapMonth */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapMonth;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B4E32423-E473-3562-AA12-62FDE5A7D4A2")
    _SoapMonth : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapMonthVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapMonth * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapMonth * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapMonth * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapMonth * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapMonth * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapMonth * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapMonth * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapMonthVtbl;

    interface _SoapMonth
    {
        CONST_VTBL struct _SoapMonthVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapMonth_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapMonth_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapMonth_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapMonth_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapMonth_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapMonth_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapMonth_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapMonth_INTERFACE_DEFINED__ */


#ifndef ___SoapHexBinary_INTERFACE_DEFINED__
#define ___SoapHexBinary_INTERFACE_DEFINED__

/* interface _SoapHexBinary */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapHexBinary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63B9DA95-FB91-358A-B7B7-90C34AA34AB7")
    _SoapHexBinary : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapHexBinaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapHexBinary * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapHexBinary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapHexBinary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapHexBinary * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapHexBinary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapHexBinary * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapHexBinary * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapHexBinaryVtbl;

    interface _SoapHexBinary
    {
        CONST_VTBL struct _SoapHexBinaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapHexBinary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapHexBinary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapHexBinary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapHexBinary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapHexBinary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapHexBinary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapHexBinary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapHexBinary_INTERFACE_DEFINED__ */


#ifndef ___SoapBase64Binary_INTERFACE_DEFINED__
#define ___SoapBase64Binary_INTERFACE_DEFINED__

/* interface _SoapBase64Binary */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapBase64Binary;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8ED115A1-5E7B-34DC-AB85-90316F28015D")
    _SoapBase64Binary : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapBase64BinaryVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapBase64Binary * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapBase64Binary * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapBase64Binary * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapBase64Binary * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapBase64Binary * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapBase64Binary * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapBase64Binary * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapBase64BinaryVtbl;

    interface _SoapBase64Binary
    {
        CONST_VTBL struct _SoapBase64BinaryVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapBase64Binary_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapBase64Binary_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapBase64Binary_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapBase64Binary_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapBase64Binary_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapBase64Binary_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapBase64Binary_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapBase64Binary_INTERFACE_DEFINED__ */


#ifndef ___SoapInteger_INTERFACE_DEFINED__
#define ___SoapInteger_INTERFACE_DEFINED__

/* interface _SoapInteger */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapInteger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("30C65C40-4E54-3051-9D8F-4709B6AB214C")
    _SoapInteger : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapIntegerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapInteger * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapInteger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapInteger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapInteger * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapInteger * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapInteger * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapInteger * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapIntegerVtbl;

    interface _SoapInteger
    {
        CONST_VTBL struct _SoapIntegerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapInteger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapInteger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapInteger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapInteger_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapInteger_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapInteger_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapInteger_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapInteger_INTERFACE_DEFINED__ */


#ifndef ___SoapPositiveInteger_INTERFACE_DEFINED__
#define ___SoapPositiveInteger_INTERFACE_DEFINED__

/* interface _SoapPositiveInteger */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapPositiveInteger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4979EC29-C2B7-3AD6-986D-5AAF7344CC4E")
    _SoapPositiveInteger : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapPositiveIntegerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapPositiveInteger * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapPositiveInteger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapPositiveInteger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapPositiveInteger * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapPositiveInteger * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapPositiveInteger * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapPositiveInteger * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapPositiveIntegerVtbl;

    interface _SoapPositiveInteger
    {
        CONST_VTBL struct _SoapPositiveIntegerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapPositiveInteger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapPositiveInteger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapPositiveInteger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapPositiveInteger_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapPositiveInteger_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapPositiveInteger_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapPositiveInteger_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapPositiveInteger_INTERFACE_DEFINED__ */


#ifndef ___SoapNonPositiveInteger_INTERFACE_DEFINED__
#define ___SoapNonPositiveInteger_INTERFACE_DEFINED__

/* interface _SoapNonPositiveInteger */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNonPositiveInteger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AAF5401E-F71C-3FE3-8A73-A25074B20D3A")
    _SoapNonPositiveInteger : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNonPositiveIntegerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNonPositiveInteger * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNonPositiveInteger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNonPositiveInteger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNonPositiveInteger * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNonPositiveInteger * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNonPositiveInteger * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNonPositiveInteger * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNonPositiveIntegerVtbl;

    interface _SoapNonPositiveInteger
    {
        CONST_VTBL struct _SoapNonPositiveIntegerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNonPositiveInteger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNonPositiveInteger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNonPositiveInteger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNonPositiveInteger_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNonPositiveInteger_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNonPositiveInteger_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNonPositiveInteger_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNonPositiveInteger_INTERFACE_DEFINED__ */


#ifndef ___SoapNonNegativeInteger_INTERFACE_DEFINED__
#define ___SoapNonNegativeInteger_INTERFACE_DEFINED__

/* interface _SoapNonNegativeInteger */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNonNegativeInteger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BC261FC6-7132-3FB5-9AAC-224845D3AA99")
    _SoapNonNegativeInteger : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNonNegativeIntegerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNonNegativeInteger * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNonNegativeInteger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNonNegativeInteger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNonNegativeInteger * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNonNegativeInteger * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNonNegativeInteger * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNonNegativeInteger * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNonNegativeIntegerVtbl;

    interface _SoapNonNegativeInteger
    {
        CONST_VTBL struct _SoapNonNegativeIntegerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNonNegativeInteger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNonNegativeInteger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNonNegativeInteger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNonNegativeInteger_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNonNegativeInteger_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNonNegativeInteger_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNonNegativeInteger_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNonNegativeInteger_INTERFACE_DEFINED__ */


#ifndef ___SoapNegativeInteger_INTERFACE_DEFINED__
#define ___SoapNegativeInteger_INTERFACE_DEFINED__

/* interface _SoapNegativeInteger */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNegativeInteger;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E384AA10-A70C-3943-97CF-0F7C282C3BDC")
    _SoapNegativeInteger : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNegativeIntegerVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNegativeInteger * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNegativeInteger * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNegativeInteger * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNegativeInteger * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNegativeInteger * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNegativeInteger * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNegativeInteger * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNegativeIntegerVtbl;

    interface _SoapNegativeInteger
    {
        CONST_VTBL struct _SoapNegativeIntegerVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNegativeInteger_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNegativeInteger_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNegativeInteger_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNegativeInteger_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNegativeInteger_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNegativeInteger_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNegativeInteger_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNegativeInteger_INTERFACE_DEFINED__ */


#ifndef ___SoapAnyUri_INTERFACE_DEFINED__
#define ___SoapAnyUri_INTERFACE_DEFINED__

/* interface _SoapAnyUri */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapAnyUri;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("818EC118-BE7E-3CDE-92C8-44B99160920E")
    _SoapAnyUri : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapAnyUriVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapAnyUri * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapAnyUri * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapAnyUri * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapAnyUri * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapAnyUri * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapAnyUri * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapAnyUri * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapAnyUriVtbl;

    interface _SoapAnyUri
    {
        CONST_VTBL struct _SoapAnyUriVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapAnyUri_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapAnyUri_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapAnyUri_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapAnyUri_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapAnyUri_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapAnyUri_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapAnyUri_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapAnyUri_INTERFACE_DEFINED__ */


#ifndef ___SoapQName_INTERFACE_DEFINED__
#define ___SoapQName_INTERFACE_DEFINED__

/* interface _SoapQName */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapQName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3AC646B6-6B84-382F-9AED-22C2433244E6")
    _SoapQName : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapQNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapQName * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapQName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapQName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapQName * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapQName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapQName * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapQName * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapQNameVtbl;

    interface _SoapQName
    {
        CONST_VTBL struct _SoapQNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapQName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapQName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapQName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapQName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapQName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapQName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapQName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapQName_INTERFACE_DEFINED__ */


#ifndef ___SoapNotation_INTERFACE_DEFINED__
#define ___SoapNotation_INTERFACE_DEFINED__

/* interface _SoapNotation */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNotation;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("974F01F4-6086-3137-9448-6A31FC9BEF08")
    _SoapNotation : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNotationVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNotation * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNotation * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNotation * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNotation * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNotation * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNotation * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNotation * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNotationVtbl;

    interface _SoapNotation
    {
        CONST_VTBL struct _SoapNotationVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNotation_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNotation_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNotation_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNotation_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNotation_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNotation_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNotation_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNotation_INTERFACE_DEFINED__ */


#ifndef ___SoapNormalizedString_INTERFACE_DEFINED__
#define ___SoapNormalizedString_INTERFACE_DEFINED__

/* interface _SoapNormalizedString */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNormalizedString;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F4926B50-3F23-37E0-9AFA-AA91FF89A7BD")
    _SoapNormalizedString : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNormalizedStringVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNormalizedString * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNormalizedString * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNormalizedString * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNormalizedString * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNormalizedString * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNormalizedString * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNormalizedString * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNormalizedStringVtbl;

    interface _SoapNormalizedString
    {
        CONST_VTBL struct _SoapNormalizedStringVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNormalizedString_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNormalizedString_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNormalizedString_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNormalizedString_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNormalizedString_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNormalizedString_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNormalizedString_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNormalizedString_INTERFACE_DEFINED__ */


#ifndef ___SoapToken_INTERFACE_DEFINED__
#define ___SoapToken_INTERFACE_DEFINED__

/* interface _SoapToken */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapToken;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB4E97B9-651D-36F4-AABA-28ACF5746624")
    _SoapToken : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapTokenVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapToken * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapToken * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapToken * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapToken * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapToken * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapToken * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapToken * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapTokenVtbl;

    interface _SoapToken
    {
        CONST_VTBL struct _SoapTokenVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapToken_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapToken_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapToken_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapToken_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapToken_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapToken_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapToken_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapToken_INTERFACE_DEFINED__ */


#ifndef ___SoapLanguage_INTERFACE_DEFINED__
#define ___SoapLanguage_INTERFACE_DEFINED__

/* interface _SoapLanguage */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapLanguage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("14AED851-A168-3462-B877-8F9A01126653")
    _SoapLanguage : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapLanguageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapLanguage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapLanguage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapLanguage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapLanguage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapLanguage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapLanguage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapLanguage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapLanguageVtbl;

    interface _SoapLanguage
    {
        CONST_VTBL struct _SoapLanguageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapLanguage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapLanguage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapLanguage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapLanguage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapLanguage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapLanguage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapLanguage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapLanguage_INTERFACE_DEFINED__ */


#ifndef ___SoapName_INTERFACE_DEFINED__
#define ___SoapName_INTERFACE_DEFINED__

/* interface _SoapName */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5EB06BEF-4ADF-3CC1-A6F2-62F76886B13A")
    _SoapName : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapName * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapName * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapName * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapName * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNameVtbl;

    interface _SoapName
    {
        CONST_VTBL struct _SoapNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapName_INTERFACE_DEFINED__ */


#ifndef ___SoapIdrefs_INTERFACE_DEFINED__
#define ___SoapIdrefs_INTERFACE_DEFINED__

/* interface _SoapIdrefs */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapIdrefs;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7947A829-ADB5-34D0-9CC8-6C172742C803")
    _SoapIdrefs : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapIdrefsVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapIdrefs * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapIdrefs * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapIdrefs * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapIdrefs * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapIdrefs * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapIdrefs * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapIdrefs * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapIdrefsVtbl;

    interface _SoapIdrefs
    {
        CONST_VTBL struct _SoapIdrefsVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapIdrefs_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapIdrefs_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapIdrefs_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapIdrefs_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapIdrefs_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapIdrefs_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapIdrefs_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapIdrefs_INTERFACE_DEFINED__ */


#ifndef ___SoapEntities_INTERFACE_DEFINED__
#define ___SoapEntities_INTERFACE_DEFINED__

/* interface _SoapEntities */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapEntities;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("ACA96DA3-96ED-397E-8A72-EE1BE1025F5E")
    _SoapEntities : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapEntitiesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapEntities * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapEntities * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapEntities * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapEntities * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapEntities * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapEntities * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapEntities * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapEntitiesVtbl;

    interface _SoapEntities
    {
        CONST_VTBL struct _SoapEntitiesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapEntities_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapEntities_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapEntities_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapEntities_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapEntities_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapEntities_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapEntities_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapEntities_INTERFACE_DEFINED__ */


#ifndef ___SoapNmtoken_INTERFACE_DEFINED__
#define ___SoapNmtoken_INTERFACE_DEFINED__

/* interface _SoapNmtoken */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNmtoken;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E941FA15-E6C8-3DD4-B060-C0DDFBC0240A")
    _SoapNmtoken : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNmtokenVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNmtoken * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNmtoken * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNmtoken * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNmtoken * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNmtoken * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNmtoken * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNmtoken * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNmtokenVtbl;

    interface _SoapNmtoken
    {
        CONST_VTBL struct _SoapNmtokenVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNmtoken_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNmtoken_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNmtoken_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNmtoken_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNmtoken_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNmtoken_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNmtoken_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNmtoken_INTERFACE_DEFINED__ */


#ifndef ___SoapNmtokens_INTERFACE_DEFINED__
#define ___SoapNmtokens_INTERFACE_DEFINED__

/* interface _SoapNmtokens */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNmtokens;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A5E385AE-27FB-3708-BAF7-0BF1F3955747")
    _SoapNmtokens : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNmtokensVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNmtokens * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNmtokens * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNmtokens * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNmtokens * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNmtokens * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNmtokens * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNmtokens * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNmtokensVtbl;

    interface _SoapNmtokens
    {
        CONST_VTBL struct _SoapNmtokensVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNmtokens_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNmtokens_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNmtokens_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNmtokens_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNmtokens_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNmtokens_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNmtokens_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNmtokens_INTERFACE_DEFINED__ */


#ifndef ___SoapNcName_INTERFACE_DEFINED__
#define ___SoapNcName_INTERFACE_DEFINED__

/* interface _SoapNcName */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapNcName;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("725CDAF7-B739-35C1-8463-E2A923E1F618")
    _SoapNcName : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapNcNameVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapNcName * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapNcName * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapNcName * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapNcName * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapNcName * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapNcName * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapNcName * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapNcNameVtbl;

    interface _SoapNcName
    {
        CONST_VTBL struct _SoapNcNameVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapNcName_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapNcName_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapNcName_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapNcName_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapNcName_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapNcName_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapNcName_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapNcName_INTERFACE_DEFINED__ */


#ifndef ___SoapId_INTERFACE_DEFINED__
#define ___SoapId_INTERFACE_DEFINED__

/* interface _SoapId */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapId;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6A46B6A2-2D2C-3C67-AF67-AAE0175F17AE")
    _SoapId : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapIdVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapId * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapId * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapId * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapId * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapId * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapId * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapId * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapIdVtbl;

    interface _SoapId
    {
        CONST_VTBL struct _SoapIdVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapId_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapId_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapId_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapId_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapId_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapId_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapId_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapId_INTERFACE_DEFINED__ */


#ifndef ___SoapIdref_INTERFACE_DEFINED__
#define ___SoapIdref_INTERFACE_DEFINED__

/* interface _SoapIdref */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapIdref;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7DB7FD83-DE89-38E1-9645-D4CABDE694C0")
    _SoapIdref : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapIdrefVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapIdref * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapIdref * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapIdref * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapIdref * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapIdref * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapIdref * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapIdref * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapIdrefVtbl;

    interface _SoapIdref
    {
        CONST_VTBL struct _SoapIdrefVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapIdref_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapIdref_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapIdref_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapIdref_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapIdref_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapIdref_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapIdref_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapIdref_INTERFACE_DEFINED__ */


#ifndef ___SoapEntity_INTERFACE_DEFINED__
#define ___SoapEntity_INTERFACE_DEFINED__

/* interface _SoapEntity */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapEntity;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("37171746-B784-3586-A7D5-692A7604A66B")
    _SoapEntity : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapEntityVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapEntity * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapEntity * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapEntity * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapEntity * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapEntity * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapEntity * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapEntity * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapEntityVtbl;

    interface _SoapEntity
    {
        CONST_VTBL struct _SoapEntityVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapEntity_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapEntity_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapEntity_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapEntity_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapEntity_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapEntity_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapEntity_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapEntity_INTERFACE_DEFINED__ */


#ifndef ___SynchronizationAttribute_INTERFACE_DEFINED__
#define ___SynchronizationAttribute_INTERFACE_DEFINED__

/* interface _SynchronizationAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SynchronizationAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2D985674-231C-33D4-B14D-F3A6BD2EBE19")
    _SynchronizationAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SynchronizationAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SynchronizationAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SynchronizationAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SynchronizationAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SynchronizationAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SynchronizationAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SynchronizationAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SynchronizationAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SynchronizationAttributeVtbl;

    interface _SynchronizationAttribute
    {
        CONST_VTBL struct _SynchronizationAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SynchronizationAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SynchronizationAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SynchronizationAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SynchronizationAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SynchronizationAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SynchronizationAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SynchronizationAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SynchronizationAttribute_INTERFACE_DEFINED__ */


#ifndef ___TrackingServices_INTERFACE_DEFINED__
#define ___TrackingServices_INTERFACE_DEFINED__

/* interface _TrackingServices */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TrackingServices;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F51728F2-2DEF-308C-874A-CBB1BAA9CF9E")
    _TrackingServices : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TrackingServicesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TrackingServices * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TrackingServices * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TrackingServices * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TrackingServices * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TrackingServices * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TrackingServices * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TrackingServices * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TrackingServicesVtbl;

    interface _TrackingServices
    {
        CONST_VTBL struct _TrackingServicesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TrackingServices_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TrackingServices_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TrackingServices_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TrackingServices_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TrackingServices_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TrackingServices_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TrackingServices_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TrackingServices_INTERFACE_DEFINED__ */


#ifndef ___UrlAttribute_INTERFACE_DEFINED__
#define ___UrlAttribute_INTERFACE_DEFINED__

/* interface _UrlAttribute */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UrlAttribute;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("717105A3-739B-3BC3-A2B7-AD215903FAD2")
    _UrlAttribute : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UrlAttributeVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UrlAttribute * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UrlAttribute * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UrlAttribute * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UrlAttribute * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UrlAttribute * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UrlAttribute * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UrlAttribute * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UrlAttributeVtbl;

    interface _UrlAttribute
    {
        CONST_VTBL struct _UrlAttributeVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UrlAttribute_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UrlAttribute_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UrlAttribute_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UrlAttribute_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UrlAttribute_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UrlAttribute_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UrlAttribute_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UrlAttribute_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStorage_INTERFACE_DEFINED__
#define ___IsolatedStorage_INTERFACE_DEFINED__

/* interface _IsolatedStorage */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStorage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("34EC3BD7-F2F6-3C20-A639-804BFF89DF65")
    _IsolatedStorage : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStorageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStorage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStorage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStorage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStorage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStorage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStorage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStorage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStorageVtbl;

    interface _IsolatedStorage
    {
        CONST_VTBL struct _IsolatedStorageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStorage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStorage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStorage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStorage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStorage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStorage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStorage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStorage_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStorageFile_INTERFACE_DEFINED__
#define ___IsolatedStorageFile_INTERFACE_DEFINED__

/* interface _IsolatedStorageFile */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStorageFile;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("6BBB7DEE-186F-3D51-9486-BE0A71E915CE")
    _IsolatedStorageFile : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStorageFileVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStorageFile * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStorageFile * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStorageFile * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStorageFile * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStorageFile * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStorageFile * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStorageFile * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStorageFileVtbl;

    interface _IsolatedStorageFile
    {
        CONST_VTBL struct _IsolatedStorageFileVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStorageFile_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStorageFile_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStorageFile_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStorageFile_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStorageFile_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStorageFile_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStorageFile_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStorageFile_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStorageFileStream_INTERFACE_DEFINED__
#define ___IsolatedStorageFileStream_INTERFACE_DEFINED__

/* interface _IsolatedStorageFileStream */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStorageFileStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("68D5592B-47C8-381A-8D51-3925C16CF025")
    _IsolatedStorageFileStream : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStorageFileStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStorageFileStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStorageFileStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStorageFileStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStorageFileStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStorageFileStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStorageFileStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStorageFileStream * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStorageFileStreamVtbl;

    interface _IsolatedStorageFileStream
    {
        CONST_VTBL struct _IsolatedStorageFileStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStorageFileStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStorageFileStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStorageFileStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStorageFileStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStorageFileStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStorageFileStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStorageFileStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStorageFileStream_INTERFACE_DEFINED__ */


#ifndef ___IsolatedStorageException_INTERFACE_DEFINED__
#define ___IsolatedStorageException_INTERFACE_DEFINED__

/* interface _IsolatedStorageException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__IsolatedStorageException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AEC2B0DE-9898-3607-B845-63E2E307CB5F")
    _IsolatedStorageException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _IsolatedStorageExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _IsolatedStorageException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _IsolatedStorageException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _IsolatedStorageException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _IsolatedStorageException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _IsolatedStorageException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _IsolatedStorageException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _IsolatedStorageException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _IsolatedStorageExceptionVtbl;

    interface _IsolatedStorageException
    {
        CONST_VTBL struct _IsolatedStorageExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _IsolatedStorageException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _IsolatedStorageException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _IsolatedStorageException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _IsolatedStorageException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _IsolatedStorageException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _IsolatedStorageException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _IsolatedStorageException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___IsolatedStorageException_INTERFACE_DEFINED__ */


#ifndef ___InternalRM_INTERFACE_DEFINED__
#define ___InternalRM_INTERFACE_DEFINED__

/* interface _InternalRM */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InternalRM;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("361A5049-1BC8-35A9-946A-53A877902F25")
    _InternalRM : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InternalRMVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InternalRM * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InternalRM * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InternalRM * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InternalRM * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InternalRM * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InternalRM * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InternalRM * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InternalRMVtbl;

    interface _InternalRM
    {
        CONST_VTBL struct _InternalRMVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InternalRM_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InternalRM_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InternalRM_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InternalRM_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InternalRM_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InternalRM_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InternalRM_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InternalRM_INTERFACE_DEFINED__ */


#ifndef ___InternalST_INTERFACE_DEFINED__
#define ___InternalST_INTERFACE_DEFINED__

/* interface _InternalST */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__InternalST;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A864FB13-F945-3DC0-A01C-B903F944FC97")
    _InternalST : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _InternalSTVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _InternalST * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _InternalST * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _InternalST * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _InternalST * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _InternalST * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _InternalST * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _InternalST * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _InternalSTVtbl;

    interface _InternalST
    {
        CONST_VTBL struct _InternalSTVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _InternalST_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _InternalST_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _InternalST_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _InternalST_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _InternalST_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _InternalST_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _InternalST_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___InternalST_INTERFACE_DEFINED__ */


#ifndef ___SoapMessage_INTERFACE_DEFINED__
#define ___SoapMessage_INTERFACE_DEFINED__

/* interface _SoapMessage */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapMessage;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BC0847B2-BD5C-37B3-BA67-7D2D54B17238")
    _SoapMessage : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapMessageVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapMessage * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapMessage * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapMessage * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapMessage * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapMessage * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapMessage * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapMessage * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapMessageVtbl;

    interface _SoapMessage
    {
        CONST_VTBL struct _SoapMessageVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapMessage_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapMessage_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapMessage_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapMessage_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapMessage_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapMessage_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapMessage_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapMessage_INTERFACE_DEFINED__ */


#ifndef ___SoapFault_INTERFACE_DEFINED__
#define ___SoapFault_INTERFACE_DEFINED__

/* interface _SoapFault */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SoapFault;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A1C392FC-314C-39D5-8DE6-1F8EBCA0A1E2")
    _SoapFault : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SoapFaultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SoapFault * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SoapFault * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SoapFault * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SoapFault * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SoapFault * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SoapFault * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SoapFault * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SoapFaultVtbl;

    interface _SoapFault
    {
        CONST_VTBL struct _SoapFaultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SoapFault_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SoapFault_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SoapFault_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SoapFault_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SoapFault_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SoapFault_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SoapFault_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SoapFault_INTERFACE_DEFINED__ */


#ifndef ___ServerFault_INTERFACE_DEFINED__
#define ___ServerFault_INTERFACE_DEFINED__

/* interface _ServerFault */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ServerFault;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("02D1BD78-3BB6-37AD-A9F8-F7D5DA273E4E")
    _ServerFault : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ServerFaultVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ServerFault * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ServerFault * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ServerFault * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ServerFault * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ServerFault * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ServerFault * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ServerFault * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ServerFaultVtbl;

    interface _ServerFault
    {
        CONST_VTBL struct _ServerFaultVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ServerFault_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ServerFault_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ServerFault_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ServerFault_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ServerFault_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ServerFault_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ServerFault_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ServerFault_INTERFACE_DEFINED__ */


#ifndef ___BinaryFormatter_INTERFACE_DEFINED__
#define ___BinaryFormatter_INTERFACE_DEFINED__

/* interface _BinaryFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__BinaryFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3BCF0CB2-A849-375E-8189-1BA5F1F4A9B0")
    _BinaryFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _BinaryFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _BinaryFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _BinaryFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _BinaryFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _BinaryFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _BinaryFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _BinaryFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _BinaryFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _BinaryFormatterVtbl;

    interface _BinaryFormatter
    {
        CONST_VTBL struct _BinaryFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _BinaryFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _BinaryFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _BinaryFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _BinaryFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _BinaryFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _BinaryFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _BinaryFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___BinaryFormatter_INTERFACE_DEFINED__ */


#ifndef ___DynamicILInfo_INTERFACE_DEFINED__
#define ___DynamicILInfo_INTERFACE_DEFINED__

/* interface _DynamicILInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DynamicILInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0DAEAEE7-007B-3FCA-8755-A5C6C3158955")
    _DynamicILInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DynamicILInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DynamicILInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DynamicILInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DynamicILInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DynamicILInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DynamicILInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DynamicILInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DynamicILInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DynamicILInfoVtbl;

    interface _DynamicILInfo
    {
        CONST_VTBL struct _DynamicILInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DynamicILInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DynamicILInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DynamicILInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DynamicILInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DynamicILInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DynamicILInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DynamicILInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DynamicILInfo_INTERFACE_DEFINED__ */


#ifndef ___DynamicMethod_INTERFACE_DEFINED__
#define ___DynamicMethod_INTERFACE_DEFINED__

/* interface _DynamicMethod */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DynamicMethod;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EAAA2670-0FB1-33EA-852B-F1C97FED1797")
    _DynamicMethod : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DynamicMethodVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DynamicMethod * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DynamicMethod * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DynamicMethod * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DynamicMethod * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DynamicMethod * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DynamicMethod * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DynamicMethod * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DynamicMethodVtbl;

    interface _DynamicMethod
    {
        CONST_VTBL struct _DynamicMethodVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DynamicMethod_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DynamicMethod_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DynamicMethod_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DynamicMethod_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DynamicMethod_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DynamicMethod_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DynamicMethod_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DynamicMethod_INTERFACE_DEFINED__ */


#ifndef ___OpCodes_INTERFACE_DEFINED__
#define ___OpCodes_INTERFACE_DEFINED__

/* interface _OpCodes */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__OpCodes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1DB1CC2A-DA73-389E-828B-5C616F4FAC49")
    _OpCodes : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _OpCodesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _OpCodes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _OpCodes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _OpCodes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _OpCodes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _OpCodes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _OpCodes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _OpCodes * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _OpCodesVtbl;

    interface _OpCodes
    {
        CONST_VTBL struct _OpCodesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _OpCodes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _OpCodes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _OpCodes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _OpCodes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _OpCodes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _OpCodes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _OpCodes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___OpCodes_INTERFACE_DEFINED__ */


#ifndef ___GenericTypeParameterBuilder_INTERFACE_DEFINED__
#define ___GenericTypeParameterBuilder_INTERFACE_DEFINED__

/* interface _GenericTypeParameterBuilder */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__GenericTypeParameterBuilder;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B1A62835-FC19-35A4-B206-A452463D7EE7")
    _GenericTypeParameterBuilder : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _GenericTypeParameterBuilderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _GenericTypeParameterBuilder * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _GenericTypeParameterBuilder * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _GenericTypeParameterBuilder * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _GenericTypeParameterBuilder * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _GenericTypeParameterBuilder * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _GenericTypeParameterBuilder * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _GenericTypeParameterBuilder * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _GenericTypeParameterBuilderVtbl;

    interface _GenericTypeParameterBuilder
    {
        CONST_VTBL struct _GenericTypeParameterBuilderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _GenericTypeParameterBuilder_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _GenericTypeParameterBuilder_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _GenericTypeParameterBuilder_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _GenericTypeParameterBuilder_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _GenericTypeParameterBuilder_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _GenericTypeParameterBuilder_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _GenericTypeParameterBuilder_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___GenericTypeParameterBuilder_INTERFACE_DEFINED__ */


#ifndef ___UnmanagedMarshal_INTERFACE_DEFINED__
#define ___UnmanagedMarshal_INTERFACE_DEFINED__

/* interface _UnmanagedMarshal */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__UnmanagedMarshal;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FD302D86-240A-3694-A31F-9EF59E6E41BC")
    _UnmanagedMarshal : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _UnmanagedMarshalVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _UnmanagedMarshal * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _UnmanagedMarshal * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _UnmanagedMarshal * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _UnmanagedMarshal * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _UnmanagedMarshal * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _UnmanagedMarshal * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _UnmanagedMarshal * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _UnmanagedMarshalVtbl;

    interface _UnmanagedMarshal
    {
        CONST_VTBL struct _UnmanagedMarshalVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _UnmanagedMarshal_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _UnmanagedMarshal_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _UnmanagedMarshal_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _UnmanagedMarshal_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _UnmanagedMarshal_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _UnmanagedMarshal_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _UnmanagedMarshal_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___UnmanagedMarshal_INTERFACE_DEFINED__ */


#ifndef ___KeySizes_INTERFACE_DEFINED__
#define ___KeySizes_INTERFACE_DEFINED__

/* interface _KeySizes */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeySizes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8978B0BE-A89E-3FF9-9834-77862CEBFF3D")
    _KeySizes : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeySizesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeySizes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeySizes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeySizes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeySizes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeySizes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeySizes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeySizes * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeySizesVtbl;

    interface _KeySizes
    {
        CONST_VTBL struct _KeySizesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeySizes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeySizes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeySizes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeySizes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeySizes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeySizes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeySizes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeySizes_INTERFACE_DEFINED__ */


#ifndef ___CryptographicException_INTERFACE_DEFINED__
#define ___CryptographicException_INTERFACE_DEFINED__

/* interface _CryptographicException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CryptographicException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4311E8F5-B249-3F81-8FF4-CF853D85306D")
    _CryptographicException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CryptographicExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CryptographicException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CryptographicException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CryptographicException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CryptographicException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CryptographicException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CryptographicException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CryptographicException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CryptographicExceptionVtbl;

    interface _CryptographicException
    {
        CONST_VTBL struct _CryptographicExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CryptographicException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CryptographicException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CryptographicException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CryptographicException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CryptographicException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CryptographicException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CryptographicException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CryptographicException_INTERFACE_DEFINED__ */


#ifndef ___CryptographicUnexpectedOperationException_INTERFACE_DEFINED__
#define ___CryptographicUnexpectedOperationException_INTERFACE_DEFINED__

/* interface _CryptographicUnexpectedOperationException */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CryptographicUnexpectedOperationException;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7FB08423-038F-3ACC-B600-E6D072BAE160")
    _CryptographicUnexpectedOperationException : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CryptographicUnexpectedOperationExceptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CryptographicUnexpectedOperationException * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CryptographicUnexpectedOperationException * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CryptographicUnexpectedOperationException * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CryptographicUnexpectedOperationException * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CryptographicUnexpectedOperationException * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CryptographicUnexpectedOperationException * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CryptographicUnexpectedOperationException * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CryptographicUnexpectedOperationExceptionVtbl;

    interface _CryptographicUnexpectedOperationException
    {
        CONST_VTBL struct _CryptographicUnexpectedOperationExceptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CryptographicUnexpectedOperationException_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CryptographicUnexpectedOperationException_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CryptographicUnexpectedOperationException_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CryptographicUnexpectedOperationException_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CryptographicUnexpectedOperationException_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CryptographicUnexpectedOperationException_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CryptographicUnexpectedOperationException_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CryptographicUnexpectedOperationException_INTERFACE_DEFINED__ */


#ifndef ___RandomNumberGenerator_INTERFACE_DEFINED__
#define ___RandomNumberGenerator_INTERFACE_DEFINED__

/* interface _RandomNumberGenerator */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RandomNumberGenerator;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7AE4B03C-414A-36E0-BA68-F9603004C925")
    _RandomNumberGenerator : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RandomNumberGeneratorVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RandomNumberGenerator * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RandomNumberGenerator * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RandomNumberGenerator * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RandomNumberGenerator * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RandomNumberGenerator * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RandomNumberGenerator * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RandomNumberGenerator * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RandomNumberGeneratorVtbl;

    interface _RandomNumberGenerator
    {
        CONST_VTBL struct _RandomNumberGeneratorVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RandomNumberGenerator_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RandomNumberGenerator_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RandomNumberGenerator_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RandomNumberGenerator_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RandomNumberGenerator_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RandomNumberGenerator_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RandomNumberGenerator_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RandomNumberGenerator_INTERFACE_DEFINED__ */


#ifndef ___RNGCryptoServiceProvider_INTERFACE_DEFINED__
#define ___RNGCryptoServiceProvider_INTERFACE_DEFINED__

/* interface _RNGCryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RNGCryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("2C65D4C0-584C-3E4E-8E6D-1AFB112BFF69")
    _RNGCryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RNGCryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RNGCryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RNGCryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RNGCryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RNGCryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RNGCryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RNGCryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RNGCryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RNGCryptoServiceProviderVtbl;

    interface _RNGCryptoServiceProvider
    {
        CONST_VTBL struct _RNGCryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RNGCryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RNGCryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RNGCryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RNGCryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RNGCryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RNGCryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RNGCryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RNGCryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___AsymmetricAlgorithm_INTERFACE_DEFINED__
#define ___AsymmetricAlgorithm_INTERFACE_DEFINED__

/* interface _AsymmetricAlgorithm */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsymmetricAlgorithm;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("09343AC0-D19A-3E62-BC16-0F600F10180A")
    _AsymmetricAlgorithm : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsymmetricAlgorithmVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsymmetricAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsymmetricAlgorithm * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsymmetricAlgorithm * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsymmetricAlgorithm * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsymmetricAlgorithm * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsymmetricAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsymmetricAlgorithm * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsymmetricAlgorithmVtbl;

    interface _AsymmetricAlgorithm
    {
        CONST_VTBL struct _AsymmetricAlgorithmVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsymmetricAlgorithm_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsymmetricAlgorithm_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsymmetricAlgorithm_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsymmetricAlgorithm_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsymmetricAlgorithm_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsymmetricAlgorithm_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsymmetricAlgorithm_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsymmetricAlgorithm_INTERFACE_DEFINED__ */


#ifndef ___AsymmetricKeyExchangeDeformatter_INTERFACE_DEFINED__
#define ___AsymmetricKeyExchangeDeformatter_INTERFACE_DEFINED__

/* interface _AsymmetricKeyExchangeDeformatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsymmetricKeyExchangeDeformatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B6685CCA-7A49-37D1-A805-3DE829CB8DEB")
    _AsymmetricKeyExchangeDeformatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsymmetricKeyExchangeDeformatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsymmetricKeyExchangeDeformatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsymmetricKeyExchangeDeformatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsymmetricKeyExchangeDeformatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsymmetricKeyExchangeDeformatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsymmetricKeyExchangeDeformatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsymmetricKeyExchangeDeformatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsymmetricKeyExchangeDeformatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsymmetricKeyExchangeDeformatterVtbl;

    interface _AsymmetricKeyExchangeDeformatter
    {
        CONST_VTBL struct _AsymmetricKeyExchangeDeformatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsymmetricKeyExchangeDeformatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsymmetricKeyExchangeDeformatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsymmetricKeyExchangeDeformatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsymmetricKeyExchangeDeformatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsymmetricKeyExchangeDeformatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsymmetricKeyExchangeDeformatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsymmetricKeyExchangeDeformatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsymmetricKeyExchangeDeformatter_INTERFACE_DEFINED__ */


#ifndef ___AsymmetricKeyExchangeFormatter_INTERFACE_DEFINED__
#define ___AsymmetricKeyExchangeFormatter_INTERFACE_DEFINED__

/* interface _AsymmetricKeyExchangeFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsymmetricKeyExchangeFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1365B84B-6477-3C40-BE6A-089DC01ECED9")
    _AsymmetricKeyExchangeFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsymmetricKeyExchangeFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsymmetricKeyExchangeFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsymmetricKeyExchangeFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsymmetricKeyExchangeFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsymmetricKeyExchangeFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsymmetricKeyExchangeFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsymmetricKeyExchangeFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsymmetricKeyExchangeFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsymmetricKeyExchangeFormatterVtbl;

    interface _AsymmetricKeyExchangeFormatter
    {
        CONST_VTBL struct _AsymmetricKeyExchangeFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsymmetricKeyExchangeFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsymmetricKeyExchangeFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsymmetricKeyExchangeFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsymmetricKeyExchangeFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsymmetricKeyExchangeFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsymmetricKeyExchangeFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsymmetricKeyExchangeFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsymmetricKeyExchangeFormatter_INTERFACE_DEFINED__ */


#ifndef ___AsymmetricSignatureDeformatter_INTERFACE_DEFINED__
#define ___AsymmetricSignatureDeformatter_INTERFACE_DEFINED__

/* interface _AsymmetricSignatureDeformatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsymmetricSignatureDeformatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("7CA5FE57-D1AC-3064-BB0B-F450BE40F194")
    _AsymmetricSignatureDeformatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsymmetricSignatureDeformatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsymmetricSignatureDeformatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsymmetricSignatureDeformatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsymmetricSignatureDeformatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsymmetricSignatureDeformatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsymmetricSignatureDeformatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsymmetricSignatureDeformatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsymmetricSignatureDeformatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsymmetricSignatureDeformatterVtbl;

    interface _AsymmetricSignatureDeformatter
    {
        CONST_VTBL struct _AsymmetricSignatureDeformatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsymmetricSignatureDeformatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsymmetricSignatureDeformatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsymmetricSignatureDeformatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsymmetricSignatureDeformatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsymmetricSignatureDeformatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsymmetricSignatureDeformatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsymmetricSignatureDeformatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsymmetricSignatureDeformatter_INTERFACE_DEFINED__ */


#ifndef ___AsymmetricSignatureFormatter_INTERFACE_DEFINED__
#define ___AsymmetricSignatureFormatter_INTERFACE_DEFINED__

/* interface _AsymmetricSignatureFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__AsymmetricSignatureFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5363D066-6295-3618-BE33-3F0B070B7976")
    _AsymmetricSignatureFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _AsymmetricSignatureFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _AsymmetricSignatureFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _AsymmetricSignatureFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _AsymmetricSignatureFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _AsymmetricSignatureFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _AsymmetricSignatureFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _AsymmetricSignatureFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _AsymmetricSignatureFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _AsymmetricSignatureFormatterVtbl;

    interface _AsymmetricSignatureFormatter
    {
        CONST_VTBL struct _AsymmetricSignatureFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _AsymmetricSignatureFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _AsymmetricSignatureFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _AsymmetricSignatureFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _AsymmetricSignatureFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _AsymmetricSignatureFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _AsymmetricSignatureFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _AsymmetricSignatureFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___AsymmetricSignatureFormatter_INTERFACE_DEFINED__ */


#ifndef ___ToBase64Transform_INTERFACE_DEFINED__
#define ___ToBase64Transform_INTERFACE_DEFINED__

/* interface _ToBase64Transform */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__ToBase64Transform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("23DED1E1-7D5F-3936-AA4E-18BBCC39B155")
    _ToBase64Transform : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _ToBase64TransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _ToBase64Transform * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _ToBase64Transform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _ToBase64Transform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _ToBase64Transform * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _ToBase64Transform * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _ToBase64Transform * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _ToBase64Transform * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _ToBase64TransformVtbl;

    interface _ToBase64Transform
    {
        CONST_VTBL struct _ToBase64TransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _ToBase64Transform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _ToBase64Transform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _ToBase64Transform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _ToBase64Transform_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _ToBase64Transform_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _ToBase64Transform_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _ToBase64Transform_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___ToBase64Transform_INTERFACE_DEFINED__ */


#ifndef ___FromBase64Transform_INTERFACE_DEFINED__
#define ___FromBase64Transform_INTERFACE_DEFINED__

/* interface _FromBase64Transform */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__FromBase64Transform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FC0717A6-2E86-372F-81F4-B35ED4BDF0DE")
    _FromBase64Transform : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _FromBase64TransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _FromBase64Transform * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _FromBase64Transform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _FromBase64Transform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _FromBase64Transform * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _FromBase64Transform * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _FromBase64Transform * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _FromBase64Transform * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _FromBase64TransformVtbl;

    interface _FromBase64Transform
    {
        CONST_VTBL struct _FromBase64TransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _FromBase64Transform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _FromBase64Transform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _FromBase64Transform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _FromBase64Transform_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _FromBase64Transform_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _FromBase64Transform_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _FromBase64Transform_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___FromBase64Transform_INTERFACE_DEFINED__ */


#ifndef ___CryptoAPITransform_INTERFACE_DEFINED__
#define ___CryptoAPITransform_INTERFACE_DEFINED__

/* interface _CryptoAPITransform */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CryptoAPITransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("983B8639-2ED7-364C-9899-682ABB2CE850")
    _CryptoAPITransform : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CryptoAPITransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CryptoAPITransform * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CryptoAPITransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CryptoAPITransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CryptoAPITransform * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CryptoAPITransform * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CryptoAPITransform * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CryptoAPITransform * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CryptoAPITransformVtbl;

    interface _CryptoAPITransform
    {
        CONST_VTBL struct _CryptoAPITransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CryptoAPITransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CryptoAPITransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CryptoAPITransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CryptoAPITransform_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CryptoAPITransform_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CryptoAPITransform_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CryptoAPITransform_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CryptoAPITransform_INTERFACE_DEFINED__ */


#ifndef ___CspParameters_INTERFACE_DEFINED__
#define ___CspParameters_INTERFACE_DEFINED__

/* interface _CspParameters */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CspParameters;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D5331D95-FFF2-358F-AFD5-588F469FF2E4")
    _CspParameters : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CspParametersVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CspParameters * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CspParameters * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CspParameters * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CspParameters * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CspParameters * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CspParameters * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CspParameters * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CspParametersVtbl;

    interface _CspParameters
    {
        CONST_VTBL struct _CspParametersVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CspParameters_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CspParameters_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CspParameters_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CspParameters_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CspParameters_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CspParameters_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CspParameters_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CspParameters_INTERFACE_DEFINED__ */


#ifndef ___CryptoConfig_INTERFACE_DEFINED__
#define ___CryptoConfig_INTERFACE_DEFINED__

/* interface _CryptoConfig */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CryptoConfig;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("AB00F3F8-7DDE-3FF5-B805-6C5DBB200549")
    _CryptoConfig : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CryptoConfigVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CryptoConfig * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CryptoConfig * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CryptoConfig * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CryptoConfig * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CryptoConfig * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CryptoConfig * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CryptoConfig * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CryptoConfigVtbl;

    interface _CryptoConfig
    {
        CONST_VTBL struct _CryptoConfigVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CryptoConfig_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CryptoConfig_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CryptoConfig_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CryptoConfig_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CryptoConfig_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CryptoConfig_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CryptoConfig_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CryptoConfig_INTERFACE_DEFINED__ */


#ifndef ___CryptoStream_INTERFACE_DEFINED__
#define ___CryptoStream_INTERFACE_DEFINED__

/* interface _CryptoStream */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CryptoStream;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4134F762-D0EC-3210-93C0-DE4F443D5669")
    _CryptoStream : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CryptoStreamVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CryptoStream * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CryptoStream * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CryptoStream * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CryptoStream * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CryptoStream * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CryptoStream * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CryptoStream * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CryptoStreamVtbl;

    interface _CryptoStream
    {
        CONST_VTBL struct _CryptoStreamVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CryptoStream_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CryptoStream_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CryptoStream_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CryptoStream_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CryptoStream_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CryptoStream_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CryptoStream_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CryptoStream_INTERFACE_DEFINED__ */


#ifndef ___SymmetricAlgorithm_INTERFACE_DEFINED__
#define ___SymmetricAlgorithm_INTERFACE_DEFINED__

/* interface _SymmetricAlgorithm */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SymmetricAlgorithm;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("05BC0E38-7136-3825-9E34-26C1CF2142C9")
    _SymmetricAlgorithm : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SymmetricAlgorithmVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SymmetricAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SymmetricAlgorithm * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SymmetricAlgorithm * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SymmetricAlgorithm * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SymmetricAlgorithm * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SymmetricAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SymmetricAlgorithm * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SymmetricAlgorithmVtbl;

    interface _SymmetricAlgorithm
    {
        CONST_VTBL struct _SymmetricAlgorithmVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SymmetricAlgorithm_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SymmetricAlgorithm_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SymmetricAlgorithm_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SymmetricAlgorithm_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SymmetricAlgorithm_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SymmetricAlgorithm_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SymmetricAlgorithm_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SymmetricAlgorithm_INTERFACE_DEFINED__ */


#ifndef ___DES_INTERFACE_DEFINED__
#define ___DES_INTERFACE_DEFINED__

/* interface _DES */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DES;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C7EF0214-B91C-3799-98DD-C994AABFC741")
    _DES : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DESVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DES * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DES * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DES * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DES * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DES * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DES * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DES * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DESVtbl;

    interface _DES
    {
        CONST_VTBL struct _DESVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DES_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DES_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DES_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DES_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DES_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DES_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DES_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DES_INTERFACE_DEFINED__ */


#ifndef ___DESCryptoServiceProvider_INTERFACE_DEFINED__
#define ___DESCryptoServiceProvider_INTERFACE_DEFINED__

/* interface _DESCryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DESCryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("65E8495E-5207-3248-9250-0FC849B4F096")
    _DESCryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DESCryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DESCryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DESCryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DESCryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DESCryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DESCryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DESCryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DESCryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DESCryptoServiceProviderVtbl;

    interface _DESCryptoServiceProvider
    {
        CONST_VTBL struct _DESCryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DESCryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DESCryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DESCryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DESCryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DESCryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DESCryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DESCryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DESCryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___DeriveBytes_INTERFACE_DEFINED__
#define ___DeriveBytes_INTERFACE_DEFINED__

/* interface _DeriveBytes */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DeriveBytes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("140EE78F-067F-3765-9258-C3BC72FE976B")
    _DeriveBytes : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DeriveBytesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DeriveBytes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DeriveBytes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DeriveBytes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DeriveBytes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DeriveBytes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DeriveBytes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DeriveBytes * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DeriveBytesVtbl;

    interface _DeriveBytes
    {
        CONST_VTBL struct _DeriveBytesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DeriveBytes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DeriveBytes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DeriveBytes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DeriveBytes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DeriveBytes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DeriveBytes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DeriveBytes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DeriveBytes_INTERFACE_DEFINED__ */


#ifndef ___DSA_INTERFACE_DEFINED__
#define ___DSA_INTERFACE_DEFINED__

/* interface _DSA */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DSA;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0EB5B5E0-1BE6-3A5F-87B3-E3323342F44E")
    _DSA : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DSAVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DSA * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DSA * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DSA * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DSA * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DSA * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DSA * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DSA * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DSAVtbl;

    interface _DSA
    {
        CONST_VTBL struct _DSAVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DSA_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DSA_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DSA_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DSA_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DSA_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DSA_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DSA_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DSA_INTERFACE_DEFINED__ */


#ifndef ___DSACryptoServiceProvider_INTERFACE_DEFINED__
#define ___DSACryptoServiceProvider_INTERFACE_DEFINED__

/* interface _DSACryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DSACryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1F38AAFE-7502-332F-971F-C2FC700A1D55")
    _DSACryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DSACryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DSACryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DSACryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DSACryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DSACryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DSACryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DSACryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DSACryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DSACryptoServiceProviderVtbl;

    interface _DSACryptoServiceProvider
    {
        CONST_VTBL struct _DSACryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DSACryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DSACryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DSACryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DSACryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DSACryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DSACryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DSACryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DSACryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___DSASignatureDeformatter_INTERFACE_DEFINED__
#define ___DSASignatureDeformatter_INTERFACE_DEFINED__

/* interface _DSASignatureDeformatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DSASignatureDeformatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0E774498-ADE6-3820-B1D5-426B06397BE7")
    _DSASignatureDeformatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DSASignatureDeformatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DSASignatureDeformatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DSASignatureDeformatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DSASignatureDeformatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DSASignatureDeformatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DSASignatureDeformatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DSASignatureDeformatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DSASignatureDeformatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DSASignatureDeformatterVtbl;

    interface _DSASignatureDeformatter
    {
        CONST_VTBL struct _DSASignatureDeformatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DSASignatureDeformatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DSASignatureDeformatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DSASignatureDeformatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DSASignatureDeformatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DSASignatureDeformatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DSASignatureDeformatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DSASignatureDeformatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DSASignatureDeformatter_INTERFACE_DEFINED__ */


#ifndef ___DSASignatureFormatter_INTERFACE_DEFINED__
#define ___DSASignatureFormatter_INTERFACE_DEFINED__

/* interface _DSASignatureFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__DSASignatureFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("4B5FC561-5983-31E4-903B-1404231B2C89")
    _DSASignatureFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _DSASignatureFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _DSASignatureFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _DSASignatureFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _DSASignatureFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _DSASignatureFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _DSASignatureFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _DSASignatureFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _DSASignatureFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _DSASignatureFormatterVtbl;

    interface _DSASignatureFormatter
    {
        CONST_VTBL struct _DSASignatureFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _DSASignatureFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _DSASignatureFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _DSASignatureFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _DSASignatureFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _DSASignatureFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _DSASignatureFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _DSASignatureFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___DSASignatureFormatter_INTERFACE_DEFINED__ */


#ifndef ___HashAlgorithm_INTERFACE_DEFINED__
#define ___HashAlgorithm_INTERFACE_DEFINED__

/* interface _HashAlgorithm */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HashAlgorithm;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("69D3BABA-1C3D-354C-ACFE-F19109EC3896")
    _HashAlgorithm : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HashAlgorithmVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HashAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HashAlgorithm * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HashAlgorithm * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HashAlgorithm * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HashAlgorithm * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HashAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HashAlgorithm * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HashAlgorithmVtbl;

    interface _HashAlgorithm
    {
        CONST_VTBL struct _HashAlgorithmVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HashAlgorithm_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HashAlgorithm_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HashAlgorithm_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HashAlgorithm_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HashAlgorithm_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HashAlgorithm_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HashAlgorithm_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HashAlgorithm_INTERFACE_DEFINED__ */


#ifndef ___KeyedHashAlgorithm_INTERFACE_DEFINED__
#define ___KeyedHashAlgorithm_INTERFACE_DEFINED__

/* interface _KeyedHashAlgorithm */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__KeyedHashAlgorithm;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D182CF91-628C-3FF6-87F0-41BA51CC7433")
    _KeyedHashAlgorithm : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _KeyedHashAlgorithmVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _KeyedHashAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _KeyedHashAlgorithm * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _KeyedHashAlgorithm * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _KeyedHashAlgorithm * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _KeyedHashAlgorithm * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _KeyedHashAlgorithm * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _KeyedHashAlgorithm * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _KeyedHashAlgorithmVtbl;

    interface _KeyedHashAlgorithm
    {
        CONST_VTBL struct _KeyedHashAlgorithmVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _KeyedHashAlgorithm_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _KeyedHashAlgorithm_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _KeyedHashAlgorithm_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _KeyedHashAlgorithm_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _KeyedHashAlgorithm_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _KeyedHashAlgorithm_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _KeyedHashAlgorithm_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___KeyedHashAlgorithm_INTERFACE_DEFINED__ */


#ifndef ___HMAC_INTERFACE_DEFINED__
#define ___HMAC_INTERFACE_DEFINED__

/* interface _HMAC */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMAC;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E5456726-33F6-34E4-95C2-DB2BFA581462")
    _HMAC : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMAC * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMAC * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMAC * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMAC * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMAC * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMAC * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMAC * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACVtbl;

    interface _HMAC
    {
        CONST_VTBL struct _HMACVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMAC_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMAC_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMAC_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMAC_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMAC_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMAC_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMAC_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMAC_INTERFACE_DEFINED__ */


#ifndef ___HMACMD5_INTERFACE_DEFINED__
#define ___HMACMD5_INTERFACE_DEFINED__

/* interface _HMACMD5 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMACMD5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("486360F5-6213-322B-BEFB-45221579D4AF")
    _HMACMD5 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACMD5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMACMD5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMACMD5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMACMD5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMACMD5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMACMD5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMACMD5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMACMD5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACMD5Vtbl;

    interface _HMACMD5
    {
        CONST_VTBL struct _HMACMD5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMACMD5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMACMD5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMACMD5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMACMD5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMACMD5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMACMD5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMACMD5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMACMD5_INTERFACE_DEFINED__ */


#ifndef ___HMACRIPEMD160_INTERFACE_DEFINED__
#define ___HMACRIPEMD160_INTERFACE_DEFINED__

/* interface _HMACRIPEMD160 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMACRIPEMD160;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9FD974A5-338C-37B9-A1B2-D45F0C2B25C2")
    _HMACRIPEMD160 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACRIPEMD160Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMACRIPEMD160 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMACRIPEMD160 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMACRIPEMD160 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMACRIPEMD160 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMACRIPEMD160 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMACRIPEMD160 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMACRIPEMD160 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACRIPEMD160Vtbl;

    interface _HMACRIPEMD160
    {
        CONST_VTBL struct _HMACRIPEMD160Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMACRIPEMD160_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMACRIPEMD160_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMACRIPEMD160_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMACRIPEMD160_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMACRIPEMD160_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMACRIPEMD160_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMACRIPEMD160_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMACRIPEMD160_INTERFACE_DEFINED__ */


#ifndef ___HMACSHA1_INTERFACE_DEFINED__
#define ___HMACSHA1_INTERFACE_DEFINED__

/* interface _HMACSHA1 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMACSHA1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("63AC7C37-C51A-3D82-8FDD-2A567039E46D")
    _HMACSHA1 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACSHA1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMACSHA1 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMACSHA1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMACSHA1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMACSHA1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMACSHA1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMACSHA1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMACSHA1 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACSHA1Vtbl;

    interface _HMACSHA1
    {
        CONST_VTBL struct _HMACSHA1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMACSHA1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMACSHA1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMACSHA1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMACSHA1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMACSHA1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMACSHA1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMACSHA1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMACSHA1_INTERFACE_DEFINED__ */


#ifndef ___HMACSHA256_INTERFACE_DEFINED__
#define ___HMACSHA256_INTERFACE_DEFINED__

/* interface _HMACSHA256 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMACSHA256;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1377CE34-8921-3BD4-96E9-C8D5D5AA1ADF")
    _HMACSHA256 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACSHA256Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMACSHA256 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMACSHA256 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMACSHA256 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMACSHA256 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMACSHA256 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMACSHA256 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMACSHA256 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACSHA256Vtbl;

    interface _HMACSHA256
    {
        CONST_VTBL struct _HMACSHA256Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMACSHA256_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMACSHA256_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMACSHA256_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMACSHA256_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMACSHA256_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMACSHA256_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMACSHA256_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMACSHA256_INTERFACE_DEFINED__ */


#ifndef ___HMACSHA384_INTERFACE_DEFINED__
#define ___HMACSHA384_INTERFACE_DEFINED__

/* interface _HMACSHA384 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMACSHA384;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("786F8AC3-93E4-3B6F-9F62-1901B0E5F433")
    _HMACSHA384 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACSHA384Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMACSHA384 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMACSHA384 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMACSHA384 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMACSHA384 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMACSHA384 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMACSHA384 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMACSHA384 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACSHA384Vtbl;

    interface _HMACSHA384
    {
        CONST_VTBL struct _HMACSHA384Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMACSHA384_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMACSHA384_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMACSHA384_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMACSHA384_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMACSHA384_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMACSHA384_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMACSHA384_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMACSHA384_INTERFACE_DEFINED__ */


#ifndef ___HMACSHA512_INTERFACE_DEFINED__
#define ___HMACSHA512_INTERFACE_DEFINED__

/* interface _HMACSHA512 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__HMACSHA512;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EB081B9D-A766-3ABE-B720-505C42162D83")
    _HMACSHA512 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _HMACSHA512Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _HMACSHA512 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _HMACSHA512 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _HMACSHA512 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _HMACSHA512 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _HMACSHA512 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _HMACSHA512 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _HMACSHA512 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _HMACSHA512Vtbl;

    interface _HMACSHA512
    {
        CONST_VTBL struct _HMACSHA512Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _HMACSHA512_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _HMACSHA512_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _HMACSHA512_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _HMACSHA512_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _HMACSHA512_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _HMACSHA512_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _HMACSHA512_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___HMACSHA512_INTERFACE_DEFINED__ */


#ifndef ___CspKeyContainerInfo_INTERFACE_DEFINED__
#define ___CspKeyContainerInfo_INTERFACE_DEFINED__

/* interface _CspKeyContainerInfo */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__CspKeyContainerInfo;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BE8619CB-3731-3CB2-A3A8-CD0BFA5566EC")
    _CspKeyContainerInfo : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _CspKeyContainerInfoVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _CspKeyContainerInfo * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _CspKeyContainerInfo * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _CspKeyContainerInfo * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _CspKeyContainerInfo * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _CspKeyContainerInfo * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _CspKeyContainerInfo * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _CspKeyContainerInfo * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _CspKeyContainerInfoVtbl;

    interface _CspKeyContainerInfo
    {
        CONST_VTBL struct _CspKeyContainerInfoVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _CspKeyContainerInfo_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _CspKeyContainerInfo_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _CspKeyContainerInfo_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _CspKeyContainerInfo_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _CspKeyContainerInfo_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _CspKeyContainerInfo_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _CspKeyContainerInfo_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___CspKeyContainerInfo_INTERFACE_DEFINED__ */


#ifndef ___MACTripleDES_INTERFACE_DEFINED__
#define ___MACTripleDES_INTERFACE_DEFINED__

/* interface _MACTripleDES */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MACTripleDES;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("1CAC0BDA-AC58-31BC-B624-63F77D0C3D2F")
    _MACTripleDES : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MACTripleDESVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MACTripleDES * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MACTripleDES * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MACTripleDES * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MACTripleDES * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MACTripleDES * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MACTripleDES * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MACTripleDES * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MACTripleDESVtbl;

    interface _MACTripleDES
    {
        CONST_VTBL struct _MACTripleDESVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MACTripleDES_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MACTripleDES_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MACTripleDES_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MACTripleDES_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MACTripleDES_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MACTripleDES_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MACTripleDES_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MACTripleDES_INTERFACE_DEFINED__ */


#ifndef ___MD5_INTERFACE_DEFINED__
#define ___MD5_INTERFACE_DEFINED__

/* interface _MD5 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MD5;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9AA8765E-69A0-30E3-9CDE-EBC70662AE37")
    _MD5 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MD5Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MD5 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MD5 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MD5 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MD5 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MD5 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MD5 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MD5 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MD5Vtbl;

    interface _MD5
    {
        CONST_VTBL struct _MD5Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MD5_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MD5_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MD5_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MD5_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MD5_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MD5_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MD5_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MD5_INTERFACE_DEFINED__ */


#ifndef ___MD5CryptoServiceProvider_INTERFACE_DEFINED__
#define ___MD5CryptoServiceProvider_INTERFACE_DEFINED__

/* interface _MD5CryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MD5CryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("D3F5C812-5867-33C9-8CEE-CB170E8D844A")
    _MD5CryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MD5CryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MD5CryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MD5CryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MD5CryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MD5CryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MD5CryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MD5CryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MD5CryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MD5CryptoServiceProviderVtbl;

    interface _MD5CryptoServiceProvider
    {
        CONST_VTBL struct _MD5CryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MD5CryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MD5CryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MD5CryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MD5CryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MD5CryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MD5CryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MD5CryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MD5CryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___MaskGenerationMethod_INTERFACE_DEFINED__
#define ___MaskGenerationMethod_INTERFACE_DEFINED__

/* interface _MaskGenerationMethod */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__MaskGenerationMethod;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("85601FEE-A79D-3710-AF21-099089EDC0BF")
    _MaskGenerationMethod : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _MaskGenerationMethodVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _MaskGenerationMethod * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _MaskGenerationMethod * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _MaskGenerationMethod * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _MaskGenerationMethod * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _MaskGenerationMethod * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _MaskGenerationMethod * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _MaskGenerationMethod * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _MaskGenerationMethodVtbl;

    interface _MaskGenerationMethod
    {
        CONST_VTBL struct _MaskGenerationMethodVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _MaskGenerationMethod_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _MaskGenerationMethod_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _MaskGenerationMethod_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _MaskGenerationMethod_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _MaskGenerationMethod_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _MaskGenerationMethod_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _MaskGenerationMethod_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___MaskGenerationMethod_INTERFACE_DEFINED__ */


#ifndef ___PasswordDeriveBytes_INTERFACE_DEFINED__
#define ___PasswordDeriveBytes_INTERFACE_DEFINED__

/* interface _PasswordDeriveBytes */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PasswordDeriveBytes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3CD62D67-586F-309E-A6D8-1F4BAAC5AC28")
    _PasswordDeriveBytes : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PasswordDeriveBytesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PasswordDeriveBytes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PasswordDeriveBytes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PasswordDeriveBytes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PasswordDeriveBytes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PasswordDeriveBytes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PasswordDeriveBytes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PasswordDeriveBytes * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PasswordDeriveBytesVtbl;

    interface _PasswordDeriveBytes
    {
        CONST_VTBL struct _PasswordDeriveBytesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PasswordDeriveBytes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PasswordDeriveBytes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PasswordDeriveBytes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PasswordDeriveBytes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PasswordDeriveBytes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PasswordDeriveBytes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PasswordDeriveBytes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PasswordDeriveBytes_INTERFACE_DEFINED__ */


#ifndef ___PKCS1MaskGenerationMethod_INTERFACE_DEFINED__
#define ___PKCS1MaskGenerationMethod_INTERFACE_DEFINED__

/* interface _PKCS1MaskGenerationMethod */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__PKCS1MaskGenerationMethod;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("425BFF0D-59E4-36A8-B1FF-1F5D39D698F4")
    _PKCS1MaskGenerationMethod : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _PKCS1MaskGenerationMethodVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _PKCS1MaskGenerationMethod * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _PKCS1MaskGenerationMethod * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _PKCS1MaskGenerationMethod * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _PKCS1MaskGenerationMethod * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _PKCS1MaskGenerationMethod * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _PKCS1MaskGenerationMethod * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _PKCS1MaskGenerationMethod * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _PKCS1MaskGenerationMethodVtbl;

    interface _PKCS1MaskGenerationMethod
    {
        CONST_VTBL struct _PKCS1MaskGenerationMethodVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _PKCS1MaskGenerationMethod_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _PKCS1MaskGenerationMethod_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _PKCS1MaskGenerationMethod_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _PKCS1MaskGenerationMethod_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _PKCS1MaskGenerationMethod_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _PKCS1MaskGenerationMethod_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _PKCS1MaskGenerationMethod_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___PKCS1MaskGenerationMethod_INTERFACE_DEFINED__ */


#ifndef ___RC2_INTERFACE_DEFINED__
#define ___RC2_INTERFACE_DEFINED__

/* interface _RC2 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RC2;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("F7C0C4CC-0D49-31EE-A3D3-B8B551E4928C")
    _RC2 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RC2Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RC2 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RC2 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RC2 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RC2 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RC2 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RC2 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RC2 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RC2Vtbl;

    interface _RC2
    {
        CONST_VTBL struct _RC2Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RC2_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RC2_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RC2_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RC2_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RC2_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RC2_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RC2_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RC2_INTERFACE_DEFINED__ */


#ifndef ___RC2CryptoServiceProvider_INTERFACE_DEFINED__
#define ___RC2CryptoServiceProvider_INTERFACE_DEFINED__

/* interface _RC2CryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RC2CryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("875715C5-CB64-3920-8156-0EE9CB0E07EA")
    _RC2CryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RC2CryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RC2CryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RC2CryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RC2CryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RC2CryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RC2CryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RC2CryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RC2CryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RC2CryptoServiceProviderVtbl;

    interface _RC2CryptoServiceProvider
    {
        CONST_VTBL struct _RC2CryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RC2CryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RC2CryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RC2CryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RC2CryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RC2CryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RC2CryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RC2CryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RC2CryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___Rfc2898DeriveBytes_INTERFACE_DEFINED__
#define ___Rfc2898DeriveBytes_INTERFACE_DEFINED__

/* interface _Rfc2898DeriveBytes */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Rfc2898DeriveBytes;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A6589897-5A67-305F-9497-72E5FE8BEAD5")
    _Rfc2898DeriveBytes : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _Rfc2898DeriveBytesVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Rfc2898DeriveBytes * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Rfc2898DeriveBytes * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Rfc2898DeriveBytes * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Rfc2898DeriveBytes * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Rfc2898DeriveBytes * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Rfc2898DeriveBytes * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Rfc2898DeriveBytes * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _Rfc2898DeriveBytesVtbl;

    interface _Rfc2898DeriveBytes
    {
        CONST_VTBL struct _Rfc2898DeriveBytesVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Rfc2898DeriveBytes_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Rfc2898DeriveBytes_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Rfc2898DeriveBytes_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Rfc2898DeriveBytes_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Rfc2898DeriveBytes_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Rfc2898DeriveBytes_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Rfc2898DeriveBytes_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Rfc2898DeriveBytes_INTERFACE_DEFINED__ */


#ifndef ___RIPEMD160_INTERFACE_DEFINED__
#define ___RIPEMD160_INTERFACE_DEFINED__

/* interface _RIPEMD160 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RIPEMD160;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("E5481BE9-3422-3506-BC35-B96D4535014D")
    _RIPEMD160 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RIPEMD160Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RIPEMD160 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RIPEMD160 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RIPEMD160 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RIPEMD160 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RIPEMD160 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RIPEMD160 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RIPEMD160 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RIPEMD160Vtbl;

    interface _RIPEMD160
    {
        CONST_VTBL struct _RIPEMD160Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RIPEMD160_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RIPEMD160_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RIPEMD160_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RIPEMD160_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RIPEMD160_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RIPEMD160_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RIPEMD160_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RIPEMD160_INTERFACE_DEFINED__ */


#ifndef ___RIPEMD160Managed_INTERFACE_DEFINED__
#define ___RIPEMD160Managed_INTERFACE_DEFINED__

/* interface _RIPEMD160Managed */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RIPEMD160Managed;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("814F9C35-B7F8-3CEB-8E43-E01F09157060")
    _RIPEMD160Managed : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RIPEMD160ManagedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RIPEMD160Managed * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RIPEMD160Managed * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RIPEMD160Managed * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RIPEMD160Managed * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RIPEMD160Managed * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RIPEMD160Managed * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RIPEMD160Managed * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RIPEMD160ManagedVtbl;

    interface _RIPEMD160Managed
    {
        CONST_VTBL struct _RIPEMD160ManagedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RIPEMD160Managed_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RIPEMD160Managed_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RIPEMD160Managed_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RIPEMD160Managed_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RIPEMD160Managed_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RIPEMD160Managed_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RIPEMD160Managed_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RIPEMD160Managed_INTERFACE_DEFINED__ */


#ifndef ___RSA_INTERFACE_DEFINED__
#define ___RSA_INTERFACE_DEFINED__

/* interface _RSA */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSA;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("0B3FB710-A25C-3310-8774-1CF117F95BD4")
    _RSA : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSA * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSA * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSA * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSA * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSA * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSA * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSA * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAVtbl;

    interface _RSA
    {
        CONST_VTBL struct _RSAVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSA_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSA_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSA_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSA_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSA_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSA_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSA_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSA_INTERFACE_DEFINED__ */


#ifndef ___RSACryptoServiceProvider_INTERFACE_DEFINED__
#define ___RSACryptoServiceProvider_INTERFACE_DEFINED__

/* interface _RSACryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSACryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("BD9DF856-2300-3254-BCF0-679BA03C7A13")
    _RSACryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSACryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSACryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSACryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSACryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSACryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSACryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSACryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSACryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSACryptoServiceProviderVtbl;

    interface _RSACryptoServiceProvider
    {
        CONST_VTBL struct _RSACryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSACryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSACryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSACryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSACryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSACryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSACryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSACryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSACryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___RSAOAEPKeyExchangeDeformatter_INTERFACE_DEFINED__
#define ___RSAOAEPKeyExchangeDeformatter_INTERFACE_DEFINED__

/* interface _RSAOAEPKeyExchangeDeformatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSAOAEPKeyExchangeDeformatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("37625095-7BAA-377D-A0DC-7F465C0167AA")
    _RSAOAEPKeyExchangeDeformatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAOAEPKeyExchangeDeformatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSAOAEPKeyExchangeDeformatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSAOAEPKeyExchangeDeformatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSAOAEPKeyExchangeDeformatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSAOAEPKeyExchangeDeformatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSAOAEPKeyExchangeDeformatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSAOAEPKeyExchangeDeformatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSAOAEPKeyExchangeDeformatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAOAEPKeyExchangeDeformatterVtbl;

    interface _RSAOAEPKeyExchangeDeformatter
    {
        CONST_VTBL struct _RSAOAEPKeyExchangeDeformatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSAOAEPKeyExchangeDeformatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSAOAEPKeyExchangeDeformatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSAOAEPKeyExchangeDeformatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSAOAEPKeyExchangeDeformatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSAOAEPKeyExchangeDeformatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSAOAEPKeyExchangeDeformatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSAOAEPKeyExchangeDeformatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSAOAEPKeyExchangeDeformatter_INTERFACE_DEFINED__ */


#ifndef ___RSAOAEPKeyExchangeFormatter_INTERFACE_DEFINED__
#define ___RSAOAEPKeyExchangeFormatter_INTERFACE_DEFINED__

/* interface _RSAOAEPKeyExchangeFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSAOAEPKeyExchangeFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("77A416E7-2AC6-3D0E-98FF-3BA0F586F56F")
    _RSAOAEPKeyExchangeFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAOAEPKeyExchangeFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSAOAEPKeyExchangeFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSAOAEPKeyExchangeFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSAOAEPKeyExchangeFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSAOAEPKeyExchangeFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSAOAEPKeyExchangeFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSAOAEPKeyExchangeFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSAOAEPKeyExchangeFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAOAEPKeyExchangeFormatterVtbl;

    interface _RSAOAEPKeyExchangeFormatter
    {
        CONST_VTBL struct _RSAOAEPKeyExchangeFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSAOAEPKeyExchangeFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSAOAEPKeyExchangeFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSAOAEPKeyExchangeFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSAOAEPKeyExchangeFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSAOAEPKeyExchangeFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSAOAEPKeyExchangeFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSAOAEPKeyExchangeFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSAOAEPKeyExchangeFormatter_INTERFACE_DEFINED__ */


#ifndef ___RSAPKCS1KeyExchangeDeformatter_INTERFACE_DEFINED__
#define ___RSAPKCS1KeyExchangeDeformatter_INTERFACE_DEFINED__

/* interface _RSAPKCS1KeyExchangeDeformatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSAPKCS1KeyExchangeDeformatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8034AAF4-3666-3B6F-85CF-463F9BFD31A9")
    _RSAPKCS1KeyExchangeDeformatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAPKCS1KeyExchangeDeformatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSAPKCS1KeyExchangeDeformatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSAPKCS1KeyExchangeDeformatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSAPKCS1KeyExchangeDeformatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSAPKCS1KeyExchangeDeformatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSAPKCS1KeyExchangeDeformatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSAPKCS1KeyExchangeDeformatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSAPKCS1KeyExchangeDeformatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAPKCS1KeyExchangeDeformatterVtbl;

    interface _RSAPKCS1KeyExchangeDeformatter
    {
        CONST_VTBL struct _RSAPKCS1KeyExchangeDeformatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSAPKCS1KeyExchangeDeformatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSAPKCS1KeyExchangeDeformatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSAPKCS1KeyExchangeDeformatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSAPKCS1KeyExchangeDeformatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSAPKCS1KeyExchangeDeformatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSAPKCS1KeyExchangeDeformatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSAPKCS1KeyExchangeDeformatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSAPKCS1KeyExchangeDeformatter_INTERFACE_DEFINED__ */


#ifndef ___RSAPKCS1KeyExchangeFormatter_INTERFACE_DEFINED__
#define ___RSAPKCS1KeyExchangeFormatter_INTERFACE_DEFINED__

/* interface _RSAPKCS1KeyExchangeFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSAPKCS1KeyExchangeFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("9FF67F8E-A7AA-3BA6-90EE-9D44AF6E2F8C")
    _RSAPKCS1KeyExchangeFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAPKCS1KeyExchangeFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSAPKCS1KeyExchangeFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSAPKCS1KeyExchangeFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSAPKCS1KeyExchangeFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSAPKCS1KeyExchangeFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSAPKCS1KeyExchangeFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSAPKCS1KeyExchangeFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSAPKCS1KeyExchangeFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAPKCS1KeyExchangeFormatterVtbl;

    interface _RSAPKCS1KeyExchangeFormatter
    {
        CONST_VTBL struct _RSAPKCS1KeyExchangeFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSAPKCS1KeyExchangeFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSAPKCS1KeyExchangeFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSAPKCS1KeyExchangeFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSAPKCS1KeyExchangeFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSAPKCS1KeyExchangeFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSAPKCS1KeyExchangeFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSAPKCS1KeyExchangeFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSAPKCS1KeyExchangeFormatter_INTERFACE_DEFINED__ */


#ifndef ___RSAPKCS1SignatureDeformatter_INTERFACE_DEFINED__
#define ___RSAPKCS1SignatureDeformatter_INTERFACE_DEFINED__

/* interface _RSAPKCS1SignatureDeformatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSAPKCS1SignatureDeformatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FC38507E-06A4-3300-8652-8D7B54341F65")
    _RSAPKCS1SignatureDeformatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAPKCS1SignatureDeformatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSAPKCS1SignatureDeformatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSAPKCS1SignatureDeformatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSAPKCS1SignatureDeformatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSAPKCS1SignatureDeformatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSAPKCS1SignatureDeformatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSAPKCS1SignatureDeformatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSAPKCS1SignatureDeformatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAPKCS1SignatureDeformatterVtbl;

    interface _RSAPKCS1SignatureDeformatter
    {
        CONST_VTBL struct _RSAPKCS1SignatureDeformatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSAPKCS1SignatureDeformatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSAPKCS1SignatureDeformatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSAPKCS1SignatureDeformatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSAPKCS1SignatureDeformatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSAPKCS1SignatureDeformatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSAPKCS1SignatureDeformatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSAPKCS1SignatureDeformatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSAPKCS1SignatureDeformatter_INTERFACE_DEFINED__ */


#ifndef ___RSAPKCS1SignatureFormatter_INTERFACE_DEFINED__
#define ___RSAPKCS1SignatureFormatter_INTERFACE_DEFINED__

/* interface _RSAPKCS1SignatureFormatter */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RSAPKCS1SignatureFormatter;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("FB7A5FF4-CFA8-3F24-AD5F-D5EB39359707")
    _RSAPKCS1SignatureFormatter : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RSAPKCS1SignatureFormatterVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RSAPKCS1SignatureFormatter * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RSAPKCS1SignatureFormatter * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RSAPKCS1SignatureFormatter * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RSAPKCS1SignatureFormatter * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RSAPKCS1SignatureFormatter * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RSAPKCS1SignatureFormatter * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RSAPKCS1SignatureFormatter * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RSAPKCS1SignatureFormatterVtbl;

    interface _RSAPKCS1SignatureFormatter
    {
        CONST_VTBL struct _RSAPKCS1SignatureFormatterVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RSAPKCS1SignatureFormatter_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RSAPKCS1SignatureFormatter_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RSAPKCS1SignatureFormatter_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RSAPKCS1SignatureFormatter_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RSAPKCS1SignatureFormatter_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RSAPKCS1SignatureFormatter_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RSAPKCS1SignatureFormatter_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RSAPKCS1SignatureFormatter_INTERFACE_DEFINED__ */


#ifndef ___Rijndael_INTERFACE_DEFINED__
#define ___Rijndael_INTERFACE_DEFINED__

/* interface _Rijndael */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__Rijndael;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("21B52A91-856F-373C-AD42-4CF3F1021F5A")
    _Rijndael : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RijndaelVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _Rijndael * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _Rijndael * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _Rijndael * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _Rijndael * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _Rijndael * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _Rijndael * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _Rijndael * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RijndaelVtbl;

    interface _Rijndael
    {
        CONST_VTBL struct _RijndaelVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _Rijndael_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _Rijndael_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _Rijndael_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _Rijndael_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _Rijndael_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _Rijndael_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _Rijndael_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___Rijndael_INTERFACE_DEFINED__ */


#ifndef ___RijndaelManaged_INTERFACE_DEFINED__
#define ___RijndaelManaged_INTERFACE_DEFINED__

/* interface _RijndaelManaged */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RijndaelManaged;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("427EA9D3-11D8-3E38-9E05-A4F7FA684183")
    _RijndaelManaged : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RijndaelManagedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RijndaelManaged * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RijndaelManaged * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RijndaelManaged * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RijndaelManaged * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RijndaelManaged * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RijndaelManaged * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RijndaelManaged * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RijndaelManagedVtbl;

    interface _RijndaelManaged
    {
        CONST_VTBL struct _RijndaelManagedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RijndaelManaged_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RijndaelManaged_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RijndaelManaged_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RijndaelManaged_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RijndaelManaged_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RijndaelManaged_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RijndaelManaged_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RijndaelManaged_INTERFACE_DEFINED__ */


#ifndef ___RijndaelManagedTransform_INTERFACE_DEFINED__
#define ___RijndaelManagedTransform_INTERFACE_DEFINED__

/* interface _RijndaelManagedTransform */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__RijndaelManagedTransform;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("5767C78F-F344-35A5-84BC-53B9EAEB68CB")
    _RijndaelManagedTransform : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _RijndaelManagedTransformVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _RijndaelManagedTransform * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _RijndaelManagedTransform * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _RijndaelManagedTransform * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _RijndaelManagedTransform * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _RijndaelManagedTransform * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _RijndaelManagedTransform * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _RijndaelManagedTransform * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _RijndaelManagedTransformVtbl;

    interface _RijndaelManagedTransform
    {
        CONST_VTBL struct _RijndaelManagedTransformVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _RijndaelManagedTransform_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _RijndaelManagedTransform_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _RijndaelManagedTransform_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _RijndaelManagedTransform_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _RijndaelManagedTransform_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _RijndaelManagedTransform_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _RijndaelManagedTransform_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___RijndaelManagedTransform_INTERFACE_DEFINED__ */


#ifndef ___SHA1_INTERFACE_DEFINED__
#define ___SHA1_INTERFACE_DEFINED__

/* interface _SHA1 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA1;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("48600DD2-0099-337F-92D6-961D1E5010D4")
    _SHA1 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA1Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA1 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA1 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA1 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA1 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA1 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA1 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA1 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA1Vtbl;

    interface _SHA1
    {
        CONST_VTBL struct _SHA1Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA1_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA1_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA1_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA1_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA1_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA1_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA1_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA1_INTERFACE_DEFINED__ */


#ifndef ___SHA1CryptoServiceProvider_INTERFACE_DEFINED__
#define ___SHA1CryptoServiceProvider_INTERFACE_DEFINED__

/* interface _SHA1CryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA1CryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("A16537BC-1EDF-3516-B75E-CC65CAF873AB")
    _SHA1CryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA1CryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA1CryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA1CryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA1CryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA1CryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA1CryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA1CryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA1CryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA1CryptoServiceProviderVtbl;

    interface _SHA1CryptoServiceProvider
    {
        CONST_VTBL struct _SHA1CryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA1CryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA1CryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA1CryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA1CryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA1CryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA1CryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA1CryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA1CryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___SHA1Managed_INTERFACE_DEFINED__
#define ___SHA1Managed_INTERFACE_DEFINED__

/* interface _SHA1Managed */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA1Managed;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C27990BB-3CFD-3D29-8DC0-BBE5FBADEAFD")
    _SHA1Managed : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA1ManagedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA1Managed * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA1Managed * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA1Managed * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA1Managed * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA1Managed * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA1Managed * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA1Managed * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA1ManagedVtbl;

    interface _SHA1Managed
    {
        CONST_VTBL struct _SHA1ManagedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA1Managed_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA1Managed_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA1Managed_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA1Managed_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA1Managed_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA1Managed_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA1Managed_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA1Managed_INTERFACE_DEFINED__ */


#ifndef ___SHA256_INTERFACE_DEFINED__
#define ___SHA256_INTERFACE_DEFINED__

/* interface _SHA256 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA256;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3B274703-DFAE-3F9C-A1B5-9990DF9D7FA3")
    _SHA256 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA256Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA256 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA256 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA256 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA256 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA256 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA256 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA256 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA256Vtbl;

    interface _SHA256
    {
        CONST_VTBL struct _SHA256Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA256_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA256_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA256_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA256_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA256_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA256_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA256_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA256_INTERFACE_DEFINED__ */


#ifndef ___SHA256Managed_INTERFACE_DEFINED__
#define ___SHA256Managed_INTERFACE_DEFINED__

/* interface _SHA256Managed */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA256Managed;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("3D077954-7BCC-325B-9DDA-3B17A03378E0")
    _SHA256Managed : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA256ManagedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA256Managed * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA256Managed * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA256Managed * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA256Managed * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA256Managed * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA256Managed * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA256Managed * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA256ManagedVtbl;

    interface _SHA256Managed
    {
        CONST_VTBL struct _SHA256ManagedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA256Managed_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA256Managed_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA256Managed_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA256Managed_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA256Managed_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA256Managed_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA256Managed_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA256Managed_INTERFACE_DEFINED__ */


#ifndef ___SHA384_INTERFACE_DEFINED__
#define ___SHA384_INTERFACE_DEFINED__

/* interface _SHA384 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA384;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("B60AD5D7-2C2E-35B7-8D77-7946156CFE8E")
    _SHA384 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA384Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA384 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA384 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA384 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA384 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA384 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA384 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA384 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA384Vtbl;

    interface _SHA384
    {
        CONST_VTBL struct _SHA384Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA384_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA384_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA384_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA384_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA384_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA384_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA384_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA384_INTERFACE_DEFINED__ */


#ifndef ___SHA384Managed_INTERFACE_DEFINED__
#define ___SHA384Managed_INTERFACE_DEFINED__

/* interface _SHA384Managed */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA384Managed;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DE541460-F838-3698-B2DA-510B09070118")
    _SHA384Managed : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA384ManagedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA384Managed * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA384Managed * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA384Managed * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA384Managed * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA384Managed * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA384Managed * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA384Managed * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA384ManagedVtbl;

    interface _SHA384Managed
    {
        CONST_VTBL struct _SHA384ManagedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA384Managed_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA384Managed_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA384Managed_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA384Managed_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA384Managed_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA384Managed_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA384Managed_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA384Managed_INTERFACE_DEFINED__ */


#ifndef ___SHA512_INTERFACE_DEFINED__
#define ___SHA512_INTERFACE_DEFINED__

/* interface _SHA512 */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA512;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("49DD9E4B-84F3-3D6D-91FB-3FEDCEF634C7")
    _SHA512 : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA512Vtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA512 * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA512 * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA512 * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA512 * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA512 * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA512 * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA512 * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA512Vtbl;

    interface _SHA512
    {
        CONST_VTBL struct _SHA512Vtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA512_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA512_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA512_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA512_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA512_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA512_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA512_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA512_INTERFACE_DEFINED__ */


#ifndef ___SHA512Managed_INTERFACE_DEFINED__
#define ___SHA512Managed_INTERFACE_DEFINED__

/* interface _SHA512Managed */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SHA512Managed;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("DC8CE439-7954-36ED-803C-674F72F27249")
    _SHA512Managed : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SHA512ManagedVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SHA512Managed * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SHA512Managed * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SHA512Managed * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SHA512Managed * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SHA512Managed * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SHA512Managed * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SHA512Managed * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SHA512ManagedVtbl;

    interface _SHA512Managed
    {
        CONST_VTBL struct _SHA512ManagedVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SHA512Managed_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SHA512Managed_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SHA512Managed_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SHA512Managed_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SHA512Managed_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SHA512Managed_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SHA512Managed_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SHA512Managed_INTERFACE_DEFINED__ */


#ifndef ___SignatureDescription_INTERFACE_DEFINED__
#define ___SignatureDescription_INTERFACE_DEFINED__

/* interface _SignatureDescription */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__SignatureDescription;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("8017B414-4886-33DA-80A3-7865C1350D43")
    _SignatureDescription : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _SignatureDescriptionVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _SignatureDescription * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _SignatureDescription * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _SignatureDescription * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _SignatureDescription * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _SignatureDescription * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _SignatureDescription * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _SignatureDescription * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _SignatureDescriptionVtbl;

    interface _SignatureDescription
    {
        CONST_VTBL struct _SignatureDescriptionVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _SignatureDescription_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _SignatureDescription_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _SignatureDescription_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _SignatureDescription_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _SignatureDescription_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _SignatureDescription_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _SignatureDescription_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___SignatureDescription_INTERFACE_DEFINED__ */


#ifndef ___TripleDES_INTERFACE_DEFINED__
#define ___TripleDES_INTERFACE_DEFINED__

/* interface _TripleDES */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TripleDES;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("C040B889-5278-3132-AFF9-AFA61707A81D")
    _TripleDES : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TripleDESVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TripleDES * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TripleDES * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TripleDES * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TripleDES * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TripleDES * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TripleDES * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TripleDES * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TripleDESVtbl;

    interface _TripleDES
    {
        CONST_VTBL struct _TripleDESVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TripleDES_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TripleDES_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TripleDES_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TripleDES_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TripleDES_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TripleDES_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TripleDES_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TripleDES_INTERFACE_DEFINED__ */


#ifndef ___TripleDESCryptoServiceProvider_INTERFACE_DEFINED__
#define ___TripleDESCryptoServiceProvider_INTERFACE_DEFINED__

/* interface _TripleDESCryptoServiceProvider */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__TripleDESCryptoServiceProvider;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("EC69D083-3CD0-3C0C-998C-3B738DB535D5")
    _TripleDESCryptoServiceProvider : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _TripleDESCryptoServiceProviderVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _TripleDESCryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _TripleDESCryptoServiceProvider * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _TripleDESCryptoServiceProvider * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _TripleDESCryptoServiceProvider * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _TripleDESCryptoServiceProvider * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _TripleDESCryptoServiceProvider * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _TripleDESCryptoServiceProvider * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _TripleDESCryptoServiceProviderVtbl;

    interface _TripleDESCryptoServiceProvider
    {
        CONST_VTBL struct _TripleDESCryptoServiceProviderVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _TripleDESCryptoServiceProvider_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _TripleDESCryptoServiceProvider_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _TripleDESCryptoServiceProvider_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _TripleDESCryptoServiceProvider_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _TripleDESCryptoServiceProvider_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _TripleDESCryptoServiceProvider_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _TripleDESCryptoServiceProvider_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___TripleDESCryptoServiceProvider_INTERFACE_DEFINED__ */


#ifndef ___X509Certificate_INTERFACE_DEFINED__
#define ___X509Certificate_INTERFACE_DEFINED__

/* interface _X509Certificate */
/* [object][custom][oleautomation][dual][hidden][uuid] */ 


EXTERN_C const IID IID__X509Certificate;

#if defined(__cplusplus) && !defined(CINTERFACE)
    
    MIDL_INTERFACE("68FD6F14-A7B2-36C8-A724-D01F90D73477")
    _X509Certificate : public IDispatch
    {
    public:
    };
    
    
#else 	/* C style interface */

    typedef struct _X509CertificateVtbl
    {
        BEGIN_INTERFACE
        
        HRESULT ( STDMETHODCALLTYPE *QueryInterface )( 
            _X509Certificate * This,
            /* [in] */ REFIID riid,
            /* [annotation][iid_is][out] */ 
            _COM_Outptr_  void **ppvObject);
        
        ULONG ( STDMETHODCALLTYPE *AddRef )( 
            _X509Certificate * This);
        
        ULONG ( STDMETHODCALLTYPE *Release )( 
            _X509Certificate * This);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfoCount )( 
            _X509Certificate * This,
            /* [out] */ UINT *pctinfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetTypeInfo )( 
            _X509Certificate * This,
            /* [in] */ UINT iTInfo,
            /* [in] */ LCID lcid,
            /* [out] */ ITypeInfo **ppTInfo);
        
        HRESULT ( STDMETHODCALLTYPE *GetIDsOfNames )( 
            _X509Certificate * This,
            /* [in] */ REFIID riid,
            /* [size_is][in] */ LPOLESTR *rgszNames,
            /* [range][in] */ UINT cNames,
            /* [in] */ LCID lcid,
            /* [size_is][out] */ DISPID *rgDispId);
        
        /* [local] */ HRESULT ( STDMETHODCALLTYPE *Invoke )( 
            _X509Certificate * This,
            /* [annotation][in] */ 
            _In_  DISPID dispIdMember,
            /* [annotation][in] */ 
            _In_  REFIID riid,
            /* [annotation][in] */ 
            _In_  LCID lcid,
            /* [annotation][in] */ 
            _In_  WORD wFlags,
            /* [annotation][out][in] */ 
            _In_  DISPPARAMS *pDispParams,
            /* [annotation][out] */ 
            _Out_opt_  VARIANT *pVarResult,
            /* [annotation][out] */ 
            _Out_opt_  EXCEPINFO *pExcepInfo,
            /* [annotation][out] */ 
            _Out_opt_  UINT *puArgErr);
        
        END_INTERFACE
    } _X509CertificateVtbl;

    interface _X509Certificate
    {
        CONST_VTBL struct _X509CertificateVtbl *lpVtbl;
    };

    

#ifdef COBJMACROS


#define _X509Certificate_QueryInterface(This,riid,ppvObject)	\
    ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) 

#define _X509Certificate_AddRef(This)	\
    ( (This)->lpVtbl -> AddRef(This) ) 

#define _X509Certificate_Release(This)	\
    ( (This)->lpVtbl -> Release(This) ) 


#define _X509Certificate_GetTypeInfoCount(This,pctinfo)	\
    ( (This)->lpVtbl -> GetTypeInfoCount(This,pctinfo) ) 

#define _X509Certificate_GetTypeInfo(This,iTInfo,lcid,ppTInfo)	\
    ( (This)->lpVtbl -> GetTypeInfo(This,iTInfo,lcid,ppTInfo) ) 

#define _X509Certificate_GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId)	\
    ( (This)->lpVtbl -> GetIDsOfNames(This,riid,rgszNames,cNames,lcid,rgDispId) ) 

#define _X509Certificate_Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr)	\
    ( (This)->lpVtbl -> Invoke(This,dispIdMember,riid,lcid,wFlags,pDispParams,pVarResult,pExcepInfo,puArgErr) ) 


#endif /* COBJMACROS */


#endif 	/* C style interface */




#endif 	/* ___X509Certificate_INTERFACE_DEFINED__ */


EXTERN_C const CLSID CLSID_Object;

#ifdef __cplusplus

class DECLSPEC_UUID("81C5FE01-027C-3E1C-98D5-DA9C9862AA21")
Object;
#endif

EXTERN_C const CLSID CLSID_Array;

#ifdef __cplusplus

class DECLSPEC_UUID("200FB91C-815D-39E0-9E07-0E1BDB2ED47B")
Array;
#endif

EXTERN_C const CLSID CLSID_ValueType;

#ifdef __cplusplus

class DECLSPEC_UUID("CE8AD32F-B6DB-31EA-9F1E-C2424E0F5EEE")
ValueType;
#endif

EXTERN_C const CLSID CLSID_Enum;

#ifdef __cplusplus

class DECLSPEC_UUID("C43345B9-7FED-3FC7-8FC2-7B1B82BC109E")
Enum;
#endif

EXTERN_C const CLSID CLSID_String;

#ifdef __cplusplus

class DECLSPEC_UUID("296AFBFF-1B0B-3FF5-9D6C-4E7E599F8B57")
String;
#endif

EXTERN_C const CLSID CLSID_StringComparer;

#ifdef __cplusplus

class DECLSPEC_UUID("8EA98C90-180D-39AE-AA70-2AA3D5EBB7AE")
StringComparer;
#endif

EXTERN_C const CLSID CLSID_StringBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("E724B749-18D6-36AB-9F6D-09C36D9C6016")
StringBuilder;
#endif

EXTERN_C const CLSID CLSID_Exception;

#ifdef __cplusplus

class DECLSPEC_UUID("A1C0A095-DF97-3441-BFC1-C9F194E494DB")
Exception;
#endif

EXTERN_C const CLSID CLSID_SystemException;

#ifdef __cplusplus

class DECLSPEC_UUID("4224AC84-9B11-3561-8923-C893CA77ACBE")
SystemException;
#endif

EXTERN_C const CLSID CLSID_OutOfMemoryException;

#ifdef __cplusplus

class DECLSPEC_UUID("CCF306AE-33BD-3003-9CCE-DAF5BEFEF611")
OutOfMemoryException;
#endif

EXTERN_C const CLSID CLSID_StackOverflowException;

#ifdef __cplusplus

class DECLSPEC_UUID("9C125A6F-EAE2-3FC1-97A1-C0DCEAB0B5DF")
StackOverflowException;
#endif

EXTERN_C const CLSID CLSID_DataMisalignedException;

#ifdef __cplusplus

class DECLSPEC_UUID("AAD4BDD3-81AA-3ABC-B53B-D904D25BC01E")
DataMisalignedException;
#endif

EXTERN_C const CLSID CLSID_ExecutionEngineException;

#ifdef __cplusplus

class DECLSPEC_UUID("E786FB32-B659-3D96-94C4-E1A9FC037868")
ExecutionEngineException;
#endif

EXTERN_C const CLSID CLSID_Delegate;

#ifdef __cplusplus

class DECLSPEC_UUID("03CE85F6-37CB-3588-B3DB-D5628BB1335B")
Delegate;
#endif

EXTERN_C const CLSID CLSID_MulticastDelegate;

#ifdef __cplusplus

class DECLSPEC_UUID("198FFBDE-A6DB-3CC3-AB15-FBBB7250D624")
MulticastDelegate;
#endif

EXTERN_C const CLSID CLSID_MemberAccessException;

#ifdef __cplusplus

class DECLSPEC_UUID("0FF66430-C796-3EE7-902B-166C402CA288")
MemberAccessException;
#endif

EXTERN_C const CLSID CLSID_Activator;

#ifdef __cplusplus

class DECLSPEC_UUID("9BA4FD4E-2BC2-31A0-B721-D17ABA5B12C3")
Activator;
#endif

EXTERN_C const CLSID CLSID_AccessViolationException;

#ifdef __cplusplus

class DECLSPEC_UUID("4C3EBFD5-FC72-33DC-BC37-9953EB25B8D7")
AccessViolationException;
#endif

EXTERN_C const CLSID CLSID_ApplicationActivator;

#ifdef __cplusplus

class DECLSPEC_UUID("1D09B407-A97F-378A-ACCB-82CA0082F9F3")
ApplicationActivator;
#endif

EXTERN_C const CLSID CLSID_ApplicationException;

#ifdef __cplusplus

class DECLSPEC_UUID("682D63B8-1692-31BE-88CD-5CB1F79EDB7B")
ApplicationException;
#endif

EXTERN_C const CLSID CLSID_EventArgs;

#ifdef __cplusplus

class DECLSPEC_UUID("3FB717AF-9D21-3016-871A-DF817ABDDD51")
EventArgs;
#endif

EXTERN_C const CLSID CLSID_ResolveEventArgs;

#ifdef __cplusplus

class DECLSPEC_UUID("1C1D34A9-3F45-3B51-A9AF-0354975BF8CC")
ResolveEventArgs;
#endif

EXTERN_C const CLSID CLSID_AssemblyLoadEventArgs;

#ifdef __cplusplus

class DECLSPEC_UUID("81548590-3849-32A8-AA6F-F2B3137CF4A3")
AssemblyLoadEventArgs;
#endif

EXTERN_C const CLSID CLSID_ResolveEventHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("A4B8C851-941A-3DEE-BD08-D9E2EED101C5")
ResolveEventHandler;
#endif

EXTERN_C const CLSID CLSID_AssemblyLoadEventHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("2E130DC8-564E-397F-A628-397709DA52E9")
AssemblyLoadEventHandler;
#endif

EXTERN_C const CLSID CLSID_AppDomainInitializer;

#ifdef __cplusplus

class DECLSPEC_UUID("FA525B27-3D69-3116-8D15-0064F6299548")
AppDomainInitializer;
#endif

EXTERN_C const CLSID CLSID_MarshalByRefObject;

#ifdef __cplusplus

class DECLSPEC_UUID("14B542C6-1C5A-3869-B8F8-FEEFD7B29D09")
MarshalByRefObject;
#endif

EXTERN_C const CLSID CLSID_AppDomain;

#ifdef __cplusplus

class DECLSPEC_UUID("5FE0A145-A82B-3D96-94E3-FD214C9D6EB9")
AppDomain;
#endif

EXTERN_C const CLSID CLSID_CrossAppDomainDelegate;

#ifdef __cplusplus

class DECLSPEC_UUID("496219C1-3FB7-3DCF-8AF7-D56032F7891F")
CrossAppDomainDelegate;
#endif

EXTERN_C const CLSID CLSID_AppDomainManager;

#ifdef __cplusplus

class DECLSPEC_UUID("C03880A5-0B5E-39AD-954A-CE0DCBD5EF7D")
AppDomainManager;
#endif

EXTERN_C const CLSID CLSID_AppDomainSetup;

#ifdef __cplusplus

class DECLSPEC_UUID("3E8E0F03-D3FD-3A93-BAE0-C74A6494DBCA")
AppDomainSetup;
#endif

EXTERN_C const CLSID CLSID_Attribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1765714B-E628-34C3-B66F-7686FAF462DA")
Attribute;
#endif

EXTERN_C const CLSID CLSID_LoaderOptimizationAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("B39742FD-1A55-3810-9EA5-F6E86EBEB472")
LoaderOptimizationAttribute;
#endif

EXTERN_C const CLSID CLSID_AppDomainUnloadedException;

#ifdef __cplusplus

class DECLSPEC_UUID("61B3E12B-3586-3A58-A497-7ED7C4C794B9")
AppDomainUnloadedException;
#endif

EXTERN_C const CLSID CLSID_ActivationArguments;

#ifdef __cplusplus

class DECLSPEC_UUID("D12B05F9-0654-351A-92D1-8FDAC1F243DE")
ActivationArguments;
#endif

EXTERN_C const CLSID CLSID_ApplicationId;

#ifdef __cplusplus

class DECLSPEC_UUID("AF3866AD-F70A-3CF8-984E-858C5A686D57")
ApplicationId;
#endif

EXTERN_C const CLSID CLSID_ArgumentException;

#ifdef __cplusplus

class DECLSPEC_UUID("3FDCEEC6-B14B-37E2-BB69-ABC7CA0DA22F")
ArgumentException;
#endif

EXTERN_C const CLSID CLSID_ArgumentNullException;

#ifdef __cplusplus

class DECLSPEC_UUID("3BD1F243-9BC4-305D-9B1C-0D10C80329FC")
ArgumentNullException;
#endif

EXTERN_C const CLSID CLSID_ArgumentOutOfRangeException;

#ifdef __cplusplus

class DECLSPEC_UUID("74BDD0B9-38D7-3FDA-A67E-D404EE684F24")
ArgumentOutOfRangeException;
#endif

EXTERN_C const CLSID CLSID_ArithmeticException;

#ifdef __cplusplus

class DECLSPEC_UUID("647053C3-1879-34D7-AE57-67015C91FC70")
ArithmeticException;
#endif

EXTERN_C const CLSID CLSID_ArrayTypeMismatchException;

#ifdef __cplusplus

class DECLSPEC_UUID("676E1164-752C-3A74-8D3F-BCD32A2026D6")
ArrayTypeMismatchException;
#endif

EXTERN_C const CLSID CLSID_AsyncCallback;

#ifdef __cplusplus

class DECLSPEC_UUID("B2A87DDB-5DAB-395F-B7BE-AD83058FB516")
AsyncCallback;
#endif

EXTERN_C const CLSID CLSID_AttributeUsageAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("53A62BB1-75B9-3B52-AE98-92AFD573CDB1")
AttributeUsageAttribute;
#endif

EXTERN_C const CLSID CLSID_BadImageFormatException;

#ifdef __cplusplus

class DECLSPEC_UUID("E9148312-A9BF-3A45-BBCA-350967FD78F5")
BadImageFormatException;
#endif

EXTERN_C const CLSID CLSID_Buffer;

#ifdef __cplusplus

class DECLSPEC_UUID("830FE109-4566-3AF2-9B57-5602724FCACE")
Buffer;
#endif

EXTERN_C const CLSID CLSID_CannotUnloadAppDomainException;

#ifdef __cplusplus

class DECLSPEC_UUID("29C69707-875F-3678-8F01-283094A2DFB1")
CannotUnloadAppDomainException;
#endif

EXTERN_C const CLSID CLSID_CharEnumerator;

#ifdef __cplusplus

class DECLSPEC_UUID("277EABD6-F03A-3C52-8B42-B8E326D9C0CC")
CharEnumerator;
#endif

EXTERN_C const CLSID CLSID_CLSCompliantAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("15DBEC24-0E2D-3DB2-AF66-932203215895")
CLSCompliantAttribute;
#endif

EXTERN_C const CLSID CLSID_TypeUnloadedException;

#ifdef __cplusplus

class DECLSPEC_UUID("D6D2034D-5F67-30D7-9CC5-452F2C46694F")
TypeUnloadedException;
#endif

EXTERN_C const CLSID CLSID_CriticalFinalizerObject;

#ifdef __cplusplus

class DECLSPEC_UUID("314BDA5A-9292-3FC0-830D-7A4B0261FC88")
CriticalFinalizerObject;
#endif

EXTERN_C const CLSID CLSID_ContextMarshalException;

#ifdef __cplusplus

class DECLSPEC_UUID("CBEAA915-4D2C-3F77-98E8-A258B0FD3CEF")
ContextMarshalException;
#endif

EXTERN_C const CLSID CLSID_ContextBoundObject;

#ifdef __cplusplus

class DECLSPEC_UUID("7916CBEF-050E-3E39-B83A-5AB9558E72F1")
ContextBoundObject;
#endif

EXTERN_C const CLSID CLSID_ContextStaticAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("96705EE3-F7AB-3E9A-9FB2-AD1D536E901A")
ContextStaticAttribute;
#endif

EXTERN_C const CLSID CLSID_TimeZone;

#ifdef __cplusplus

class DECLSPEC_UUID("543C0DD8-A713-3777-B01A-AEB801DAC001")
TimeZone;
#endif

EXTERN_C const CLSID CLSID_DBNull;

#ifdef __cplusplus

class DECLSPEC_UUID("8C1A4524-3CEB-3436-B449-CAC456ECAB09")
DBNull;
#endif

EXTERN_C const CLSID CLSID_Binder;

#ifdef __cplusplus

class DECLSPEC_UUID("74A6B90C-8710-32DA-BBF7-9D4445E071E9")
Binder;
#endif

EXTERN_C const CLSID CLSID_DivideByZeroException;

#ifdef __cplusplus

class DECLSPEC_UUID("F6914A11-D95D-324F-BA0F-39A374625290")
DivideByZeroException;
#endif

EXTERN_C const CLSID CLSID_DuplicateWaitObjectException;

#ifdef __cplusplus

class DECLSPEC_UUID("CC20C6DF-A054-3F09-A5F5-A3B5A25F4CE6")
DuplicateWaitObjectException;
#endif

EXTERN_C const CLSID CLSID_TypeLoadException;

#ifdef __cplusplus

class DECLSPEC_UUID("112BC2E7-9EF9-3648-AF9E-45C0D4B89929")
TypeLoadException;
#endif

EXTERN_C const CLSID CLSID_EntryPointNotFoundException;

#ifdef __cplusplus

class DECLSPEC_UUID("AD326409-BF80-3E0C-BA6F-EE2C33B675A5")
EntryPointNotFoundException;
#endif

EXTERN_C const CLSID CLSID_DllNotFoundException;

#ifdef __cplusplus

class DECLSPEC_UUID("46E97093-B2EC-3787-A9A5-470D1A27417C")
DllNotFoundException;
#endif

EXTERN_C const CLSID CLSID_Environment;

#ifdef __cplusplus

class DECLSPEC_UUID("DF81B4FF-7226-30FA-84DF-80795BA1A642")
Environment;
#endif

EXTERN_C const CLSID CLSID_EventHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("DCA836DE-C23D-334C-86B7-8385BE47030D")
EventHandler;
#endif

EXTERN_C const CLSID CLSID_FieldAccessException;

#ifdef __cplusplus

class DECLSPEC_UUID("BDA7BEE5-85F1-3B66-B610-DDF1D5898006")
FieldAccessException;
#endif

EXTERN_C const CLSID CLSID_FlagsAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("66CE75D4-0334-3CA6-BCA8-CE9AF28A4396")
FlagsAttribute;
#endif

EXTERN_C const CLSID CLSID_FormatException;

#ifdef __cplusplus

class DECLSPEC_UUID("964AA3BD-4B12-3E23-9D7F-99342AFAE812")
FormatException;
#endif

EXTERN_C const CLSID CLSID_IndexOutOfRangeException;

#ifdef __cplusplus

class DECLSPEC_UUID("5CA9971B-2DC3-3BC8-847A-5E6D15CBB16E")
IndexOutOfRangeException;
#endif

EXTERN_C const CLSID CLSID_InvalidCastException;

#ifdef __cplusplus

class DECLSPEC_UUID("7F6BCBE5-EB30-370B-9F1B-92A6265AFEDD")
InvalidCastException;
#endif

EXTERN_C const CLSID CLSID_InvalidOperationException;

#ifdef __cplusplus

class DECLSPEC_UUID("9546306B-1B68-33AF-80DB-3A9206501515")
InvalidOperationException;
#endif

EXTERN_C const CLSID CLSID_InvalidProgramException;

#ifdef __cplusplus

class DECLSPEC_UUID("91591469-EFEF-3D63-90F9-88520F0AA1EF")
InvalidProgramException;
#endif

EXTERN_C const CLSID CLSID_LocalDataStoreSlot;

#ifdef __cplusplus

class DECLSPEC_UUID("E95E800A-CBA4-3613-821D-6D6EF3BCBF6B")
LocalDataStoreSlot;
#endif

EXTERN_C const CLSID CLSID_MethodAccessException;

#ifdef __cplusplus

class DECLSPEC_UUID("92E76A74-2622-3AA9-A3CA-1AE8BD7BC4A8")
MethodAccessException;
#endif

EXTERN_C const CLSID CLSID_MissingMemberException;

#ifdef __cplusplus

class DECLSPEC_UUID("CDC70043-D56B-3799-B7BD-6113BBCA160A")
MissingMemberException;
#endif

EXTERN_C const CLSID CLSID_MissingFieldException;

#ifdef __cplusplus

class DECLSPEC_UUID("8D36569B-14D6-3C3D-B55C-9D02A45BFC3D")
MissingFieldException;
#endif

EXTERN_C const CLSID CLSID_MissingMethodException;

#ifdef __cplusplus

class DECLSPEC_UUID("58897D76-EF6C-327A-93F7-6CD66C424E11")
MissingMethodException;
#endif

EXTERN_C const CLSID CLSID_MulticastNotSupportedException;

#ifdef __cplusplus

class DECLSPEC_UUID("9DA2F8B8-59F0-3852-B509-0663E3BF643B")
MulticastNotSupportedException;
#endif

EXTERN_C const CLSID CLSID_NonSerializedAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("CC77F5F3-222D-3586-88C3-410477A3B65D")
NonSerializedAttribute;
#endif

EXTERN_C const CLSID CLSID_NotFiniteNumberException;

#ifdef __cplusplus

class DECLSPEC_UUID("7E34AB89-0684-3B86-8A0F-E638EB4E6252")
NotFiniteNumberException;
#endif

EXTERN_C const CLSID CLSID_NotImplementedException;

#ifdef __cplusplus

class DECLSPEC_UUID("F8BE2AD5-4E99-3E00-B10E-7C54D31C1C1D")
NotImplementedException;
#endif

EXTERN_C const CLSID CLSID_NotSupportedException;

#ifdef __cplusplus

class DECLSPEC_UUID("DAFB2462-2A5B-3818-B17E-602984FE1BB0")
NotSupportedException;
#endif

EXTERN_C const CLSID CLSID_NullReferenceException;

#ifdef __cplusplus

class DECLSPEC_UUID("7F71DB2D-1EA0-3CAE-8087-26095F5215E6")
NullReferenceException;
#endif

EXTERN_C const CLSID CLSID_ObjectDisposedException;

#ifdef __cplusplus

class DECLSPEC_UUID("F17BAAF6-D35C-3C6E-ACD3-D0D49A5022C4")
ObjectDisposedException;
#endif

EXTERN_C const CLSID CLSID_ObsoleteAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("08295C62-7462-3633-B35E-7AE68ACA3948")
ObsoleteAttribute;
#endif

EXTERN_C const CLSID CLSID_OperatingSystem;

#ifdef __cplusplus

class DECLSPEC_UUID("D7CA3B25-A57B-354C-8758-9FE3A905C1AC")
OperatingSystem;
#endif

EXTERN_C const CLSID CLSID_OperationCanceledException;

#ifdef __cplusplus

class DECLSPEC_UUID("11581718-2434-32E3-B559-E86CE9923744")
OperationCanceledException;
#endif

EXTERN_C const CLSID CLSID_OverflowException;

#ifdef __cplusplus

class DECLSPEC_UUID("4286FA72-A2FA-3245-8751-D4206070A191")
OverflowException;
#endif

EXTERN_C const CLSID CLSID_ParamArrayAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3495E5FA-2A90-3CA7-B3B5-58736C4441DD")
ParamArrayAttribute;
#endif

EXTERN_C const CLSID CLSID_PlatformNotSupportedException;

#ifdef __cplusplus

class DECLSPEC_UUID("A36738B5-FA8F-3316-A929-68099A32B43B")
PlatformNotSupportedException;
#endif

EXTERN_C const CLSID CLSID_Random;

#ifdef __cplusplus

class DECLSPEC_UUID("4E77EC8F-51D8-386C-85FE-7DC931B7A8E7")
Random;
#endif

EXTERN_C const CLSID CLSID_RankException;

#ifdef __cplusplus

class DECLSPEC_UUID("C9F61CBD-287F-3D24-9FEB-2C3F347CF570")
RankException;
#endif

EXTERN_C const CLSID CLSID_MemberInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("5AE028B5-9A3A-32A9-899C-1DEEFB85CC50")
MemberInfo;
#endif

EXTERN_C const CLSID CLSID_Type;

#ifdef __cplusplus

class DECLSPEC_UUID("6C9863DC-7207-327F-A048-C3BB63474BFC")
Type;
#endif

EXTERN_C const CLSID CLSID_SerializableAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("89BCC804-53A5-3EB2-A342-6282CC410260")
SerializableAttribute;
#endif

EXTERN_C const CLSID CLSID_TimeoutException;

#ifdef __cplusplus

class DECLSPEC_UUID("EAA78D4A-20A3-3FDE-AB72-D3D55E3AEFE6")
TimeoutException;
#endif

EXTERN_C const CLSID CLSID_TypeInitializationException;

#ifdef __cplusplus

class DECLSPEC_UUID("811FB5F2-9BFE-3557-83DE-1279F0B3EB55")
TypeInitializationException;
#endif

EXTERN_C const CLSID CLSID_UnauthorizedAccessException;

#ifdef __cplusplus

class DECLSPEC_UUID("75215200-A2FE-30F6-A34B-8F1A1830358E")
UnauthorizedAccessException;
#endif

EXTERN_C const CLSID CLSID_UnhandledExceptionEventArgs;

#ifdef __cplusplus

class DECLSPEC_UUID("B55DAE2E-C8E8-3C48-B404-D991979A9D9D")
UnhandledExceptionEventArgs;
#endif

EXTERN_C const CLSID CLSID_UnhandledExceptionEventHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("DB4D2D94-3FA3-36F5-B22E-A00FF22F08BD")
UnhandledExceptionEventHandler;
#endif

EXTERN_C const CLSID CLSID_Version;

#ifdef __cplusplus

class DECLSPEC_UUID("43CD41AD-3B78-3531-9031-3059E0AA64EB")
Version;
#endif

EXTERN_C const CLSID CLSID_WeakReference;

#ifdef __cplusplus

class DECLSPEC_UUID("D3F54E92-A0C7-3BF4-A114-F1F384CE3EFF")
WeakReference;
#endif

EXTERN_C const CLSID CLSID_WaitHandle;

#ifdef __cplusplus

class DECLSPEC_UUID("4D0E564A-78C8-31E0-BA03-73AF7BDFF5A9")
WaitHandle;
#endif

EXTERN_C const CLSID CLSID_EventWaitHandle;

#ifdef __cplusplus

class DECLSPEC_UUID("80226212-1832-310F-862C-A511E3534E62")
EventWaitHandle;
#endif

EXTERN_C const CLSID CLSID_AutoResetEvent;

#ifdef __cplusplus

class DECLSPEC_UUID("E35AF4DD-EB37-39FC-9071-4CE39B1A54BE")
AutoResetEvent;
#endif

EXTERN_C const CLSID CLSID_ContextCallback;

#ifdef __cplusplus

class DECLSPEC_UUID("5B193863-A73E-3EC3-80D0-35B36E3CF4ED")
ContextCallback;
#endif

EXTERN_C const CLSID CLSID_ManualResetEvent;

#ifdef __cplusplus

class DECLSPEC_UUID("17A355C3-C65E-3F26-8A80-236890EBC997")
ManualResetEvent;
#endif

EXTERN_C const CLSID CLSID_Monitor;

#ifdef __cplusplus

class DECLSPEC_UUID("9E97213A-0B49-3C05-A0BF-D203C4FC8487")
Monitor;
#endif

EXTERN_C const CLSID CLSID_Mutex;

#ifdef __cplusplus

class DECLSPEC_UUID("D74D613D-F27F-311B-A9A3-27EBC63A1A5D")
Mutex;
#endif

EXTERN_C const CLSID CLSID_Overlapped;

#ifdef __cplusplus

class DECLSPEC_UUID("7FE87A55-1321-3D9F-8FEF-CD2F5E8AB2E9")
Overlapped;
#endif

EXTERN_C const CLSID CLSID_ReaderWriterLock;

#ifdef __cplusplus

class DECLSPEC_UUID("9173D971-B142-38A5-8488-D10A9DCF71B0")
ReaderWriterLock;
#endif

EXTERN_C const CLSID CLSID_SynchronizationLockException;

#ifdef __cplusplus

class DECLSPEC_UUID("48A75519-CB7A-3D18-B91E-BE62EE842A3E")
SynchronizationLockException;
#endif

EXTERN_C const CLSID CLSID_Thread;

#ifdef __cplusplus

class DECLSPEC_UUID("A5889AAD-36A6-3B3E-89F9-118CE3A77D7C")
Thread;
#endif

EXTERN_C const CLSID CLSID_ThreadAbortException;

#ifdef __cplusplus

class DECLSPEC_UUID("EA1CF67D-7904-36A3-BD5B-DD028985861C")
ThreadAbortException;
#endif

EXTERN_C const CLSID CLSID_ThreadInterruptedException;

#ifdef __cplusplus

class DECLSPEC_UUID("27E986E1-BAEC-3D48-82E4-14169CA8CECF")
ThreadInterruptedException;
#endif

EXTERN_C const CLSID CLSID_RegisteredWaitHandle;

#ifdef __cplusplus

class DECLSPEC_UUID("50F8AE2B-69F0-37EF-954B-D2618E3E8267")
RegisteredWaitHandle;
#endif

EXTERN_C const CLSID CLSID_WaitCallback;

#ifdef __cplusplus

class DECLSPEC_UUID("D8E04CC2-F4F5-367D-A23F-F71AFF4F14F3")
WaitCallback;
#endif

EXTERN_C const CLSID CLSID_WaitOrTimerCallback;

#ifdef __cplusplus

class DECLSPEC_UUID("3C8C9F02-2C23-39FF-AC7B-CD0EE1D14A79")
WaitOrTimerCallback;
#endif

EXTERN_C const CLSID CLSID_IOCompletionCallback;

#ifdef __cplusplus

class DECLSPEC_UUID("8A937E3B-9C07-3D4D-B50A-4F4F3C85317C")
IOCompletionCallback;
#endif

EXTERN_C const CLSID CLSID_ThreadStart;

#ifdef __cplusplus

class DECLSPEC_UUID("E7AC1E4D-35DB-3432-A032-E94C012B2D39")
ThreadStart;
#endif

EXTERN_C const CLSID CLSID_ThreadStateException;

#ifdef __cplusplus

class DECLSPEC_UUID("3E5509F0-1FB9-304D-8174-75D6C9AFE5DA")
ThreadStateException;
#endif

EXTERN_C const CLSID CLSID_ThreadStaticAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("FFC9F9AE-E87A-3252-8E25-B22423A40065")
ThreadStaticAttribute;
#endif

EXTERN_C const CLSID CLSID_Timeout;

#ifdef __cplusplus

class DECLSPEC_UUID("5A49B766-B474-3501-901E-5BDAC8B48A3D")
Timeout;
#endif

EXTERN_C const CLSID CLSID_TimerCallback;

#ifdef __cplusplus

class DECLSPEC_UUID("DDF7BA7F-4B7C-378D-A153-6285B84C6593")
TimerCallback;
#endif

EXTERN_C const CLSID CLSID_Timer;

#ifdef __cplusplus

class DECLSPEC_UUID("490CA7A8-D03F-3459-8208-D428EA010DA0")
Timer;
#endif

EXTERN_C const CLSID CLSID_STAThreadAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("50AAD4C2-61FA-3B1F-8157-5BA3B27AEE61")
STAThreadAttribute;
#endif

EXTERN_C const CLSID CLSID_MTAThreadAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("B406AC70-4D7E-3D24-B241-AEAEAC343BD9")
MTAThreadAttribute;
#endif

EXTERN_C const CLSID CLSID_ArrayList;

#ifdef __cplusplus

class DECLSPEC_UUID("6896B49D-7AFB-34DC-934E-5ADD38EEEE39")
ArrayList;
#endif

EXTERN_C const CLSID CLSID_BitArray;

#ifdef __cplusplus

class DECLSPEC_UUID("5D2FB755-C658-3F51-86F2-881F4A1A2A55")
BitArray;
#endif

EXTERN_C const CLSID CLSID_CaseInsensitiveComparer;

#ifdef __cplusplus

class DECLSPEC_UUID("35E946E4-7CDA-3824-8B24-D799A96309AD")
CaseInsensitiveComparer;
#endif

EXTERN_C const CLSID CLSID_CaseInsensitiveHashCodeProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("47D3C68D-7D85-3227-A9E7-88451D6BADFC")
CaseInsensitiveHashCodeProvider;
#endif

EXTERN_C const CLSID CLSID_CollectionBase;

#ifdef __cplusplus

class DECLSPEC_UUID("87259279-9F5D-3C0A-BB58-723A2A6E4DBA")
CollectionBase;
#endif

EXTERN_C const CLSID CLSID_Comparer;

#ifdef __cplusplus

class DECLSPEC_UUID("8A63140F-7EB8-3F4E-BA59-19B8C747843F")
Comparer;
#endif

EXTERN_C const CLSID CLSID_DictionaryBase;

#ifdef __cplusplus

class DECLSPEC_UUID("9840C5C3-21D3-3B8A-94C1-3FC542B0227E")
DictionaryBase;
#endif

EXTERN_C const CLSID CLSID_Hashtable;

#ifdef __cplusplus

class DECLSPEC_UUID("146855FA-309F-3D0E-BB3E-DF525F30A715")
Hashtable;
#endif

EXTERN_C const CLSID CLSID_Queue;

#ifdef __cplusplus

class DECLSPEC_UUID("7F976B72-4B71-3858-BEE8-8E3A3189A651")
Queue;
#endif

EXTERN_C const CLSID CLSID_ReadOnlyCollectionBase;

#ifdef __cplusplus

class DECLSPEC_UUID("B66406BD-746D-3D10-98A1-41D097CF42B7")
ReadOnlyCollectionBase;
#endif

EXTERN_C const CLSID CLSID_SortedList;

#ifdef __cplusplus

class DECLSPEC_UUID("026CC6D7-34B2-33D5-B551-CA31EB6CE345")
SortedList;
#endif

EXTERN_C const CLSID CLSID_Stack;

#ifdef __cplusplus

class DECLSPEC_UUID("4599202D-460F-3FB7-8A1C-C2CC6ED6C7C8")
Stack;
#endif

EXTERN_C const CLSID CLSID_Nullable;

#ifdef __cplusplus

class DECLSPEC_UUID("F358AC62-4569-3705-BE32-B07E799B4223")
Nullable;
#endif

EXTERN_C const CLSID CLSID_KeyNotFoundException;

#ifdef __cplusplus

class DECLSPEC_UUID("0D52ABE3-3C93-3D94-A744-AC44850BACCD")
KeyNotFoundException;
#endif

EXTERN_C const CLSID CLSID_ConditionalAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("75B3810E-F2D5-36E2-8D27-514EBCAD4511")
ConditionalAttribute;
#endif

EXTERN_C const CLSID CLSID_Debugger;

#ifdef __cplusplus

class DECLSPEC_UUID("91F672A3-6B82-3E04-B2D7-BAC5D6676609")
Debugger;
#endif

EXTERN_C const CLSID CLSID_DebuggerStepThroughAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("93F551D6-2F9E-301B-BE63-85AEF508CAE0")
DebuggerStepThroughAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerStepperBoundaryAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1B979846-AAEB-314B-8E63-D44EF1CB9EFC")
DebuggerStepperBoundaryAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerHiddenAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("41970D73-92F6-36D9-874D-3BD0762A0D6F")
DebuggerHiddenAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerNonUserCodeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("29625281-51CE-3F8A-AC4D-E360CACB92E2")
DebuggerNonUserCodeAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggableAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("DF1F67B4-74F7-30AF-922D-29F0B91ABC25")
DebuggableAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerBrowsableAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("A709EBBE-BDB2-30F4-959B-37B7A68E4299")
DebuggerBrowsableAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerTypeProxyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("8366EE18-BBE6-3061-B99F-BA87E26919D1")
DebuggerTypeProxyAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerDisplayAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F640E47B-67D0-31A2-8621-02E2DD41B496")
DebuggerDisplayAttribute;
#endif

EXTERN_C const CLSID CLSID_DebuggerVisualizerAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("29813E13-8772-3B1F-878D-26C33B045D5A")
DebuggerVisualizerAttribute;
#endif

EXTERN_C const CLSID CLSID_StackTrace;

#ifdef __cplusplus

class DECLSPEC_UUID("405C2D81-315B-3CB0-8442-EF5A38D4C3B8")
StackTrace;
#endif

EXTERN_C const CLSID CLSID_StackFrame;

#ifdef __cplusplus

class DECLSPEC_UUID("14910622-09D4-3B4A-8C1E-9991DBDCC553")
StackFrame;
#endif

EXTERN_C const CLSID CLSID_SymDocumentType;

#ifdef __cplusplus

class DECLSPEC_UUID("40AE2088-CE00-33AD-9320-5D201CB46FC9")
SymDocumentType;
#endif

EXTERN_C const CLSID CLSID_SymLanguageType;

#ifdef __cplusplus

class DECLSPEC_UUID("5A18D43E-115B-3B8B-8245-9A06B204B717")
SymLanguageType;
#endif

EXTERN_C const CLSID CLSID_SymLanguageVendor;

#ifdef __cplusplus

class DECLSPEC_UUID("DFD888A7-A6B0-3B1B-985E-4CDAB0E4C17D")
SymLanguageVendor;
#endif

EXTERN_C const CLSID CLSID_AmbiguousMatchException;

#ifdef __cplusplus

class DECLSPEC_UUID("2846AE5E-A9FA-36CF-B2D1-6E95596DBDE7")
AmbiguousMatchException;
#endif

EXTERN_C const CLSID CLSID_ModuleResolveEventHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("AAAA10C6-9902-3DBB-B173-EBA1EBA2CD5E")
ModuleResolveEventHandler;
#endif

EXTERN_C const CLSID CLSID_Assembly;

#ifdef __cplusplus

class DECLSPEC_UUID("28E89A9F-E67D-3028-AA1B-E5EBCDE6F3C8")
Assembly;
#endif

EXTERN_C const CLSID CLSID_AssemblyCopyrightAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("8687959F-D86D-3217-8D58-BE9A0427BB84")
AssemblyCopyrightAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyTrademarkAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("E64C95DF-EADC-3D08-9C6F-80F29D92CB4E")
AssemblyTrademarkAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyProductAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("CFE2BCF1-683C-39B5-83CE-4B186A521513")
AssemblyProductAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyCompanyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("62342FB2-16BF-30A9-88AD-6BC781EEC94F")
AssemblyCompanyAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyDescriptionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("432E5E9F-03BA-37B2-8EDF-7FAC14B03B4F")
AssemblyDescriptionAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyTitleAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("51B4F67C-2FCB-391D-A381-D040100D6717")
AssemblyTitleAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyConfigurationAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("09DD9840-5E39-317A-AAB3-0A467998DE25")
AssemblyConfigurationAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyDefaultAliasAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("8BEB1256-5D9B-3262-BF85-BEB6287E4EEA")
AssemblyDefaultAliasAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyInformationalVersionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("894593B9-99E5-3B61-A592-EE44B9396277")
AssemblyInformationalVersionAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyFileVersionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("14152CB5-DC51-3C42-8A43-09854DEA1B8F")
AssemblyFileVersionAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyCultureAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("4265AB21-A68F-38A9-98D8-5D62B8035EA0")
AssemblyCultureAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyVersionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("2D0FA06F-88FD-3643-8DBC-1F428A2B1A3B")
AssemblyVersionAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyKeyFileAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("FF408450-1DB9-3203-84EC-B70A01F48A06")
AssemblyKeyFileAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyDelaySignAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("4804184F-4741-396B-AF5B-71134937F21A")
AssemblyDelaySignAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyAlgorithmIdAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("0D052B0A-23D1-3BAC-85EE-4E764B814CEE")
AssemblyAlgorithmIdAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyFlagsAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("4554ED74-4243-3E7C-9B33-E9A89379C4F1")
AssemblyFlagsAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyKeyNameAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3DACE301-6C51-3BF7-B975-E4A05F00FD4D")
AssemblyKeyNameAttribute;
#endif

EXTERN_C const CLSID CLSID_AssemblyName;

#ifdef __cplusplus

class DECLSPEC_UUID("F12FDE6A-9394-3C32-8E4D-F3D470947284")
AssemblyName;
#endif

EXTERN_C const CLSID CLSID_AssemblyNameProxy;

#ifdef __cplusplus

class DECLSPEC_UUID("3F4A4283-6A08-3E90-A976-2C2D3BE4EB0B")
AssemblyNameProxy;
#endif

EXTERN_C const CLSID CLSID_CustomAttributeFormatException;

#ifdef __cplusplus

class DECLSPEC_UUID("D5CB383D-99F4-3C7E-A9C3-85B53661448F")
CustomAttributeFormatException;
#endif

EXTERN_C const CLSID CLSID_CustomAttributeData;

#ifdef __cplusplus

class DECLSPEC_UUID("C2655AE8-0193-35D4-855E-F64909065C1E")
CustomAttributeData;
#endif

EXTERN_C const CLSID CLSID_DefaultMemberAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("CF452B26-6040-3ACB-9C72-CE5BB86E5046")
DefaultMemberAttribute;
#endif

EXTERN_C const CLSID CLSID_InvalidFilterCriteriaException;

#ifdef __cplusplus

class DECLSPEC_UUID("7B938A6F-77BF-351C-A712-69483C91115D")
InvalidFilterCriteriaException;
#endif

EXTERN_C const CLSID CLSID_ManifestResourceInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("F695C021-DCF5-397B-A300-EDAA51DA5A5B")
ManifestResourceInfo;
#endif

EXTERN_C const CLSID CLSID_MemberFilter;

#ifdef __cplusplus

class DECLSPEC_UUID("F52FD74C-ADA6-38CC-AE0F-693AFB9B9A8F")
MemberFilter;
#endif

EXTERN_C const CLSID CLSID_Missing;

#ifdef __cplusplus

class DECLSPEC_UUID("D5FAAC26-DB25-34E7-ADBD-AD5ED51F9433")
Missing;
#endif

EXTERN_C const CLSID CLSID_Module;

#ifdef __cplusplus

class DECLSPEC_UUID("128191C5-B188-3054-81B7-E4F588EACF0E")
Module;
#endif

EXTERN_C const CLSID CLSID_ObfuscateAssemblyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("D495920D-00A0-3D6F-920C-672DF186CEC8")
ObfuscateAssemblyAttribute;
#endif

EXTERN_C const CLSID CLSID_ObfuscationAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("93D11DE9-5F6C-354A-A7C5-16CCCA64A9B8")
ObfuscationAttribute;
#endif

EXTERN_C const CLSID CLSID_ExceptionHandlingClause;

#ifdef __cplusplus

class DECLSPEC_UUID("17CA8E14-F624-3879-94CA-6B9556A97D1F")
ExceptionHandlingClause;
#endif

EXTERN_C const CLSID CLSID_MethodBody;

#ifdef __cplusplus

class DECLSPEC_UUID("8E2EA778-34A7-32A0-8CC2-0BAA5AA2066A")
MethodBody;
#endif

EXTERN_C const CLSID CLSID_LocalVariableInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("14C0B634-A0E7-3E5D-BE59-B2BF1A571FFC")
LocalVariableInfo;
#endif

EXTERN_C const CLSID CLSID_Pointer;

#ifdef __cplusplus

class DECLSPEC_UUID("0517463E-1139-3970-BFA9-DCC997B23E7C")
Pointer;
#endif

EXTERN_C const CLSID CLSID_ReflectionTypeLoadException;

#ifdef __cplusplus

class DECLSPEC_UUID("843B19AD-A02B-3852-AC56-FDC798935630")
ReflectionTypeLoadException;
#endif

EXTERN_C const CLSID CLSID_StrongNameKeyPair;

#ifdef __cplusplus

class DECLSPEC_UUID("D633F013-0563-312A-B9D6-D067A7D59231")
StrongNameKeyPair;
#endif

EXTERN_C const CLSID CLSID_TargetException;

#ifdef __cplusplus

class DECLSPEC_UUID("0D23F8B4-F2A6-3EFF-9D37-BDF79AC6B440")
TargetException;
#endif

EXTERN_C const CLSID CLSID_TargetInvocationException;

#ifdef __cplusplus

class DECLSPEC_UUID("03D016E3-CAE1-3068-880E-AF8D08D517F0")
TargetInvocationException;
#endif

EXTERN_C const CLSID CLSID_TargetParameterCountException;

#ifdef __cplusplus

class DECLSPEC_UUID("DA317BE2-1A0D-37B3-83F2-A0F32787FC67")
TargetParameterCountException;
#endif

EXTERN_C const CLSID CLSID_TypeDelegator;

#ifdef __cplusplus

class DECLSPEC_UUID("19E2E2F7-B53C-366B-8840-ABA2F8CB98B5")
TypeDelegator;
#endif

EXTERN_C const CLSID CLSID_TypeFilter;

#ifdef __cplusplus

class DECLSPEC_UUID("37E24F25-5EF0-366F-9D0F-F7B9E3EDFFD9")
TypeFilter;
#endif

EXTERN_C const CLSID CLSID_MethodBase;

#ifdef __cplusplus

class DECLSPEC_UUID("CA308C9F-3B97-3152-ACFA-8AB23C17DF73")
MethodBase;
#endif

EXTERN_C const CLSID CLSID_ConstructorInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("0A541F87-EBD7-36A0-9A7D-9BBF86188766")
ConstructorInfo;
#endif

EXTERN_C const CLSID CLSID_MethodInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("0E22CC27-CA1E-3138-9640-BE831F721659")
MethodInfo;
#endif

EXTERN_C const CLSID CLSID_FieldInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("98BA57DC-4CF2-3ED1-B4A2-890C21BBBF4B")
FieldInfo;
#endif

EXTERN_C const CLSID CLSID_EventInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("15762CA5-BC5C-3B86-A450-ACF32FC98AA5")
EventInfo;
#endif

EXTERN_C const CLSID CLSID_PropertyInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("BFDF1F57-230D-394A-B773-D9EC58CBEF9A")
PropertyInfo;
#endif

EXTERN_C const CLSID CLSID_ParameterInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("E5CE8078-0CA7-3578-80DB-F20FCA8786A6")
ParameterInfo;
#endif

EXTERN_C const CLSID CLSID_Formatter;

#ifdef __cplusplus

class DECLSPEC_UUID("E6854C08-0666-3939-BDF1-E1555A2C49FA")
Formatter;
#endif

EXTERN_C const CLSID CLSID_FormatterConverter;

#ifdef __cplusplus

class DECLSPEC_UUID("D23D2F41-1D69-3E03-A275-32AE381223AC")
FormatterConverter;
#endif

EXTERN_C const CLSID CLSID_FormatterServices;

#ifdef __cplusplus

class DECLSPEC_UUID("688C32EA-1E9C-3A4B-90E0-A4D2A1D73F3F")
FormatterServices;
#endif

EXTERN_C const CLSID CLSID_ObjectIDGenerator;

#ifdef __cplusplus

class DECLSPEC_UUID("4F272C37-F0A8-350C-867B-2C03B2B16B80")
ObjectIDGenerator;
#endif

EXTERN_C const CLSID CLSID_ObjectManager;

#ifdef __cplusplus

class DECLSPEC_UUID("C3A27C9A-5F79-3B7A-963D-39B1E5202B55")
ObjectManager;
#endif

EXTERN_C const CLSID CLSID_OptionalFieldAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1C97EF1D-74ED-3D21-84A4-8631D959634A")
OptionalFieldAttribute;
#endif

EXTERN_C const CLSID CLSID_OnSerializingAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("9BF86F6E-B0E1-348B-9627-6970672EB3D3")
OnSerializingAttribute;
#endif

EXTERN_C const CLSID CLSID_OnSerializedAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("6F8527BF-5AAD-3236-B639-A05177332EFE")
OnSerializedAttribute;
#endif

EXTERN_C const CLSID CLSID_OnDeserializingAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("30AC0B94-3BDB-3199-8A5D-ECA0C5458381")
OnDeserializingAttribute;
#endif

EXTERN_C const CLSID CLSID_OnDeserializedAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("18B1C7EE-68E3-35BB-9E40-469A223285F7")
OnDeserializedAttribute;
#endif

EXTERN_C const CLSID CLSID_SerializationBinder;

#ifdef __cplusplus

class DECLSPEC_UUID("25D97DB7-BDC3-3205-B86B-956B852ECE76")
SerializationBinder;
#endif

EXTERN_C const CLSID CLSID_SerializationInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("D69398C1-7541-33E7-B544-A803F380FFB6")
SerializationInfo;
#endif

EXTERN_C const CLSID CLSID_SerializationInfoEnumerator;

#ifdef __cplusplus

class DECLSPEC_UUID("341BA870-B7FE-3CBC-9A72-B7894C6EC171")
SerializationInfoEnumerator;
#endif

EXTERN_C const CLSID CLSID_SerializationException;

#ifdef __cplusplus

class DECLSPEC_UUID("57154C7C-EDB2-3BFD-A8BA-924C60913EBF")
SerializationException;
#endif

EXTERN_C const CLSID CLSID_SurrogateSelector;

#ifdef __cplusplus

class DECLSPEC_UUID("88C8A919-EB24-3CCA-84F7-2EA82BB3F3ED")
SurrogateSelector;
#endif

EXTERN_C const CLSID CLSID_Calendar;

#ifdef __cplusplus

class DECLSPEC_UUID("8A93390F-4331-317F-B450-1E0E4914E335")
Calendar;
#endif

EXTERN_C const CLSID CLSID_EastAsianLunisolarCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("47FF8F5E-F989-39FF-A985-898BF36109BD")
EastAsianLunisolarCalendar;
#endif

EXTERN_C const CLSID CLSID_CompareInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("6747FF61-F8DA-3689-BB01-47F2266AE261")
CompareInfo;
#endif

EXTERN_C const CLSID CLSID_CultureInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("348A8C6D-464A-3F21-856B-061370D54599")
CultureInfo;
#endif

EXTERN_C const CLSID CLSID_DateTimeFormatInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("70A738D1-1BC5-3175-BD42-603E2B82C08B")
DateTimeFormatInfo;
#endif

EXTERN_C const CLSID CLSID_DaylightTime;

#ifdef __cplusplus

class DECLSPEC_UUID("5050FE97-72A6-3BC6-92F2-9DD0413041E3")
DaylightTime;
#endif

EXTERN_C const CLSID CLSID_GregorianCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("68F8AEA9-1968-35B9-8A0E-6FDC637A4F8E")
GregorianCalendar;
#endif

EXTERN_C const CLSID CLSID_HebrewCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("2206D773-CA1C-3258-9456-CEB7706C3710")
HebrewCalendar;
#endif

EXTERN_C const CLSID CLSID_HijriCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("EE832CE3-06CA-33EF-8F01-61C7C218BD7E")
HijriCalendar;
#endif

EXTERN_C const CLSID CLSID_JapaneseCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("374050DD-6190-3257-8812-8230BF095147")
JapaneseCalendar;
#endif

EXTERN_C const CLSID CLSID_JulianCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("5C3E6CE8-B218-3762-883C-91BC987CDC2D")
JulianCalendar;
#endif

EXTERN_C const CLSID CLSID_KoreanCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("1A06A4DC-E239-3717-89E1-D0683F3A5320")
KoreanCalendar;
#endif

EXTERN_C const CLSID CLSID_RegionInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("0C630393-7583-333C-AB5D-CB10B910F69B")
RegionInfo;
#endif

EXTERN_C const CLSID CLSID_SortKey;

#ifdef __cplusplus

class DECLSPEC_UUID("F34B5293-82D0-32A5-9165-AE789FD3CF15")
SortKey;
#endif

EXTERN_C const CLSID CLSID_StringInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("31C967B5-2F8A-3957-9C6D-34A0731DB36C")
StringInfo;
#endif

EXTERN_C const CLSID CLSID_TaiwanCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("769B8B68-64F7-3B61-B744-160A9FCC3216")
TaiwanCalendar;
#endif

EXTERN_C const CLSID CLSID_TextElementEnumerator;

#ifdef __cplusplus

class DECLSPEC_UUID("4C96DA7C-8858-3C24-A973-CB50F2860A91")
TextElementEnumerator;
#endif

EXTERN_C const CLSID CLSID_TextInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("BCA1528C-6369-37AD-8CC1-DB24A92CC6B1")
TextInfo;
#endif

EXTERN_C const CLSID CLSID_ThaiBuddhistCalendar;

#ifdef __cplusplus

class DECLSPEC_UUID("EC3DAC94-DF80-3017-B381-B13DCED6C4D8")
ThaiBuddhistCalendar;
#endif

EXTERN_C const CLSID CLSID_NumberFormatInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("146A47AB-A2CF-3587-BB25-2B286D7566B4")
NumberFormatInfo;
#endif

EXTERN_C const CLSID CLSID_Encoding;

#ifdef __cplusplus

class DECLSPEC_UUID("EAECC459-5CE4-35A2-A085-5AFC0451C03A")
Encoding;
#endif

EXTERN_C const CLSID CLSID_Encoder;

#ifdef __cplusplus

class DECLSPEC_UUID("CC9D4538-57E8-3A82-886A-5FE65A127A5A")
Encoder;
#endif

EXTERN_C const CLSID CLSID_Decoder;

#ifdef __cplusplus

class DECLSPEC_UUID("A924269D-5DF2-33AF-B72A-3250C4105EBE")
Decoder;
#endif

EXTERN_C const CLSID CLSID_ASCIIEncoding;

#ifdef __cplusplus

class DECLSPEC_UUID("9E28EF95-9C6F-3A00-B525-36A76178CC9C")
ASCIIEncoding;
#endif

EXTERN_C const CLSID CLSID_UnicodeEncoding;

#ifdef __cplusplus

class DECLSPEC_UUID("A0F5F5DC-337B-38D7-B1A3-FB1B95666BBF")
UnicodeEncoding;
#endif

EXTERN_C const CLSID CLSID_UTF7Encoding;

#ifdef __cplusplus

class DECLSPEC_UUID("3C9DCA8B-4410-3143-B801-559553EB6725")
UTF7Encoding;
#endif

EXTERN_C const CLSID CLSID_UTF8Encoding;

#ifdef __cplusplus

class DECLSPEC_UUID("8C40D44A-4EDE-3760-9B61-50255056D3C7")
UTF8Encoding;
#endif

EXTERN_C const CLSID CLSID_MissingManifestResourceException;

#ifdef __cplusplus

class DECLSPEC_UUID("726BBDF4-6C6D-30F4-B3A0-F14D6AEC08C7")
MissingManifestResourceException;
#endif

EXTERN_C const CLSID CLSID_MissingSatelliteAssemblyException;

#ifdef __cplusplus

class DECLSPEC_UUID("D41969A6-C394-34B9-BD24-DD408F39F261")
MissingSatelliteAssemblyException;
#endif

EXTERN_C const CLSID CLSID_NeutralResourcesLanguageAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("87797538-6BAE-366A-A9BC-012C8F62EA44")
NeutralResourcesLanguageAttribute;
#endif

EXTERN_C const CLSID CLSID_ResourceManager;

#ifdef __cplusplus

class DECLSPEC_UUID("9AFB3B93-E6DA-35D6-B9FE-44815E2BFD45")
ResourceManager;
#endif

EXTERN_C const CLSID CLSID_ResourceReader;

#ifdef __cplusplus

class DECLSPEC_UUID("DD78B5ED-AA52-3B2B-A1B4-6CE3CE3155EA")
ResourceReader;
#endif

EXTERN_C const CLSID CLSID_ResourceSet;

#ifdef __cplusplus

class DECLSPEC_UUID("A907F7CD-8C99-31EA-AC00-80FA4D94780A")
ResourceSet;
#endif

EXTERN_C const CLSID CLSID_ResourceWriter;

#ifdef __cplusplus

class DECLSPEC_UUID("9187A0D6-508C-36CC-A79F-F90B89A0E154")
ResourceWriter;
#endif

EXTERN_C const CLSID CLSID_SatelliteContractVersionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F4AE34F8-6CE4-32DC-96BA-9C7A0A9C6D06")
SatelliteContractVersionAttribute;
#endif

EXTERN_C const CLSID CLSID_Registry;

#ifdef __cplusplus

class DECLSPEC_UUID("9B4EF4FA-742E-3878-953A-474999711087")
Registry;
#endif

EXTERN_C const CLSID CLSID_RegistryKey;

#ifdef __cplusplus

class DECLSPEC_UUID("2C8FA9BD-CBE4-3223-B592-41B5A22FB820")
RegistryKey;
#endif

EXTERN_C const CLSID CLSID_AllMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("06B81C12-A5DA-340D-AFF7-FA1453FBC29A")
AllMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_ApplicationDirectory;

#ifdef __cplusplus

class DECLSPEC_UUID("720BF501-75AA-39F3-B6C2-EABE2F47CEE5")
ApplicationDirectory;
#endif

EXTERN_C const CLSID CLSID_ApplicationDirectoryMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("3DDB2114-9285-30A6-906D-B117640CA927")
ApplicationDirectoryMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_ApplicationSecurityInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("80472D32-EF68-3988-BE44-BD9E336D4DF8")
ApplicationSecurityInfo;
#endif

EXTERN_C const CLSID CLSID_ApplicationSecurityManager;

#ifdef __cplusplus

class DECLSPEC_UUID("2FB9AC2A-8724-32D0-98FA-218C1B2B3E1D")
ApplicationSecurityManager;
#endif

EXTERN_C const CLSID CLSID_ApplicationTrust;

#ifdef __cplusplus

class DECLSPEC_UUID("A5448B7A-AA07-3C56-B42B-7D881FA10934")
ApplicationTrust;
#endif

EXTERN_C const CLSID CLSID_ApplicationTrustCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("45CD6D50-A8B4-3783-9759-445FC3D4731C")
ApplicationTrustCollection;
#endif

EXTERN_C const CLSID CLSID_ApplicationTrustEnumerator;

#ifdef __cplusplus

class DECLSPEC_UUID("128BA7D4-E68F-3223-85BE-7372D0FB5423")
ApplicationTrustEnumerator;
#endif

EXTERN_C const CLSID CLSID_CodeGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("05C4D71E-FB7D-30BE-B6B4-1DF8999CEEE1")
CodeGroup;
#endif

EXTERN_C const CLSID CLSID_Evidence;

#ifdef __cplusplus

class DECLSPEC_UUID("62545937-20A9-3D0F-B04B-322E854EACB0")
Evidence;
#endif

EXTERN_C const CLSID CLSID_FileCodeGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("3F8D7E3A-24E7-3F7C-9DC5-4CA22EE7C782")
FileCodeGroup;
#endif

EXTERN_C const CLSID CLSID_FirstMatchCodeGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("28635CC7-4C39-3779-8C31-839101001F78")
FirstMatchCodeGroup;
#endif

EXTERN_C const CLSID CLSID_TrustManagerContext;

#ifdef __cplusplus

class DECLSPEC_UUID("AFAEF10F-1BC4-351F-886A-878A265C1862")
TrustManagerContext;
#endif

EXTERN_C const CLSID CLSID_CodeConnectAccess;

#ifdef __cplusplus

class DECLSPEC_UUID("E7473F93-ECCF-38ED-9285-E93CD2D27608")
CodeConnectAccess;
#endif

EXTERN_C const CLSID CLSID_NetCodeGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("A601B6B7-422D-3B21-A61C-A77C5512F36A")
NetCodeGroup;
#endif

EXTERN_C const CLSID CLSID_PermissionRequestEvidence;

#ifdef __cplusplus

class DECLSPEC_UUID("E1C3E338-B088-3C69-9989-A0E59E96FEA8")
PermissionRequestEvidence;
#endif

EXTERN_C const CLSID CLSID_PolicyException;

#ifdef __cplusplus

class DECLSPEC_UUID("89D26277-8408-3FC8-BD44-CF5F0E614C82")
PolicyException;
#endif

EXTERN_C const CLSID CLSID_PolicyLevel;

#ifdef __cplusplus

class DECLSPEC_UUID("64E304C1-D80D-3388-94EF-002F45D5AC05")
PolicyLevel;
#endif

EXTERN_C const CLSID CLSID_PolicyStatement;

#ifdef __cplusplus

class DECLSPEC_UUID("ABCC3DF5-7E59-3780-A3CC-4F412008A5EA")
PolicyStatement;
#endif

EXTERN_C const CLSID CLSID_Site;

#ifdef __cplusplus

class DECLSPEC_UUID("0F71B36D-4006-35B5-9F42-4C468514AF70")
Site;
#endif

EXTERN_C const CLSID CLSID_SiteMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("7F5E4FD8-9575-3691-BF0C-2D30A21E4376")
SiteMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_StrongName;

#ifdef __cplusplus

class DECLSPEC_UUID("F1566AAF-63FE-3F4B-B121-DCD17999119B")
StrongName;
#endif

EXTERN_C const CLSID CLSID_StrongNameMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("7CFFAC1C-7370-30F9-AA72-E30FE39257D9")
StrongNameMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_UnionCodeGroup;

#ifdef __cplusplus

class DECLSPEC_UUID("F424D0BE-F3CB-3D09-9B18-C523A739EBFE")
UnionCodeGroup;
#endif

EXTERN_C const CLSID CLSID_Url;

#ifdef __cplusplus

class DECLSPEC_UUID("7A2AE0C8-EF79-334E-BACF-D7BA452CAF7C")
Url;
#endif

EXTERN_C const CLSID CLSID_UrlMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("93E33D56-812D-3112-BEEB-276A67D1172E")
UrlMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_Zone;

#ifdef __cplusplus

class DECLSPEC_UUID("6FCF98FF-B4D6-37A4-9DAB-4DE11A5FE5F2")
Zone;
#endif

EXTERN_C const CLSID CLSID_ZoneMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("D72F9AEB-23F8-3B88-B6FD-8A143E3245A1")
ZoneMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_GacInstalled;

#ifdef __cplusplus

class DECLSPEC_UUID("EE24A2C3-3AA2-33DA-8731-A4FCC1105813")
GacInstalled;
#endif

EXTERN_C const CLSID CLSID_GacMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("390E92C9-FA66-3357-BEF2-45A1F34186B9")
GacMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_Hash;

#ifdef __cplusplus

class DECLSPEC_UUID("260356E2-BAFA-3349-8BF7-86EEB460A2C7")
Hash;
#endif

EXTERN_C const CLSID CLSID_HashMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("769EDEAD-E3B2-3C89-B9A6-948CD7288587")
HashMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_Publisher;

#ifdef __cplusplus

class DECLSPEC_UUID("649546A7-965F-366F-A735-0FB522917B5A")
Publisher;
#endif

EXTERN_C const CLSID CLSID_PublisherMembershipCondition;

#ifdef __cplusplus

class DECLSPEC_UUID("05BF00F9-44B8-39A7-AF36-7E11C9B502DD")
PublisherMembershipCondition;
#endif

EXTERN_C const CLSID CLSID_GenericIdentity;

#ifdef __cplusplus

class DECLSPEC_UUID("4C534A8E-3C46-3745-BDAE-5119C40F98E7")
GenericIdentity;
#endif

EXTERN_C const CLSID CLSID_GenericPrincipal;

#ifdef __cplusplus

class DECLSPEC_UUID("2EACB710-FE48-3C13-8145-E810792C58A2")
GenericPrincipal;
#endif

EXTERN_C const CLSID CLSID_WindowsIdentity;

#ifdef __cplusplus

class DECLSPEC_UUID("70C7CEC2-5BB2-3770-A26E-FC180C81F4FE")
WindowsIdentity;
#endif

EXTERN_C const CLSID CLSID_WindowsImpersonationContext;

#ifdef __cplusplus

class DECLSPEC_UUID("FC1ABB5C-D107-3145-908A-3EA107D53748")
WindowsImpersonationContext;
#endif

EXTERN_C const CLSID CLSID_WindowsPrincipal;

#ifdef __cplusplus

class DECLSPEC_UUID("138887DB-C015-3254-B05A-D15616BF9AEE")
WindowsPrincipal;
#endif

EXTERN_C const CLSID CLSID_UnmanagedFunctionPointerAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1A8E1B1F-EF9E-33E6-950E-4D9435F1335B")
UnmanagedFunctionPointerAttribute;
#endif

EXTERN_C const CLSID CLSID_DispIdAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("B36860B2-BAC3-3C25-81EE-1F62CB91FC76")
DispIdAttribute;
#endif

EXTERN_C const CLSID CLSID_InterfaceTypeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("C8A36B3C-BC72-31E7-8BA2-EF949A54BD0C")
InterfaceTypeAttribute;
#endif

EXTERN_C const CLSID CLSID_ComDefaultInterfaceAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("43C2214A-95FC-362D-A792-7316C65B49AA")
ComDefaultInterfaceAttribute;
#endif

EXTERN_C const CLSID CLSID_ClassInterfaceAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5819DB84-163F-3FA2-853B-43A0269626B1")
ClassInterfaceAttribute;
#endif

EXTERN_C const CLSID CLSID_ComVisibleAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1F4BCC99-E9D8-3AAB-99AF-4D1EC26E3376")
ComVisibleAttribute;
#endif

EXTERN_C const CLSID CLSID_TypeLibImportClassAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("A09B7B15-DFA5-3E98-9C26-865AD9079E42")
TypeLibImportClassAttribute;
#endif

EXTERN_C const CLSID CLSID_LCIDConversionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F912451B-8766-32CD-917F-3B9FEE4421A8")
LCIDConversionAttribute;
#endif

EXTERN_C const CLSID CLSID_ComRegisterFunctionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("630A3EF1-23C6-31FE-9D25-294E3B3E7486")
ComRegisterFunctionAttribute;
#endif

EXTERN_C const CLSID CLSID_ComUnregisterFunctionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("8F45C7FF-1E6E-34C1-A7CC-260985392A05")
ComUnregisterFunctionAttribute;
#endif

EXTERN_C const CLSID CLSID_ProgIdAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("47854AE8-F71C-3459-A943-1E91EDC951A7")
ProgIdAttribute;
#endif

EXTERN_C const CLSID CLSID_ImportedFromTypeLibAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("8AFEAA55-757F-3DDB-A750-B2CAA6A0B80B")
ImportedFromTypeLibAttribute;
#endif

EXTERN_C const CLSID CLSID_IDispatchImplAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3AB97590-3A62-36FB-903F-BB70B015F156")
IDispatchImplAttribute;
#endif

EXTERN_C const CLSID CLSID_ComSourceInterfacesAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("AC0C43B1-6CA0-3E6C-B088-B11E96FA0CE3")
ComSourceInterfacesAttribute;
#endif

EXTERN_C const CLSID CLSID_ComConversionLossAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("8A3FD229-B2A9-347F-93D2-87F3B7F92753")
ComConversionLossAttribute;
#endif

EXTERN_C const CLSID CLSID_TypeLibTypeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("2F53C69E-F1F0-3E98-AD3B-EEAA89A88906")
TypeLibTypeAttribute;
#endif

EXTERN_C const CLSID CLSID_TypeLibFuncAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("05074A9C-0B30-3A78-AAEF-99356E49DF45")
TypeLibFuncAttribute;
#endif

EXTERN_C const CLSID CLSID_TypeLibVarAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("36BDD1DA-2B15-3428-B055-BDABF4667C3F")
TypeLibVarAttribute;
#endif

EXTERN_C const CLSID CLSID_MarshalAsAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("AAFFEF00-519D-3EE0-8763-D4B650611E0D")
MarshalAsAttribute;
#endif

EXTERN_C const CLSID CLSID_ComImportAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F1EBA909-6621-346D-9CE2-39F266C9D011")
ComImportAttribute;
#endif

EXTERN_C const CLSID CLSID_GuidAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("FDE6D643-768A-3C91-A169-2C8FB7C1CD1F")
GuidAttribute;
#endif

EXTERN_C const CLSID CLSID_PreserveSigAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("204D5A28-46A0-3F04-BD7C-B5672631E57F")
PreserveSigAttribute;
#endif

EXTERN_C const CLSID CLSID_InAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("96A058CD-FAF7-386C-85BF-E47F00C81795")
InAttribute;
#endif

EXTERN_C const CLSID CLSID_OutAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("FDB2DC94-B5A0-3702-AE84-BBFA752ACB36")
OutAttribute;
#endif

EXTERN_C const CLSID CLSID_OptionalAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("B81CB5ED-E654-399F-9698-C83C50665786")
OptionalAttribute;
#endif

EXTERN_C const CLSID CLSID_DllImportAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3C52777E-F51C-300A-8122-479A19164325")
DllImportAttribute;
#endif

EXTERN_C const CLSID CLSID_StructLayoutAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("A0FFF774-26BD-3DE7-95CE-DBCEA6088F96")
StructLayoutAttribute;
#endif

EXTERN_C const CLSID CLSID_FieldOffsetAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3BA14C59-4C61-3D7C-8161-9962D7A89292")
FieldOffsetAttribute;
#endif

EXTERN_C const CLSID CLSID_ComAliasNameAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("E1AA0B69-CA47-3749-AEB1-133DCE4C705F")
ComAliasNameAttribute;
#endif

EXTERN_C const CLSID CLSID_AutomationProxyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("0E67C08B-D921-33D0-82FE-B6FD28BBAEFF")
AutomationProxyAttribute;
#endif

EXTERN_C const CLSID CLSID_PrimaryInteropAssemblyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("6DD18F5D-7A5C-3868-B1C2-7E19DA873386")
PrimaryInteropAssemblyAttribute;
#endif

EXTERN_C const CLSID CLSID_CoClassAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("03E4C7F5-974C-3253-9BE0-41470697BBAD")
CoClassAttribute;
#endif

EXTERN_C const CLSID CLSID_ComEventInterfaceAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("830AC1F5-98EE-39A3-9212-FA5626CA855A")
ComEventInterfaceAttribute;
#endif

EXTERN_C const CLSID CLSID_TypeLibVersionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5F8DC45F-A2D8-3E34-8C86-586ED6A74984")
TypeLibVersionAttribute;
#endif

EXTERN_C const CLSID CLSID_ComCompatibleVersionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("7F962EBF-2220-30F0-8B92-24A73B7CD268")
ComCompatibleVersionAttribute;
#endif

EXTERN_C const CLSID CLSID_BestFitMappingAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("84FEE617-858B-364B-A662-8BF7ED5330CA")
BestFitMappingAttribute;
#endif

EXTERN_C const CLSID CLSID_DefaultCharSetAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("66708447-ECCE-3422-B3A3-C8161C1C693B")
DefaultCharSetAttribute;
#endif

EXTERN_C const CLSID CLSID_SetWin32ContextInIDispatchAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("9D309F77-4655-372E-84B0-B0FB4030F3B8")
SetWin32ContextInIDispatchAttribute;
#endif

EXTERN_C const CLSID CLSID_ExternalException;

#ifdef __cplusplus

class DECLSPEC_UUID("AFC681CF-E82F-361A-8280-CF4E1F844C3E")
ExternalException;
#endif

EXTERN_C const CLSID CLSID_COMException;

#ifdef __cplusplus

class DECLSPEC_UUID("07F94112-A42E-328B-B508-702EF62BCC29")
COMException;
#endif

EXTERN_C const CLSID CLSID_InvalidOleVariantTypeException;

#ifdef __cplusplus

class DECLSPEC_UUID("9A944885-EDAF-3A81-A2FF-6A9D5D1ABFC7")
InvalidOleVariantTypeException;
#endif

EXTERN_C const CLSID CLSID_MarshalDirectiveException;

#ifdef __cplusplus

class DECLSPEC_UUID("742AD1FB-B2F0-3681-B4AA-E736A3BCE4E1")
MarshalDirectiveException;
#endif

EXTERN_C const CLSID CLSID_RuntimeEnvironment;

#ifdef __cplusplus

class DECLSPEC_UUID("78D22140-40CF-303E-BE96-B3AC0407A34D")
RuntimeEnvironment;
#endif

EXTERN_C const CLSID CLSID_SEHException;

#ifdef __cplusplus

class DECLSPEC_UUID("CA805B13-468C-3A22-BF9A-818E97EFA6B7")
SEHException;
#endif

EXTERN_C const CLSID CLSID_BStrWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("E5DE21F2-12D7-3604-8251-1C5DBC64CA66")
BStrWrapper;
#endif

EXTERN_C const CLSID CLSID_CurrencyWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("D540A482-8FB8-3720-B52E-08C7A2C1B9DF")
CurrencyWrapper;
#endif

EXTERN_C const CLSID CLSID_DispatchWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("DA7109D3-BCD8-3D4C-B172-DFC2E585562A")
DispatchWrapper;
#endif

EXTERN_C const CLSID CLSID_ErrorWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("D7900EBD-FF28-3AE6-B517-7E32714F578B")
ErrorWrapper;
#endif

EXTERN_C const CLSID CLSID_ExtensibleClassFactory;

#ifdef __cplusplus

class DECLSPEC_UUID("58734403-8382-3110-B729-14C7855982F9")
ExtensibleClassFactory;
#endif

EXTERN_C const CLSID CLSID_InvalidComObjectException;

#ifdef __cplusplus

class DECLSPEC_UUID("A7248EC6-A8A5-3D07-890E-6107F8C247E5")
InvalidComObjectException;
#endif

EXTERN_C const CLSID CLSID_ObjectCreationDelegate;

#ifdef __cplusplus

class DECLSPEC_UUID("8A21DF64-F31A-306F-9DB8-0DFA164ED9EE")
ObjectCreationDelegate;
#endif

EXTERN_C const CLSID CLSID_RegistrationServices;

#ifdef __cplusplus

class DECLSPEC_UUID("475E398F-8AFA-43A7-A3BE-F4EF8D6787C9")
RegistrationServices;
#endif

EXTERN_C const CLSID CLSID_SafeArrayRankMismatchException;

#ifdef __cplusplus

class DECLSPEC_UUID("4BE89AC3-603D-36B2-AB9B-9C38866F56D5")
SafeArrayRankMismatchException;
#endif

EXTERN_C const CLSID CLSID_SafeArrayTypeMismatchException;

#ifdef __cplusplus

class DECLSPEC_UUID("2D5EC63C-1B3E-3EE4-9052-EB0D0303549C")
SafeArrayTypeMismatchException;
#endif

EXTERN_C const CLSID CLSID_TypeLibConverter;

#ifdef __cplusplus

class DECLSPEC_UUID("F1C3BF79-C3E4-11D3-88E7-00902754C43A")
TypeLibConverter;
#endif

EXTERN_C const CLSID CLSID_UnknownWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("887D4D94-31D1-37F3-9938-643ED2A46155")
UnknownWrapper;
#endif

EXTERN_C const CLSID CLSID_Stream;

#ifdef __cplusplus

class DECLSPEC_UUID("E331083B-C22D-3046-8EC7-D222D6BE031F")
Stream;
#endif

EXTERN_C const CLSID CLSID_BinaryReader;

#ifdef __cplusplus

class DECLSPEC_UUID("2484AFDA-7B47-3CD7-97B5-951F5C6AB5B6")
BinaryReader;
#endif

EXTERN_C const CLSID CLSID_BinaryWriter;

#ifdef __cplusplus

class DECLSPEC_UUID("D92CCD03-5C88-3339-8011-46E8B01A2BA8")
BinaryWriter;
#endif

EXTERN_C const CLSID CLSID_BufferedStream;

#ifdef __cplusplus

class DECLSPEC_UUID("1500ABC0-1DD4-37DD-985F-82430314C798")
BufferedStream;
#endif

EXTERN_C const CLSID CLSID_Directory;

#ifdef __cplusplus

class DECLSPEC_UUID("0EBD869E-64BF-3682-80BB-690A70114BE0")
Directory;
#endif

EXTERN_C const CLSID CLSID_FileSystemInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("1F0E8DB5-8F52-3360-8A47-9D3DC3A5ACAF")
FileSystemInfo;
#endif

EXTERN_C const CLSID CLSID_DirectoryInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("40A8B2FA-E055-3F59-8BA6-54C4E35649B5")
DirectoryInfo;
#endif

EXTERN_C const CLSID CLSID_IOException;

#ifdef __cplusplus

class DECLSPEC_UUID("A164C0BF-67AE-3C7E-BC05-BFE24A8CDB62")
IOException;
#endif

EXTERN_C const CLSID CLSID_DirectoryNotFoundException;

#ifdef __cplusplus

class DECLSPEC_UUID("8833BC41-DC6B-34B9-A799-682D2554F02F")
DirectoryNotFoundException;
#endif

EXTERN_C const CLSID CLSID_DriveInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("B7C87928-B1AD-35CE-AA58-3DC3AAB7AC67")
DriveInfo;
#endif

EXTERN_C const CLSID CLSID_DriveNotFoundException;

#ifdef __cplusplus

class DECLSPEC_UUID("A8F9F740-70C9-30A7-937C-59785A9BB5A4")
DriveNotFoundException;
#endif

EXTERN_C const CLSID CLSID_EndOfStreamException;

#ifdef __cplusplus

class DECLSPEC_UUID("58D052BC-A3DF-3508-AC95-FF297BDC9F0C")
EndOfStreamException;
#endif

EXTERN_C const CLSID CLSID_File;

#ifdef __cplusplus

class DECLSPEC_UUID("2A96793E-4CF3-3976-A893-B66886D89A03")
File;
#endif

EXTERN_C const CLSID CLSID_FileInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("D6DFFEAD-0B46-3DED-83DE-1943413B94D5")
FileInfo;
#endif

EXTERN_C const CLSID CLSID_FileLoadException;

#ifdef __cplusplus

class DECLSPEC_UUID("AF8C5F8A-9999-3E92-BB41-C5F4955174CD")
FileLoadException;
#endif

EXTERN_C const CLSID CLSID_FileNotFoundException;

#ifdef __cplusplus

class DECLSPEC_UUID("48C6E96F-A2F3-33E7-BA7F-C8F74866760B")
FileNotFoundException;
#endif

EXTERN_C const CLSID CLSID_FileStream;

#ifdef __cplusplus

class DECLSPEC_UUID("7F25E491-33BE-31E2-A334-CB506D4EE471")
FileStream;
#endif

EXTERN_C const CLSID CLSID_MemoryStream;

#ifdef __cplusplus

class DECLSPEC_UUID("F5E692D9-8A87-349D-9657-F96E5799D2F4")
MemoryStream;
#endif

EXTERN_C const CLSID CLSID_Path;

#ifdef __cplusplus

class DECLSPEC_UUID("B7AE0CAE-979E-3EBF-B33F-8F121DAFD78E")
Path;
#endif

EXTERN_C const CLSID CLSID_PathTooLongException;

#ifdef __cplusplus

class DECLSPEC_UUID("C016A313-9606-36D3-A823-33EBF5006189")
PathTooLongException;
#endif

EXTERN_C const CLSID CLSID_TextReader;

#ifdef __cplusplus

class DECLSPEC_UUID("7457D481-248A-3C89-B7E0-FCEB8FD827E5")
TextReader;
#endif

EXTERN_C const CLSID CLSID_StreamReader;

#ifdef __cplusplus

class DECLSPEC_UUID("405FB68B-360D-382C-8A64-1DA3C853D161")
StreamReader;
#endif

EXTERN_C const CLSID CLSID_TextWriter;

#ifdef __cplusplus

class DECLSPEC_UUID("08416C5B-A003-327C-9F0F-93942467E6E0")
TextWriter;
#endif

EXTERN_C const CLSID CLSID_StreamWriter;

#ifdef __cplusplus

class DECLSPEC_UUID("EF1AB726-0B87-3E09-AEF4-3A87C5DCDDA0")
StreamWriter;
#endif

EXTERN_C const CLSID CLSID_StringReader;

#ifdef __cplusplus

class DECLSPEC_UUID("0247D5AF-D61D-341C-8615-0FF28865B7CB")
StringReader;
#endif

EXTERN_C const CLSID CLSID_StringWriter;

#ifdef __cplusplus

class DECLSPEC_UUID("27F31D55-D6C6-3676-9D42-C40F3A918636")
StringWriter;
#endif

EXTERN_C const CLSID CLSID_AccessedThroughPropertyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5EFB687D-2B50-3216-BD74-52D06C8D3CD1")
AccessedThroughPropertyAttribute;
#endif

EXTERN_C const CLSID CLSID_CallConvCdecl;

#ifdef __cplusplus

class DECLSPEC_UUID("A3A1F076-1FA7-3A26-886D-8841CB45382F")
CallConvCdecl;
#endif

EXTERN_C const CLSID CLSID_CallConvStdcall;

#ifdef __cplusplus

class DECLSPEC_UUID("BCB67D4D-2096-36BE-974C-A003FC95041B")
CallConvStdcall;
#endif

EXTERN_C const CLSID CLSID_CallConvThiscall;

#ifdef __cplusplus

class DECLSPEC_UUID("46080CA7-7CB8-3A55-A72E-8E50ECA4D4FC")
CallConvThiscall;
#endif

EXTERN_C const CLSID CLSID_CallConvFastcall;

#ifdef __cplusplus

class DECLSPEC_UUID("ED0BC45C-2438-31A9-BBB6-E2A3B5916419")
CallConvFastcall;
#endif

EXTERN_C const CLSID CLSID_CustomConstantAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("6F7A3516-EFD9-31C3-BC9A-A89DF19F64E7")
CustomConstantAttribute;
#endif

EXTERN_C const CLSID CLSID_DateTimeConstantAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("3178FD5D-2A5B-30B9-9C5C-7593802F9C1A")
DateTimeConstantAttribute;
#endif

EXTERN_C const CLSID CLSID_DiscardableAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("837A6733-1675-3BC9-BBF8-13889F84DAF4")
DiscardableAttribute;
#endif

EXTERN_C const CLSID CLSID_DecimalConstantAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("AC8DE863-B115-3179-810F-162B43ABD2B5")
DecimalConstantAttribute;
#endif

EXTERN_C const CLSID CLSID_CompilationRelaxationsAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("76CEC05B-C55E-3ADF-92A2-0698F1CF2017")
CompilationRelaxationsAttribute;
#endif

EXTERN_C const CLSID CLSID_CompilerGlobalScopeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("4B601364-A04B-38BC-BD38-A18E981324CF")
CompilerGlobalScopeAttribute;
#endif

EXTERN_C const CLSID CLSID_IndexerNameAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("9599C078-DC94-3EA2-8761-408295BD1155")
IndexerNameAttribute;
#endif

EXTERN_C const CLSID CLSID_IsVolatile;

#ifdef __cplusplus

class DECLSPEC_UUID("86527C04-536A-33C6-8C84-3D5A5B458DB3")
IsVolatile;
#endif

EXTERN_C const CLSID CLSID_MethodImplAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("48D0CFE7-3128-3D2C-A5B5-8C7B82B4AB4F")
MethodImplAttribute;
#endif

EXTERN_C const CLSID CLSID_RequiredAttributeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("D49C12A2-C401-3894-8005-716C2F692D38")
RequiredAttributeAttribute;
#endif

EXTERN_C const CLSID CLSID_IsCopyConstructed;

#ifdef __cplusplus

class DECLSPEC_UUID("2D6B9536-E9CA-317C-B62F-8E5876351E10")
IsCopyConstructed;
#endif

EXTERN_C const CLSID CLSID_NativeCppClassAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("C437AB2E-865B-321D-BA15-0C8EC4CA119B")
NativeCppClassAttribute;
#endif

EXTERN_C const CLSID CLSID_IDispatchConstantAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("E947A0B0-D47F-3AA3-9B77-4624E0F3ACA4")
IDispatchConstantAttribute;
#endif

EXTERN_C const CLSID CLSID_IUnknownConstantAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("590E4A07-DAFC-3BE7-A178-DA349BBA980B")
IUnknownConstantAttribute;
#endif

EXTERN_C const CLSID CLSID_SecurityElement;

#ifdef __cplusplus

class DECLSPEC_UUID("B9033CD1-C905-3059-9D29-562ECB13B0B3")
SecurityElement;
#endif

EXTERN_C const CLSID CLSID_XmlSyntaxException;

#ifdef __cplusplus

class DECLSPEC_UUID("E38DA416-8050-3786-8201-46F187C15213")
XmlSyntaxException;
#endif

EXTERN_C const CLSID CLSID_CodeAccessPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("AF6550FA-7C4B-3477-86DD-235F8286EAAC")
CodeAccessPermission;
#endif

EXTERN_C const CLSID CLSID_EnvironmentPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("801F6E40-B384-3D27-B75F-DE2DF38F1192")
EnvironmentPermission;
#endif

EXTERN_C const CLSID CLSID_FileDialogPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("9E1239B4-493A-3D2D-8F91-6636EC9ECA21")
FileDialogPermission;
#endif

EXTERN_C const CLSID CLSID_FileIOPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("DC50CD5A-0CAD-3B47-BF0D-79E85F3C2FC7")
FileIOPermission;
#endif

EXTERN_C const CLSID CLSID_SecurityAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("47DCD758-DF63-3226-A3A9-B0B88872A311")
SecurityAttribute;
#endif

EXTERN_C const CLSID CLSID_CodeAccessSecurityAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("21858390-FE95-33A9-A103-F322C64D85AE")
CodeAccessSecurityAttribute;
#endif

EXTERN_C const CLSID CLSID_HostProtectionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("AD664904-FE8A-3217-BBF5-E6AB1D998F5F")
HostProtectionAttribute;
#endif

EXTERN_C const CLSID CLSID_IsolatedStoragePermission;

#ifdef __cplusplus

class DECLSPEC_UUID("F458ABF2-2B5E-3158-B0E4-228E8CDCF759")
IsolatedStoragePermission;
#endif

EXTERN_C const CLSID CLSID_IsolatedStorageFilePermission;

#ifdef __cplusplus

class DECLSPEC_UUID("AE588447-D98E-3E39-96F7-073433DB8D35")
IsolatedStorageFilePermission;
#endif

EXTERN_C const CLSID CLSID_EnvironmentPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("6161DF0C-CD78-33E1-B3E1-978B27025E40")
EnvironmentPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_FileDialogPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("A141F926-E6B5-3903-8EFA-1014D4970F1C")
FileDialogPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_FileIOPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("DE440C06-7EC3-3E59-83C8-3829090198F7")
FileIOPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_KeyContainerPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F40FFBD5-4CA8-333E-8706-29F13FB8D4D6")
KeyContainerPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_PrincipalPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("6D0AE73B-ED58-32E2-973C-765897783971")
PrincipalPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_ReflectionPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("64578750-937F-3B27-B631-C57E0BFFF97F")
ReflectionPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_RegistryPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F69CF20D-F85B-3436-9E0E-DD3CB3E8B2CD")
RegistryPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_SecurityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5E77314C-043D-3D8C-9C9D-D18F09FB3500")
SecurityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_UIPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5F4ED054-C453-3D2B-A0FE-64E89871D364")
UIPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_ZoneIdentityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("C386115F-2B99-356B-B4A1-2CF57CE52988")
ZoneIdentityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_StrongNameIdentityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("EF2C9DE4-BCDA-3322-AE75-16CC3EC2665C")
StrongNameIdentityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_SiteIdentityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("23F73179-6349-3183-A55C-BCFB1A2446E8")
SiteIdentityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_UrlIdentityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("6852BE7D-8C00-3F66-BEE3-463F74838491")
UrlIdentityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_PublisherIdentityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("2335C1DA-CD60-3208-AB5E-447F16A087E5")
PublisherIdentityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_IsolatedStoragePermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("A56859A3-98ED-39A9-BD33-5807F0D6291F")
IsolatedStoragePermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_IsolatedStorageFilePermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("F6610DF3-8D62-38BD-BF6B-2A4BA839EB3B")
IsolatedStorageFilePermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_PermissionSetAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("24151BA6-6D79-3EC4-8C77-014FFBE735AE")
PermissionSetAttribute;
#endif

EXTERN_C const CLSID CLSID_ReflectionPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("E71CDC85-7FE7-3F51-BCDB-02459770DB87")
ReflectionPermission;
#endif

EXTERN_C const CLSID CLSID_PrincipalPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("67100ADE-60CF-33F1-8D95-F6FE1174458A")
PrincipalPermission;
#endif

EXTERN_C const CLSID CLSID_SecurityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("D5F5125A-3D46-3C57-8393-0E4EE9D8016B")
SecurityPermission;
#endif

EXTERN_C const CLSID CLSID_SiteIdentityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("3BCFC458-07DC-3BA7-8404-97EB76641080")
SiteIdentityPermission;
#endif

EXTERN_C const CLSID CLSID_StrongNameIdentityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("2B00B9EC-B4F4-3243-90AB-532E64FEE941")
StrongNameIdentityPermission;
#endif

EXTERN_C const CLSID CLSID_StrongNamePublicKeyBlob;

#ifdef __cplusplus

class DECLSPEC_UUID("A463394F-7BA6-3721-8AD8-842748612B4C")
StrongNamePublicKeyBlob;
#endif

EXTERN_C const CLSID CLSID_UIPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("05B46A2D-7C6B-3EFF-A09A-1490A36811C2")
UIPermission;
#endif

EXTERN_C const CLSID CLSID_UrlIdentityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("AB7D1AB9-D192-3A95-B34C-A3996837C6A7")
UrlIdentityPermission;
#endif

EXTERN_C const CLSID CLSID_ZoneIdentityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("CAEB199E-CEB9-388A-B240-E29C9F55199B")
ZoneIdentityPermission;
#endif

EXTERN_C const CLSID CLSID_GacIdentityPermissionAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("52F1A8F3-7C7C-3C08-848B-8AB0EA946959")
GacIdentityPermissionAttribute;
#endif

EXTERN_C const CLSID CLSID_GacIdentityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("29A6CF6F-D663-31A7-9210-1347871681FC")
GacIdentityPermission;
#endif

EXTERN_C const CLSID CLSID_KeyContainerPermissionAccessEntry;

#ifdef __cplusplus

class DECLSPEC_UUID("AB32DBC6-3D50-3098-8B72-FE98BA5CEFBA")
KeyContainerPermissionAccessEntry;
#endif

EXTERN_C const CLSID CLSID_KeyContainerPermissionAccessEntryCollection;

#ifdef __cplusplus

class DECLSPEC_UUID("A9B28590-073C-392C-82F4-B47FD3D00EC3")
KeyContainerPermissionAccessEntryCollection;
#endif

EXTERN_C const CLSID CLSID_KeyContainerPermissionAccessEntryEnumerator;

#ifdef __cplusplus

class DECLSPEC_UUID("616E9D9E-EE8A-35E6-A0A1-8BF70D536B02")
KeyContainerPermissionAccessEntryEnumerator;
#endif

EXTERN_C const CLSID CLSID_KeyContainerPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("2D91F34B-85EC-33E5-A32E-752D8219404D")
KeyContainerPermission;
#endif

EXTERN_C const CLSID CLSID_PublisherIdentityPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("73CF786B-CD2C-37E4-9835-824E4A019F11")
PublisherIdentityPermission;
#endif

EXTERN_C const CLSID CLSID_RegistryPermission;

#ifdef __cplusplus

class DECLSPEC_UUID("B35E31F2-9E50-3D43-8EAF-EC111F6B3295")
RegistryPermission;
#endif

EXTERN_C const CLSID CLSID_SuppressUnmanagedCodeSecurityAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("7AE01D6C-BEE7-38F6-9A86-329D8A917803")
SuppressUnmanagedCodeSecurityAttribute;
#endif

EXTERN_C const CLSID CLSID_UnverifiableCodeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("7E3393AB-2AB2-320B-8F6F-EAB6F5CF2CAF")
UnverifiableCodeAttribute;
#endif

EXTERN_C const CLSID CLSID_AllowPartiallyTrustedCallersAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5610F042-FF1D-36D0-996C-68F7A207D1F0")
AllowPartiallyTrustedCallersAttribute;
#endif

EXTERN_C const CLSID CLSID_HostSecurityManager;

#ifdef __cplusplus

class DECLSPEC_UUID("84589833-40D7-36E2-8545-67A92B97C408")
HostSecurityManager;
#endif

EXTERN_C const CLSID CLSID_PermissionSet;

#ifdef __cplusplus

class DECLSPEC_UUID("AFAFD122-DAC4-3FF9-9646-DC032A4A8806")
PermissionSet;
#endif

EXTERN_C const CLSID CLSID_NamedPermissionSet;

#ifdef __cplusplus

class DECLSPEC_UUID("C23E56CE-0A9A-3733-8189-46B43C9E4FB3")
NamedPermissionSet;
#endif

EXTERN_C const CLSID CLSID_SecurityException;

#ifdef __cplusplus

class DECLSPEC_UUID("EEF05C76-5C98-3685-A69C-6E1A26A7F846")
SecurityException;
#endif

EXTERN_C const CLSID CLSID_HostProtectionException;

#ifdef __cplusplus

class DECLSPEC_UUID("ECC82A10-B731-3A01-8A17-AC0DDD7666CF")
HostProtectionException;
#endif

EXTERN_C const CLSID CLSID_SecurityManager;

#ifdef __cplusplus

class DECLSPEC_UUID("DF4E1BB0-8CDC-3C4B-A1C9-FEE64BBEF8C5")
SecurityManager;
#endif

EXTERN_C const CLSID CLSID_VerificationException;

#ifdef __cplusplus

class DECLSPEC_UUID("EBAA029C-01C0-32B6-AAE6-FE21ADFC3E5D")
VerificationException;
#endif

EXTERN_C const CLSID CLSID_ContextAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1764148E-73C1-320A-83FC-337DE81A68B4")
ContextAttribute;
#endif

EXTERN_C const CLSID CLSID_AsyncResult;

#ifdef __cplusplus

class DECLSPEC_UUID("614E973A-B737-38F5-9DDF-5825AC923135")
AsyncResult;
#endif

EXTERN_C const CLSID CLSID_CallContext;

#ifdef __cplusplus

class DECLSPEC_UUID("9D0DF3B9-107C-3392-88C8-FE629CA21DAB")
CallContext;
#endif

EXTERN_C const CLSID CLSID_LogicalCallContext;

#ifdef __cplusplus

class DECLSPEC_UUID("5DB435A0-0DB3-3F4A-BF49-191A69D451BB")
LogicalCallContext;
#endif

EXTERN_C const CLSID CLSID_ChannelServices;

#ifdef __cplusplus

class DECLSPEC_UUID("D625BA4C-7C4C-3B86-99EA-780204EDE5CD")
ChannelServices;
#endif

EXTERN_C const CLSID CLSID_ClientChannelSinkStack;

#ifdef __cplusplus

class DECLSPEC_UUID("DD5856E5-8151-3334-B8E9-07CB152B20A4")
ClientChannelSinkStack;
#endif

EXTERN_C const CLSID CLSID_ServerChannelSinkStack;

#ifdef __cplusplus

class DECLSPEC_UUID("5C35F099-165E-3225-A3A5-564150EA17F5")
ServerChannelSinkStack;
#endif

EXTERN_C const CLSID CLSID_ClientSponsor;

#ifdef __cplusplus

class DECLSPEC_UUID("FD8C8FCE-4F85-36B2-B8E8-F5A183654539")
ClientSponsor;
#endif

EXTERN_C const CLSID CLSID_CrossContextDelegate;

#ifdef __cplusplus

class DECLSPEC_UUID("8DE7F105-07F6-31A8-8469-BAFCDC5024B8")
CrossContextDelegate;
#endif

EXTERN_C const CLSID CLSID_Context;

#ifdef __cplusplus

class DECLSPEC_UUID("A36E4EAF-EA3F-30A6-906D-374BBF7903B1")
Context;
#endif

EXTERN_C const CLSID CLSID_ContextProperty;

#ifdef __cplusplus

class DECLSPEC_UUID("6134805F-E8FF-3FD8-931E-4D847BCA7551")
ContextProperty;
#endif

EXTERN_C const CLSID CLSID_EnterpriseServicesHelper;

#ifdef __cplusplus

class DECLSPEC_UUID("BC5062B6-79E8-3F19-A87E-F9DAF826960C")
EnterpriseServicesHelper;
#endif

EXTERN_C const CLSID CLSID_Header;

#ifdef __cplusplus

class DECLSPEC_UUID("14309FAB-EACD-3C64-877E-07EB01B89C91")
Header;
#endif

EXTERN_C const CLSID CLSID_HeaderHandler;

#ifdef __cplusplus

class DECLSPEC_UUID("CC4C81B2-365E-3BA5-B374-A949B727E929")
HeaderHandler;
#endif

EXTERN_C const CLSID CLSID_ChannelDataStore;

#ifdef __cplusplus

class DECLSPEC_UUID("F3E38CEA-40E4-33C1-9DF7-BD103BE2D68B")
ChannelDataStore;
#endif

EXTERN_C const CLSID CLSID_TransportHeaders;

#ifdef __cplusplus

class DECLSPEC_UUID("48728B3F-F7D9-36C1-B3E7-8BF2E63CE1B3")
TransportHeaders;
#endif

EXTERN_C const CLSID CLSID_SinkProviderData;

#ifdef __cplusplus

class DECLSPEC_UUID("B8BE8D68-5FE6-38C5-838E-67CE2FCA9D70")
SinkProviderData;
#endif

EXTERN_C const CLSID CLSID_BaseChannelObjectWithProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("F369A73E-78D8-3BCC-AE36-522D116E19F9")
BaseChannelObjectWithProperties;
#endif

EXTERN_C const CLSID CLSID_BaseChannelSinkWithProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("0E9EB6E5-D899-3132-90C5-7376970C4FB5")
BaseChannelSinkWithProperties;
#endif

EXTERN_C const CLSID CLSID_BaseChannelWithProperties;

#ifdef __cplusplus

class DECLSPEC_UUID("22282340-9E30-3591-BD1E-6571930E8582")
BaseChannelWithProperties;
#endif

EXTERN_C const CLSID CLSID_LifetimeServices;

#ifdef __cplusplus

class DECLSPEC_UUID("8FD730C1-DD1B-3694-84A1-8CE7159E266B")
LifetimeServices;
#endif

EXTERN_C const CLSID CLSID_ReturnMessage;

#ifdef __cplusplus

class DECLSPEC_UUID("7B3BBD13-C870-3105-B123-FFCA166CDC04")
ReturnMessage;
#endif

EXTERN_C const CLSID CLSID_MethodCall;

#ifdef __cplusplus

class DECLSPEC_UUID("4F592B1F-4A0C-3FC0-9914-3677F64FC5A8")
MethodCall;
#endif

EXTERN_C const CLSID CLSID_ConstructionCall;

#ifdef __cplusplus

class DECLSPEC_UUID("54DAC96D-ECAF-38DB-A27B-3DDB102130C4")
ConstructionCall;
#endif

EXTERN_C const CLSID CLSID_MethodResponse;

#ifdef __cplusplus

class DECLSPEC_UUID("7E7BF3C0-B07B-3209-A424-7BC35D76EA7D")
MethodResponse;
#endif

EXTERN_C const CLSID CLSID_ConstructionResponse;

#ifdef __cplusplus

class DECLSPEC_UUID("25E8547A-6B49-3F00-B963-D45FDCEF4F11")
ConstructionResponse;
#endif

EXTERN_C const CLSID CLSID_InternalMessageWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("30C4CD02-66A2-3ABE-BC6C-638E6730E534")
InternalMessageWrapper;
#endif

EXTERN_C const CLSID CLSID_MethodCallMessageWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("40133645-FFAF-3A9C-B408-997E049D5C11")
MethodCallMessageWrapper;
#endif

EXTERN_C const CLSID CLSID_MethodReturnMessageWrapper;

#ifdef __cplusplus

class DECLSPEC_UUID("2EC528FB-B987-3B3B-A444-9F94C3A257C1")
MethodReturnMessageWrapper;
#endif

EXTERN_C const CLSID CLSID_ObjectHandle;

#ifdef __cplusplus

class DECLSPEC_UUID("ABEB0459-03B9-35AF-96E1-66BB7BC923F7")
ObjectHandle;
#endif

EXTERN_C const CLSID CLSID_ObjRef;

#ifdef __cplusplus

class DECLSPEC_UUID("21F5A790-53EA-3D73-86C3-A5BA6CF65FE9")
ObjRef;
#endif

EXTERN_C const CLSID CLSID_OneWayAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("C30ABD41-7B5A-3D10-A6EF-56862E2979B6")
OneWayAttribute;
#endif

EXTERN_C const CLSID CLSID_ProxyAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("1163D0CA-2A02-37C1-BF3F-A9B9E9D49245")
ProxyAttribute;
#endif

EXTERN_C const CLSID CLSID_RealProxy;

#ifdef __cplusplus

class DECLSPEC_UUID("531D00A5-2CFF-30D7-8245-97E18CD4D037")
RealProxy;
#endif

EXTERN_C const CLSID CLSID_SoapAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("9B924EC5-BF13-3A98-8AC0-80877995D403")
SoapAttribute;
#endif

EXTERN_C const CLSID CLSID_SoapTypeAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("9C67F424-22DC-3D05-AB36-17EAF95881F2")
SoapTypeAttribute;
#endif

EXTERN_C const CLSID CLSID_SoapMethodAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("01FF4E4B-8AD0-3171-8C82-5C2F48B87E3D")
SoapMethodAttribute;
#endif

EXTERN_C const CLSID CLSID_SoapFieldAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5B76534C-3ACC-3D52-AA61-D788B134ABE2")
SoapFieldAttribute;
#endif

EXTERN_C const CLSID CLSID_SoapParameterAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("C76B435D-86C2-30FD-9329-E2603246095C")
SoapParameterAttribute;
#endif

EXTERN_C const CLSID CLSID_RemotingConfiguration;

#ifdef __cplusplus

class DECLSPEC_UUID("3DB6F309-9DAB-36EC-8036-D901172C994C")
RemotingConfiguration;
#endif

EXTERN_C const CLSID CLSID_TypeEntry;

#ifdef __cplusplus

class DECLSPEC_UUID("4E52D7D6-9FDF-3B59-B318-778E0F40F37C")
TypeEntry;
#endif

EXTERN_C const CLSID CLSID_ActivatedClientTypeEntry;

#ifdef __cplusplus

class DECLSPEC_UUID("3ED0F148-E447-3EFE-8488-3C834082CC96")
ActivatedClientTypeEntry;
#endif

EXTERN_C const CLSID CLSID_ActivatedServiceTypeEntry;

#ifdef __cplusplus

class DECLSPEC_UUID("6CD360CD-D53D-3775-87EF-00D72E6645F5")
ActivatedServiceTypeEntry;
#endif

EXTERN_C const CLSID CLSID_WellKnownClientTypeEntry;

#ifdef __cplusplus

class DECLSPEC_UUID("6B3B6647-B39D-3ED4-992F-DF6C49ACE82E")
WellKnownClientTypeEntry;
#endif

EXTERN_C const CLSID CLSID_WellKnownServiceTypeEntry;

#ifdef __cplusplus

class DECLSPEC_UUID("2CE0DA26-18EF-3CF4-ABAC-BE90965F5F90")
WellKnownServiceTypeEntry;
#endif

EXTERN_C const CLSID CLSID_RemotingException;

#ifdef __cplusplus

class DECLSPEC_UUID("24540EBC-316E-35D2-80DB-8A535CAF6A35")
RemotingException;
#endif

EXTERN_C const CLSID CLSID_ServerException;

#ifdef __cplusplus

class DECLSPEC_UUID("DB13821E-9835-3958-8539-1E021399AB6C")
ServerException;
#endif

EXTERN_C const CLSID CLSID_RemotingTimeoutException;

#ifdef __cplusplus

class DECLSPEC_UUID("3CDED51A-86B4-39F0-A12A-5D1FDCED6546")
RemotingTimeoutException;
#endif

EXTERN_C const CLSID CLSID_RemotingServices;

#ifdef __cplusplus

class DECLSPEC_UUID("8DF4C38A-8492-3C47-8332-D9D04FAF3C59")
RemotingServices;
#endif

EXTERN_C const CLSID CLSID_InternalRemotingServices;

#ifdef __cplusplus

class DECLSPEC_UUID("53A3C917-BB24-3908-B58B-09ECDA99265F")
InternalRemotingServices;
#endif

EXTERN_C const CLSID CLSID_MessageSurrogateFilter;

#ifdef __cplusplus

class DECLSPEC_UUID("C48CA9BC-BBDB-3059-AEC8-763CF7E9A88C")
MessageSurrogateFilter;
#endif

EXTERN_C const CLSID CLSID_RemotingSurrogateSelector;

#ifdef __cplusplus

class DECLSPEC_UUID("24EEC005-3938-3C71-821D-7F68FD850B2D")
RemotingSurrogateSelector;
#endif

EXTERN_C const CLSID CLSID_SoapServices;

#ifdef __cplusplus

class DECLSPEC_UUID("DA5681DA-7C21-3A2D-AFAC-69E3A4D11F4D")
SoapServices;
#endif

EXTERN_C const CLSID CLSID_SoapDateTime;

#ifdef __cplusplus

class DECLSPEC_UUID("48AD62E8-BD40-37F4-8FD7-F7A17478A8E6")
SoapDateTime;
#endif

EXTERN_C const CLSID CLSID_SoapDuration;

#ifdef __cplusplus

class DECLSPEC_UUID("DE47D9CF-0107-3D66-93E9-A8ACB06B4583")
SoapDuration;
#endif

EXTERN_C const CLSID CLSID_SoapTime;

#ifdef __cplusplus

class DECLSPEC_UUID("D049DC2B-82C3-3350-A1CC-BF69FEE3825E")
SoapTime;
#endif

EXTERN_C const CLSID CLSID_SoapDate;

#ifdef __cplusplus

class DECLSPEC_UUID("2DECBCB7-BAC0-316D-9131-43035C5CB480")
SoapDate;
#endif

EXTERN_C const CLSID CLSID_SoapYearMonth;

#ifdef __cplusplus

class DECLSPEC_UUID("A7136BDF-B141-3913-9D1C-9BC5AFF21470")
SoapYearMonth;
#endif

EXTERN_C const CLSID CLSID_SoapYear;

#ifdef __cplusplus

class DECLSPEC_UUID("75999EBA-0679-3D43-BDC4-02E4D637F1B1")
SoapYear;
#endif

EXTERN_C const CLSID CLSID_SoapMonthDay;

#ifdef __cplusplus

class DECLSPEC_UUID("463AE13F-C7E5-357E-A41C-DF8762FFF85C")
SoapMonthDay;
#endif

EXTERN_C const CLSID CLSID_SoapDay;

#ifdef __cplusplus

class DECLSPEC_UUID("C9F0A842-3CE1-338F-A1D4-6D7BB397BDAA")
SoapDay;
#endif

EXTERN_C const CLSID CLSID_SoapMonth;

#ifdef __cplusplus

class DECLSPEC_UUID("CAEC7D4F-0B02-3579-943F-821738EE78CC")
SoapMonth;
#endif

EXTERN_C const CLSID CLSID_SoapHexBinary;

#ifdef __cplusplus

class DECLSPEC_UUID("8C1425C9-A7D3-35CD-8248-928CA52AD49B")
SoapHexBinary;
#endif

EXTERN_C const CLSID CLSID_SoapBase64Binary;

#ifdef __cplusplus

class DECLSPEC_UUID("F59D514C-F200-319F-BF3F-9E4E23B2848C")
SoapBase64Binary;
#endif

EXTERN_C const CLSID CLSID_SoapInteger;

#ifdef __cplusplus

class DECLSPEC_UUID("09A60795-31C0-3A79-9250-8D93C74FE540")
SoapInteger;
#endif

EXTERN_C const CLSID CLSID_SoapPositiveInteger;

#ifdef __cplusplus

class DECLSPEC_UUID("7B769B29-35F0-3BDC-AAE9-E99937F6CDEC")
SoapPositiveInteger;
#endif

EXTERN_C const CLSID CLSID_SoapNonPositiveInteger;

#ifdef __cplusplus

class DECLSPEC_UUID("2BB6C5E0-C2B9-3608-8868-21CFD6DDB91E")
SoapNonPositiveInteger;
#endif

EXTERN_C const CLSID CLSID_SoapNonNegativeInteger;

#ifdef __cplusplus

class DECLSPEC_UUID("6850404F-D7FB-32BD-8328-C94F66E8C1C7")
SoapNonNegativeInteger;
#endif

EXTERN_C const CLSID CLSID_SoapNegativeInteger;

#ifdef __cplusplus

class DECLSPEC_UUID("C41D0B30-A518-3093-A18F-364AF9E71EB7")
SoapNegativeInteger;
#endif

EXTERN_C const CLSID CLSID_SoapAnyUri;

#ifdef __cplusplus

class DECLSPEC_UUID("CDFA7117-B2A4-3A3F-B393-BC19D44F9749")
SoapAnyUri;
#endif

EXTERN_C const CLSID CLSID_SoapQName;

#ifdef __cplusplus

class DECLSPEC_UUID("D8A4F3EB-E7EC-3620-831A-B052A67C9944")
SoapQName;
#endif

EXTERN_C const CLSID CLSID_SoapNotation;

#ifdef __cplusplus

class DECLSPEC_UUID("B54E38F8-17FF-3D0A-9FF3-5E662DE2055F")
SoapNotation;
#endif

EXTERN_C const CLSID CLSID_SoapNormalizedString;

#ifdef __cplusplus

class DECLSPEC_UUID("0E71F9BD-C109-3352-BD60-14F96D56B6F3")
SoapNormalizedString;
#endif

EXTERN_C const CLSID CLSID_SoapToken;

#ifdef __cplusplus

class DECLSPEC_UUID("777F668E-3272-39CD-A8B5-860935A35181")
SoapToken;
#endif

EXTERN_C const CLSID CLSID_SoapLanguage;

#ifdef __cplusplus

class DECLSPEC_UUID("84F70B6C-D59E-394A-B879-FFCC30DDCAA2")
SoapLanguage;
#endif

EXTERN_C const CLSID CLSID_SoapName;

#ifdef __cplusplus

class DECLSPEC_UUID("4E515531-7A71-3CDD-8078-0A01C85C8F9D")
SoapName;
#endif

EXTERN_C const CLSID CLSID_SoapIdrefs;

#ifdef __cplusplus

class DECLSPEC_UUID("2763BE6B-F8CF-39D9-A2E8-9E9815C0815E")
SoapIdrefs;
#endif

EXTERN_C const CLSID CLSID_SoapEntities;

#ifdef __cplusplus

class DECLSPEC_UUID("9A3A64F4-8BA5-3DCF-880C-8D3EE06C5538")
SoapEntities;
#endif

EXTERN_C const CLSID CLSID_SoapNmtoken;

#ifdef __cplusplus

class DECLSPEC_UUID("C498F2D9-A77C-3D4B-A1A5-12CC7B99115D")
SoapNmtoken;
#endif

EXTERN_C const CLSID CLSID_SoapNmtokens;

#ifdef __cplusplus

class DECLSPEC_UUID("14BE6B21-C682-3A3A-8B24-FEE75B4FF8C5")
SoapNmtokens;
#endif

EXTERN_C const CLSID CLSID_SoapNcName;

#ifdef __cplusplus

class DECLSPEC_UUID("D13B741D-051F-322F-93AA-1367A3C8AAFB")
SoapNcName;
#endif

EXTERN_C const CLSID CLSID_SoapId;

#ifdef __cplusplus

class DECLSPEC_UUID("FA0B54D5-F221-3648-A20C-F67A96F4A207")
SoapId;
#endif

EXTERN_C const CLSID CLSID_SoapIdref;

#ifdef __cplusplus

class DECLSPEC_UUID("433CA926-9887-3541-89CC-5D74D0259144")
SoapIdref;
#endif

EXTERN_C const CLSID CLSID_SoapEntity;

#ifdef __cplusplus

class DECLSPEC_UUID("F00CA7A7-4B8D-3F2F-A5F2-CE4A4478B39C")
SoapEntity;
#endif

EXTERN_C const CLSID CLSID_SynchronizationAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("5520B6D3-6EC6-3CE7-958B-E69FAF6EFF99")
SynchronizationAttribute;
#endif

EXTERN_C const CLSID CLSID_TrackingServices;

#ifdef __cplusplus

class DECLSPEC_UUID("E822F35C-DDC2-3FB2-9768-A2AEBCED7C40")
TrackingServices;
#endif

EXTERN_C const CLSID CLSID_UrlAttribute;

#ifdef __cplusplus

class DECLSPEC_UUID("79C14066-E37E-3643-A449-D166FA0E8EC2")
UrlAttribute;
#endif

EXTERN_C const CLSID CLSID_IsolatedStorage;

#ifdef __cplusplus

class DECLSPEC_UUID("70541B17-BF7E-399B-8D33-2AFA4F5AF395")
IsolatedStorage;
#endif

EXTERN_C const CLSID CLSID_IsolatedStorageFile;

#ifdef __cplusplus

class DECLSPEC_UUID("5E45C68A-E894-3B38-AEEE-634540BD0D57")
IsolatedStorageFile;
#endif

EXTERN_C const CLSID CLSID_IsolatedStorageFileStream;

#ifdef __cplusplus

class DECLSPEC_UUID("E5CFDFFC-AEB5-3489-B12C-640F7B031B57")
IsolatedStorageFileStream;
#endif

EXTERN_C const CLSID CLSID_IsolatedStorageException;

#ifdef __cplusplus

class DECLSPEC_UUID("4479C009-4CC3-39A2-8F92-DFCDF034F748")
IsolatedStorageException;
#endif

EXTERN_C const CLSID CLSID_InternalRM;

#ifdef __cplusplus

class DECLSPEC_UUID("CF8F7FCF-94FE-3516-90E9-C103156DD2D5")
InternalRM;
#endif

EXTERN_C const CLSID CLSID_InternalST;

#ifdef __cplusplus

class DECLSPEC_UUID("CBBAF6EC-251A-3480-8A3D-4D56BC7320D0")
InternalST;
#endif

EXTERN_C const CLSID CLSID_SoapMessage;

#ifdef __cplusplus

class DECLSPEC_UUID("E772BBE6-CB52-3C19-876A-D1BFA2305F4E")
SoapMessage;
#endif

EXTERN_C const CLSID CLSID_SoapFault;

#ifdef __cplusplus

class DECLSPEC_UUID("A8D058C4-D923-3859-9490-D3888FC90439")
SoapFault;
#endif

EXTERN_C const CLSID CLSID_ServerFault;

#ifdef __cplusplus

class DECLSPEC_UUID("817ACCB7-35D8-3C18-BAF2-0A5CE2157B74")
ServerFault;
#endif

EXTERN_C const CLSID CLSID_BinaryFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("50369004-DB9A-3A75-BE7A-1D0EF017B9D3")
BinaryFormatter;
#endif

EXTERN_C const CLSID CLSID_AssemblyBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("0814BE2A-48E5-3D61-90F3-EF3D05DF9D5E")
AssemblyBuilder;
#endif

EXTERN_C const CLSID CLSID_ConstructorBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("93C24CDB-4014-3EFD-B564-E836BA48C765")
ConstructorBuilder;
#endif

EXTERN_C const CLSID CLSID_ILGenerator;

#ifdef __cplusplus

class DECLSPEC_UUID("5A3DCD44-5855-3D89-A0EC-CE50A3B144A9")
ILGenerator;
#endif

EXTERN_C const CLSID CLSID_DynamicILInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("A6D0F5A1-9218-30D4-8AD7-18CA98AC8026")
DynamicILInfo;
#endif

EXTERN_C const CLSID CLSID_DynamicMethod;

#ifdef __cplusplus

class DECLSPEC_UUID("5B9F3FA2-DABB-3887-93F6-663D83A93858")
DynamicMethod;
#endif

EXTERN_C const CLSID CLSID_EventBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("DC18B7EC-91E4-3999-910A-188D7AFA0A68")
EventBuilder;
#endif

EXTERN_C const CLSID CLSID_FieldBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("36D63E48-1646-345F-A3D4-B34E4C42C3C5")
FieldBuilder;
#endif

EXTERN_C const CLSID CLSID_LocalBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("A6BCAA25-D357-3F79-A716-AD1434E4D832")
LocalBuilder;
#endif

EXTERN_C const CLSID CLSID_MethodBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("53DF4FB3-A164-37D3-8310-F0D15730AB32")
MethodBuilder;
#endif

EXTERN_C const CLSID CLSID_CustomAttributeBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("71BC3E08-0082-320A-8BA5-EFA8D2B9798A")
CustomAttributeBuilder;
#endif

EXTERN_C const CLSID CLSID_MethodRental;

#ifdef __cplusplus

class DECLSPEC_UUID("726D83B0-9A52-36B0-919C-60E625F03211")
MethodRental;
#endif

EXTERN_C const CLSID CLSID_ModuleBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("FB2ED445-2862-3A63-9F5A-BBF6C2195DCE")
ModuleBuilder;
#endif

EXTERN_C const CLSID CLSID_OpCodes;

#ifdef __cplusplus

class DECLSPEC_UUID("2A59A0E6-11B2-3025-92DE-E036A6DDBC00")
OpCodes;
#endif

EXTERN_C const CLSID CLSID_ParameterBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("027AD5C3-D619-3506-B8E6-CA67A33B9C8F")
ParameterBuilder;
#endif

EXTERN_C const CLSID CLSID_PropertyBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("22D4C021-1B3C-3EE3-93B6-4C9D810CE077")
PropertyBuilder;
#endif

EXTERN_C const CLSID CLSID_SignatureHelper;

#ifdef __cplusplus

class DECLSPEC_UUID("798B57A2-064A-3098-9A80-E12DA70E0085")
SignatureHelper;
#endif

EXTERN_C const CLSID CLSID_TypeBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("0F445332-E34C-3F8C-90ED-AB7F0724ADAB")
TypeBuilder;
#endif

EXTERN_C const CLSID CLSID_GenericTypeParameterBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("A2289B64-5DE0-38BA-9266-B55E3598C901")
GenericTypeParameterBuilder;
#endif

EXTERN_C const CLSID CLSID_EnumBuilder;

#ifdef __cplusplus

class DECLSPEC_UUID("70F855DA-4948-38AB-A727-431C386AB9F5")
EnumBuilder;
#endif

EXTERN_C const CLSID CLSID_UnmanagedMarshal;

#ifdef __cplusplus

class DECLSPEC_UUID("E3C3A258-E508-3704-B9EB-264601956FE5")
UnmanagedMarshal;
#endif

EXTERN_C const CLSID CLSID_KeySizes;

#ifdef __cplusplus

class DECLSPEC_UUID("D7A12132-100F-37AE-A277-268A2656E476")
KeySizes;
#endif

EXTERN_C const CLSID CLSID_CryptographicException;

#ifdef __cplusplus

class DECLSPEC_UUID("7F8C7DC5-D8B4-3758-981F-02AF6B42461A")
CryptographicException;
#endif

EXTERN_C const CLSID CLSID_CryptographicUnexpectedOperationException;

#ifdef __cplusplus

class DECLSPEC_UUID("C41FA05C-8A7A-3157-8166-4104BB4925BA")
CryptographicUnexpectedOperationException;
#endif

EXTERN_C const CLSID CLSID_RandomNumberGenerator;

#ifdef __cplusplus

class DECLSPEC_UUID("3E04DC56-84CE-3893-8BEF-6C9B95F9CCF4")
RandomNumberGenerator;
#endif

EXTERN_C const CLSID CLSID_RNGCryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("40031115-09D2-3851-A13F-56930BE48038")
RNGCryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_AsymmetricAlgorithm;

#ifdef __cplusplus

class DECLSPEC_UUID("4B135D8E-7B1B-3EA8-8D06-10E34F157E9D")
AsymmetricAlgorithm;
#endif

EXTERN_C const CLSID CLSID_AsymmetricKeyExchangeDeformatter;

#ifdef __cplusplus

class DECLSPEC_UUID("0202CE16-1F18-3BFB-807D-760B157AB260")
AsymmetricKeyExchangeDeformatter;
#endif

EXTERN_C const CLSID CLSID_AsymmetricKeyExchangeFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("CE38DC2D-EB2D-3B6A-AFAC-8537BD0B9BF7")
AsymmetricKeyExchangeFormatter;
#endif

EXTERN_C const CLSID CLSID_AsymmetricSignatureDeformatter;

#ifdef __cplusplus

class DECLSPEC_UUID("BEE4E9FD-DE7A-3512-93D8-0C5E006B167A")
AsymmetricSignatureDeformatter;
#endif

EXTERN_C const CLSID CLSID_AsymmetricSignatureFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("5B475A84-5310-3C64-B625-E2BF00476F53")
AsymmetricSignatureFormatter;
#endif

EXTERN_C const CLSID CLSID_ToBase64Transform;

#ifdef __cplusplus

class DECLSPEC_UUID("5F3A0F8D-5EF9-3AD5-94E0-53AFF8BCE960")
ToBase64Transform;
#endif

EXTERN_C const CLSID CLSID_FromBase64Transform;

#ifdef __cplusplus

class DECLSPEC_UUID("C1ABB475-F198-39D5-BF8D-330BC7189661")
FromBase64Transform;
#endif

EXTERN_C const CLSID CLSID_CryptoAPITransform;

#ifdef __cplusplus

class DECLSPEC_UUID("AE746923-16BB-3D31-9D08-CE50EF6F7B1A")
CryptoAPITransform;
#endif

EXTERN_C const CLSID CLSID_CspParameters;

#ifdef __cplusplus

class DECLSPEC_UUID("AF60343F-6C7B-3761-839F-0C44E3CA06DA")
CspParameters;
#endif

EXTERN_C const CLSID CLSID_CryptoConfig;

#ifdef __cplusplus

class DECLSPEC_UUID("9EA60ECA-3DCD-340F-8E95-67845D185999")
CryptoConfig;
#endif

EXTERN_C const CLSID CLSID_CryptoStream;

#ifdef __cplusplus

class DECLSPEC_UUID("B5C4E3CA-476A-3961-BCA5-A6C0AD73E7B1")
CryptoStream;
#endif

EXTERN_C const CLSID CLSID_SymmetricAlgorithm;

#ifdef __cplusplus

class DECLSPEC_UUID("5B67EA6B-D85D-3F48-86D2-8581DB230C43")
SymmetricAlgorithm;
#endif

EXTERN_C const CLSID CLSID_DES;

#ifdef __cplusplus

class DECLSPEC_UUID("F30D404C-A350-36FA-A6FC-054C3F583420")
DES;
#endif

EXTERN_C const CLSID CLSID_DESCryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("B6EB52D5-BB1C-3380-8BCA-345FF43F4B04")
DESCryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_DeriveBytes;

#ifdef __cplusplus

class DECLSPEC_UUID("7D62DB2D-86E3-3ADE-90C4-215950643D10")
DeriveBytes;
#endif

EXTERN_C const CLSID CLSID_DSA;

#ifdef __cplusplus

class DECLSPEC_UUID("C13E7301-9B3F-3530-B60A-7F141D6DDE83")
DSA;
#endif

EXTERN_C const CLSID CLSID_DSACryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("673DFE75-9F93-304F-ABA8-D2A86BA87D7C")
DSACryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_DSASignatureDeformatter;

#ifdef __cplusplus

class DECLSPEC_UUID("1F17C39C-99D5-37E0-8E98-8F27044BD50A")
DSASignatureDeformatter;
#endif

EXTERN_C const CLSID CLSID_DSASignatureFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("8F6D198C-E66F-3A87-AA3F-F885DD09EA13")
DSASignatureFormatter;
#endif

EXTERN_C const CLSID CLSID_HashAlgorithm;

#ifdef __cplusplus

class DECLSPEC_UUID("68549FC3-F82C-3387-8578-E5FB09833740")
HashAlgorithm;
#endif

EXTERN_C const CLSID CLSID_KeyedHashAlgorithm;

#ifdef __cplusplus

class DECLSPEC_UUID("BF1B2D6A-E41E-3645-8257-A08D7483BD41")
KeyedHashAlgorithm;
#endif

EXTERN_C const CLSID CLSID_HMAC;

#ifdef __cplusplus

class DECLSPEC_UUID("C67D3B5F-8B7F-3720-B35F-3B49D058A900")
HMAC;
#endif

EXTERN_C const CLSID CLSID_HMACMD5;

#ifdef __cplusplus

class DECLSPEC_UUID("A7EDDCB5-6043-3988-921C-25E3DEE6322B")
HMACMD5;
#endif

EXTERN_C const CLSID CLSID_HMACRIPEMD160;

#ifdef __cplusplus

class DECLSPEC_UUID("20051D1B-321F-3E4D-A3DA-5FBE892F7EC5")
HMACRIPEMD160;
#endif

EXTERN_C const CLSID CLSID_HMACSHA1;

#ifdef __cplusplus

class DECLSPEC_UUID("00B01B2E-B1FE-33A6-AD40-57DE8358DC7D")
HMACSHA1;
#endif

EXTERN_C const CLSID CLSID_HMACSHA256;

#ifdef __cplusplus

class DECLSPEC_UUID("2C314899-8F99-3041-A49D-2F6AFC0E6296")
HMACSHA256;
#endif

EXTERN_C const CLSID CLSID_HMACSHA384;

#ifdef __cplusplus

class DECLSPEC_UUID("AE53ED01-CAB4-39CE-854A-8BF544EEEC35")
HMACSHA384;
#endif

EXTERN_C const CLSID CLSID_HMACSHA512;

#ifdef __cplusplus

class DECLSPEC_UUID("477A7D8E-8D26-3959-88F6-F6AB7E7F50CF")
HMACSHA512;
#endif

EXTERN_C const CLSID CLSID_CspKeyContainerInfo;

#ifdef __cplusplus

class DECLSPEC_UUID("E5E5B585-8A68-3F26-BB61-F34EF3AD27F8")
CspKeyContainerInfo;
#endif

EXTERN_C const CLSID CLSID_MACTripleDES;

#ifdef __cplusplus

class DECLSPEC_UUID("39B68485-6773-3C46-82E9-56D8F0B4570C")
MACTripleDES;
#endif

EXTERN_C const CLSID CLSID_MD5;

#ifdef __cplusplus

class DECLSPEC_UUID("668515A6-213D-377A-8FE4-5A1E59A10AC9")
MD5;
#endif

EXTERN_C const CLSID CLSID_MD5CryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("D2548BF2-801A-36AF-8800-1F11FBF54361")
MD5CryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_MaskGenerationMethod;

#ifdef __cplusplus

class DECLSPEC_UUID("BE1E426E-676B-3524-9CED-21E306E9B827")
MaskGenerationMethod;
#endif

EXTERN_C const CLSID CLSID_PasswordDeriveBytes;

#ifdef __cplusplus

class DECLSPEC_UUID("EED31DD9-AA11-3993-80E0-0088C1F5FEBA")
PasswordDeriveBytes;
#endif

EXTERN_C const CLSID CLSID_PKCS1MaskGenerationMethod;

#ifdef __cplusplus

class DECLSPEC_UUID("7AE844F0-ECA8-3F15-AE27-AFA21A2AA6F8")
PKCS1MaskGenerationMethod;
#endif

EXTERN_C const CLSID CLSID_RC2;

#ifdef __cplusplus

class DECLSPEC_UUID("1C6DC255-62D6-3366-BB25-01C509085473")
RC2;
#endif

EXTERN_C const CLSID CLSID_RC2CryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("62E92675-CB77-3FC9-8597-1A81A5F18013")
RC2CryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_Rfc2898DeriveBytes;

#ifdef __cplusplus

class DECLSPEC_UUID("7107AB85-4C6D-3890-AF8A-90B2E2D82F5B")
Rfc2898DeriveBytes;
#endif

EXTERN_C const CLSID CLSID_RIPEMD160;

#ifdef __cplusplus

class DECLSPEC_UUID("7813009A-0F6F-3F40-B73A-FAE619971619")
RIPEMD160;
#endif

EXTERN_C const CLSID CLSID_RIPEMD160Managed;

#ifdef __cplusplus

class DECLSPEC_UUID("3D367908-928F-3C13-8B93-5E1718820F6D")
RIPEMD160Managed;
#endif

EXTERN_C const CLSID CLSID_RSA;

#ifdef __cplusplus

class DECLSPEC_UUID("3E39CA4F-CD6F-3CFE-8659-7FDC8D1C9F0B")
RSA;
#endif

EXTERN_C const CLSID CLSID_RSACryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("D9035152-6B1F-33E3-86F4-411CD21CDE0E")
RSACryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_RSAOAEPKeyExchangeDeformatter;

#ifdef __cplusplus

class DECLSPEC_UUID("4D187AC2-D815-3B7E-BCEA-8E0BBC702F7C")
RSAOAEPKeyExchangeDeformatter;
#endif

EXTERN_C const CLSID CLSID_RSAOAEPKeyExchangeFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("A0E2E749-63CE-3651-8F4F-F5F996344C32")
RSAOAEPKeyExchangeFormatter;
#endif

EXTERN_C const CLSID CLSID_RSAPKCS1KeyExchangeDeformatter;

#ifdef __cplusplus

class DECLSPEC_UUID("EE96F4E1-377E-315C-AEF5-874DC8C7A2AA")
RSAPKCS1KeyExchangeDeformatter;
#endif

EXTERN_C const CLSID CLSID_RSAPKCS1KeyExchangeFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("92755472-2059-3F96-8938-8AC767B5187B")
RSAPKCS1KeyExchangeFormatter;
#endif

EXTERN_C const CLSID CLSID_RSAPKCS1SignatureDeformatter;

#ifdef __cplusplus

class DECLSPEC_UUID("6F674828-9081-3B45-BC39-791BD84CCF8F")
RSAPKCS1SignatureDeformatter;
#endif

EXTERN_C const CLSID CLSID_RSAPKCS1SignatureFormatter;

#ifdef __cplusplus

class DECLSPEC_UUID("7BC115CD-1EE2-3068-894D-E3D3F7632F40")
RSAPKCS1SignatureFormatter;
#endif

EXTERN_C const CLSID CLSID_Rijndael;

#ifdef __cplusplus

class DECLSPEC_UUID("48CBEB8F-DB77-3103-899C-CD24A832B5CC")
Rijndael;
#endif

EXTERN_C const CLSID CLSID_RijndaelManaged;

#ifdef __cplusplus

class DECLSPEC_UUID("1F9F18A3-EFC0-3913-84A5-90678A4A9A80")
RijndaelManaged;
#endif

EXTERN_C const CLSID CLSID_RijndaelManagedTransform;

#ifdef __cplusplus

class DECLSPEC_UUID("FA28C8E8-6B89-3EC5-AC16-720D8E31DC97")
RijndaelManagedTransform;
#endif

EXTERN_C const CLSID CLSID_SHA1;

#ifdef __cplusplus

class DECLSPEC_UUID("EB52B161-AFB3-3DEA-BFAF-C183AEB57E56")
SHA1;
#endif

EXTERN_C const CLSID CLSID_SHA1CryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("FC13A7D5-E2B3-37BA-B807-7FA6238284D5")
SHA1CryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_SHA1Managed;

#ifdef __cplusplus

class DECLSPEC_UUID("FDF9C30D-CCAB-3E2D-B584-9E24CE8038E3")
SHA1Managed;
#endif

EXTERN_C const CLSID CLSID_SHA256;

#ifdef __cplusplus

class DECLSPEC_UUID("E29B25FC-9402-3A80-AAA5-EB07D9EF5488")
SHA256;
#endif

EXTERN_C const CLSID CLSID_SHA256Managed;

#ifdef __cplusplus

class DECLSPEC_UUID("44181B13-AE94-3CFB-81D1-37DB59145030")
SHA256Managed;
#endif

EXTERN_C const CLSID CLSID_SHA384;

#ifdef __cplusplus

class DECLSPEC_UUID("0C00C2E9-7BBE-359E-8261-FD9B9C882A15")
SHA384;
#endif

EXTERN_C const CLSID CLSID_SHA384Managed;

#ifdef __cplusplus

class DECLSPEC_UUID("7FD3958D-0A14-3001-8074-0D15EAD7F05C")
SHA384Managed;
#endif

EXTERN_C const CLSID CLSID_SHA512;

#ifdef __cplusplus

class DECLSPEC_UUID("8DE638D4-0575-3083-9CD7-41619EF9AC75")
SHA512;
#endif

EXTERN_C const CLSID CLSID_SHA512Managed;

#ifdef __cplusplus

class DECLSPEC_UUID("A6673C32-3943-3BBB-B476-C09A0EC0BCD6")
SHA512Managed;
#endif

EXTERN_C const CLSID CLSID_SignatureDescription;

#ifdef __cplusplus

class DECLSPEC_UUID("3FA7A1C5-812C-3B56-B957-CB14AF670C09")
SignatureDescription;
#endif

EXTERN_C const CLSID CLSID_TripleDES;

#ifdef __cplusplus

class DECLSPEC_UUID("3D79AE1A-A949-3601-978F-02BEA1E70A98")
TripleDES;
#endif

EXTERN_C const CLSID CLSID_TripleDESCryptoServiceProvider;

#ifdef __cplusplus

class DECLSPEC_UUID("DAA132BF-1170-3D8B-A0EF-E2F55A68A91D")
TripleDESCryptoServiceProvider;
#endif

EXTERN_C const CLSID CLSID_X509Certificate;

#ifdef __cplusplus

class DECLSPEC_UUID("4C69C54F-9824-38CC-8387-A22DC67E0BAB")
X509Certificate;
#endif
#endif /* __mscorlib_LIBRARY_DEFINED__ */

/* Additional Prototypes for ALL interfaces */

/* end of Additional Prototypes */

#ifdef __cplusplus
}
#endif

#endif


